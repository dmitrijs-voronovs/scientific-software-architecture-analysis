id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/15585:281,safety,patch,patches,281,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:332,safety,avoid,avoid,332,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:107,security,patch,patches,107,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:238,security,ident,identify,238,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:262,security,patch,patch,262,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:281,security,patch,patches,281,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:36,testability,test,tested,36,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/issues/15585:377,usability,support,supports,377,"If it works in `master` (that one I tested some time ago with a release candidate of GCC 14) and `v6-32-00-patches`, then it's likely that the upgrade to LLVM + Clang 16.0 is needed to parse the libstdc++ headers. It might be possible to identify and backport a patch to `v6-30-00-patches` and its LLVM + Clang 13.0, but I'd rather avoid that if possible. In general ROOT only supports the latest compilers with the latest release (granted, 6.32 isn't out yet...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15585
https://github.com/root-project/root/pull/15588:56,modifiability,scenario,scenario,56,"@pcanal A second test was added for a different type of scenario (see the commit description). On my local tests, the changes in this PR already cover also the second scenario.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15588
https://github.com/root-project/root/pull/15588:167,modifiability,scenario,scenario,167,"@pcanal A second test was added for a different type of scenario (see the commit description). On my local tests, the changes in this PR already cover also the second scenario.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15588
https://github.com/root-project/root/pull/15588:17,safety,test,test,17,"@pcanal A second test was added for a different type of scenario (see the commit description). On my local tests, the changes in this PR already cover also the second scenario.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15588
https://github.com/root-project/root/pull/15588:107,safety,test,tests,107,"@pcanal A second test was added for a different type of scenario (see the commit description). On my local tests, the changes in this PR already cover also the second scenario.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15588
https://github.com/root-project/root/pull/15588:17,testability,test,test,17,"@pcanal A second test was added for a different type of scenario (see the commit description). On my local tests, the changes in this PR already cover also the second scenario.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15588
https://github.com/root-project/root/pull/15588:107,testability,test,tests,107,"@pcanal A second test was added for a different type of scenario (see the commit description). On my local tests, the changes in this PR already cover also the second scenario.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15588
https://github.com/root-project/root/pull/15589:15,modifiability,paramet,parameter,15,"If this unused parameter generates warnings, I'd say yes @vgvassilev @vepadulano @guitargeek",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15589
https://github.com/root-project/root/pull/15591:12,safety,test,test,12,How about a test so if we change the function again we don't forget about this use case ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15591
https://github.com/root-project/root/pull/15591:12,testability,test,test,12,How about a test so if we change the function again we don't forget about this use case ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15591
https://github.com/root-project/root/pull/15596:96,deployability,modul,module,96,I am a bit worried about seeing the CI fully green on this PR but at the same time the `sonnet` module was not even the right one to check for as highlighted by https://github.com/root-project/root/pull/15605,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:45,energy efficiency,green,green,45,I am a bit worried about seeing the CI fully green on this PR but at the same time the `sonnet` module was not even the right one to check for as highlighted by https://github.com/root-project/root/pull/15605,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:96,modifiability,modul,module,96,I am a bit worried about seeing the CI fully green on this PR but at the same time the `sonnet` module was not even the right one to check for as highlighted by https://github.com/root-project/root/pull/15605,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:78,performance,time,time,78,I am a bit worried about seeing the CI fully green on this PR but at the same time the `sonnet` module was not even the right one to check for as highlighted by https://github.com/root-project/root/pull/15605,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:96,safety,modul,module,96,I am a bit worried about seeing the CI fully green on this PR but at the same time the `sonnet` module was not even the right one to check for as highlighted by https://github.com/root-project/root/pull/15605,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:100,deployability,version,versions,100,"Yes, the results of this PR are not valid. We'll have to see again tomorrow when the correct sonnet versions makes it into the CI images. In fact, one can see in the CI logs that the GNN tests didn't run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:169,deployability,log,logs,169,"Yes, the results of this PR are not valid. We'll have to see again tomorrow when the correct sonnet versions makes it into the CI images. In fact, one can see in the CI logs that the GNN tests didn't run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:100,integrability,version,versions,100,"Yes, the results of this PR are not valid. We'll have to see again tomorrow when the correct sonnet versions makes it into the CI images. In fact, one can see in the CI logs that the GNN tests didn't run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:100,modifiability,version,versions,100,"Yes, the results of this PR are not valid. We'll have to see again tomorrow when the correct sonnet versions makes it into the CI images. In fact, one can see in the CI logs that the GNN tests didn't run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:36,safety,valid,valid,36,"Yes, the results of this PR are not valid. We'll have to see again tomorrow when the correct sonnet versions makes it into the CI images. In fact, one can see in the CI logs that the GNN tests didn't run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:169,safety,log,logs,169,"Yes, the results of this PR are not valid. We'll have to see again tomorrow when the correct sonnet versions makes it into the CI images. In fact, one can see in the CI logs that the GNN tests didn't run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:187,safety,test,tests,187,"Yes, the results of this PR are not valid. We'll have to see again tomorrow when the correct sonnet versions makes it into the CI images. In fact, one can see in the CI logs that the GNN tests didn't run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:169,security,log,logs,169,"Yes, the results of this PR are not valid. We'll have to see again tomorrow when the correct sonnet versions makes it into the CI images. In fact, one can see in the CI logs that the GNN tests didn't run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:169,testability,log,logs,169,"Yes, the results of this PR are not valid. We'll have to see again tomorrow when the correct sonnet versions makes it into the CI images. In fact, one can see in the CI logs that the GNN tests didn't run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:187,testability,test,tests,187,"Yes, the results of this PR are not valid. We'll have to see again tomorrow when the correct sonnet versions makes it into the CI images. In fact, one can see in the CI logs that the GNN tests didn't run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:501,availability,robust,robust,501,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:527,deployability,configurat,configuration,527,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:640,deployability,build,builds,640,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:527,integrability,configur,configuration,527,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:527,modifiability,configur,configuration,527,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:667,modifiability,pac,packages,667,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:501,reliability,robust,robust,501,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:56,safety,Test,Test,56,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:154,safety,Test,Test,154,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:253,safety,Test,Test,253,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:353,safety,Test,Test,353,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:501,safety,robust,robust,501,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:689,safety,test,tests,689,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:527,security,configur,configuration,527,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:56,testability,Test,Test,56,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:154,testability,Test,Test,154,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:253,testability,Test,Test,253,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:353,testability,Test,Test,353,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15596:689,testability,test,tests,689,"It worked! Here the relevant output from `alma9`:. ```. Test #62: pyunittests-pyroot-pyz-sofie-gnn .................................... Passed 16.85 sec. Test #556: tutorial-tmva-TMVA_SOFIE_GNN_Parser ................................. Passed 27.96 sec. Test #1092: tutorial-tmva-TMVA_SOFIE_GNN_Application ............................ Passed 16.76 sec. Test #1410: tutorial-tmva-TMVA_SOFIE_GNN-py ..................................... Passed 26.54 sec. ```. From my side this is ready to go. The more robust Python requirement configuration is something to follow up on in another PR, this one was just to revert the protection against red builds if the added Python packages would enable tests that don't work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15596
https://github.com/root-project/root/pull/15603:20,interoperability,specif,specific,20,Is this targeting a specific issue/user request?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15603
https://github.com/root-project/root/pull/15603:35,usability,user,user,35,Is this targeting a specific issue/user request?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15603
https://github.com/root-project/root/pull/15603:21,safety,test,testing,21,It is side-effect of testing reproducer of issue #13122,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15603
https://github.com/root-project/root/pull/15603:21,testability,test,testing,21,It is side-effect of testing reproducer of issue #13122,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15603
https://github.com/root-project/root/pull/15608:65,deployability,API,API,65,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:282,deployability,API,API,282,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:442,deployability,log,logic,442,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:65,integrability,API,API,65,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:282,integrability,API,API,282,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:65,interoperability,API,API,65,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:282,interoperability,API,API,282,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:465,modifiability,layer,layer,465,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:177,performance,memor,memory,177,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:15,safety,review,review,15,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:442,safety,log,logic,442,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:442,security,log,logic,442,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:15,testability,review,review,15,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:442,testability,log,logic,442,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:177,usability,memor,memory,177,"Thanks for the review! I have added something about the CPyCppyy API to the commit description and PR description as you requested:. ```. Note that the code also had no obvious memory leak before. where it was. using the `CPyCppyy::Instance_FromVoidPtr` function from the CPyCppyy. API. If similar problems appear, this function might have to be. investigated in more detail. But for this commit it is not relevant: moving more Pythonization logic. into the Python layer is better anyway. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:35,deployability,fail,fail,35,"By the way, I was so sure it would fail on Windows 32 bit! I think it's the first time I changed something with pointers in PyROOT and the CI was green first try :laughing: So this time, there is for sure no ""overfitting"" to the tested platforms",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:146,energy efficiency,green,green,146,"By the way, I was so sure it would fail on Windows 32 bit! I think it's the first time I changed something with pointers in PyROOT and the CI was green first try :laughing: So this time, there is for sure no ""overfitting"" to the tested platforms",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:236,interoperability,platform,platforms,236,"By the way, I was so sure it would fail on Windows 32 bit! I think it's the first time I changed something with pointers in PyROOT and the CI was green first try :laughing: So this time, there is for sure no ""overfitting"" to the tested platforms",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:82,performance,time,time,82,"By the way, I was so sure it would fail on Windows 32 bit! I think it's the first time I changed something with pointers in PyROOT and the CI was green first try :laughing: So this time, there is for sure no ""overfitting"" to the tested platforms",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:181,performance,time,time,181,"By the way, I was so sure it would fail on Windows 32 bit! I think it's the first time I changed something with pointers in PyROOT and the CI was green first try :laughing: So this time, there is for sure no ""overfitting"" to the tested platforms",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:35,reliability,fail,fail,35,"By the way, I was so sure it would fail on Windows 32 bit! I think it's the first time I changed something with pointers in PyROOT and the CI was green first try :laughing: So this time, there is for sure no ""overfitting"" to the tested platforms",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:229,safety,test,tested,229,"By the way, I was so sure it would fail on Windows 32 bit! I think it's the first time I changed something with pointers in PyROOT and the CI was green first try :laughing: So this time, there is for sure no ""overfitting"" to the tested platforms",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:229,testability,test,tested,229,"By the way, I was so sure it would fail on Windows 32 bit! I think it's the first time I changed something with pointers in PyROOT and the CI was green first try :laughing: So this time, there is for sure no ""overfitting"" to the tested platforms",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/pull/15608:7,interoperability,format,formatted,7,"I only formatted the code as requested, so no need to wait for the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15608
https://github.com/root-project/root/issues/15610:142,deployability,upgrad,upgrade,142,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:187,deployability,releas,release-notes,187,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:142,modifiability,upgrad,upgrade,142,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:242,performance,memor,memory,242,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:285,performance,memor,memory,285,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:328,performance,memor,memory,328,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:371,performance,memor,memory,371,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:414,performance,memor,memory,414,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:457,performance,memor,memory,457,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:500,performance,memor,memory,500,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:543,performance,memor,memory,543,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:586,performance,memor,memory,586,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:629,performance,memor,memory,629,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:696,performance,memor,memory,696,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:739,performance,memor,memory,739,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:782,performance,memor,memory,782,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:825,performance,memor,memory,825,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:868,performance,memor,memory,868,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:911,performance,memor,memory,911,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:954,performance,memor,memory,954,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:997,performance,memor,memory,997,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:1040,performance,memor,memory,1040,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:1083,performance,memor,memory,1083,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:93,testability,regress,regression,93,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:242,usability,memor,memory,242,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:285,usability,memor,memory,285,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:328,usability,memor,memory,328,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:371,usability,memor,memory,371,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:414,usability,memor,memory,414,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:457,usability,memor,memory,457,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:500,usability,memor,memory,500,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:543,usability,memor,memory,543,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:586,usability,memor,memory,586,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:629,usability,memor,memory,629,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:696,usability,memor,memory,696,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:739,usability,memor,memory,739,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:782,usability,memor,memory,782,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:825,usability,memor,memory,825,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:868,usability,memor,memory,868,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:911,usability,memor,memory,911,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:954,usability,memor,memory,954,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:997,usability,memor,memory,997,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:1040,usability,memor,memory,1040,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15610:1083,usability,memor,memory,1083,"I checked by running the reproducer in the PR thread on ROOT 6.20 vs 6.22 on `lxplus7`. This regression was indeed introduced with the PyROOT upgrade in 6.22:. https://root.cern/doc/v622/release-notes.html#pyroot. ROOT 6.20.00:. ```txt. (0, 'memory usage', 191016L, 695956L). (10000, 'memory usage', 206324L, 696336L). (20000, 'memory usage', 206488L, 696336L). (30000, 'memory usage', 206488L, 696336L). (40000, 'memory usage', 206488L, 696336L). (50000, 'memory usage', 206488L, 696336L). (60000, 'memory usage', 206488L, 696336L). (70000, 'memory usage', 206488L, 696336L). (80000, 'memory usage', 206488L, 696336L). (90000, 'memory usage', 206488L, 696336L). ```. ROOT 6.22.00:. ```txt. (0, 'memory usage', 225244L, 737080L). (10000, 'memory usage', 245352L, 741968L). (20000, 'memory usage', 249948L, 746252L). (30000, 'memory usage', 254428L, 751900L). (40000, 'memory usage', 259000L, 756108L). (50000, 'memory usage', 263708L, 760456L). (60000, 'memory usage', 268092L, 764408L). (70000, 'memory usage', 274440L, 772668L). (80000, 'memory usage', 277480L, 775772L). (90000, 'memory usage', 281936L, 779724L). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15610
https://github.com/root-project/root/issues/15615:47,deployability,build,builds,47,"Correct, overrides are not applied for nightly builds and release binaries",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15615
https://github.com/root-project/root/issues/15615:58,deployability,releas,release,58,"Correct, overrides are not applied for nightly builds and release binaries",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15615
https://github.com/root-project/root/pull/15616:913,availability,operat,operator,913,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:105,deployability,build,build,105,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:326,deployability,build,build,326,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:442,deployability,build,build,442,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:530,deployability,build,build,530,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:843,deployability,build,build,843,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1107,deployability,build,build,1107,"/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1540,deployability,build,build,1540,"Minuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1909,deployability,build,build,1909,":operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1949,deployability,Modul,ModularFunctionMinimizer,1949,"t&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2197,deployability,Modul,ModularFunctionMinimizer,2197,"OT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2283,deployability,build,build,2283,"d::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2323,deployability,Modul,ModularFunctionMinimizer,2323,"__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2548,deployability,Modul,ModularFunctionMinimizer,2548,".so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2636,deployability,build,build,2636," ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2830,deployability,build,build,2830,"etricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::Eva",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3061,deployability,build,build,3061,"uit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:15",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3264,deployability,build,build,3264,"ftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFacto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3511,deployability,build,build,3511,"ight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3744,deployability,build,build,3744,"rc/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4121,deployability,build,build,4121," char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4333,deployability,build,build,4333,"oAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4588,deployability,build,build,4588,"RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4727,deployability,build,build,4727,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4870,deployability,build,build,4870,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5014,deployability,build,build,5014,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5179,deployability,build,build,5179,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5488,deployability,build,build,5488,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5631,deployability,build,build,5631,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:682,energy efficiency,alloc,allocator,682,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1340,energy efficiency,alloc,allocator,1340,"Core.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimiz",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1949,integrability,Modular,ModularFunctionMinimizer,1949,"t&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2197,integrability,Modular,ModularFunctionMinimizer,2197,"OT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2323,integrability,Modular,ModularFunctionMinimizer,2323,"__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2548,integrability,Modular,ModularFunctionMinimizer,2548,".so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:24,interoperability,specif,specific,24,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1147,modifiability,Variab,VariableMetricBuilder,1147,"Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1455,modifiability,Variab,VariableMetricBuilder,1455,"or.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1580,modifiability,Variab,VariableMetricBuilder,1580,"Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1824,modifiability,Variab,VariableMetricBuilder,1824,"ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1949,modifiability,Modul,ModularFunctionMinimizer,1949,"t&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2197,modifiability,Modul,ModularFunctionMinimizer,2197,"OT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2323,modifiability,Modul,ModularFunctionMinimizer,2323,"__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2548,modifiability,Modul,ModularFunctionMinimizer,2548,".so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1949,safety,Modul,ModularFunctionMinimizer,1949,"t&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2197,safety,Modul,ModularFunctionMinimizer,2197,"OT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2323,safety,Modul,ModularFunctionMinimizer,2323,"__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2548,safety,Modul,ModularFunctionMinimizer,2548,".so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3769,safety,test,test,3769,"557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3774,safety,test,testHistFactory,3774,"6-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4146,safety,test,test,4146,"night/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.544",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4151,safety,test,testHistFactory,4151,"CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4191,safety,Test,TestBody,4191,"mizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/his",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4249,safety,test,test,4249,"ight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4254,safety,test,testHistFactory,4254,"I/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExcept",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4358,safety,test,test,4358,"nst&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4363,safety,test,testHistFactory,4363,"dConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4385,safety,test,testing,4385,"sers/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4440,safety,test,testing,4440,"ers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4449,safety,Test,Test,4449,":555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4461,safety,test,testing,4461,"27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4470,safety,Test,Test,4470,"2:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4483,safety,test,testing,4483,"/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4492,safety,Test,Test,4492,"sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4613,safety,test,test,4613,"ol) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4618,safety,test,testHistFactory,4618,"sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4635,safety,test,testing,4635,"-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4644,safety,Test,Test,4644,"/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/hi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4752,safety,test,test,4752,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4757,safety,test,testHistFactory,4757,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4774,safety,test,testing,4774,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4783,safety,Test,TestInfo,4783,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4895,safety,test,test,4895,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4900,safety,test,testHistFactory,4900,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4917,safety,test,testing,4917,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4926,safety,Test,TestSuite,4926,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5039,safety,test,test,5039,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5044,safety,test,testHistFactory,5044,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5061,safety,test,testing,5061,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5204,safety,test,test,5204,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5209,safety,test,testHistFactory,5209,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5231,safety,test,testing,5231,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5286,safety,test,testing,5286,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5325,safety,test,testing,5325,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5365,safety,test,testing,5365,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5513,safety,test,test,5513,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5518,safety,test,testHistFactory,5518,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5535,safety,test,testing,5535,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5656,safety,test,test,5656,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5661,safety,test,testHistFactory,5661,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1949,testability,Modula,ModularFunctionMinimizer,1949,"t&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2197,testability,Modula,ModularFunctionMinimizer,2197,"OT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2323,testability,Modula,ModularFunctionMinimizer,2323,"__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2548,testability,Modula,ModularFunctionMinimizer,2548,".so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3769,testability,test,test,3769,"557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3774,testability,test,testHistFactory,3774,"6-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4146,testability,test,test,4146,"night/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.544",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4151,testability,test,testHistFactory,4151,"CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4191,testability,Test,TestBody,4191,"mizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/his",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4249,testability,test,test,4249,"ight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4254,testability,test,testHistFactory,4254,"I/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExcept",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4358,testability,test,test,4358,"nst&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4363,testability,test,testHistFactory,4363,"dConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4385,testability,test,testing,4385,"sers/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4440,testability,test,testing,4440,"ers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4449,testability,Test,Test,4449,":555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4461,testability,test,testing,4461,"27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4470,testability,Test,Test,4470,"2:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4483,testability,test,testing,4483,"/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4492,testability,Test,Test,4492,"sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4613,testability,test,test,4613,"ol) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4618,testability,test,testHistFactory,4618,"sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4635,testability,test,testing,4635,"-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4644,testability,Test,Test,4644,"/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/hi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4752,testability,test,test,4752,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4757,testability,test,testHistFactory,4757,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4774,testability,test,testing,4774,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4783,testability,Test,TestInfo,4783,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4895,testability,test,test,4895,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4900,testability,test,testHistFactory,4900,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4917,testability,test,testing,4917,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4926,testability,Test,TestSuite,4926,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5039,testability,test,test,5039,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5044,testability,test,testHistFactory,5044,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5061,testability,test,testing,5061,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5080,testability,Unit,UnitTestImpl,5080,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5204,testability,test,test,5204,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5209,testability,test,testHistFactory,5209,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5231,testability,test,testing,5231,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5286,testability,test,testing,5286,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5305,testability,Unit,UnitTestImpl,5305,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5325,testability,test,testing,5325,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5344,testability,Unit,UnitTestImpl,5344,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5365,testability,test,testing,5365,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5384,testability,Unit,UnitTestImpl,5384,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5513,testability,test,test,5513,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5518,testability,test,testHistFactory,5518,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5535,testability,test,testing,5535,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5544,testability,Unit,UnitTest,5544,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5656,testability,test,test,5656,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5661,testability,test,testHistFactory,5661,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:82,usability,User,Users,82,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:198,usability,User,Users,198,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:303,usability,User,Users,303,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:419,usability,User,Users,419,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:507,usability,User,Users,507,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:716,usability,User,Users,716,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:820,usability,User,Users,820,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:939,usability,Minim,MinimumParameters,939,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:972,usability,User,Users,972,"There seems to be a mac specific problem:. ```txt. 2024-06-27T16:52:12.5381030Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::M",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1084,usability,User,Users,1084,"/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizerFcn::evaluateGradient(double const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1170,usability,Minim,Minimum,1170,"const*, double*) const /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizerFcn.cxx:131. 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1264,usability,Minim,MinimumSeed,1264,". 2024-06-27T16:52:12.5382300Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1316,usability,Minim,MinimumState,1316,"-CI/build/lib/libRooFitCore.so] ROOT::Math::GradFunctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1365,usability,Minim,MinimumState,1365,"unctor::Gradient(double const*, double*) const /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1411,usability,User,Users,1411,"nst /Users/sftnight/ROOT-CI/build/include/Math/Functor.h:222. 2024-06-27T16:52:12.5383890Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::Mn",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1517,usability,User,Users,1517,"t/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::FCNGradAdapter<ROOT::Math::IGradientFunctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1603,usability,Minim,Minimum,1603,"unctionMultiDimTempl<double>>::Gradient(std::__1::vector<double, std::__1::allocator<double>> const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.54101",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1697,usability,Minim,MinimumSeed,1697,"nst&) const /Users/sftnight/ROOT-CI/src/math/minuit2/inc/Minuit2/FCNGradAdapter.h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1780,usability,User,Users,1780,"h:50. 2024-06-27T16:52:12.5385690Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::AnalyticalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1886,usability,User,Users,1886,"icalGradientCalculator::operator()(ROOT::Minuit2::MinimumParameters const&) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:1975,usability,Minim,Minimize,1975,"ftnight/ROOT-CI/src/math/minuit2/src/AnalyticalGradientCalculator.cxx:26. 2024-06-27T16:52:12.5387860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2070,usability,Minim,MinimumSeed,2070,"7860Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2153,usability,User,Users,2153,"etricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/RO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2260,usability,User,Users,2260,":MinimumSeed const&, std::__1::vector<ROOT::Minuit2::MinimumState, std::__1::allocator<ROOT::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2349,usability,Minim,Minimize,2349,"T::Minuit2::MinimumState>>&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:303. 2024-06-27T16:52:12.5390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbs",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2504,usability,User,Users,2504,"390290Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::VariableMetricBuilder::Minimum(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2613,usability,User,Users,2613,":Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2694,usability,Minim,Minimize,2694,"inimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2706,usability,User,Users,2706,"const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2807,usability,User,Users,2807,"h/minuit2/src/VariableMetricBuilder.cxx:116. 2024-06-27T16:52:12.5392570Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:2946,usability,User,Users,2946,"ModularFunctionMinimizer::Minimize(ROOT::Minuit2::MnFcn const&, ROOT::Minuit2::GradientCalculator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3038,usability,User,Users,3038,"lator const&, ROOT::Minuit2::MinimumSeed const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3103,usability,minim,minimize,3103,"Strategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sft",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3139,usability,User,Users,3139,"le) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:0. 2024-06-27T16:52:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfact",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3241,usability,User,Users,3241,"2:12.5406250Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3312,usability,minim,minimize,3312,"nuit2::ModularFunctionMinimizer::Minimize(ROOT::Minuit2::FCNGradientBase const&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3388,usability,User,Users,3388,"nst&, ROOT::Minuit2::MnUserParameterState const&, ROOT::Minuit2::MnStrategy const&, unsigned int, double) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3488,usability,User,Users,3488,"uble) const /Users/sftnight/ROOT-CI/src/math/minuit2/src/ModularFunctionMinimizer.cxx:194. 2024-06-27T16:52:12.5410150Z [/Users/sftnight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3620,usability,User,Users,3620,"ight/ROOT-CI/build/lib/libMinuit2.so] ROOT::Minuit2::Minuit2Minimizer::Minimize() /Users/sftnight/ROOT-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:3721,usability,User,Users,3721,"T-CI/src/math/minuit2/src/Minuit2Minimizer.cxx:557. 2024-06-27T16:52:12.5413060Z [/Users/sftnight/ROOT-CI/build/lib/libMathCore.so] ROOT::Fit::Fitter::DoMinimization(ROOT::Math::IBaseFunctionMultiDimTempl<double> const*) /Users/sftnight/ROOT-CI/src/math/mathcore/src/Fitter.cxx:800. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4001,usability,User,Users,4001,"0. 2024-06-27T16:52:12.5416020Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooMinimizer::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnigh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4098,usability,User,Users,4098,"::minimize(char const*, char const*) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/RooMinimizer.cxx:332. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4203,usability,User,Users,4203,"32. 2024-06-27T16:52:12.5419110Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::minimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4310,usability,User,Users,4310,"inimize(RooAbsReal&, RooAbsReal&, RooAbsData const&, RooCmdConfig const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:555. 2024-06-27T16:52:12.5422400Z [/Users/sftnight/ROOT-CI/build/lib/libRooFitCore.so] RooFit::FitHelpers::fitTo(RooAbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4565,usability,User,Users,4565,"AbsReal&, RooAbsData&, RooLinkedList const&, bool) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/src/FitHelpers.cxx:1059. 2024-06-27T16:52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4704,usability,User,Users,4704,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4847,usability,User,Users,4847,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:4991,usability,User,Users,4991,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5156,usability,User,Users,5156,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5465,usability,User,Users,5465,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:5608,usability,User,Users,5608,":52:12.5427050Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] RooFitResult* RooAbsPdf::fitTo<RooFit::EvalBackend, RooCmdArg, RooCmdArg, RooCmdArg, RooCmdArg>(RooAbsData&, RooFit::EvalBackend const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&, RooCmdArg const&) /Users/sftnight/ROOT-CI/src/roofit/roofitcore/inc/RooAbsPdf.h:159. 2024-06-27T16:52:12.5431460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] HFFixtureFit_Fit_Test::TestBody() /Users/sftnight/ROOT-CI/src/roofit/histfactory/test/testHistFactory.cxx:680. 2024-06-27T16:52:12.5434820Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5437660Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::Test::Run() (no debug info). 2024-06-27T16:52:12.5439550Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestInfo::Run() (no debug info). 2024-06-27T16:52:12.5441460Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::TestSuite::Run() (no debug info). 2024-06-27T16:52:12.5443560Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::internal::UnitTestImpl::RunAllTests() (no debug info). 2024-06-27T16:52:12.5446970Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (no debug info). 2024-06-27T16:52:12.5450080Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] testing::UnitTest::Run() (no debug info). 2024-06-27T16:52:12.5451810Z [/Users/sftnight/ROOT-CI/build/roofit/histfactory/test/testHistFactory] main (no debug info). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:80,availability,failur,failures,80,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:153,availability,failur,failures,153,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:32,deployability,build,build,32,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:80,deployability,fail,failures,80,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:153,deployability,fail,failures,153,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:217,deployability,build,build,217,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:231,deployability,updat,updated,231,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:299,deployability,build,build,299,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:80,performance,failur,failures,80,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:153,performance,failur,failures,153,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:80,reliability,fail,failures,80,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:153,reliability,fail,failures,153,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:75,safety,test,test,75,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:148,safety,test,test,148,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:231,safety,updat,updated,231,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:231,security,updat,updated,231,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:75,testability,test,test,75,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15616:148,testability,test,test,148,"Reopened the PR with the ""clean build"" flag. This should hopefully fix the test failures on macOS. I had this Idea because by chance I saw the same test failures on my own Arch Linux desktop when I did an incremental build where I updated the clad tag from 1.5 to master in between. It seems the re-build of clad didn't get triggered, which might have also happened on the CI.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15616
https://github.com/root-project/root/pull/15619:98,deployability,releas,release,98,Should we not try to merge to 6.32 only backports from `master`? Or we make an exception with the release notes?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15619
https://github.com/root-project/root/pull/15619:79,safety,except,exception,79,Should we not try to merge to 6.32 only backports from `master`? Or we make an exception with the release notes?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15619
https://github.com/root-project/root/pull/15619:100,deployability,releas,release,100,> Should we not try to merge to 6.32 only backports from `master`? Or we make an exception with the release notes? Related discussion:. https://github.com/root-project/root/issues/14439,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15619
https://github.com/root-project/root/pull/15619:81,safety,except,exception,81,> Should we not try to merge to 6.32 only backports from `master`? Or we make an exception with the release notes? Related discussion:. https://github.com/root-project/root/issues/14439,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15619
https://github.com/root-project/root/pull/15619:74,performance,time,time,74,"Thanks for pointing this out and linking the discussion! This is my first time backporting something so I wasn't 100% sure about the process, but I will close this one and open one for `master` then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15619
https://github.com/root-project/root/pull/15619:153,usability,close,close,153,"Thanks for pointing this out and linking the discussion! This is my first time backporting something so I wasn't 100% sure about the process, but I will close this one and open one for `master` then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15619
https://github.com/root-project/root/pull/15623:0,availability,Failur,Failures,0,Failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15623
https://github.com/root-project/root/pull/15623:0,deployability,Fail,Failures,0,Failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15623
https://github.com/root-project/root/pull/15623:0,performance,Failur,Failures,0,Failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15623
https://github.com/root-project/root/pull/15623:0,reliability,Fail,Failures,0,Failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15623
https://github.com/root-project/root/pull/15625:4,availability,failur,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15625
https://github.com/root-project/root/pull/15625:4,deployability,fail,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15625
https://github.com/root-project/root/pull/15625:4,performance,failur,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15625
https://github.com/root-project/root/pull/15625:4,reliability,fail,failures,4,The failures are unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15625
https://github.com/root-project/root/pull/15630:93,usability,clear,clearly,93,Excellent notes. Do we want to include brief mentions of the PoW items which were addressed (clearly w/o linking to the PoW),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15630
https://github.com/root-project/root/pull/15630:95,usability,clear,clearly,95,> Excellent notes. Do we want to include brief mentions of the PoW items which were addressed (clearly w/o linking to the PoW). We should mention the zero-copy bulk read option,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15630
https://github.com/root-project/root/pull/15630:92,energy efficiency,schedul,scheduling,92,"Here or in the RDataFrame section: support for RNTuple chains, improved multi-threaded work scheduling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15630
https://github.com/root-project/root/pull/15630:72,performance,multi-thread,multi-threaded,72,"Here or in the RDataFrame section: support for RNTuple chains, improved multi-threaded work scheduling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15630
https://github.com/root-project/root/pull/15630:92,performance,schedul,scheduling,92,"Here or in the RDataFrame section: support for RNTuple chains, improved multi-threaded work scheduling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15630
https://github.com/root-project/root/pull/15630:35,usability,support,support,35,"Here or in the RDataFrame section: support for RNTuple chains, improved multi-threaded work scheduling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15630
https://github.com/root-project/root/pull/15635:26,deployability,Build,Builds,26,"PoW item number 6 of the ""Builds and Binaries"" category.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15635
https://github.com/root-project/root/pull/15635:125,deployability,fail,failing,125,"> One missing comment. Nope, the code (the condition) onto which you commented has been removed (I fixed rootcling which was failing on eve7)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15635
https://github.com/root-project/root/pull/15635:125,reliability,fail,failing,125,"> One missing comment. Nope, the code (the condition) onto which you commented has been removed (I fixed rootcling which was failing on eve7)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15635
https://github.com/root-project/root/pull/15635:104,deployability,fail,failing,104,"> Nope, the code (the condition) onto which you commented has been removed (I fixed rootcling which was failing on eve7). Sorry, github misled me :). (and I equally missed the fix :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15635
https://github.com/root-project/root/pull/15635:104,reliability,fail,failing,104,"> Nope, the code (the condition) onto which you commented has been removed (I fixed rootcling which was failing on eve7). Sorry, github misled me :). (and I equally missed the fix :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15635
https://github.com/root-project/root/pull/15639:29,performance,time,time,29,"I have to say it's the first time such an issue was brought up. On the one hand, I definitely see your point and the problem you underline as real. On the other hand, the tutorials should be as easy to grasp as possible and introducing preprocessor macros is imho overkill. I believe we should have a bit more discussion about this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15639
https://github.com/root-project/root/pull/15639:313,safety,except,except,313,"> I believe we should have a bit more discussion about this. IMHO, all tutorials should also compile. That is very valuable for us for debugging, and also for the users because they can readily copy-paste code snippets from the tutorials to their executables. That being said, I would not use preprocessor macros except for `ifdef __CLING__` in the tutorials. That's just confusing to the users. In the case of this this PR, I think it's better just to duplicate the code with the signature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15639
https://github.com/root-project/root/pull/15639:481,security,sign,signature,481,"> I believe we should have a bit more discussion about this. IMHO, all tutorials should also compile. That is very valuable for us for debugging, and also for the users because they can readily copy-paste code snippets from the tutorials to their executables. That being said, I would not use preprocessor macros except for `ifdef __CLING__` in the tutorials. That's just confusing to the users. In the case of this this PR, I think it's better just to duplicate the code with the signature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15639
https://github.com/root-project/root/pull/15639:163,usability,user,users,163,"> I believe we should have a bit more discussion about this. IMHO, all tutorials should also compile. That is very valuable for us for debugging, and also for the users because they can readily copy-paste code snippets from the tutorials to their executables. That being said, I would not use preprocessor macros except for `ifdef __CLING__` in the tutorials. That's just confusing to the users. In the case of this this PR, I think it's better just to duplicate the code with the signature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15639
https://github.com/root-project/root/pull/15639:389,usability,user,users,389,"> I believe we should have a bit more discussion about this. IMHO, all tutorials should also compile. That is very valuable for us for debugging, and also for the users because they can readily copy-paste code snippets from the tutorials to their executables. That being said, I would not use preprocessor macros except for `ifdef __CLING__` in the tutorials. That's just confusing to the users. In the case of this this PR, I think it's better just to duplicate the code with the signature.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15639
https://github.com/root-project/root/pull/15641:53,safety,test,tests,53,"The CI is confirming a suspect I had, that is in our tests using friend trees we have cases of entries not being found. Those will have to be investigated to understand if it's intended or if it's a bug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:53,testability,test,tests,53,"The CI is confirming a suspect I had, that is in our tests using friend trees we have cases of entries not being found. Those will have to be investigated to understand if it's intended or if it's a bug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:158,testability,understand,understand,158,"The CI is confirming a suspect I had, that is in our tests using friend trees we have cases of entries not being found. Those will have to be investigated to understand if it's intended or if it's a bug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:10,usability,confirm,confirming,10,"The CI is confirming a suspect I had, that is in our tests using friend trees we have cases of entries not being found. Those will have to be investigated to understand if it's intended or if it's a bug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:297,deployability,depend,depending,297,"This PR is now based on https://github.com/root-project/root/pull/16162 and https://github.com/root-project/root/pull/16165 . The changes are divided in two commits: those related to TTreeReader alone and those related to RDataFrame. . Tests are missing for the RDF-related changes, will be added depending on the first round of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:297,integrability,depend,depending,297,"This PR is now based on https://github.com/root-project/root/pull/16162 and https://github.com/root-project/root/pull/16165 . The changes are divided in two commits: those related to TTreeReader alone and those related to RDataFrame. . Tests are missing for the RDF-related changes, will be added depending on the first round of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:297,modifiability,depend,depending,297,"This PR is now based on https://github.com/root-project/root/pull/16162 and https://github.com/root-project/root/pull/16165 . The changes are divided in two commits: those related to TTreeReader alone and those related to RDataFrame. . Tests are missing for the RDF-related changes, will be added depending on the first round of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:236,safety,Test,Tests,236,"This PR is now based on https://github.com/root-project/root/pull/16162 and https://github.com/root-project/root/pull/16165 . The changes are divided in two commits: those related to TTreeReader alone and those related to RDataFrame. . Tests are missing for the RDF-related changes, will be added depending on the first round of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:297,safety,depend,depending,297,"This PR is now based on https://github.com/root-project/root/pull/16162 and https://github.com/root-project/root/pull/16165 . The changes are divided in two commits: those related to TTreeReader alone and those related to RDataFrame. . Tests are missing for the RDF-related changes, will be added depending on the first round of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:329,safety,review,review,329,"This PR is now based on https://github.com/root-project/root/pull/16162 and https://github.com/root-project/root/pull/16165 . The changes are divided in two commits: those related to TTreeReader alone and those related to RDataFrame. . Tests are missing for the RDF-related changes, will be added depending on the first round of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:236,testability,Test,Tests,236,"This PR is now based on https://github.com/root-project/root/pull/16162 and https://github.com/root-project/root/pull/16165 . The changes are divided in two commits: those related to TTreeReader alone and those related to RDataFrame. . Tests are missing for the RDF-related changes, will be added depending on the first round of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:297,testability,depend,depending,297,"This PR is now based on https://github.com/root-project/root/pull/16162 and https://github.com/root-project/root/pull/16165 . The changes are divided in two commits: those related to TTreeReader alone and those related to RDataFrame. . Tests are missing for the RDF-related changes, will be added depending on the first round of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:329,testability,review,review,329,"This PR is now based on https://github.com/root-project/root/pull/16162 and https://github.com/root-project/root/pull/16165 . The changes are divided in two commits: those related to TTreeReader alone and those related to RDataFrame. . Tests are missing for the RDF-related changes, will be added depending on the first round of review",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:37,availability,operat,operation,37,> (similar to `TTree::Draw`'s `$Alt` operation). This reminds me ... what about the case where the column is a collection? (In particular `$Alt` was implemented to fill-in collection within an entry (missing 'instances' more than missing entries)).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:22,energy efficiency,Draw,Draw,22,> (similar to `TTree::Draw`'s `$Alt` operation). This reminds me ... what about the case where the column is a collection? (In particular `$Alt` was implemented to fill-in collection within an entry (missing 'instances' more than missing entries)).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:378,availability,avail,available,378,"> This reminds me ... what about the case where the column is a collection? (In particular $Alt was implemented to fill-in collection within an entry (missing 'instances' more than missing entries)). Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say `std::vector<int>` where some entries of the vector are available and some not (how would that even make sense?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:378,reliability,availab,available,378,"> This reminds me ... what about the case where the column is a collection? (In particular $Alt was implemented to fill-in collection within an entry (missing 'instances' more than missing entries)). Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say `std::vector<int>` where some entries of the vector are available and some not (how would that even make sense?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:378,safety,avail,available,378,"> This reminds me ... what about the case where the column is a collection? (In particular $Alt was implemented to fill-in collection within an entry (missing 'instances' more than missing entries)). Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say `std::vector<int>` where some entries of the vector are available and some not (how would that even make sense?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:378,security,availab,available,378,"> This reminds me ... what about the case where the column is a collection? (In particular $Alt was implemented to fill-in collection within an entry (missing 'instances' more than missing entries)). Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say `std::vector<int>` where some entries of the vector are available and some not (how would that even make sense?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:74,availability,failur,failure,74,"@pcanal Tutorials and tests were added, passing on all platforms (windows failure is about the file used in the tutorial being stuck by another process). Let me know what you think, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:74,deployability,fail,failure,74,"@pcanal Tutorials and tests were added, passing on all platforms (windows failure is about the file used in the tutorial being stuck by another process). Let me know what you think, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:55,interoperability,platform,platforms,55,"@pcanal Tutorials and tests were added, passing on all platforms (windows failure is about the file used in the tutorial being stuck by another process). Let me know what you think, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:74,performance,failur,failure,74,"@pcanal Tutorials and tests were added, passing on all platforms (windows failure is about the file used in the tutorial being stuck by another process). Let me know what you think, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:74,reliability,fail,failure,74,"@pcanal Tutorials and tests were added, passing on all platforms (windows failure is about the file used in the tutorial being stuck by another process). Let me know what you think, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:22,safety,test,tests,22,"@pcanal Tutorials and tests were added, passing on all platforms (windows failure is about the file used in the tutorial being stuck by another process). Let me know what you think, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:22,testability,test,tests,22,"@pcanal Tutorials and tests were added, passing on all platforms (windows failure is about the file used in the tutorial being stuck by another process). Let me know what you think, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:178,availability,avail,available,178,"> Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector<int> where some entries of the vector are available and some not (how would that even make sense?). It is happening when combining 2 columns from 2 distincts collection:. ```. tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. ```. where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:318,energy efficiency,Draw,Draw,318,"> Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector<int> where some entries of the vector are available and some not (how would that even make sense?). It is happening when combining 2 columns from 2 distincts collection:. ```. tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. ```. where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:178,reliability,availab,available,178,"> Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector<int> where some entries of the vector are available and some not (how would that even make sense?). It is happening when combining 2 columns from 2 distincts collection:. ```. tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. ```. where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:178,safety,avail,available,178,"> Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector<int> where some entries of the vector are available and some not (how would that even make sense?). It is happening when combining 2 columns from 2 distincts collection:. ```. tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. ```. where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:499,safety,compl,completely,499,"> Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector<int> where some entries of the vector are available and some not (how would that even make sense?). It is happening when combining 2 columns from 2 distincts collection:. ```. tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. ```. where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:178,security,availab,available,178,"> Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector<int> where some entries of the vector are available and some not (how would that even make sense?). It is happening when combining 2 columns from 2 distincts collection:. ```. tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. ```. where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:499,security,compl,completely,499,"> Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector<int> where some entries of the vector are available and some not (how would that even make sense?). It is happening when combining 2 columns from 2 distincts collection:. ```. tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. ```. where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:11,availability,failur,failure,11,"> (windows failure is about the file used in the tutorial being stuck by another process). However I am not seeing quickly the reason for it but if it happened here, it will still happen after merging, so we do not need to get to the bottom of it (i.e. fix/work-around it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:11,deployability,fail,failure,11,"> (windows failure is about the file used in the tutorial being stuck by another process). However I am not seeing quickly the reason for it but if it happened here, it will still happen after merging, so we do not need to get to the bottom of it (i.e. fix/work-around it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:11,performance,failur,failure,11,"> (windows failure is about the file used in the tutorial being stuck by another process). However I am not seeing quickly the reason for it but if it happened here, it will still happen after merging, so we do not need to get to the bottom of it (i.e. fix/work-around it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:11,reliability,fail,failure,11,"> (windows failure is about the file used in the tutorial being stuck by another process). However I am not seeing quickly the reason for it but if it happened here, it will still happen after merging, so we do not need to get to the bottom of it (i.e. fix/work-around it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:175,availability,avail,available,175,"> > Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector where some entries of the vector are available and some not (how would that even make sense?). > . > It is happening when combining 2 columns from 2 distincts collection:. > . > ```. > tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. > ```. > . > where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. > . > A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2. This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename{""myfile.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. ~Dataset(). {. std::remove(filename);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, dataset.filename};. auto display = df.Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:329,energy efficiency,Draw,Draw,329,"> > Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector where some entries of the vector are available and some not (how would that even make sense?). > . > It is happening when combining 2 columns from 2 distincts collection:. > . > ```. > tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. > ```. > . > where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. > . > A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2. This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename{""myfile.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. ~Dataset(). {. std::remove(filename);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, dataset.filename};. auto display = df.Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:742,performance,time,time,742,"> > Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector where some entries of the vector are available and some not (how would that even make sense?). > . > It is happening when combining 2 columns from 2 distincts collection:. > . > ```. > tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. > ```. > . > where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. > . > A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2. This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename{""myfile.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. ~Dataset(). {. std::remove(filename);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, dataset.filename};. auto display = df.Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:175,reliability,availab,available,175,"> > Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector where some entries of the vector are available and some not (how would that even make sense?). > . > It is happening when combining 2 columns from 2 distincts collection:. > . > ```. > tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. > ```. > . > where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. > . > A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2. This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename{""myfile.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. ~Dataset(). {. std::remove(filename);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, dataset.filename};. auto display = df.Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:175,safety,avail,available,175,"> > Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector where some entries of the vector are available and some not (how would that even make sense?). > . > It is happening when combining 2 columns from 2 distincts collection:. > . > ```. > tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. > ```. > . > where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. > . > A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2. This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename{""myfile.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. ~Dataset(). {. std::remove(filename);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, dataset.filename};. auto display = df.Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:524,safety,compl,completely,524,"> > Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector where some entries of the vector are available and some not (how would that even make sense?). > . > It is happening when combining 2 columns from 2 distincts collection:. > . > ```. > tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. > ```. > . > where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. > . > A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2. This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename{""myfile.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. ~Dataset(). {. std::remove(filename);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, dataset.filename};. auto display = df.Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:175,security,availab,available,175,"> > Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector where some entries of the vector are available and some not (how would that even make sense?). > . > It is happening when combining 2 columns from 2 distincts collection:. > . > ```. > tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. > ```. > . > where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. > . > A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2. This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename{""myfile.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. ~Dataset(). {. std::remove(filename);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, dataset.filename};. auto display = df.Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:524,security,compl,completely,524,"> > Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector where some entries of the vector are available and some not (how would that even make sense?). > . > It is happening when combining 2 columns from 2 distincts collection:. > . > ```. > tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. > ```. > . > where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. > . > A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2. This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename{""myfile.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. ~Dataset(). {. std::remove(filename);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, dataset.filename};. auto display = df.Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:680,testability,simpl,simple,680,"> > Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector where some entries of the vector are available and some not (how would that even make sense?). > . > It is happening when combining 2 columns from 2 distincts collection:. > . > ```. > tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. > ```. > . > where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. > . > A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2. This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename{""myfile.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. ~Dataset(). {. std::remove(filename);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, dataset.filename};. auto display = df.Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:680,usability,simpl,simple,680,"> > Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector where some entries of the vector are available and some not (how would that even make sense?). > . > It is happening when combining 2 columns from 2 distincts collection:. > . > ```. > tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. > ```. > . > where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. > . > A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2. This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename{""myfile.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. ~Dataset(). {. std::remove(filename);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, dataset.filename};. auto display = df.Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:716,usability,support,supported,716,"> > Could you provide an example of how this can happen? AFAIU, it is not possible to read an entry from a branch of type say std::vector where some entries of the vector are available and some not (how would that even make sense?). > . > It is happening when combining 2 columns from 2 distincts collection:. > . > ```. > tree->Draw(""vec_1.px + Alt$(vec_2.delta_px, 0)"");. > ```. > . > where `vec_1.size()` happens to be different from `vec_2.sizeI()` but we still want to plot the data for all element of `vec_1`. > . > A completely related recent post on the forum: https://root-forum.cern.ch/t/dealing-with-columns-of-different-lengths-in-rdf/61642/2. This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases:. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename{""myfile.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. TFile f{filename, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. ~Dataset(). {. std::remove(filename);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, dataset.filename};. auto display = df.Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:292,availability,failur,failure,292,"> However I am not seeing quickly the reason for it but if it happened here, it will still happen after merging, so we do not need to get to the bottom of it (i.e. fix/work-around it). I will check this with Bertrand, but meanwhile we can go ahead with the review irrespective of the Windows failure",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:292,deployability,fail,failure,292,"> However I am not seeing quickly the reason for it but if it happened here, it will still happen after merging, so we do not need to get to the bottom of it (i.e. fix/work-around it). I will check this with Bertrand, but meanwhile we can go ahead with the review irrespective of the Windows failure",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:292,performance,failur,failure,292,"> However I am not seeing quickly the reason for it but if it happened here, it will still happen after merging, so we do not need to get to the bottom of it (i.e. fix/work-around it). I will check this with Bertrand, but meanwhile we can go ahead with the review irrespective of the Windows failure",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:292,reliability,fail,failure,292,"> However I am not seeing quickly the reason for it but if it happened here, it will still happen after merging, so we do not need to get to the bottom of it (i.e. fix/work-around it). I will check this with Bertrand, but meanwhile we can go ahead with the review irrespective of the Windows failure",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:257,safety,review,review,257,"> However I am not seeing quickly the reason for it but if it happened here, it will still happen after merging, so we do not need to get to the bottom of it (i.e. fix/work-around it). I will check this with Bertrand, but meanwhile we can go ahead with the review irrespective of the Windows failure",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:257,testability,review,review,257,"> However I am not seeing quickly the reason for it but if it happened here, it will still happen after merging, so we do not need to get to the bottom of it (i.e. fix/work-around it). I will check this with Bertrand, but meanwhile we can go ahead with the review irrespective of the Windows failure",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:88,performance,time,time,88,"> This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases: .... Not easy to read/parse but fair enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:26,testability,simpl,simple,26,"> This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases: .... Not easy to read/parse but fair enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:26,usability,simpl,simple,26,"> This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases: .... Not easy to read/parse but fair enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:62,usability,support,supported,62,"> This use case is fairly simple with RDataFrame and has been supported for a very long time, also it is really unrelated to this PR. Here is an example of how to deal with such cases: .... Not easy to read/parse but fair enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:249,performance,time,times,249,> `Alt$` vs `RVec::Take with back fill value` . > also it is really unrelated to this PR. . It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` *and* there is some times where that column is also completely missing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:281,safety,compl,completely,281,> `Alt$` vs `RVec::Take with back fill value` . > also it is really unrelated to this PR. . It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` *and* there is some times where that column is also completely missing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:281,security,compl,completely,281,> `Alt$` vs `RVec::Take with back fill value` . > also it is really unrelated to this PR. . It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` *and* there is some times where that column is also completely missing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:180,usability,user,user,180,> `Alt$` vs `RVec::Take with back fill value` . > also it is really unrelated to this PR. . It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` *and* there is some times where that column is also completely missing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:309,availability,state,state,309,"> Not easy to read/parse but fair enough. I gave a fully compiled C++ reproducer, clearly the syntax can get as simple as. ```cpp. df.Define(""vec3"", ""vec1 + Take(vec2, vec1.size(), 99)"").Display({""vec3""});. ```. Getting quite close to TTree::Draw's compactness. Although, for the sake of completeness, let me state that it is personally not my preferred way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:242,energy efficiency,Draw,Draw,242,"> Not easy to read/parse but fair enough. I gave a fully compiled C++ reproducer, clearly the syntax can get as simple as. ```cpp. df.Define(""vec3"", ""vec1 + Take(vec2, vec1.size(), 99)"").Display({""vec3""});. ```. Getting quite close to TTree::Draw's compactness. Although, for the sake of completeness, let me state that it is personally not my preferred way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:309,integrability,state,state,309,"> Not easy to read/parse but fair enough. I gave a fully compiled C++ reproducer, clearly the syntax can get as simple as. ```cpp. df.Define(""vec3"", ""vec1 + Take(vec2, vec1.size(), 99)"").Display({""vec3""});. ```. Getting quite close to TTree::Draw's compactness. Although, for the sake of completeness, let me state that it is personally not my preferred way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:288,safety,compl,completeness,288,"> Not easy to read/parse but fair enough. I gave a fully compiled C++ reproducer, clearly the syntax can get as simple as. ```cpp. df.Define(""vec3"", ""vec1 + Take(vec2, vec1.size(), 99)"").Display({""vec3""});. ```. Getting quite close to TTree::Draw's compactness. Although, for the sake of completeness, let me state that it is personally not my preferred way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:288,security,compl,completeness,288,"> Not easy to read/parse but fair enough. I gave a fully compiled C++ reproducer, clearly the syntax can get as simple as. ```cpp. df.Define(""vec3"", ""vec1 + Take(vec2, vec1.size(), 99)"").Display({""vec3""});. ```. Getting quite close to TTree::Draw's compactness. Although, for the sake of completeness, let me state that it is personally not my preferred way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:112,testability,simpl,simple,112,"> Not easy to read/parse but fair enough. I gave a fully compiled C++ reproducer, clearly the syntax can get as simple as. ```cpp. df.Define(""vec3"", ""vec1 + Take(vec2, vec1.size(), 99)"").Display({""vec3""});. ```. Getting quite close to TTree::Draw's compactness. Although, for the sake of completeness, let me state that it is personally not my preferred way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:82,usability,clear,clearly,82,"> Not easy to read/parse but fair enough. I gave a fully compiled C++ reproducer, clearly the syntax can get as simple as. ```cpp. df.Define(""vec3"", ""vec1 + Take(vec2, vec1.size(), 99)"").Display({""vec3""});. ```. Getting quite close to TTree::Draw's compactness. Although, for the sake of completeness, let me state that it is personally not my preferred way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:112,usability,simpl,simple,112,"> Not easy to read/parse but fair enough. I gave a fully compiled C++ reproducer, clearly the syntax can get as simple as. ```cpp. df.Define(""vec3"", ""vec1 + Take(vec2, vec1.size(), 99)"").Display({""vec3""});. ```. Getting quite close to TTree::Draw's compactness. Although, for the sake of completeness, let me state that it is personally not my preferred way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:226,usability,close,close,226,"> Not easy to read/parse but fair enough. I gave a fully compiled C++ reproducer, clearly the syntax can get as simple as. ```cpp. df.Define(""vec3"", ""vec1 + Take(vec2, vec1.size(), 99)"").Display({""vec3""});. ```. Getting quite close to TTree::Draw's compactness. Although, for the sake of completeness, let me state that it is personally not my preferred way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:326,usability,person,personally,326,"> Not easy to read/parse but fair enough. I gave a fully compiled C++ reproducer, clearly the syntax can get as simple as. ```cpp. df.Define(""vec3"", ""vec1 + Take(vec2, vec1.size(), 99)"").Display({""vec3""});. ```. Getting quite close to TTree::Draw's compactness. Although, for the sake of completeness, let me state that it is personally not my preferred way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:344,usability,prefer,preferred,344,"> Not easy to read/parse but fair enough. I gave a fully compiled C++ reproducer, clearly the syntax can get as simple as. ```cpp. df.Define(""vec3"", ""vec1 + Take(vec2, vec1.size(), 99)"").Display({""vec3""});. ```. Getting quite close to TTree::Draw's compactness. Although, for the sake of completeness, let me state that it is personally not my preferred way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:256,performance,time,times,256,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:288,safety,compl,completely,288,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:441,safety,compl,completely,441,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:577,safety,test,test,577,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:652,safety,input,input,652,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:745,safety,test,test,745,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:2084,safety,test,testing,2084,"ted to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. If this is what you are after, I agree with this idea and I will add it to the unit testing suite of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:288,security,compl,completely,288,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:441,security,compl,completely,441,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:572,testability,unit,unit,572,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:577,testability,test,test,577,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:745,testability,test,test,745,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:2079,testability,unit,unit,2079,"ted to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. If this is what you are after, I agree with this idea and I will add it to the unit testing suite of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:2084,testability,test,testing,2084,"ted to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. If this is what you are after, I agree with this idea and I will add it to the unit testing suite of this PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:187,usability,user,user,187,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:416,usability,user,user-provided,416,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:652,usability,input,input,652,"> > `Alt$` vs `RVec::Take with back fill value`. > > also it is really unrelated to this PR. > . > It is related to this PR as the 2 features needs to work together. (I.e. case where the user relied on `RVec::Take with back fill value` _and_ there is some times where that column is also completely missing. The usage of `ROOT::VecOps::Take` to create an RVec filled with elements of an existing vector or a default user-provided value is a completely unrelated feature w.r.t. this PR. But, reading this comment of yours leads me to thinking what you are looking for is a unit test that makes sure the handling of missing values works with vector-like input branches, including providing default values via `DefaultFor` for those branches. Some test like the following example. ```cpp. #include <ROOT/RDataFrame.hxx>. #include <ROOT/RVec.hxx>. #include <TFile.h>. #include <TTree.h>. struct Dataset. {. constexpr static auto filename_1{""myfile_1.root""};. constexpr static auto filename_2{""myfile_2.root""};. constexpr static auto treename{""mytree""};. Dataset(). {. {. TFile f{filename_1, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. std::vector<float> vec2{6.6f, 7.7f};. t.Branch(""vec1"", &vec1);. t.Branch(""vec2"", &vec2);. t.Fill();. t.Write();. }. {. TFile f{filename_2, ""recreate""};. TTree t{treename, treename};. std::vector<float> vec1{1.1f, 2.2f, 3.3f, 4.4f, 5.5f};. t.Branch(""vec1"", &vec1);. t.Fill();. t.Write();. }. }. ~Dataset(). {. std::remove(filename_1);. std::remove(filename_2);. }. };. int main(). {. Dataset dataset;. ROOT::RDataFrame df{dataset.treename, {dataset.filename_1, dataset.filename_2}};. auto display = df. .DefaultFor(""vec2"", ROOT::RVecF{100.f, 200.f, 300.f}). .Define(""vec3"", [](const ROOT::RVecF &vec1, const ROOT::RVecF &vec2). { return vec1 + ROOT::VecOps::Take(vec2, vec1.size(), 10.f); }, {""vec1"", ""vec2""}). .Display<ROOT::RVecF, ROOT::RVecF, ROOT::RVecF>({""vec1"", ""vec2"", ""vec3""});. display->Print();. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:86,safety,test,testing,86,"> If this is what you are after, I agree with this idea and I will add it to the unit testing suite of this PR. Yes, this is exactly the kind of example I was looking for. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:81,testability,unit,unit,81,"> If this is what you are after, I agree with this idea and I will add it to the unit testing suite of this PR. Yes, this is exactly the kind of example I was looking for. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:86,testability,test,testing,86,"> If this is what you are after, I agree with this idea and I will add it to the unit testing suite of this PR. Yes, this is exactly the kind of example I was looking for. Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:83,safety,review,review,83,"@martamaja10 @pcanal @hageboeck All comments addressed, ready for another round of review 😄",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:83,testability,review,review,83,"@martamaja10 @pcanal @hageboeck All comments addressed, ready for another round of review 😄",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:352,availability,operat,operation,352,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:403,availability,avail,available,403,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:545,availability,operat,operation,545,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:101,deployability,API,API,101,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:207,energy efficiency,current,current,207,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:101,integrability,API,API,101,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:275,integrability,Filter,FilterAvailable,275,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:344,integrability,Filter,Filter,344,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:470,integrability,Filter,FilterMissing,470,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:537,integrability,Filter,Filter,537,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:101,interoperability,API,API,101,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:105,modifiability,extens,extension,105,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:403,reliability,availab,available,403,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:228,safety,input,input,228,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:403,safety,avail,available,403,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:403,security,availab,available,403,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:168,usability,user,user,168,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:228,usability,input,input,228,"@martamaja10 @pcanal @hageboeck @dpiparo The latest commits includes the final naming scheme for the API extension:. * `DefaultValueFor(colname, defaultval)`: lets the user provide one default value for the current entry of the input column, in case the value is missing. * `FilterAvailable(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value available?"". If so, the entry is kept, if not, it is discarded. * `FilterMissing(colname)`: works in the same way as the traditional `Filter` operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:74,availability,operat,operation,74,"> FilterMissing(colname): works in the same way as the traditional Filter operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded. If I read that correctly, it keeps only the entries for which that column has no entries, right? (i.e. as a consequence there should be no use of that column in the graph otherwise there will be an exception thrown, right?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:2,integrability,Filter,FilterMissing,2,"> FilterMissing(colname): works in the same way as the traditional Filter operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded. If I read that correctly, it keeps only the entries for which that column has no entries, right? (i.e. as a consequence there should be no use of that column in the graph otherwise there will be an exception thrown, right?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:67,integrability,Filter,Filter,67,"> FilterMissing(colname): works in the same way as the traditional Filter operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded. If I read that correctly, it keeps only the entries for which that column has no entries, right? (i.e. as a consequence there should be no use of that column in the graph otherwise there will be an exception thrown, right?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:385,safety,except,exception,385,"> FilterMissing(colname): works in the same way as the traditional Filter operation, where the ""expression"" is ""is the value missing?"". If so, the entry is kept, if not, it is discarded. If I read that correctly, it keeps only the entries for which that column has no entries, right? (i.e. as a consequence there should be no use of that column in the graph otherwise there will be an exception thrown, right?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:201,safety,except,exception,201,"> If I read that correctly, it keeps only the entries for which that column has no entries, right? (i.e. as a consequence there should be not use of that column in the graph otherwise there will be an exception thrown, right?). Yes and yes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:88,integrability,Filter,FilterMissing,88,"Thanks Vincenzo! It all looks good to me - just one quick question, since now there is ""FilterMissing"" as well, should it be added to the tutorials as well or would that be too confusing - just thinking out loud here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15641:90,integrability,Filter,FilterMissing,90,"> Thanks Vincenzo! It all looks good to me - just one quick question, since now there is ""FilterMissing"" as well, should it be added to the tutorials as well or would that be too confusing - just thinking out loud here. Yes indeed I added it to all the tutorials in this PR, you can find it in the snippets preceded by the `Example 3` comments.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15641
https://github.com/root-project/root/pull/15646:25,deployability,updat,update,25,"We probably also want to update `README/ReleaseNotes/empty.md` more generally with the ""currently expected contributors""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15646
https://github.com/root-project/root/pull/15646:40,deployability,Releas,ReleaseNotes,40,"We probably also want to update `README/ReleaseNotes/empty.md` more generally with the ""currently expected contributors""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15646
https://github.com/root-project/root/pull/15646:88,energy efficiency,current,currently,88,"We probably also want to update `README/ReleaseNotes/empty.md` more generally with the ""currently expected contributors""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15646
https://github.com/root-project/root/pull/15646:25,safety,updat,update,25,"We probably also want to update `README/ReleaseNotes/empty.md` more generally with the ""currently expected contributors""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15646
https://github.com/root-project/root/pull/15646:25,security,updat,update,25,"We probably also want to update `README/ReleaseNotes/empty.md` more generally with the ""currently expected contributors""...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15646
https://github.com/root-project/root/pull/15663:13,availability,failur,failure,13,The fedora39 failure are unrelated (a system compiler update was not followed by a full rebuild thus leading to a run-time imcompatibility).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15663
https://github.com/root-project/root/pull/15663:13,deployability,fail,failure,13,The fedora39 failure are unrelated (a system compiler update was not followed by a full rebuild thus leading to a run-time imcompatibility).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15663
https://github.com/root-project/root/pull/15663:54,deployability,updat,update,54,The fedora39 failure are unrelated (a system compiler update was not followed by a full rebuild thus leading to a run-time imcompatibility).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15663
https://github.com/root-project/root/pull/15663:13,performance,failur,failure,13,The fedora39 failure are unrelated (a system compiler update was not followed by a full rebuild thus leading to a run-time imcompatibility).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15663
https://github.com/root-project/root/pull/15663:118,performance,time,time,118,The fedora39 failure are unrelated (a system compiler update was not followed by a full rebuild thus leading to a run-time imcompatibility).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15663
https://github.com/root-project/root/pull/15663:13,reliability,fail,failure,13,The fedora39 failure are unrelated (a system compiler update was not followed by a full rebuild thus leading to a run-time imcompatibility).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15663
https://github.com/root-project/root/pull/15663:54,safety,updat,update,54,The fedora39 failure are unrelated (a system compiler update was not followed by a full rebuild thus leading to a run-time imcompatibility).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15663
https://github.com/root-project/root/pull/15663:54,security,updat,update,54,The fedora39 failure are unrelated (a system compiler update was not followed by a full rebuild thus leading to a run-time imcompatibility).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15663
https://github.com/root-project/root/pull/15678:24,deployability,patch,patch,24,"Just for reference this patch is needed by [this PR](https://github.com/conda-forge/root-feedstock/pull/245). Once that PR will be merged and I'll be sure this is the right patch for it, then I'll merge it in ROOT as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15678
https://github.com/root-project/root/pull/15678:173,deployability,patch,patch,173,"Just for reference this patch is needed by [this PR](https://github.com/conda-forge/root-feedstock/pull/245). Once that PR will be merged and I'll be sure this is the right patch for it, then I'll merge it in ROOT as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15678
https://github.com/root-project/root/pull/15678:24,safety,patch,patch,24,"Just for reference this patch is needed by [this PR](https://github.com/conda-forge/root-feedstock/pull/245). Once that PR will be merged and I'll be sure this is the right patch for it, then I'll merge it in ROOT as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15678
https://github.com/root-project/root/pull/15678:173,safety,patch,patch,173,"Just for reference this patch is needed by [this PR](https://github.com/conda-forge/root-feedstock/pull/245). Once that PR will be merged and I'll be sure this is the right patch for it, then I'll merge it in ROOT as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15678
https://github.com/root-project/root/pull/15678:24,security,patch,patch,24,"Just for reference this patch is needed by [this PR](https://github.com/conda-forge/root-feedstock/pull/245). Once that PR will be merged and I'll be sure this is the right patch for it, then I'll merge it in ROOT as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15678
https://github.com/root-project/root/pull/15678:173,security,patch,patch,173,"Just for reference this patch is needed by [this PR](https://github.com/conda-forge/root-feedstock/pull/245). Once that PR will be merged and I'll be sure this is the right patch for it, then I'll merge it in ROOT as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15678
https://github.com/root-project/root/pull/15683:26,interoperability,format,format,26,"I propose to ignore clang format, since that code was not written by me and has been there for a very long time (as the goto's testify).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15683
https://github.com/root-project/root/pull/15683:107,performance,time,time,107,"I propose to ignore clang format, since that code was not written by me and has been there for a very long time (as the goto's testify).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15683
https://github.com/root-project/root/pull/15683:127,safety,test,testify,127,"I propose to ignore clang format, since that code was not written by me and has been there for a very long time (as the goto's testify).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15683
https://github.com/root-project/root/pull/15683:127,testability,test,testify,127,"I propose to ignore clang format, since that code was not written by me and has been there for a very long time (as the goto's testify).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15683
https://github.com/root-project/root/issues/15686:158,interoperability,specif,specified,158,"The linked PR fixes the situation. The execution order of the functions passed to `Define` (within the same branch of the computation graph) was never really specified (neither in the RDataFrame docs, nor in the actual implementation).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15686
https://github.com/root-project/root/pull/15687:4,availability,failur,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15687
https://github.com/root-project/root/pull/15687:4,deployability,fail,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15687
https://github.com/root-project/root/pull/15687:4,performance,failur,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15687
https://github.com/root-project/root/pull/15687:4,reliability,fail,failure,4,The failure is unrelated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15687
https://github.com/root-project/root/issues/15688:249,modifiability,paramet,parameter,249,"We're talking about this TProfile2D method here:. ```c++. virtual Int_t Fill(const char *namex, const char *namey, Double_t z, Double_t w = 1.);. ```. That is a bit nasty, because actually it declares two different signatures, one with the optional parameter and one without. In case of no optional `w` parameter, it would theoretically `override` the `TH2::Fill(x, y, w)` method, but does it really? I don't even know how C++ works here, I got to try this out. But it's no surprise that cppyy also gets confused. Reference:. https://root.cern.ch/doc/master/classTH2.html#a368290c4a1b084eaf7b581f49647e04d. https://root.cern.ch/doc/master/classTProfile2D.html#af69e7c22659b8cfc8d5033ce3af1080d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:303,modifiability,paramet,parameter,303,"We're talking about this TProfile2D method here:. ```c++. virtual Int_t Fill(const char *namex, const char *namey, Double_t z, Double_t w = 1.);. ```. That is a bit nasty, because actually it declares two different signatures, one with the optional parameter and one without. In case of no optional `w` parameter, it would theoretically `override` the `TH2::Fill(x, y, w)` method, but does it really? I don't even know how C++ works here, I got to try this out. But it's no surprise that cppyy also gets confused. Reference:. https://root.cern.ch/doc/master/classTH2.html#a368290c4a1b084eaf7b581f49647e04d. https://root.cern.ch/doc/master/classTProfile2D.html#af69e7c22659b8cfc8d5033ce3af1080d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:385,reliability,doe,does,385,"We're talking about this TProfile2D method here:. ```c++. virtual Int_t Fill(const char *namex, const char *namey, Double_t z, Double_t w = 1.);. ```. That is a bit nasty, because actually it declares two different signatures, one with the optional parameter and one without. In case of no optional `w` parameter, it would theoretically `override` the `TH2::Fill(x, y, w)` method, but does it really? I don't even know how C++ works here, I got to try this out. But it's no surprise that cppyy also gets confused. Reference:. https://root.cern.ch/doc/master/classTH2.html#a368290c4a1b084eaf7b581f49647e04d. https://root.cern.ch/doc/master/classTProfile2D.html#af69e7c22659b8cfc8d5033ce3af1080d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:215,security,sign,signatures,215,"We're talking about this TProfile2D method here:. ```c++. virtual Int_t Fill(const char *namex, const char *namey, Double_t z, Double_t w = 1.);. ```. That is a bit nasty, because actually it declares two different signatures, one with the optional parameter and one without. In case of no optional `w` parameter, it would theoretically `override` the `TH2::Fill(x, y, w)` method, but does it really? I don't even know how C++ works here, I got to try this out. But it's no surprise that cppyy also gets confused. Reference:. https://root.cern.ch/doc/master/classTH2.html#a368290c4a1b084eaf7b581f49647e04d. https://root.cern.ch/doc/master/classTProfile2D.html#af69e7c22659b8cfc8d5033ce3af1080d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:205,integrability,pub,public,205,"Ok, I tried to reproduce the situation with a simple C++ example:. ```c++. #include <iostream>. #include <string>. #include <memory>. struct A {. virtual std::string func() { return ""A""; }. };. struct B : public A {. std::string func() { return ""B""; }. std::string func(int) { return ""B""; }. };. struct C : public A {. std::string func(int=0) { return ""C""; }. };. int main() {. std::unique_ptr<A> a = std::make_unique<A>();. std::unique_ptr<A> b = std::make_unique<B>();. std::unique_ptr<A> c = std::make_unique<C>();. std::cout << a->func() << std::endl;. std::cout << b->func() << std::endl;. std::cout << c->func() << std::endl;. }. ```. Output:. ```txt. A. B. A. ```. Interesting. So if you have a method with default parameters, and the signature with the implicit defaults seems to override a base class method, it actually doesn't. So this is a bug in TProfile2D that needs to be fixed:. * https://github.com/root-project/root/pull/15693",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:307,integrability,pub,public,307,"Ok, I tried to reproduce the situation with a simple C++ example:. ```c++. #include <iostream>. #include <string>. #include <memory>. struct A {. virtual std::string func() { return ""A""; }. };. struct B : public A {. std::string func() { return ""B""; }. std::string func(int) { return ""B""; }. };. struct C : public A {. std::string func(int=0) { return ""C""; }. };. int main() {. std::unique_ptr<A> a = std::make_unique<A>();. std::unique_ptr<A> b = std::make_unique<B>();. std::unique_ptr<A> c = std::make_unique<C>();. std::cout << a->func() << std::endl;. std::cout << b->func() << std::endl;. std::cout << c->func() << std::endl;. }. ```. Output:. ```txt. A. B. A. ```. Interesting. So if you have a method with default parameters, and the signature with the implicit defaults seems to override a base class method, it actually doesn't. So this is a bug in TProfile2D that needs to be fixed:. * https://github.com/root-project/root/pull/15693",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:722,modifiability,paramet,parameters,722,"Ok, I tried to reproduce the situation with a simple C++ example:. ```c++. #include <iostream>. #include <string>. #include <memory>. struct A {. virtual std::string func() { return ""A""; }. };. struct B : public A {. std::string func() { return ""B""; }. std::string func(int) { return ""B""; }. };. struct C : public A {. std::string func(int=0) { return ""C""; }. };. int main() {. std::unique_ptr<A> a = std::make_unique<A>();. std::unique_ptr<A> b = std::make_unique<B>();. std::unique_ptr<A> c = std::make_unique<C>();. std::cout << a->func() << std::endl;. std::cout << b->func() << std::endl;. std::cout << c->func() << std::endl;. }. ```. Output:. ```txt. A. B. A. ```. Interesting. So if you have a method with default parameters, and the signature with the implicit defaults seems to override a base class method, it actually doesn't. So this is a bug in TProfile2D that needs to be fixed:. * https://github.com/root-project/root/pull/15693",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:125,performance,memor,memory,125,"Ok, I tried to reproduce the situation with a simple C++ example:. ```c++. #include <iostream>. #include <string>. #include <memory>. struct A {. virtual std::string func() { return ""A""; }. };. struct B : public A {. std::string func() { return ""B""; }. std::string func(int) { return ""B""; }. };. struct C : public A {. std::string func(int=0) { return ""C""; }. };. int main() {. std::unique_ptr<A> a = std::make_unique<A>();. std::unique_ptr<A> b = std::make_unique<B>();. std::unique_ptr<A> c = std::make_unique<C>();. std::cout << a->func() << std::endl;. std::cout << b->func() << std::endl;. std::cout << c->func() << std::endl;. }. ```. Output:. ```txt. A. B. A. ```. Interesting. So if you have a method with default parameters, and the signature with the implicit defaults seems to override a base class method, it actually doesn't. So this is a bug in TProfile2D that needs to be fixed:. * https://github.com/root-project/root/pull/15693",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:830,reliability,doe,doesn,830,"Ok, I tried to reproduce the situation with a simple C++ example:. ```c++. #include <iostream>. #include <string>. #include <memory>. struct A {. virtual std::string func() { return ""A""; }. };. struct B : public A {. std::string func() { return ""B""; }. std::string func(int) { return ""B""; }. };. struct C : public A {. std::string func(int=0) { return ""C""; }. };. int main() {. std::unique_ptr<A> a = std::make_unique<A>();. std::unique_ptr<A> b = std::make_unique<B>();. std::unique_ptr<A> c = std::make_unique<C>();. std::cout << a->func() << std::endl;. std::cout << b->func() << std::endl;. std::cout << c->func() << std::endl;. }. ```. Output:. ```txt. A. B. A. ```. Interesting. So if you have a method with default parameters, and the signature with the implicit defaults seems to override a base class method, it actually doesn't. So this is a bug in TProfile2D that needs to be fixed:. * https://github.com/root-project/root/pull/15693",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:742,security,sign,signature,742,"Ok, I tried to reproduce the situation with a simple C++ example:. ```c++. #include <iostream>. #include <string>. #include <memory>. struct A {. virtual std::string func() { return ""A""; }. };. struct B : public A {. std::string func() { return ""B""; }. std::string func(int) { return ""B""; }. };. struct C : public A {. std::string func(int=0) { return ""C""; }. };. int main() {. std::unique_ptr<A> a = std::make_unique<A>();. std::unique_ptr<A> b = std::make_unique<B>();. std::unique_ptr<A> c = std::make_unique<C>();. std::cout << a->func() << std::endl;. std::cout << b->func() << std::endl;. std::cout << c->func() << std::endl;. }. ```. Output:. ```txt. A. B. A. ```. Interesting. So if you have a method with default parameters, and the signature with the implicit defaults seems to override a base class method, it actually doesn't. So this is a bug in TProfile2D that needs to be fixed:. * https://github.com/root-project/root/pull/15693",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:46,testability,simpl,simple,46,"Ok, I tried to reproduce the situation with a simple C++ example:. ```c++. #include <iostream>. #include <string>. #include <memory>. struct A {. virtual std::string func() { return ""A""; }. };. struct B : public A {. std::string func() { return ""B""; }. std::string func(int) { return ""B""; }. };. struct C : public A {. std::string func(int=0) { return ""C""; }. };. int main() {. std::unique_ptr<A> a = std::make_unique<A>();. std::unique_ptr<A> b = std::make_unique<B>();. std::unique_ptr<A> c = std::make_unique<C>();. std::cout << a->func() << std::endl;. std::cout << b->func() << std::endl;. std::cout << c->func() << std::endl;. }. ```. Output:. ```txt. A. B. A. ```. Interesting. So if you have a method with default parameters, and the signature with the implicit defaults seems to override a base class method, it actually doesn't. So this is a bug in TProfile2D that needs to be fixed:. * https://github.com/root-project/root/pull/15693",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:46,usability,simpl,simple,46,"Ok, I tried to reproduce the situation with a simple C++ example:. ```c++. #include <iostream>. #include <string>. #include <memory>. struct A {. virtual std::string func() { return ""A""; }. };. struct B : public A {. std::string func() { return ""B""; }. std::string func(int) { return ""B""; }. };. struct C : public A {. std::string func(int=0) { return ""C""; }. };. int main() {. std::unique_ptr<A> a = std::make_unique<A>();. std::unique_ptr<A> b = std::make_unique<B>();. std::unique_ptr<A> c = std::make_unique<C>();. std::cout << a->func() << std::endl;. std::cout << b->func() << std::endl;. std::cout << c->func() << std::endl;. }. ```. Output:. ```txt. A. B. A. ```. Interesting. So if you have a method with default parameters, and the signature with the implicit defaults seems to override a base class method, it actually doesn't. So this is a bug in TProfile2D that needs to be fixed:. * https://github.com/root-project/root/pull/15693",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15688:125,usability,memor,memory,125,"Ok, I tried to reproduce the situation with a simple C++ example:. ```c++. #include <iostream>. #include <string>. #include <memory>. struct A {. virtual std::string func() { return ""A""; }. };. struct B : public A {. std::string func() { return ""B""; }. std::string func(int) { return ""B""; }. };. struct C : public A {. std::string func(int=0) { return ""C""; }. };. int main() {. std::unique_ptr<A> a = std::make_unique<A>();. std::unique_ptr<A> b = std::make_unique<B>();. std::unique_ptr<A> c = std::make_unique<C>();. std::cout << a->func() << std::endl;. std::cout << b->func() << std::endl;. std::cout << c->func() << std::endl;. }. ```. Output:. ```txt. A. B. A. ```. Interesting. So if you have a method with default parameters, and the signature with the implicit defaults seems to override a base class method, it actually doesn't. So this is a bug in TProfile2D that needs to be fixed:. * https://github.com/root-project/root/pull/15693",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15688
https://github.com/root-project/root/issues/15690:84,integrability,schema,schema,84,I opened a PR to fix this. Sorry for the amateur mistake! It has nothing to do with schema evolution because the `_buffer` is a transient data member. * https://github.com/root-project/root/pull/15695,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15690
https://github.com/root-project/root/pull/15696:129,availability,down,downstream,129,"I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:140,deployability,patch,patches,140,"I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:71,reliability,doe,does,71,"I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:140,safety,patch,patches,140,"I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:140,security,patch,patches,140,"I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:131,availability,down,downstream,131,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:192,availability,down,downstream,192,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:142,deployability,patch,patches,142,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:203,deployability,patch,patches,203,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:247,deployability,upgrad,upgrade,247,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:450,deployability,patch,patch,450,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:477,deployability,infrastructur,infrastructure,477,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:499,deployability,upgrad,upgrading,499,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:230,energy efficiency,reduc,reduced,230,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:463,energy efficiency,core,core,463,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:247,modifiability,upgrad,upgrade,247,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:499,modifiability,upgrad,upgrading,499,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:73,reliability,doe,does,73,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:142,safety,patch,patches,142,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:203,safety,patch,patches,203,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:450,safety,patch,patch,450,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:142,security,patch,patches,142,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:203,security,patch,patches,203,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:450,security,patch,patch,450,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:274,usability,statu,status,274,"> I know this is totally not relevant for you, but I am still wondering: does this allow me to use system clang or are there still downstream patches required? Hi Stephan, no we still require downstream patches. Their number gets reduced on every upgrade, you can track the status for LLVM 18 here: https://github.com/root-project/llvm-project/commits/ROOT-llvm18. More importantly, and not yet reflected in `ROOT-llvm18`, we will now also require a patch to the core LLVM JIT infrastructure (until upgrading past LLVM 19): https://github.com/llvm/llvm-project/pull/95532",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:15,deployability,updat,update,15,Thanks for the update!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:15,safety,updat,update,15,Thanks for the update!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:15,security,updat,update,15,Thanks for the update!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:2401,availability,Error,ErrorHandling,2401,"311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:4319,availability,error,error,4319,"ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\dev.llvm18\CMakeFiles\6485b15e5a52a9a93f. 294ac9c6ea6f8f\allDict.cxx.pch.rule;C:\root-dev\build\x64\dev.llvm18\CMakeFiles\c2921ee0b70b9f5a32ad0eb8246e0cd2\onepcm.rule;C:\root-dev\git\dev.llvm18\CMakeLists.txt' exited with code -1. [C:\root-dev\build\x64\d. ev.llvm18\onepcm.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:12,deployability,stack,stack,12,Here is the stack trace on Windows:. ```. Generating etc/allDict.cxx.pch. Generating PCH for bindings\tpython core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\fitsio graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk gr. af3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter hist\unfold io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb Hand,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:1158,deployability,Stack,Stack,1158, graf2d\asimage graf2d\fitsio graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk gr. af3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter hist\unfold io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:1854,deployability,build,build,1854,"eviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:2946,deployability,Modul,Module,2946,"eption Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:3162,deployability,Modul,Module,3162,"81). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:4341,deployability,build,build,4341,"ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\dev.llvm18\CMakeFiles\6485b15e5a52a9a93f. 294ac9c6ea6f8f\allDict.cxx.pch.rule;C:\root-dev\build\x64\dev.llvm18\CMakeFiles\c2921ee0b70b9f5a32ad0eb8246e0cd2\onepcm.rule;C:\root-dev\git\dev.llvm18\CMakeLists.txt' exited with code -1. [C:\root-dev\build\x64\d. ev.llvm18\onepcm.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:4364,deployability,build,build,4364,"ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\dev.llvm18\CMakeFiles\6485b15e5a52a9a93f. 294ac9c6ea6f8f\allDict.cxx.pch.rule;C:\root-dev\build\x64\dev.llvm18\CMakeFiles\c2921ee0b70b9f5a32ad0eb8246e0cd2\onepcm.rule;C:\root-dev\git\dev.llvm18\CMakeLists.txt' exited with code -1. [C:\root-dev\build\x64\d. ev.llvm18\onepcm.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:4464,deployability,build,build,4464,"ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\dev.llvm18\CMakeFiles\6485b15e5a52a9a93f. 294ac9c6ea6f8f\allDict.cxx.pch.rule;C:\root-dev\build\x64\dev.llvm18\CMakeFiles\c2921ee0b70b9f5a32ad0eb8246e0cd2\onepcm.rule;C:\root-dev\git\dev.llvm18\CMakeLists.txt' exited with code -1. [C:\root-dev\build\x64\d. ev.llvm18\onepcm.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:4618,deployability,build,build,4618,"ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\dev.llvm18\CMakeFiles\6485b15e5a52a9a93f. 294ac9c6ea6f8f\allDict.cxx.pch.rule;C:\root-dev\build\x64\dev.llvm18\CMakeFiles\c2921ee0b70b9f5a32ad0eb8246e0cd2\onepcm.rule;C:\root-dev\git\dev.llvm18\CMakeLists.txt' exited with code -1. [C:\root-dev\build\x64\d. ev.llvm18\onepcm.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:110,energy efficiency,core,core,110,Here is the stack trace on Windows:. ```. Generating etc/allDict.cxx.pch. Generating PCH for bindings\tpython core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\fitsio graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk gr. af3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter hist\unfold io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb Hand,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:115,energy efficiency,core,core,115,Here is the stack trace on Windows:. ```. Generating etc/allDict.cxx.pch. Generating PCH for bindings\tpython core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\fitsio graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk gr. af3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter hist\unfold io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb Hand,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:131,energy efficiency,core,core,131,Here is the stack trace on Windows:. ```. Generating etc/allDict.cxx.pch. Generating PCH for bindings\tpython core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\fitsio graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk gr. af3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter hist\unfold io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb Hand,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:140,energy efficiency,core,core,140,Here is the stack trace on Windows:. ```. Generating etc/allDict.cxx.pch. Generating PCH for bindings\tpython core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\fitsio graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk gr. af3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter hist\unfold io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb Hand,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:150,energy efficiency,core,core,150,Here is the stack trace on Windows:. ```. Generating etc/allDict.cxx.pch. Generating PCH for bindings\tpython core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\fitsio graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk gr. af3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter hist\unfold io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb Hand,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:1440,energy efficiency,core,core,1440,"d io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc252",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:1912,energy efficiency,core,core,1912,"notation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, clas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:3359,energy efficiency,core,core,3359,"terpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:3468,energy efficiency,core,core,3468,"oken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\dev.llvm18\CMakeFiles\6485b15e5a52a9a93f. 294ac9c6ea6f8f\allDict.cxx.pch.rule;C:\root-dev\build\",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:3596,energy efficiency,core,core,3596,"oject\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\dev.llvm18\CMakeFiles\6485b15e5a52a9a93f. 294ac9c6ea6f8f\allDict.cxx.pch.rule;C:\root-dev\build\x64\dev.llvm18\CMakeFiles\c2921ee0b70b9f5a32ad0eb8246e0cd2\onepcm.rule;C:\root-dev\git\dev.llvm18\CMakeLists.txt' exited with co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:3712,energy efficiency,core,core,3712,"ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\dev.llvm18\CMakeFiles\6485b15e5a52a9a93f. 294ac9c6ea6f8f\allDict.cxx.pch.rule;C:\root-dev\build\x64\dev.llvm18\CMakeFiles\c2921ee0b70b9f5a32ad0eb8246e0cd2\onepcm.rule;C:\root-dev\git\dev.llvm18\CMakeLists.txt' exited with code -1. [C:\root-dev\build\x64\d. ev.llvm18\onepcm.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:1057,integrability,sub,submit,1057,Dict.cxx.pch. Generating PCH for bindings\tpython core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\fitsio graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk gr. af3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter hist\unfold io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:93,interoperability,bind,bindings,93,Here is the stack trace on Windows:. ```. Generating etc/allDict.cxx.pch. Generating PCH for bindings\tpython core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\fitsio graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk gr. af3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter hist\unfold io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb Hand,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:93,modifiability,bind,bindings,93,Here is the stack trace on Windows:. ```. Generating etc/allDict.cxx.pch. Generating PCH for bindings\tpython core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\fitsio graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk gr. af3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter hist\unfold io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb Hand,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:1423,modifiability,pac,packages,1423,"nter hist\unfold io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:2946,modifiability,Modul,Module,2946,"eption Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:3162,modifiability,Modul,Module,3162,"81). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:2401,performance,Error,ErrorHandling,2401,"311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:4319,performance,error,error,4319,"ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\dev.llvm18\CMakeFiles\6485b15e5a52a9a93f. 294ac9c6ea6f8f\allDict.cxx.pch.rule;C:\root-dev\build\x64\dev.llvm18\CMakeFiles\c2921ee0b70b9f5a32ad0eb8246e0cd2\onepcm.rule;C:\root-dev\git\dev.llvm18\CMakeLists.txt' exited with code -1. [C:\root-dev\build\x64\d. ev.llvm18\onepcm.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:1946,safety,Except,Exception,1946,"at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Modul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:2401,safety,Error,ErrorHandling,2401,"311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:2946,safety,Modul,Module,2946,"eption Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:3162,safety,Modul,Module,3162,"81). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:4319,safety,error,error,4319,"ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\dev.llvm18\CMakeFiles\6485b15e5a52a9a93f. 294ac9c6ea6f8f\allDict.cxx.pch.rule;C:\root-dev\build\x64\dev.llvm18\CMakeFiles\c2921ee0b70b9f5a32ad0eb8246e0cd2\onepcm.rule;C:\root-dev\git\dev.llvm18\CMakeLists.txt' exited with code -1. [C:\root-dev\build\x64\d. ev.llvm18\onepcm.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:923,security,token,token,923,Here is the stack trace on Windows:. ```. Generating etc/allDict.cxx.pch. Generating PCH for bindings\tpython core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\fitsio graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk gr. af3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter hist\unfold io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb Hand,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:2085,security,Sign,Signals,2085,"ithub.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTW",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:2488,security,Token,Token,2488,"x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:18,testability,trace,trace,18,Here is the stack trace on Windows:. ```. Generating etc/allDict.cxx.pch. Generating PCH for bindings\tpython core core\clingutils core\imt core\rint core\thread graf2d\asimage graf2d\fitsio graf2d\gpad graf2d\gpadv7 graf2d\graf graf2d\postscript graf2d\primitivesv7 graf2d\win32gdk gr. af3d\g3d graf3d\gl gui\fitpanel gui\fitpanelv7 gui\gui hist\hist hist\histdrawv7 hist\histpainter hist\histv7 hist\spectrum hist\spectrumpainter hist\unfold io\io math\genetic math\genvector math\mathcore math\m. athmore math\matrix math\minuit math\minuit2 math\physics math\smatrix math\vecops net\net roofit\RDataFrameHelpers roofit\histfactory roofit\hs3 roofit\jsoninterface roofit\roofit roofit\roofitcore roofit\roofi. tmore roofit\roostats tmva\pymva tmva\sofie tmva\tmva tmva\tmvagui tree\dataframe tree\ntuple tree\ntupleutil tree\tree tree\treeplayer tree\treeviewer tree\webviewer. missing serialization code for annotation token. UNREACHABLE executed at C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4514! PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb Hand,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:2069,usability,Support,Support,2069,"ort to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace. Stack dump:. 0. Program arguments: .\\bin\\rootcling -rootbuild -generate-pch -f allDict.cxx -noDictSelection -D__CLING__ -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DROOT_PCH -I.\\include -I.\\etc -I.\\etc\\dictpch -. I.\\etc\\cling -IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:2393,usability,Support,Support,2393,"IC:\\Python311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:20",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:2401,usability,Error,ErrorHandling,2401,"311\\Lib\\site-packages\\numpy\\core\\include -IC:\\Python311\\include -IC:\\libs\\x64\\GSL\\2.7\\include -IC:\\libs\\x64\\libxml2\\2.7.8\\include -IC:\\libs\\x64\\sqlite3\\3.45.2 -IC:. /root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src etc\\dictpch\\allHeaders.h -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src -IC:/root-dev/git/dev.llvm18/graf2d/win32gdk/gdk/src/gdk -IC:/root-dev/git/dev.llv. m18/graf2d/win32gdk/gdk/src/glib -IC:/root-dev/build/x64/dev.llvm18/include -IC:/root-dev/git/dev.llvm18/core etc\\dictpch\\allLinkDefs.h. Exception Code: 0x80000003. #0 0x00007ffc2c2306eb HandleAbort C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\Windows\Signals.inc:424:0. #1 0x00007ffcabe91881 (C:\windows\System32\ucrtbase.dll+0x71881). #2 0x00007ffcabe92851 (C:\windows\System32\ucrtbase.dll+0x72851). #3 0x00007ffc2c1dad4c llvm::llvm_unreachable_internal(char const *, char const *, unsigned int) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\llvm\lib\Support\ErrorHandling.cpp:212:0. #4 0x00007ffc25258963 clang::ASTWriter::AddToken(class clang::Token const &, class llvm::SmallVectorImpl<unsigned __int64> &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWrite. r.cpp:4514:0. #5 0x00007ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:4228,usability,Visual,Visual,4228,"ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\dev.llvm18\CMakeFiles\6485b15e5a52a9a93f. 294ac9c6ea6f8f\allDict.cxx.pch.rule;C:\root-dev\build\x64\dev.llvm18\CMakeFiles\c2921ee0b70b9f5a32ad0eb8246e0cd2\onepcm.rule;C:\root-dev\git\dev.llvm18\CMakeLists.txt' exited with code -1. [C:\root-dev\build\x64\d. ev.llvm18\onepcm.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:4319,usability,error,error,4319,"ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\dev.llvm18\CMakeFiles\6485b15e5a52a9a93f. 294ac9c6ea6f8f\allDict.cxx.pch.rule;C:\root-dev\build\x64\dev.llvm18\CMakeFiles\c2921ee0b70b9f5a32ad0eb8246e0cd2\onepcm.rule;C:\root-dev\git\dev.llvm18\CMakeLists.txt' exited with code -1. [C:\root-dev\build\x64\d. ev.llvm18\onepcm.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:4334,usability,Custom,Custom,4334,"ffc2525399f clang::ASTWriter::WriteLateParsedTemplates(class clang::Sema &) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:4340:0. #6 0x00007ffc252568d1 clang::ASTWriter::WriteASTCore(class clang::Sema &, class llvm::StringRef, class clang::Module *) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Serialization\ASTWriter.cpp:. 5117:0. #7 0x00007ffc2525852a clang::ASTWriter::WriteAST(class clang::Sema &, class llvm::StringRef, class clang::Module *, class llvm::StringRef, bool) C:\root-dev\git\dev.llvm18\interpreter\llvm-project\clang\lib\Ser. ialization\ASTWriter.cpp:4649:0. #8 0x00007ffc237996f8 WriteAST C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2021:0. #9 0x00007ffc23799959 GenerateAllDict C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:2042:0. #10 0x00007ffc237ac399 RootClingMain(int, char **, bool) C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:5010:0. #11 0x00007ffc2378c455 ROOT_rootcling_Driver C:\root-dev\git\dev.llvm18\core\dictgen\src\rootcling_impl.cxx:6238:0. #12 0x00007ff68e2f2605 main C:\root-dev\git\dev.llvm18\main\src\rootcling.cxx:44:0. #13 0x00007ff68e2f2924 invoke_main D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:78:0. #14 0x00007ff68e2f2924 __scrt_common_main_seh D:\a\_work\1\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288:0. #15 0x00007ffcacad7374 (C:\windows\System32\KERNEL32.DLL+0x17374). #16 0x00007ffcae65cc91 (C:\windows\SYSTEM32\ntdll.dll+0x4cc91). C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Microsoft\VC\v170\Microsoft.CppCommon.targets(254,5): error MSB8066: Custom build for 'C:\root-dev\build\x64\dev.llvm18\CMakeFiles\6485b15e5a52a9a93f. 294ac9c6ea6f8f\allDict.cxx.pch.rule;C:\root-dev\build\x64\dev.llvm18\CMakeFiles\c2921ee0b70b9f5a32ad0eb8246e0cd2\onepcm.rule;C:\root-dev\git\dev.llvm18\CMakeLists.txt' exited with code -1. [C:\root-dev\build\x64\d. ev.llvm18\onepcm.vcxproj]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:17,availability,state,state,17,FWIW the current state compiles fine on RISC-V and is at least able to run `df103_NanoAODHiggsAnalysis.py` :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:9,energy efficiency,current,current,9,FWIW the current state compiles fine on RISC-V and is at least able to run `df103_NanoAODHiggsAnalysis.py` :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:17,integrability,state,state,17,FWIW the current state compiles fine on RISC-V and is at least able to run `df103_NanoAODHiggsAnalysis.py` :wink:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:87,deployability,upgrad,upgrade,87,"@smuzaffar, @devajithvs and @hahnjo have everything working reasonably with the llvm18 upgrade. Can you check this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:87,modifiability,upgrad,upgrade,87,"@smuzaffar, @devajithvs and @hahnjo have everything working reasonably with the llvm18 upgrade. Can you check this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:89,deployability,upgrad,upgrade,89,"> @smuzaffar, @devajithvs and @hahnjo have everything working reasonably with the llvm18 upgrade. Can you check this PR against cmssw? @iarspider, could you give us a hand?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:89,modifiability,upgrad,upgrade,89,"> @smuzaffar, @devajithvs and @hahnjo have everything working reasonably with the llvm18 upgrade. Can you check this PR against cmssw? @iarspider, could you give us a hand?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:91,deployability,upgrad,upgrade,91,"> > @smuzaffar, @devajithvs and @hahnjo have everything working reasonably with the llvm18 upgrade. Can you check this PR against cmssw? > . > @iarspider, could you give us a hand? I allow myself to add @aandvalenzuela to perhaps get some help.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:91,modifiability,upgrad,upgrade,91,"> > @smuzaffar, @devajithvs and @hahnjo have everything working reasonably with the llvm18 upgrade. Can you check this PR against cmssw? > . > @iarspider, could you give us a hand? I allow myself to add @aandvalenzuela to perhaps get some help.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:239,usability,help,help,239,"> > @smuzaffar, @devajithvs and @hahnjo have everything working reasonably with the llvm18 upgrade. Can you check this PR against cmssw? > . > @iarspider, could you give us a hand? I allow myself to add @aandvalenzuela to perhaps get some help.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:44,availability,error,error,44,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:101,availability,error,error,101,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:238,availability,error,error,238,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:5,deployability,fail,failed,5,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:15,deployability,build,build,15,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:38,deployability,build,build,38,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:108,deployability,Fail,Failed,108,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:204,deployability,build,build,204,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:230,deployability,fail,failed,230,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:349,deployability,build,build,349,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:401,deployability,artifact,artifacts,401,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:424,deployability,integr,integration,424,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:508,deployability,log,log,508,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:528,deployability,build,build,528,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:534,deployability,log,log,534,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:219,integrability,sub,subcommand,219,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:424,integrability,integr,integration,424,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:424,interoperability,integr,integration,424,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:424,modifiability,integr,integration,424,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:44,performance,error,error,44,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:101,performance,error,error,101,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:238,performance,error,error,238,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:5,reliability,fail,failed,5,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:108,reliability,Fail,Failed,108,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:230,reliability,fail,failed,230,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:424,reliability,integr,integration,424,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:44,safety,error,error,44,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:101,safety,error,error,101,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:238,safety,error,error,238,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:309,safety,test,tests,309,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:315,safety,test,testBuildDir,315,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:508,safety,log,log,508,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:534,safety,log,log,534,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:93,security,session,session,93,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:424,security,integr,integration,424,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:508,security,log,log,508,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:534,security,log,log,534,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:309,testability,test,tests,309,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:315,testability,test,testBuildDir,315,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:424,testability,integr,integration,424,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:508,testability,log,log,508,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:534,testability,log,log,534,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:44,usability,error,error,44,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:101,usability,error,error,101,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:210,usability,stop,stopped,210,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:238,usability,error,error,238,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:254,usability,statu,status,254,"ROOT failed to build for aarch64, the build error is. ```. Processing hsimple.C... cling JIT session error: Failed to materialize symbols: { (<Process Symbols>, { DW.ref.__gxx_personality_v0 }) }. ninja: build stopped: subcommand failed. error: Bad exit status from /data/cmsbld/jenkins_a/workspace/ib-run-pr-tests/testBuildDir/tmp/rpm-tmp.3N7prC (%build). ```. See https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-b2e919/41190/externals/root/6.33.01-1689b1f60f821828a7e2948d6cf5f908/log for detail root build log",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:45,safety,test,tests,45,"For x86_64, this change passed all cmssw [CI tests](https://github.com/cms-sw/root/pull/209#issuecomment-2316914821)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:45,testability,test,tests,45,"For x86_64, this change passed all cmssw [CI tests](https://github.com/cms-sw/root/pull/209#issuecomment-2316914821)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:144,deployability,version,version,144,"> For x86_64, this change passed all cmssw [CI tests](https://github.com/cms-sw/root/pull/209#issuecomment-2316914821). Does both have the same version of gcc? Does one have `libgcc_s.so` and the other `libgcc.a`? And which one?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:144,integrability,version,version,144,"> For x86_64, this change passed all cmssw [CI tests](https://github.com/cms-sw/root/pull/209#issuecomment-2316914821). Does both have the same version of gcc? Does one have `libgcc_s.so` and the other `libgcc.a`? And which one?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:144,modifiability,version,version,144,"> For x86_64, this change passed all cmssw [CI tests](https://github.com/cms-sw/root/pull/209#issuecomment-2316914821). Does both have the same version of gcc? Does one have `libgcc_s.so` and the other `libgcc.a`? And which one?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:120,reliability,Doe,Does,120,"> For x86_64, this change passed all cmssw [CI tests](https://github.com/cms-sw/root/pull/209#issuecomment-2316914821). Does both have the same version of gcc? Does one have `libgcc_s.so` and the other `libgcc.a`? And which one?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:160,reliability,Doe,Does,160,"> For x86_64, this change passed all cmssw [CI tests](https://github.com/cms-sw/root/pull/209#issuecomment-2316914821). Does both have the same version of gcc? Does one have `libgcc_s.so` and the other `libgcc.a`? And which one?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:47,safety,test,tests,47,"> For x86_64, this change passed all cmssw [CI tests](https://github.com/cms-sw/root/pull/209#issuecomment-2316914821). Does both have the same version of gcc? Does one have `libgcc_s.so` and the other `libgcc.a`? And which one?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:47,testability,test,tests,47,"> For x86_64, this change passed all cmssw [CI tests](https://github.com/cms-sw/root/pull/209#issuecomment-2316914821). Does both have the same version of gcc? Does one have `libgcc_s.so` and the other `libgcc.a`? And which one?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:18,deployability,version,version,18,"@vgvassilev , gcc version is same (note that we use our own gcc and not from system). Both archs has `libgcc_s.so` in its lib64 path and `libgcc.a` in `lib/gcc/<arch>-redhat-linux-gnu/12.3.1/` directory [b]. [a]. - x86_64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. - aarch64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. [b]. ```. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```. ```. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:247,deployability,version,version,247,"@vgvassilev , gcc version is same (note that we use our own gcc and not from system). Both archs has `libgcc_s.so` in its lib64 path and `libgcc.a` in `lib/gcc/<arch>-redhat-linux-gnu/12.3.1/` directory [b]. [a]. - x86_64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. - aarch64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. [b]. ```. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```. ```. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:323,deployability,version,version,323,"@vgvassilev , gcc version is same (note that we use our own gcc and not from system). Both archs has `libgcc_s.so` in its lib64 path and `libgcc.a` in `lib/gcc/<arch>-redhat-linux-gnu/12.3.1/` directory [b]. [a]. - x86_64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. - aarch64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. [b]. ```. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```. ```. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:18,integrability,version,version,18,"@vgvassilev , gcc version is same (note that we use our own gcc and not from system). Both archs has `libgcc_s.so` in its lib64 path and `libgcc.a` in `lib/gcc/<arch>-redhat-linux-gnu/12.3.1/` directory [b]. [a]. - x86_64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. - aarch64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. [b]. ```. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```. ```. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:247,integrability,version,version,247,"@vgvassilev , gcc version is same (note that we use our own gcc and not from system). Both archs has `libgcc_s.so` in its lib64 path and `libgcc.a` in `lib/gcc/<arch>-redhat-linux-gnu/12.3.1/` directory [b]. [a]. - x86_64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. - aarch64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. [b]. ```. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```. ```. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:323,integrability,version,version,323,"@vgvassilev , gcc version is same (note that we use our own gcc and not from system). Both archs has `libgcc_s.so` in its lib64 path and `libgcc.a` in `lib/gcc/<arch>-redhat-linux-gnu/12.3.1/` directory [b]. [a]. - x86_64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. - aarch64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. [b]. ```. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```. ```. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:18,modifiability,version,version,18,"@vgvassilev , gcc version is same (note that we use our own gcc and not from system). Both archs has `libgcc_s.so` in its lib64 path and `libgcc.a` in `lib/gcc/<arch>-redhat-linux-gnu/12.3.1/` directory [b]. [a]. - x86_64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. - aarch64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. [b]. ```. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```. ```. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:247,modifiability,version,version,247,"@vgvassilev , gcc version is same (note that we use our own gcc and not from system). Both archs has `libgcc_s.so` in its lib64 path and `libgcc.a` in `lib/gcc/<arch>-redhat-linux-gnu/12.3.1/` directory [b]. [a]. - x86_64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. - aarch64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. [b]. ```. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```. ```. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:323,modifiability,version,version,323,"@vgvassilev , gcc version is same (note that we use our own gcc and not from system). Both archs has `libgcc_s.so` in its lib64 path and `libgcc.a` in `lib/gcc/<arch>-redhat-linux-gnu/12.3.1/` directory [b]. [a]. - x86_64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. - aarch64. ```. Singularity> gcc --version. gcc (GCC) 12.3.1 20230527. ```. [b]. ```. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/x86_64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/x86_64/nweek-02853/el8_amd64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```. ```. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib/gcc/aarch64-redhat-linux-gnu/12.3.1/libgcc_eh.a. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so. /cvmfs/cms-ib.cern.ch/sw/aarch64/nweek-02853/el8_aarch64_gcc12/external/gcc/12.3.1-40d504be6370b5a30e3947a6e575ca28/lib64/libgcc_s.so.1. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:26,safety,test,testing,26,"@smuzaffar, can you rerun testing of this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:26,testability,test,testing,26,"@smuzaffar, can you rerun testing of this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:187,deployability,build,build,187,"@vgvassilev , @aandvalenzuela has already started the [tests for aarch64](https://github.com/cms-sw/root/pull/209#issuecomment-2331962555) and looks like latest change has fixed the root build (tests are now building cmssw)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:208,deployability,build,building,208,"@vgvassilev , @aandvalenzuela has already started the [tests for aarch64](https://github.com/cms-sw/root/pull/209#issuecomment-2331962555) and looks like latest change has fixed the root build (tests are now building cmssw)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:55,safety,test,tests,55,"@vgvassilev , @aandvalenzuela has already started the [tests for aarch64](https://github.com/cms-sw/root/pull/209#issuecomment-2331962555) and looks like latest change has fixed the root build (tests are now building cmssw)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:194,safety,test,tests,194,"@vgvassilev , @aandvalenzuela has already started the [tests for aarch64](https://github.com/cms-sw/root/pull/209#issuecomment-2331962555) and looks like latest change has fixed the root build (tests are now building cmssw)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:55,testability,test,tests,55,"@vgvassilev , @aandvalenzuela has already started the [tests for aarch64](https://github.com/cms-sw/root/pull/209#issuecomment-2331962555) and looks like latest change has fixed the root build (tests are now building cmssw)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:194,testability,test,tests,194,"@vgvassilev , @aandvalenzuela has already started the [tests for aarch64](https://github.com/cms-sw/root/pull/209#issuecomment-2331962555) and looks like latest change has fixed the root build (tests are now building cmssw)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:11,safety,test,tests,11,"FYI, CMSSW tests for both x86_64 and aarch64 passed now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:11,testability,test,tests,11,"FYI, CMSSW tests for both x86_64 and aarch64 passed now",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:52,energy efficiency,core,core,52,Thanks a lot @smuzaffar for the support you and the core team provided to this endeavor.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:57,security,team,team,57,Thanks a lot @smuzaffar for the support you and the core team provided to this endeavor.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15696:32,usability,support,support,32,Thanks a lot @smuzaffar for the support you and the core team provided to this endeavor.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15696
https://github.com/root-project/root/pull/15697:16,deployability,build,builds,16,I restarted the builds @guitargeek . Also for me the PR can be merged once those are successful.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15697
https://github.com/root-project/root/pull/15698:116,availability,cluster,cluster,116,"> If possible, I think we should add a test where the inspector opens an ntuple with deferred columns in the second cluster. Yes, my plan was to address the inspector (+ tests) in a separate PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15698
https://github.com/root-project/root/pull/15698:116,deployability,cluster,cluster,116,"> If possible, I think we should add a test where the inspector opens an ntuple with deferred columns in the second cluster. Yes, my plan was to address the inspector (+ tests) in a separate PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15698
https://github.com/root-project/root/pull/15698:39,safety,test,test,39,"> If possible, I think we should add a test where the inspector opens an ntuple with deferred columns in the second cluster. Yes, my plan was to address the inspector (+ tests) in a separate PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15698
https://github.com/root-project/root/pull/15698:170,safety,test,tests,170,"> If possible, I think we should add a test where the inspector opens an ntuple with deferred columns in the second cluster. Yes, my plan was to address the inspector (+ tests) in a separate PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15698
https://github.com/root-project/root/pull/15698:39,testability,test,test,39,"> If possible, I think we should add a test where the inspector opens an ntuple with deferred columns in the second cluster. Yes, my plan was to address the inspector (+ tests) in a separate PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15698
https://github.com/root-project/root/pull/15698:133,testability,plan,plan,133,"> If possible, I think we should add a test where the inspector opens an ntuple with deferred columns in the second cluster. Yes, my plan was to address the inspector (+ tests) in a separate PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15698
https://github.com/root-project/root/pull/15698:170,testability,test,tests,170,"> If possible, I think we should add a test where the inspector opens an ntuple with deferred columns in the second cluster. Yes, my plan was to address the inspector (+ tests) in a separate PR!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15698
https://github.com/root-project/root/issues/15703:216,energy efficiency,load,loading,216,"> It seems to be reproducible via vanilla cppyy as shown below. . The example above isn't a proper leak check b/c the `range()` call will have Python cache integers, the first `obj.leak` call will compile a wrapper (loading all kinds of stuff the first time around) etc. Below is an actual test, which doesn't leak on ""vanilla cppyy"" although it may still be on the one included in ROOT as there are differences:. ```. import cppyy, gc, os, psutil. cppyy.cppdef("""""". #include <string>. class foo {. public:. const std::string leak (std::size_t size) const {. std::string result;. result.reserve(size);. return result;. }. };. """"""). process = psutil.Process(os.getpid()). # warmup. obj = cppyy.gbl.foo(). for i in range(1000000):. s = obj.leak(2048). gc.collect(). last = process.memory_info().rss. for i in range(1000000):. s = obj.leak(2048). gc.collect(). assert last == process.memory_info().rss. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:207,integrability,wrap,wrapper,207,"> It seems to be reproducible via vanilla cppyy as shown below. . The example above isn't a proper leak check b/c the `range()` call will have Python cache integers, the first `obj.leak` call will compile a wrapper (loading all kinds of stuff the first time around) etc. Below is an actual test, which doesn't leak on ""vanilla cppyy"" although it may still be on the one included in ROOT as there are differences:. ```. import cppyy, gc, os, psutil. cppyy.cppdef("""""". #include <string>. class foo {. public:. const std::string leak (std::size_t size) const {. std::string result;. result.reserve(size);. return result;. }. };. """"""). process = psutil.Process(os.getpid()). # warmup. obj = cppyy.gbl.foo(). for i in range(1000000):. s = obj.leak(2048). gc.collect(). last = process.memory_info().rss. for i in range(1000000):. s = obj.leak(2048). gc.collect(). assert last == process.memory_info().rss. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:499,integrability,pub,public,499,"> It seems to be reproducible via vanilla cppyy as shown below. . The example above isn't a proper leak check b/c the `range()` call will have Python cache integers, the first `obj.leak` call will compile a wrapper (loading all kinds of stuff the first time around) etc. Below is an actual test, which doesn't leak on ""vanilla cppyy"" although it may still be on the one included in ROOT as there are differences:. ```. import cppyy, gc, os, psutil. cppyy.cppdef("""""". #include <string>. class foo {. public:. const std::string leak (std::size_t size) const {. std::string result;. result.reserve(size);. return result;. }. };. """"""). process = psutil.Process(os.getpid()). # warmup. obj = cppyy.gbl.foo(). for i in range(1000000):. s = obj.leak(2048). gc.collect(). last = process.memory_info().rss. for i in range(1000000):. s = obj.leak(2048). gc.collect(). assert last == process.memory_info().rss. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:207,interoperability,wrapper,wrapper,207,"> It seems to be reproducible via vanilla cppyy as shown below. . The example above isn't a proper leak check b/c the `range()` call will have Python cache integers, the first `obj.leak` call will compile a wrapper (loading all kinds of stuff the first time around) etc. Below is an actual test, which doesn't leak on ""vanilla cppyy"" although it may still be on the one included in ROOT as there are differences:. ```. import cppyy, gc, os, psutil. cppyy.cppdef("""""". #include <string>. class foo {. public:. const std::string leak (std::size_t size) const {. std::string result;. result.reserve(size);. return result;. }. };. """"""). process = psutil.Process(os.getpid()). # warmup. obj = cppyy.gbl.foo(). for i in range(1000000):. s = obj.leak(2048). gc.collect(). last = process.memory_info().rss. for i in range(1000000):. s = obj.leak(2048). gc.collect(). assert last == process.memory_info().rss. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:150,performance,cach,cache,150,"> It seems to be reproducible via vanilla cppyy as shown below. . The example above isn't a proper leak check b/c the `range()` call will have Python cache integers, the first `obj.leak` call will compile a wrapper (loading all kinds of stuff the first time around) etc. Below is an actual test, which doesn't leak on ""vanilla cppyy"" although it may still be on the one included in ROOT as there are differences:. ```. import cppyy, gc, os, psutil. cppyy.cppdef("""""". #include <string>. class foo {. public:. const std::string leak (std::size_t size) const {. std::string result;. result.reserve(size);. return result;. }. };. """"""). process = psutil.Process(os.getpid()). # warmup. obj = cppyy.gbl.foo(). for i in range(1000000):. s = obj.leak(2048). gc.collect(). last = process.memory_info().rss. for i in range(1000000):. s = obj.leak(2048). gc.collect(). assert last == process.memory_info().rss. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:216,performance,load,loading,216,"> It seems to be reproducible via vanilla cppyy as shown below. . The example above isn't a proper leak check b/c the `range()` call will have Python cache integers, the first `obj.leak` call will compile a wrapper (loading all kinds of stuff the first time around) etc. Below is an actual test, which doesn't leak on ""vanilla cppyy"" although it may still be on the one included in ROOT as there are differences:. ```. import cppyy, gc, os, psutil. cppyy.cppdef("""""". #include <string>. class foo {. public:. const std::string leak (std::size_t size) const {. std::string result;. result.reserve(size);. return result;. }. };. """"""). process = psutil.Process(os.getpid()). # warmup. obj = cppyy.gbl.foo(). for i in range(1000000):. s = obj.leak(2048). gc.collect(). last = process.memory_info().rss. for i in range(1000000):. s = obj.leak(2048). gc.collect(). assert last == process.memory_info().rss. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:253,performance,time,time,253,"> It seems to be reproducible via vanilla cppyy as shown below. . The example above isn't a proper leak check b/c the `range()` call will have Python cache integers, the first `obj.leak` call will compile a wrapper (loading all kinds of stuff the first time around) etc. Below is an actual test, which doesn't leak on ""vanilla cppyy"" although it may still be on the one included in ROOT as there are differences:. ```. import cppyy, gc, os, psutil. cppyy.cppdef("""""". #include <string>. class foo {. public:. const std::string leak (std::size_t size) const {. std::string result;. result.reserve(size);. return result;. }. };. """"""). process = psutil.Process(os.getpid()). # warmup. obj = cppyy.gbl.foo(). for i in range(1000000):. s = obj.leak(2048). gc.collect(). last = process.memory_info().rss. for i in range(1000000):. s = obj.leak(2048). gc.collect(). assert last == process.memory_info().rss. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:302,reliability,doe,doesn,302,"> It seems to be reproducible via vanilla cppyy as shown below. . The example above isn't a proper leak check b/c the `range()` call will have Python cache integers, the first `obj.leak` call will compile a wrapper (loading all kinds of stuff the first time around) etc. Below is an actual test, which doesn't leak on ""vanilla cppyy"" although it may still be on the one included in ROOT as there are differences:. ```. import cppyy, gc, os, psutil. cppyy.cppdef("""""". #include <string>. class foo {. public:. const std::string leak (std::size_t size) const {. std::string result;. result.reserve(size);. return result;. }. };. """"""). process = psutil.Process(os.getpid()). # warmup. obj = cppyy.gbl.foo(). for i in range(1000000):. s = obj.leak(2048). gc.collect(). last = process.memory_info().rss. for i in range(1000000):. s = obj.leak(2048). gc.collect(). assert last == process.memory_info().rss. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:290,safety,test,test,290,"> It seems to be reproducible via vanilla cppyy as shown below. . The example above isn't a proper leak check b/c the `range()` call will have Python cache integers, the first `obj.leak` call will compile a wrapper (loading all kinds of stuff the first time around) etc. Below is an actual test, which doesn't leak on ""vanilla cppyy"" although it may still be on the one included in ROOT as there are differences:. ```. import cppyy, gc, os, psutil. cppyy.cppdef("""""". #include <string>. class foo {. public:. const std::string leak (std::size_t size) const {. std::string result;. result.reserve(size);. return result;. }. };. """"""). process = psutil.Process(os.getpid()). # warmup. obj = cppyy.gbl.foo(). for i in range(1000000):. s = obj.leak(2048). gc.collect(). last = process.memory_info().rss. for i in range(1000000):. s = obj.leak(2048). gc.collect(). assert last == process.memory_info().rss. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:290,testability,test,test,290,"> It seems to be reproducible via vanilla cppyy as shown below. . The example above isn't a proper leak check b/c the `range()` call will have Python cache integers, the first `obj.leak` call will compile a wrapper (loading all kinds of stuff the first time around) etc. Below is an actual test, which doesn't leak on ""vanilla cppyy"" although it may still be on the one included in ROOT as there are differences:. ```. import cppyy, gc, os, psutil. cppyy.cppdef("""""". #include <string>. class foo {. public:. const std::string leak (std::size_t size) const {. std::string result;. result.reserve(size);. return result;. }. };. """"""). process = psutil.Process(os.getpid()). # warmup. obj = cppyy.gbl.foo(). for i in range(1000000):. s = obj.leak(2048). gc.collect(). last = process.memory_info().rss. for i in range(1000000):. s = obj.leak(2048). gc.collect(). assert last == process.memory_info().rss. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:858,testability,assert,assert,858,"> It seems to be reproducible via vanilla cppyy as shown below. . The example above isn't a proper leak check b/c the `range()` call will have Python cache integers, the first `obj.leak` call will compile a wrapper (loading all kinds of stuff the first time around) etc. Below is an actual test, which doesn't leak on ""vanilla cppyy"" although it may still be on the one included in ROOT as there are differences:. ```. import cppyy, gc, os, psutil. cppyy.cppdef("""""". #include <string>. class foo {. public:. const std::string leak (std::size_t size) const {. std::string result;. result.reserve(size);. return result;. }. };. """"""). process = psutil.Process(os.getpid()). # warmup. obj = cppyy.gbl.foo(). for i in range(1000000):. s = obj.leak(2048). gc.collect(). last = process.memory_info().rss. for i in range(1000000):. s = obj.leak(2048). gc.collect(). assert last == process.memory_info().rss. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:130,deployability,fail,fails,130,"Thanks a lot @wlav. I really meant the `cppyy` included in ROOT. Running your example against `tags/v6-28-12`, the last assertion fails, where the `last` RSS reads `2.39 GB` and the `current` reads `4.31 GB`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:183,energy efficiency,current,current,183,"Thanks a lot @wlav. I really meant the `cppyy` included in ROOT. Running your example against `tags/v6-28-12`, the last assertion fails, where the `last` RSS reads `2.39 GB` and the `current` reads `4.31 GB`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:130,reliability,fail,fails,130,"Thanks a lot @wlav. I really meant the `cppyy` included in ROOT. Running your example against `tags/v6-28-12`, the last assertion fails, where the `last` RSS reads `2.39 GB` and the `current` reads `4.31 GB`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:120,testability,assert,assertion,120,"Thanks a lot @wlav. I really meant the `cppyy` included in ROOT. Running your example against `tags/v6-28-12`, the last assertion fails, where the `last` RSS reads `2.39 GB` and the `current` reads `4.31 GB`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:51,performance,memor,memory,51,"Yes, that's real, alright: I'll add that the total memory usage I see for cppyy proper is around ~120MB on Mac and ~168MB on Linux (>98% of which is startup of Python and Cling), so those numbers being in GBs definitely indicates a problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:51,usability,memor,memory,51,"Yes, that's real, alright: I'll add that the total memory usage I see for cppyy proper is around ~120MB on Mac and ~168MB on Linux (>98% of which is startup of Python and Cling), so those numbers being in GBs definitely indicates a problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/issues/15703:220,usability,indicat,indicates,220,"Yes, that's real, alright: I'll add that the total memory usage I see for cppyy proper is around ~120MB on Mac and ~168MB on Linux (>98% of which is startup of Python and Cling), so those numbers being in GBs definitely indicates a problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15703
https://github.com/root-project/root/pull/15705:16,interoperability,conflict,conflicts,16,@alja there are conflicts in your changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15705
https://github.com/root-project/root/pull/15708:12,availability,redund,redundant,12,"I think was redundant, since no class had a `ClassDef` version >= 1. So there was no IO possible anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15708
https://github.com/root-project/root/pull/15708:12,deployability,redundan,redundant,12,"I think was redundant, since no class had a `ClassDef` version >= 1. So there was no IO possible anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15708
https://github.com/root-project/root/pull/15708:55,deployability,version,version,55,"I think was redundant, since no class had a `ClassDef` version >= 1. So there was no IO possible anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15708
https://github.com/root-project/root/pull/15708:55,integrability,version,version,55,"I think was redundant, since no class had a `ClassDef` version >= 1. So there was no IO possible anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15708
https://github.com/root-project/root/pull/15708:55,modifiability,version,version,55,"I think was redundant, since no class had a `ClassDef` version >= 1. So there was no IO possible anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15708
https://github.com/root-project/root/pull/15708:12,reliability,redundan,redundant,12,"I think was redundant, since no class had a `ClassDef` version >= 1. So there was no IO possible anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15708
https://github.com/root-project/root/pull/15708:12,safety,redund,redundant,12,"I think was redundant, since no class had a `ClassDef` version >= 1. So there was no IO possible anyway",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15708
https://github.com/root-project/root/issues/15723:44,safety,compl,complaining,44,"No, you misunderstood the problem! I am not complaining because of the missing splash screen. This is only the symptom with an easily to reproduce command. The problem is, that any graphics (histograms, plots etc. at the end of a long rot analysis simply do not show up when you forgot to issue the xhost + (using snap and wayland). And this is really annoying.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:44,security,compl,complaining,44,"No, you misunderstood the problem! I am not complaining because of the missing splash screen. This is only the symptom with an easily to reproduce command. The problem is, that any graphics (histograms, plots etc. at the end of a long rot analysis simply do not show up when you forgot to issue the xhost + (using snap and wayland). And this is really annoying.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:248,testability,simpl,simply,248,"No, you misunderstood the problem! I am not complaining because of the missing splash screen. This is only the symptom with an easily to reproduce command. The problem is, that any graphics (histograms, plots etc. at the end of a long rot analysis simply do not show up when you forgot to issue the xhost + (using snap and wayland). And this is really annoying.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:147,usability,command,command,147,"No, you misunderstood the problem! I am not complaining because of the missing splash screen. This is only the symptom with an easily to reproduce command. The problem is, that any graphics (histograms, plots etc. at the end of a long rot analysis simply do not show up when you forgot to issue the xhost + (using snap and wayland). And this is really annoying.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:248,usability,simpl,simply,248,"No, you misunderstood the problem! I am not complaining because of the missing splash screen. This is only the symptom with an easily to reproduce command. The problem is, that any graphics (histograms, plots etc. at the end of a long rot analysis simply do not show up when you forgot to issue the xhost + (using snap and wayland). And this is really annoying.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:357,deployability,stack,stack,357,"Hi, thanks for your comment! I didn't misunderstand the problem, I just made a fly-by comment about the obvious point before coming back it. Sorry for that! I was abusing your post to lobby for the removal of the splash screen that I proposed. The ROOT developers were anticipating this situation and developed a new platform-independent web-based graphics stack, which will replace the default way of how plots and histograms are shown. I don't think it is enabled by default in any ROOT release yet, but it would be very interesting to know if it works also in the context of the root-framework snap! Have you tried with ROOT `master`, where the web graphics is the default? @linev, what would be your recommendation? Maybe we can make web graphics the default for wayland?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:489,deployability,releas,release,489,"Hi, thanks for your comment! I didn't misunderstand the problem, I just made a fly-by comment about the obvious point before coming back it. Sorry for that! I was abusing your post to lobby for the removal of the splash screen that I proposed. The ROOT developers were anticipating this situation and developed a new platform-independent web-based graphics stack, which will replace the default way of how plots and histograms are shown. I don't think it is enabled by default in any ROOT release yet, but it would be very interesting to know if it works also in the context of the root-framework snap! Have you tried with ROOT `master`, where the web graphics is the default? @linev, what would be your recommendation? Maybe we can make web graphics the default for wayland?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:317,interoperability,platform,platform-independent,317,"Hi, thanks for your comment! I didn't misunderstand the problem, I just made a fly-by comment about the obvious point before coming back it. Sorry for that! I was abusing your post to lobby for the removal of the splash screen that I proposed. The ROOT developers were anticipating this situation and developed a new platform-independent web-based graphics stack, which will replace the default way of how plots and histograms are shown. I don't think it is enabled by default in any ROOT release yet, but it would be very interesting to know if it works also in the context of the root-framework snap! Have you tried with ROOT `master`, where the web graphics is the default? @linev, what would be your recommendation? Maybe we can make web graphics the default for wayland?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:567,testability,context,context,567,"Hi, thanks for your comment! I didn't misunderstand the problem, I just made a fly-by comment about the obvious point before coming back it. Sorry for that! I was abusing your post to lobby for the removal of the splash screen that I proposed. The ROOT developers were anticipating this situation and developed a new platform-independent web-based graphics stack, which will replace the default way of how plots and histograms are shown. I don't think it is enabled by default in any ROOT release yet, but it would be very interesting to know if it works also in the context of the root-framework snap! Have you tried with ROOT `master`, where the web graphics is the default? @linev, what would be your recommendation? Maybe we can make web graphics the default for wayland?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:98,deployability,version,version,98,"Hi @wofr06 ,. Thanks for reporting this and for mentioning the `xhost` workaround. As said above, version 6.32.00 provide as an opt-in a novel version of the graphics and GUIs, based on web browsers for the rendering. While the `TBrowser` visualisation is to be considered basically production-level, the new web-based graphics still misses some functionality - however, it is quite advanced and could be indeed a solution for you. . In order to activate it you can:. - start ROOT with the `root --web` command. - invoke programmatically `gROOT->SetWebDisplay()` at the startup of your program. - add the line `Canvas.Name: TWebCanvas` to the `.rootrc` file (which can be in your home directory, a bit like `.bashrc` or similar). ROOT also has a new `TBrowser`, as mentioned above, `ROOT::RBrowser` which is web based. In case you are interested to try, we are very interested in your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:143,deployability,version,version,143,"Hi @wofr06 ,. Thanks for reporting this and for mentioning the `xhost` workaround. As said above, version 6.32.00 provide as an opt-in a novel version of the graphics and GUIs, based on web browsers for the rendering. While the `TBrowser` visualisation is to be considered basically production-level, the new web-based graphics still misses some functionality - however, it is quite advanced and could be indeed a solution for you. . In order to activate it you can:. - start ROOT with the `root --web` command. - invoke programmatically `gROOT->SetWebDisplay()` at the startup of your program. - add the line `Canvas.Name: TWebCanvas` to the `.rootrc` file (which can be in your home directory, a bit like `.bashrc` or similar). ROOT also has a new `TBrowser`, as mentioned above, `ROOT::RBrowser` which is web based. In case you are interested to try, we are very interested in your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:98,integrability,version,version,98,"Hi @wofr06 ,. Thanks for reporting this and for mentioning the `xhost` workaround. As said above, version 6.32.00 provide as an opt-in a novel version of the graphics and GUIs, based on web browsers for the rendering. While the `TBrowser` visualisation is to be considered basically production-level, the new web-based graphics still misses some functionality - however, it is quite advanced and could be indeed a solution for you. . In order to activate it you can:. - start ROOT with the `root --web` command. - invoke programmatically `gROOT->SetWebDisplay()` at the startup of your program. - add the line `Canvas.Name: TWebCanvas` to the `.rootrc` file (which can be in your home directory, a bit like `.bashrc` or similar). ROOT also has a new `TBrowser`, as mentioned above, `ROOT::RBrowser` which is web based. In case you are interested to try, we are very interested in your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:143,integrability,version,version,143,"Hi @wofr06 ,. Thanks for reporting this and for mentioning the `xhost` workaround. As said above, version 6.32.00 provide as an opt-in a novel version of the graphics and GUIs, based on web browsers for the rendering. While the `TBrowser` visualisation is to be considered basically production-level, the new web-based graphics still misses some functionality - however, it is quite advanced and could be indeed a solution for you. . In order to activate it you can:. - start ROOT with the `root --web` command. - invoke programmatically `gROOT->SetWebDisplay()` at the startup of your program. - add the line `Canvas.Name: TWebCanvas` to the `.rootrc` file (which can be in your home directory, a bit like `.bashrc` or similar). ROOT also has a new `TBrowser`, as mentioned above, `ROOT::RBrowser` which is web based. In case you are interested to try, we are very interested in your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:98,modifiability,version,version,98,"Hi @wofr06 ,. Thanks for reporting this and for mentioning the `xhost` workaround. As said above, version 6.32.00 provide as an opt-in a novel version of the graphics and GUIs, based on web browsers for the rendering. While the `TBrowser` visualisation is to be considered basically production-level, the new web-based graphics still misses some functionality - however, it is quite advanced and could be indeed a solution for you. . In order to activate it you can:. - start ROOT with the `root --web` command. - invoke programmatically `gROOT->SetWebDisplay()` at the startup of your program. - add the line `Canvas.Name: TWebCanvas` to the `.rootrc` file (which can be in your home directory, a bit like `.bashrc` or similar). ROOT also has a new `TBrowser`, as mentioned above, `ROOT::RBrowser` which is web based. In case you are interested to try, we are very interested in your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:143,modifiability,version,version,143,"Hi @wofr06 ,. Thanks for reporting this and for mentioning the `xhost` workaround. As said above, version 6.32.00 provide as an opt-in a novel version of the graphics and GUIs, based on web browsers for the rendering. While the `TBrowser` visualisation is to be considered basically production-level, the new web-based graphics still misses some functionality - however, it is quite advanced and could be indeed a solution for you. . In order to activate it you can:. - start ROOT with the `root --web` command. - invoke programmatically `gROOT->SetWebDisplay()` at the startup of your program. - add the line `Canvas.Name: TWebCanvas` to the `.rootrc` file (which can be in your home directory, a bit like `.bashrc` or similar). ROOT also has a new `TBrowser`, as mentioned above, `ROOT::RBrowser` which is web based. In case you are interested to try, we are very interested in your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:239,usability,visual,visualisation,239,"Hi @wofr06 ,. Thanks for reporting this and for mentioning the `xhost` workaround. As said above, version 6.32.00 provide as an opt-in a novel version of the graphics and GUIs, based on web browsers for the rendering. While the `TBrowser` visualisation is to be considered basically production-level, the new web-based graphics still misses some functionality - however, it is quite advanced and could be indeed a solution for you. . In order to activate it you can:. - start ROOT with the `root --web` command. - invoke programmatically `gROOT->SetWebDisplay()` at the startup of your program. - add the line `Canvas.Name: TWebCanvas` to the `.rootrc` file (which can be in your home directory, a bit like `.bashrc` or similar). ROOT also has a new `TBrowser`, as mentioned above, `ROOT::RBrowser` which is web based. In case you are interested to try, we are very interested in your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:503,usability,command,command,503,"Hi @wofr06 ,. Thanks for reporting this and for mentioning the `xhost` workaround. As said above, version 6.32.00 provide as an opt-in a novel version of the graphics and GUIs, based on web browsers for the rendering. While the `TBrowser` visualisation is to be considered basically production-level, the new web-based graphics still misses some functionality - however, it is quite advanced and could be indeed a solution for you. . In order to activate it you can:. - start ROOT with the `root --web` command. - invoke programmatically `gROOT->SetWebDisplay()` at the startup of your program. - add the line `Canvas.Name: TWebCanvas` to the `.rootrc` file (which can be in your home directory, a bit like `.bashrc` or similar). ROOT also has a new `TBrowser`, as mentioned above, `ROOT::RBrowser` which is web based. In case you are interested to try, we are very interested in your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:885,usability,feedback,feedback,885,"Hi @wofr06 ,. Thanks for reporting this and for mentioning the `xhost` workaround. As said above, version 6.32.00 provide as an opt-in a novel version of the graphics and GUIs, based on web browsers for the rendering. While the `TBrowser` visualisation is to be considered basically production-level, the new web-based graphics still misses some functionality - however, it is quite advanced and could be indeed a solution for you. . In order to activate it you can:. - start ROOT with the `root --web` command. - invoke programmatically `gROOT->SetWebDisplay()` at the startup of your program. - add the line `Canvas.Name: TWebCanvas` to the `.rootrc` file (which can be in your home directory, a bit like `.bashrc` or similar). ROOT also has a new `TBrowser`, as mentioned above, `ROOT::RBrowser` which is web based. In case you are interested to try, we are very interested in your feedback!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:167,deployability,releas,release,167,> Maybe we can make web graphics the default for wayland? Do we have method to detect `wayland`? . In general our plans to make web gui default starting from the next release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:79,safety,detect,detect,79,> Maybe we can make web graphics the default for wayland? Do we have method to detect `wayland`? . In general our plans to make web gui default starting from the next release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:79,security,detect,detect,79,> Maybe we can make web graphics the default for wayland? Do we have method to detect `wayland`? . In general our plans to make web gui default starting from the next release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:114,testability,plan,plans,114,> Maybe we can make web graphics the default for wayland? Do we have method to detect `wayland`? . In general our plans to make web gui default starting from the next release.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:297,deployability,instal,installation,297,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:574,deployability,build,building,574,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:622,deployability,build,build,622,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:268,energy efficiency,current,current,268,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:108,integrability,protocol,protocol,108,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:108,interoperability,protocol,protocol,108,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:117,interoperability,specif,specified,117,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:325,interoperability,plug,plugs,325,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:461,interoperability,share,shared-memory,461,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:555,interoperability,plug,plugs,555,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:349,performance,network,network,349,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:468,performance,memor,memory,468,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:24,reliability,doe,does,24,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:63,security,Authoriz,Authorization,63,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:94,security,authoriz,authorization,94,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:349,security,network,network,349,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:33,usability,help,help,33,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:468,usability,memor,memory,468,"The proposed root --web does not help, I am getting as before. Authorization required, but no authorization protocol specified. when using the snap. I am not sure but it looks as if there is missing just one line in the snap.yaml.It is located in /snap/root-framework/current/meta/snap.yaml after installation. Instead of. > plugs:. > home: null. > network: null. > opengl: null. > x11: null. > desktop: null. > desktop-legacy: null. > removable-media: null. > shared-memory:. > private: true. > layout:. you probably have to add . > wayland:null. in the plugs section when building the snap. But I am not sure, as I dont build snaps myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:68,integrability,messag,message,68,You can try `root --web=server:7788`. . Then try to create canvas - message should appear with URL which can be copied in the web browser. Do not use `-a` flag - it still requires normal X11.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15723:68,interoperability,messag,message,68,You can try `root --web=server:7788`. . Then try to create canvas - message should appear with URL which can be copied in the web browser. Do not use `-a` flag - it still requires normal X11.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15723
https://github.com/root-project/root/issues/15727:191,availability,restor,restore,191,"The following mitigation works in my code:. ```cmake. # Find and configure ROOT. if(MSVC). # ROOT appears to mess up values of cmake variables, here we save their values so that we can later restore them. set(TL_SAVED_FIND_LIBRARY_PREFIXES ${CMAKE_FIND_LIBRARY_PREFIXES}). set(TL_SAVED_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES}). endif(). find_package(. ROOT 6. CONFIG. REQUIRED. COMPONENTS Core RIO Thread. ). if(MSVC). # ...and here we put them back. set(CMAKE_FIND_LIBRARY_PREFIXES ${TL_SAVED_FIND_LIBRARY_PREFIXES}). set(CMAKE_FIND_LIBRARY_SUFFIXES ${TL_SAVED_FIND_LIBRARY_SUFFIXES}). endif(). ```. However, it would be super nice if `ROOTConfig.cmake` did this for us, since it changes cmake environment in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:402,energy efficiency,Core,Core,402,"The following mitigation works in my code:. ```cmake. # Find and configure ROOT. if(MSVC). # ROOT appears to mess up values of cmake variables, here we save their values so that we can later restore them. set(TL_SAVED_FIND_LIBRARY_PREFIXES ${CMAKE_FIND_LIBRARY_PREFIXES}). set(TL_SAVED_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES}). endif(). find_package(. ROOT 6. CONFIG. REQUIRED. COMPONENTS Core RIO Thread. ). if(MSVC). # ...and here we put them back. set(CMAKE_FIND_LIBRARY_PREFIXES ${TL_SAVED_FIND_LIBRARY_PREFIXES}). set(CMAKE_FIND_LIBRARY_SUFFIXES ${TL_SAVED_FIND_LIBRARY_SUFFIXES}). endif(). ```. However, it would be super nice if `ROOTConfig.cmake` did this for us, since it changes cmake environment in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:65,integrability,configur,configure,65,"The following mitigation works in my code:. ```cmake. # Find and configure ROOT. if(MSVC). # ROOT appears to mess up values of cmake variables, here we save their values so that we can later restore them. set(TL_SAVED_FIND_LIBRARY_PREFIXES ${CMAKE_FIND_LIBRARY_PREFIXES}). set(TL_SAVED_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES}). endif(). find_package(. ROOT 6. CONFIG. REQUIRED. COMPONENTS Core RIO Thread. ). if(MSVC). # ...and here we put them back. set(CMAKE_FIND_LIBRARY_PREFIXES ${TL_SAVED_FIND_LIBRARY_PREFIXES}). set(CMAKE_FIND_LIBRARY_SUFFIXES ${TL_SAVED_FIND_LIBRARY_SUFFIXES}). endif(). ```. However, it would be super nice if `ROOTConfig.cmake` did this for us, since it changes cmake environment in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:391,integrability,COMPON,COMPONENTS,391,"The following mitigation works in my code:. ```cmake. # Find and configure ROOT. if(MSVC). # ROOT appears to mess up values of cmake variables, here we save their values so that we can later restore them. set(TL_SAVED_FIND_LIBRARY_PREFIXES ${CMAKE_FIND_LIBRARY_PREFIXES}). set(TL_SAVED_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES}). endif(). find_package(. ROOT 6. CONFIG. REQUIRED. COMPONENTS Core RIO Thread. ). if(MSVC). # ...and here we put them back. set(CMAKE_FIND_LIBRARY_PREFIXES ${TL_SAVED_FIND_LIBRARY_PREFIXES}). set(CMAKE_FIND_LIBRARY_SUFFIXES ${TL_SAVED_FIND_LIBRARY_SUFFIXES}). endif(). ```. However, it would be super nice if `ROOTConfig.cmake` did this for us, since it changes cmake environment in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:391,interoperability,COMPON,COMPONENTS,391,"The following mitigation works in my code:. ```cmake. # Find and configure ROOT. if(MSVC). # ROOT appears to mess up values of cmake variables, here we save their values so that we can later restore them. set(TL_SAVED_FIND_LIBRARY_PREFIXES ${CMAKE_FIND_LIBRARY_PREFIXES}). set(TL_SAVED_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES}). endif(). find_package(. ROOT 6. CONFIG. REQUIRED. COMPONENTS Core RIO Thread. ). if(MSVC). # ...and here we put them back. set(CMAKE_FIND_LIBRARY_PREFIXES ${TL_SAVED_FIND_LIBRARY_PREFIXES}). set(CMAKE_FIND_LIBRARY_SUFFIXES ${TL_SAVED_FIND_LIBRARY_SUFFIXES}). endif(). ```. However, it would be super nice if `ROOTConfig.cmake` did this for us, since it changes cmake environment in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:65,modifiability,configur,configure,65,"The following mitigation works in my code:. ```cmake. # Find and configure ROOT. if(MSVC). # ROOT appears to mess up values of cmake variables, here we save their values so that we can later restore them. set(TL_SAVED_FIND_LIBRARY_PREFIXES ${CMAKE_FIND_LIBRARY_PREFIXES}). set(TL_SAVED_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES}). endif(). find_package(. ROOT 6. CONFIG. REQUIRED. COMPONENTS Core RIO Thread. ). if(MSVC). # ...and here we put them back. set(CMAKE_FIND_LIBRARY_PREFIXES ${TL_SAVED_FIND_LIBRARY_PREFIXES}). set(CMAKE_FIND_LIBRARY_SUFFIXES ${TL_SAVED_FIND_LIBRARY_SUFFIXES}). endif(). ```. However, it would be super nice if `ROOTConfig.cmake` did this for us, since it changes cmake environment in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:133,modifiability,variab,variables,133,"The following mitigation works in my code:. ```cmake. # Find and configure ROOT. if(MSVC). # ROOT appears to mess up values of cmake variables, here we save their values so that we can later restore them. set(TL_SAVED_FIND_LIBRARY_PREFIXES ${CMAKE_FIND_LIBRARY_PREFIXES}). set(TL_SAVED_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES}). endif(). find_package(. ROOT 6. CONFIG. REQUIRED. COMPONENTS Core RIO Thread. ). if(MSVC). # ...and here we put them back. set(CMAKE_FIND_LIBRARY_PREFIXES ${TL_SAVED_FIND_LIBRARY_PREFIXES}). set(CMAKE_FIND_LIBRARY_SUFFIXES ${TL_SAVED_FIND_LIBRARY_SUFFIXES}). endif(). ```. However, it would be super nice if `ROOTConfig.cmake` did this for us, since it changes cmake environment in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:391,modifiability,COMPON,COMPONENTS,391,"The following mitigation works in my code:. ```cmake. # Find and configure ROOT. if(MSVC). # ROOT appears to mess up values of cmake variables, here we save their values so that we can later restore them. set(TL_SAVED_FIND_LIBRARY_PREFIXES ${CMAKE_FIND_LIBRARY_PREFIXES}). set(TL_SAVED_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES}). endif(). find_package(. ROOT 6. CONFIG. REQUIRED. COMPONENTS Core RIO Thread. ). if(MSVC). # ...and here we put them back. set(CMAKE_FIND_LIBRARY_PREFIXES ${TL_SAVED_FIND_LIBRARY_PREFIXES}). set(CMAKE_FIND_LIBRARY_SUFFIXES ${TL_SAVED_FIND_LIBRARY_SUFFIXES}). endif(). ```. However, it would be super nice if `ROOTConfig.cmake` did this for us, since it changes cmake environment in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:191,reliability,restor,restore,191,"The following mitigation works in my code:. ```cmake. # Find and configure ROOT. if(MSVC). # ROOT appears to mess up values of cmake variables, here we save their values so that we can later restore them. set(TL_SAVED_FIND_LIBRARY_PREFIXES ${CMAKE_FIND_LIBRARY_PREFIXES}). set(TL_SAVED_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES}). endif(). find_package(. ROOT 6. CONFIG. REQUIRED. COMPONENTS Core RIO Thread. ). if(MSVC). # ...and here we put them back. set(CMAKE_FIND_LIBRARY_PREFIXES ${TL_SAVED_FIND_LIBRARY_PREFIXES}). set(CMAKE_FIND_LIBRARY_SUFFIXES ${TL_SAVED_FIND_LIBRARY_SUFFIXES}). endif(). ```. However, it would be super nice if `ROOTConfig.cmake` did this for us, since it changes cmake environment in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/issues/15727:65,security,configur,configure,65,"The following mitigation works in my code:. ```cmake. # Find and configure ROOT. if(MSVC). # ROOT appears to mess up values of cmake variables, here we save their values so that we can later restore them. set(TL_SAVED_FIND_LIBRARY_PREFIXES ${CMAKE_FIND_LIBRARY_PREFIXES}). set(TL_SAVED_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES}). endif(). find_package(. ROOT 6. CONFIG. REQUIRED. COMPONENTS Core RIO Thread. ). if(MSVC). # ...and here we put them back. set(CMAKE_FIND_LIBRARY_PREFIXES ${TL_SAVED_FIND_LIBRARY_PREFIXES}). set(CMAKE_FIND_LIBRARY_SUFFIXES ${TL_SAVED_FIND_LIBRARY_SUFFIXES}). endif(). ```. However, it would be super nice if `ROOTConfig.cmake` did this for us, since it changes cmake environment in the first place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15727
https://github.com/root-project/root/pull/15728:45,interoperability,conflict,conflicts,45,@dpiparo This is a redo of #15705 due to git conflicts.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15728
https://github.com/root-project/root/pull/15731:44,interoperability,conflict,conflicts,44,"Thanks! LGTM, but it seems there's some git conflicts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15731
https://github.com/root-project/root/pull/15733:121,testability,understand,understand,121,"Wait, this should have been fixed by https://github.com/root-project/root/pull/13900. If that's not the case, we need to understand why. FYI @pcanal .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:130,deployability,patch,patch,130,"From a practical point of view for RooFit, the fact that the problem is not understood should not block this PR to enter the next patch release, unless the underlying problem is fixed in the meantime. I'll try to create an easy reproducer and open a GitHub issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:136,deployability,releas,release,136,"From a practical point of view for RooFit, the fact that the problem is not understood should not block this PR to enter the next patch release, unless the underlying problem is fixed in the meantime. I'll try to create an easy reproducer and open a GitHub issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:7,reliability,pra,practical,7,"From a practical point of view for RooFit, the fact that the problem is not understood should not block this PR to enter the next patch release, unless the underlying problem is fixed in the meantime. I'll try to create an easy reproducer and open a GitHub issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:130,safety,patch,patch,130,"From a practical point of view for RooFit, the fact that the problem is not understood should not block this PR to enter the next patch release, unless the underlying problem is fixed in the meantime. I'll try to create an easy reproducer and open a GitHub issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:130,security,patch,patch,130,"From a practical point of view for RooFit, the fact that the problem is not understood should not block this PR to enter the next patch release, unless the underlying problem is fixed in the meantime. I'll try to create an easy reproducer and open a GitHub issue!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:32,availability,error,errors,32,"> Harmless change to circumvent errors like these when building RooFit standalone:. Can you remind me how to reproduce this (as you saw it, no need to reduce)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:55,deployability,build,building,55,"> Harmless change to circumvent errors like these when building RooFit standalone:. Can you remind me how to reproduce this (as you saw it, no need to reduce)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:151,energy efficiency,reduc,reduce,151,"> Harmless change to circumvent errors like these when building RooFit standalone:. Can you remind me how to reproduce this (as you saw it, no need to reduce)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:32,performance,error,errors,32,"> Harmless change to circumvent errors like these when building RooFit standalone:. Can you remind me how to reproduce this (as you saw it, no need to reduce)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:32,safety,error,errors,32,"> Harmless change to circumvent errors like these when building RooFit standalone:. Can you remind me how to reproduce this (as you saw it, no need to reduce)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:32,usability,error,errors,32,"> Harmless change to circumvent errors like these when building RooFit standalone:. Can you remind me how to reproduce this (as you saw it, no need to reduce)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:190,deployability,build,build,190,You need to compile this code with the 3rd commit in the history reverted and run the tests (just like the CI does):. https://github.com/guitargeek/roofit/commits/main/. But you need a ROOT build without RooFit for that (`roofit=OFF`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:110,reliability,doe,does,110,You need to compile this code with the 3rd commit in the history reverted and run the tests (just like the CI does):. https://github.com/guitargeek/roofit/commits/main/. But you need a ROOT build without RooFit for that (`roofit=OFF`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:86,safety,test,tests,86,You need to compile this code with the 3rd commit in the history reverted and run the tests (just like the CI does):. https://github.com/guitargeek/roofit/commits/main/. But you need a ROOT build without RooFit for that (`roofit=OFF`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:86,testability,test,tests,86,You need to compile this code with the 3rd commit in the history reverted and run the tests (just like the CI does):. https://github.com/guitargeek/roofit/commits/main/. But you need a ROOT build without RooFit for that (`roofit=OFF`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:33,availability,error,error,33,Thanks. I am able reproduce that error. I am investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:33,performance,error,error,33,Thanks. I am able reproduce that error. I am investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:33,safety,error,error,33,Thanks. I am able reproduce that error. I am investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:33,usability,error,error,33,Thanks. I am able reproduce that error. I am investigating.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:61,deployability,patch,patch,61,"@vepadulano, @pcanal, this PR has already missed the 6.32.02 patch release. Can we merge it so at least this fix is sure to be in the next patch release? The investigation of the problem is independent of this PR I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:67,deployability,releas,release,67,"@vepadulano, @pcanal, this PR has already missed the 6.32.02 patch release. Can we merge it so at least this fix is sure to be in the next patch release? The investigation of the problem is independent of this PR I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:139,deployability,patch,patch,139,"@vepadulano, @pcanal, this PR has already missed the 6.32.02 patch release. Can we merge it so at least this fix is sure to be in the next patch release? The investigation of the problem is independent of this PR I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:145,deployability,releas,release,145,"@vepadulano, @pcanal, this PR has already missed the 6.32.02 patch release. Can we merge it so at least this fix is sure to be in the next patch release? The investigation of the problem is independent of this PR I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:61,safety,patch,patch,61,"@vepadulano, @pcanal, this PR has already missed the 6.32.02 patch release. Can we merge it so at least this fix is sure to be in the next patch release? The investigation of the problem is independent of this PR I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:139,safety,patch,patch,139,"@vepadulano, @pcanal, this PR has already missed the 6.32.02 patch release. Can we merge it so at least this fix is sure to be in the next patch release? The investigation of the problem is independent of this PR I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:61,security,patch,patch,61,"@vepadulano, @pcanal, this PR has already missed the 6.32.02 patch release. Can we merge it so at least this fix is sure to be in the next patch release? The investigation of the problem is independent of this PR I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:139,security,patch,patch,139,"@vepadulano, @pcanal, this PR has already missed the 6.32.02 patch release. Can we merge it so at least this fix is sure to be in the next patch release? The investigation of the problem is independent of this PR I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:14,availability,down,downgrade,14,"This PR is a 'downgrade' is code simplicity that should not be necessary. However the underlying fix is not ready (and won't until August), so we could temporarily merge this if need be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:33,testability,simpl,simplicity,33,"This PR is a 'downgrade' is code simplicity that should not be necessary. However the underlying fix is not ready (and won't until August), so we could temporarily merge this if need be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:33,usability,simpl,simplicity,33,"This PR is a 'downgrade' is code simplicity that should not be necessary. However the underlying fix is not ready (and won't until August), so we could temporarily merge this if need be.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:52,deployability,patch,patch,52,"Ok, thanks for the comment! Let's see when the next patch release will be scheduled",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:58,deployability,releas,release,58,"Ok, thanks for the comment! Let's see when the next patch release will be scheduled",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:74,energy efficiency,schedul,scheduled,74,"Ok, thanks for the comment! Let's see when the next patch release will be scheduled",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:74,performance,schedul,scheduled,74,"Ok, thanks for the comment! Let's see when the next patch release will be scheduled",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:52,safety,patch,patch,52,"Ok, thanks for the comment! Let's see when the next patch release will be scheduled",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:52,security,patch,patch,52,"Ok, thanks for the comment! Let's see when the next patch release will be scheduled",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:12,deployability,releas,release,12,"The 6.32.04 release is planned in about 10 days, according to @dpiparo. @pcanal, will there be a fix for the underlying issue by then, or should be just merge this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:23,testability,plan,planned,23,"The 6.32.04 release is planned in about 10 days, according to @dpiparo. @pcanal, will there be a fix for the underlying issue by then, or should be just merge this PR?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:125,deployability,patch,patches,125,@guitargeek Potential good news. I am currently unable to reproduce the problem with the master nor with the tip of v6-32-00-patches. Can you please verify? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:38,energy efficiency,current,currently,38,@guitargeek Potential good news. I am currently unable to reproduce the problem with the master nor with the tip of v6-32-00-patches. Can you please verify? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:125,safety,patch,patches,125,@guitargeek Potential good news. I am currently unable to reproduce the problem with the master nor with the tip of v6-32-00-patches. Can you please verify? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:125,security,patch,patches,125,@guitargeek Potential good news. I am currently unable to reproduce the problem with the master nor with the tip of v6-32-00-patches. Can you please verify? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:149,testability,verif,verify,149,@guitargeek Potential good news. I am currently unable to reproduce the problem with the master nor with the tip of v6-32-00-patches. Can you please verify? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:109,usability,tip,tip,109,@guitargeek Potential good news. I am currently unable to reproduce the problem with the master nor with the tip of v6-32-00-patches. Can you please verify? Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:97,safety,test,test,97,@guitargeek Nevermind. I just realized that I can still see the problem when running some of the test :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:97,testability,test,test,97,@guitargeek Nevermind. I just realized that I can still see the problem when running some of the test :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:69,deployability,updat,updated,69,I see the CI in that PR is still red. Should I wait for the PR to be updated such that it's green before I test? Or does it make sense to test already now? Thanks a lot already for fixing it :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:92,energy efficiency,green,green,92,I see the CI in that PR is still red. Should I wait for the PR to be updated such that it's green before I test? Or does it make sense to test already now? Thanks a lot already for fixing it :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:116,reliability,doe,does,116,I see the CI in that PR is still red. Should I wait for the PR to be updated such that it's green before I test? Or does it make sense to test already now? Thanks a lot already for fixing it :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:69,safety,updat,updated,69,I see the CI in that PR is still red. Should I wait for the PR to be updated such that it's green before I test? Or does it make sense to test already now? Thanks a lot already for fixing it :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:107,safety,test,test,107,I see the CI in that PR is still red. Should I wait for the PR to be updated such that it's green before I test? Or does it make sense to test already now? Thanks a lot already for fixing it :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:138,safety,test,test,138,I see the CI in that PR is still red. Should I wait for the PR to be updated such that it's green before I test? Or does it make sense to test already now? Thanks a lot already for fixing it :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:69,security,updat,updated,69,I see the CI in that PR is still red. Should I wait for the PR to be updated such that it's green before I test? Or does it make sense to test already now? Thanks a lot already for fixing it :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:107,testability,test,test,107,I see the CI in that PR is still red. Should I wait for the PR to be updated such that it's green before I test? Or does it make sense to test already now? Thanks a lot already for fixing it :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:138,testability,test,test,138,I see the CI in that PR is still red. Should I wait for the PR to be updated such that it's green before I test? Or does it make sense to test already now? Thanks a lot already for fixing it :+1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:18,safety,test,test,18,It makes sense to test it now to know at the very least if my independent tests are sufficient or not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:74,safety,test,tests,74,It makes sense to test it now to know at the very least if my independent tests are sufficient or not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:18,testability,test,test,18,It makes sense to test it now to know at the very least if my independent tests are sufficient or not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:74,testability,test,tests,74,It makes sense to test it now to know at the very least if my independent tests are sufficient or not.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:88,deployability,releas,release,88,"Re-opening, because this should be merged in case #16202 doesn't get ready for the 6.34 release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15733:57,reliability,doe,doesn,57,"Re-opening, because this should be merged in case #16202 doesn't get ready for the 6.34 release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15733
https://github.com/root-project/root/pull/15735:21,availability,failur,failures,21,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:238,availability,Error,Error,238,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:746,availability,Error,Error,746,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1149,availability,Error,Error,1149,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1485,availability,failur,failure,1485,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1520,availability,sli,slightly,1520,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:21,deployability,fail,failures,21,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:195,deployability,FAIL,FAILED,195,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:703,deployability,FAIL,FAILED,703,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1106,deployability,FAIL,FAILED,1106,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1379,deployability,fail,fail,1379,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1448,deployability,fail,fail,1448,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1485,deployability,fail,failure,1485,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:21,performance,failur,failures,21,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:238,performance,Error,Error,238,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:746,performance,Error,Error,746,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1149,performance,Error,Error,1149,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1485,performance,failur,failure,1485,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:21,reliability,fail,failures,21,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:195,reliability,FAIL,FAILED,195,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:703,reliability,FAIL,FAILED,703,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1106,reliability,FAIL,FAILED,1106,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1379,reliability,fail,fail,1379,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1448,reliability,fail,fail,1448,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1485,reliability,fail,failure,1485,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1520,reliability,sli,slightly,1520,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:69,safety,Test,Test,69,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:238,safety,Error,Error,238,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:450,safety,Test,Test,450,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:746,safety,Error,Error,746,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:853,safety,Test,Test,853,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1149,safety,Error,Error,1149,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1246,safety,test,test,1246,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1466,safety,test,test,1466,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:69,testability,Test,Test,69,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:450,testability,Test,Test,450,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:853,testability,Test,Test,853,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1246,testability,test,test,1246,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1466,testability,test,test,1466,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:238,usability,Error,Error,238,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:746,usability,Error,Error,746,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:1149,usability,Error,Error,1149,"Here are examples of failures without this change:. Fedora 41:. ```. Test 9: TLatex 3 (TLatex in TPaveText)............................ OK. PDF output.......................................... 9 FAILED. Result = 14253. Reference = 14377. Error = 124 (was 100). JPG output................................................ OK. PNG output................................................ OK. C file result............................................. OK. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15436. Reference = 14232. Error = 1204 (was 1000). C file result............................................. OK. ```. EPEL 9:. ```. Test 15: Transparent pad........................................... OK. PDF output................................................ OK. JPG output................................................ OK. PNG output......................................... 15 FAILED. Result = 15564. Reference = 14232. Error = 1332 (was 1000). C file result............................................. OK. ```. For test 15 the expected range in the reference file changed recently:. 6.30.06: 15202 ± 900. 6.32.00: 14232 ± 1000. The values that now fail (Fedora 41: 15436, EPEL 9: 15564) are within the old range, but fail the new. For test 9 there is no failure on EPEL 9, but the size is slightly outside for Fedora 41.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:37,availability,failur,failures,37,"Ok, I am surprised I do not see such failures in the ROOT nightlies ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:37,deployability,fail,failures,37,"Ok, I am surprised I do not see such failures in the ROOT nightlies ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:37,performance,failur,failures,37,"Ok, I am surprised I do not see such failures in the ROOT nightlies ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:37,reliability,fail,failures,37,"Ok, I am surprised I do not see such failures in the ROOT nightlies ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:160,availability,failur,failure,160,"@couet you can merge at your convenience as far as I am concerned. @ellert thanks for the changes you proposed. I have a curiosity: did you encounter any other failure related to dimensions on disk, especially with IO tests, with Fedora 41?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:160,deployability,fail,failure,160,"@couet you can merge at your convenience as far as I am concerned. @ellert thanks for the changes you proposed. I have a curiosity: did you encounter any other failure related to dimensions on disk, especially with IO tests, with Fedora 41?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:56,modifiability,concern,concerned,56,"@couet you can merge at your convenience as far as I am concerned. @ellert thanks for the changes you proposed. I have a curiosity: did you encounter any other failure related to dimensions on disk, especially with IO tests, with Fedora 41?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:160,performance,failur,failure,160,"@couet you can merge at your convenience as far as I am concerned. @ellert thanks for the changes you proposed. I have a curiosity: did you encounter any other failure related to dimensions on disk, especially with IO tests, with Fedora 41?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:193,performance,disk,disk,193,"@couet you can merge at your convenience as far as I am concerned. @ellert thanks for the changes you proposed. I have a curiosity: did you encounter any other failure related to dimensions on disk, especially with IO tests, with Fedora 41?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:160,reliability,fail,failure,160,"@couet you can merge at your convenience as far as I am concerned. @ellert thanks for the changes you proposed. I have a curiosity: did you encounter any other failure related to dimensions on disk, especially with IO tests, with Fedora 41?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:218,safety,test,tests,218,"@couet you can merge at your convenience as far as I am concerned. @ellert thanks for the changes you proposed. I have a curiosity: did you encounter any other failure related to dimensions on disk, especially with IO tests, with Fedora 41?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:56,testability,concern,concerned,56,"@couet you can merge at your convenience as far as I am concerned. @ellert thanks for the changes you proposed. I have a curiosity: did you encounter any other failure related to dimensions on disk, especially with IO tests, with Fedora 41?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/pull/15735:218,testability,test,tests,218,"@couet you can merge at your convenience as far as I am concerned. @ellert thanks for the changes you proposed. I have a curiosity: did you encounter any other failure related to dimensions on disk, especially with IO tests, with Fedora 41?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15735
https://github.com/root-project/root/issues/15736:87,usability,Progress,ProgressBar,87,Thanks for the report @martamaja10 ! Could you check that the linked PR also fixes the ProgressBar example?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15736
https://github.com/root-project/root/issues/15738:36,integrability,pub,public,36,Maybe this helps: https://microsoft.public.windowsce.embedded.vc.narkive.com/YHSn96WP/machine-ix86-vs-x86,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:11,usability,help,helps,11,Maybe this helps: https://microsoft.public.windowsce.embedded.vc.narkive.com/YHSn96WP/machine-ix86-vs-x86,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:121,energy efficiency,core,core,121,Maybe the problem is with pentiumpro: https://github.com/root-project/root/blob/802d26de10a6f42d0a2148a215389f9262d8bfc4/core/base/inc/Bswapcpy.h#L64. What happens if you remove `!defined __pentiumpro__` there?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:91,interoperability,platform,platforms,91,"Before making any change, I am still trying to understand what is different/new about this platforms. This code had been working for many years on 32bits intel platform. What is 'new' in the environment/hardware you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:160,interoperability,platform,platform,160,"Before making any change, I am still trying to understand what is different/new about this platforms. This code had been working for many years on 32bits intel platform. What is 'new' in the environment/hardware you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:47,testability,understand,understand,47,"Before making any change, I am still trying to understand what is different/new about this platforms. This code had been working for many years on 32bits intel platform. What is 'new' in the environment/hardware you are using?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:925,availability,error,error,925,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:96,deployability,build,builddir,96,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:105,deployability,build,build,105,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:111,deployability,BUILD,BUILD,111,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:130,deployability,build,build,130,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:245,deployability,build,builddir,245,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:254,deployability,build,build,254,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:260,deployability,BUILD,BUILD,260,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:279,deployability,build,build,279,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:797,deployability,version,version,797,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:149,energy efficiency,core,core,149,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:797,integrability,version,version,797,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:797,modifiability,version,version,797,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:925,performance,error,error,925,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:1017,reliability,doe,does,1017,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:925,safety,error,error,925,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/issues/15738:925,usability,error,error,925,"From the backtrace above:. ```. #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61. #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071. ```. I.e. this is called with `from = 0`. It also has `n = 0`, so it shouldn't actually read anything from `from`. The caller `TBufferFile::WriteFastArray` has changed between 6.30 and 6.32:. 6.30.06:. https://github.com/root-project/root/blob/4f4e7163728f27578e67f89e61c02a40baa02eb5/io/io/src/TBufferFile.cxx#L2019-L2038. 6.32.00:. https://github.com/root-project/root/blob/22aeb252c135699e0c44dcfc6b491eec753d02a9/io/io/src/TBufferFile.cxx#L2055-L2081. In the old version there is a protection against `n` = 0: `if (n <= 0) return;`. In the new code this has been replaced with generating an error is `n` < 0. So the old code did not call `bswapcpy32` with `n` = 0 while the new code does. The crash happens when `n` = 0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15738
https://github.com/root-project/root/pull/15739:18,testability,understand,understand,18,"Great catch! If I understand correctly, it's possible to use reserve, but then in tandem with std::back_inserter inside the copy call. Either way, this works as well, thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15739
https://github.com/root-project/root/issues/15740:126,deployability,stack,stack,126,Real problem is `THStack::GetMaximum()` and `THStack::GetMinimum()` methods. Both may return not real min/max of the expected stack drawing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:132,energy efficiency,draw,drawing,132,Real problem is `THStack::GetMaximum()` and `THStack::GetMinimum()` methods. Both may return not real min/max of the expected stack drawing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:0,deployability,Stack,Stacks,0,"Stacks with negative content generally don't function well. They are built by stacking bricks (1D histograms) or bins (1D histograms) on top of each other. If there's a negative brick in the middle, what should we do? This might need more explanation in the reference guide or even a protection to forbid histograms with negative minimum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:78,deployability,stack,stacking,78,"Stacks with negative content generally don't function well. They are built by stacking bricks (1D histograms) or bins (1D histograms) on top of each other. If there's a negative brick in the middle, what should we do? This might need more explanation in the reference guide or even a protection to forbid histograms with negative minimum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:21,performance,content,content,21,"Stacks with negative content generally don't function well. They are built by stacking bricks (1D histograms) or bins (1D histograms) on top of each other. If there's a negative brick in the middle, what should we do? This might need more explanation in the reference guide or even a protection to forbid histograms with negative minimum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:268,usability,guid,guide,268,"Stacks with negative content generally don't function well. They are built by stacking bricks (1D histograms) or bins (1D histograms) on top of each other. If there's a negative brick in the middle, what should we do? This might need more explanation in the reference guide or even a protection to forbid histograms with negative minimum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:330,usability,minim,minimum,330,"Stacks with negative content generally don't function well. They are built by stacking bricks (1D histograms) or bins (1D histograms) on top of each other. If there's a negative brick in the middle, what should we do? This might need more explanation in the reference guide or even a protection to forbid histograms with negative minimum.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:197,deployability,stack,stacked,197,> even a protection to forbid histograms with negative minimum. If we do not want to support negative bins - one should issue warning in the code. And you can reopen PR - for normal use-case first stacked histogram should be checked for minimal value,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:55,usability,minim,minimum,55,> even a protection to forbid histograms with negative minimum. If we do not want to support negative bins - one should issue warning in the code. And you can reopen PR - for normal use-case first stacked histogram should be checked for minimal value,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:85,usability,support,support,85,> even a protection to forbid histograms with negative minimum. If we do not want to support negative bins - one should issue warning in the code. And you can reopen PR - for normal use-case first stacked histogram should be checked for minimal value,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:237,usability,minim,minimal,237,> even a protection to forbid histograms with negative minimum. If we do not want to support negative bins - one should issue warning in the code. And you can reopen PR - for normal use-case first stacked histogram should be checked for minimal value,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:29,deployability,updat,update,29,I am making a new PR with an update of the doc and protection in the `THStack::Add`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:29,safety,updat,update,29,I am making a new PR with an update of the doc and protection in the `THStack::Add`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/issues/15740:29,security,updat,update,29,I am making a new PR with an update of the doc and protection in the `THStack::Add`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15740
https://github.com/root-project/root/pull/15743:45,availability,failur,failure,45,I pushed another commit which should fix the failure seen with the `ntuple_storage.cxx` test in the Ubuntu 22 with `imt=OFF` build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15743
https://github.com/root-project/root/pull/15743:45,deployability,fail,failure,45,I pushed another commit which should fix the failure seen with the `ntuple_storage.cxx` test in the Ubuntu 22 with `imt=OFF` build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15743
https://github.com/root-project/root/pull/15743:125,deployability,build,build,125,I pushed another commit which should fix the failure seen with the `ntuple_storage.cxx` test in the Ubuntu 22 with `imt=OFF` build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15743
https://github.com/root-project/root/pull/15743:45,performance,failur,failure,45,I pushed another commit which should fix the failure seen with the `ntuple_storage.cxx` test in the Ubuntu 22 with `imt=OFF` build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15743
https://github.com/root-project/root/pull/15743:45,reliability,fail,failure,45,I pushed another commit which should fix the failure seen with the `ntuple_storage.cxx` test in the Ubuntu 22 with `imt=OFF` build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15743
https://github.com/root-project/root/pull/15743:88,safety,test,test,88,I pushed another commit which should fix the failure seen with the `ntuple_storage.cxx` test in the Ubuntu 22 with `imt=OFF` build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15743
https://github.com/root-project/root/pull/15743:88,testability,test,test,88,I pushed another commit which should fix the failure seen with the `ntuple_storage.cxx` test in the Ubuntu 22 with `imt=OFF` build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15743
https://github.com/root-project/root/pull/15746:19,availability,failur,failures,19,`rcanvas` tutorial failures unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15746
https://github.com/root-project/root/pull/15746:19,deployability,fail,failures,19,`rcanvas` tutorial failures unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15746
https://github.com/root-project/root/pull/15746:19,performance,failur,failures,19,`rcanvas` tutorial failures unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15746
https://github.com/root-project/root/pull/15746:1,reliability,rca,rcanvas,1,`rcanvas` tutorial failures unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15746
https://github.com/root-project/root/pull/15746:19,reliability,fail,failures,19,`rcanvas` tutorial failures unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15746
https://github.com/root-project/root/pull/15749:11,safety,test,test,11,One should test with `runtime_cxxmodules=OFF`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15749
https://github.com/root-project/root/pull/15749:11,testability,test,test,11,One should test with `runtime_cxxmodules=OFF`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15749
https://github.com/root-project/root/pull/15749:129,deployability,build,build,129,"> One should test with runtime_cxxmodules=OFF. Indeed, it's what I wrote in the PR description. I hoped that we had at least one build with that option. This means that currently there is no build with `runtime_cxxmodules=OFF` and we should understand if that's intended/desirable or not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15749
https://github.com/root-project/root/pull/15749:191,deployability,build,build,191,"> One should test with runtime_cxxmodules=OFF. Indeed, it's what I wrote in the PR description. I hoped that we had at least one build with that option. This means that currently there is no build with `runtime_cxxmodules=OFF` and we should understand if that's intended/desirable or not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15749
https://github.com/root-project/root/pull/15749:169,energy efficiency,current,currently,169,"> One should test with runtime_cxxmodules=OFF. Indeed, it's what I wrote in the PR description. I hoped that we had at least one build with that option. This means that currently there is no build with `runtime_cxxmodules=OFF` and we should understand if that's intended/desirable or not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15749
https://github.com/root-project/root/pull/15749:13,safety,test,test,13,"> One should test with runtime_cxxmodules=OFF. Indeed, it's what I wrote in the PR description. I hoped that we had at least one build with that option. This means that currently there is no build with `runtime_cxxmodules=OFF` and we should understand if that's intended/desirable or not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15749
https://github.com/root-project/root/pull/15749:13,testability,test,test,13,"> One should test with runtime_cxxmodules=OFF. Indeed, it's what I wrote in the PR description. I hoped that we had at least one build with that option. This means that currently there is no build with `runtime_cxxmodules=OFF` and we should understand if that's intended/desirable or not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15749
https://github.com/root-project/root/pull/15749:241,testability,understand,understand,241,"> One should test with runtime_cxxmodules=OFF. Indeed, it's what I wrote in the PR description. I hoped that we had at least one build with that option. This means that currently there is no build with `runtime_cxxmodules=OFF` and we should understand if that's intended/desirable or not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15749
https://github.com/root-project/root/pull/15750:140,deployability,depend,depending,140,"Can you expand on why we cannot snapshot from TTree to RNTuple? In general, I'm not sure if it's a good idea to change the default behavior depending on the type of the datasource. Ideally, `kDefault` would for now always mean `kTTree` but be kind of deprecated from the beginning to get users to choose which snapshot format they want. Then at a later point, we could remove it entirely and force users to choose the wanted format, to eventually re-introduce `kDefault` in ROOT7 to mean `kRNTuple`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:140,integrability,depend,depending,140,"Can you expand on why we cannot snapshot from TTree to RNTuple? In general, I'm not sure if it's a good idea to change the default behavior depending on the type of the datasource. Ideally, `kDefault` would for now always mean `kTTree` but be kind of deprecated from the beginning to get users to choose which snapshot format they want. Then at a later point, we could remove it entirely and force users to choose the wanted format, to eventually re-introduce `kDefault` in ROOT7 to mean `kRNTuple`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:436,integrability,event,eventually,436,"Can you expand on why we cannot snapshot from TTree to RNTuple? In general, I'm not sure if it's a good idea to change the default behavior depending on the type of the datasource. Ideally, `kDefault` would for now always mean `kTTree` but be kind of deprecated from the beginning to get users to choose which snapshot format they want. Then at a later point, we could remove it entirely and force users to choose the wanted format, to eventually re-introduce `kDefault` in ROOT7 to mean `kRNTuple`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:319,interoperability,format,format,319,"Can you expand on why we cannot snapshot from TTree to RNTuple? In general, I'm not sure if it's a good idea to change the default behavior depending on the type of the datasource. Ideally, `kDefault` would for now always mean `kTTree` but be kind of deprecated from the beginning to get users to choose which snapshot format they want. Then at a later point, we could remove it entirely and force users to choose the wanted format, to eventually re-introduce `kDefault` in ROOT7 to mean `kRNTuple`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:425,interoperability,format,format,425,"Can you expand on why we cannot snapshot from TTree to RNTuple? In general, I'm not sure if it's a good idea to change the default behavior depending on the type of the datasource. Ideally, `kDefault` would for now always mean `kTTree` but be kind of deprecated from the beginning to get users to choose which snapshot format they want. Then at a later point, we could remove it entirely and force users to choose the wanted format, to eventually re-introduce `kDefault` in ROOT7 to mean `kRNTuple`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:140,modifiability,depend,depending,140,"Can you expand on why we cannot snapshot from TTree to RNTuple? In general, I'm not sure if it's a good idea to change the default behavior depending on the type of the datasource. Ideally, `kDefault` would for now always mean `kTTree` but be kind of deprecated from the beginning to get users to choose which snapshot format they want. Then at a later point, we could remove it entirely and force users to choose the wanted format, to eventually re-introduce `kDefault` in ROOT7 to mean `kRNTuple`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:140,safety,depend,depending,140,"Can you expand on why we cannot snapshot from TTree to RNTuple? In general, I'm not sure if it's a good idea to change the default behavior depending on the type of the datasource. Ideally, `kDefault` would for now always mean `kTTree` but be kind of deprecated from the beginning to get users to choose which snapshot format they want. Then at a later point, we could remove it entirely and force users to choose the wanted format, to eventually re-introduce `kDefault` in ROOT7 to mean `kRNTuple`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:140,testability,depend,depending,140,"Can you expand on why we cannot snapshot from TTree to RNTuple? In general, I'm not sure if it's a good idea to change the default behavior depending on the type of the datasource. Ideally, `kDefault` would for now always mean `kTTree` but be kind of deprecated from the beginning to get users to choose which snapshot format they want. Then at a later point, we could remove it entirely and force users to choose the wanted format, to eventually re-introduce `kDefault` in ROOT7 to mean `kRNTuple`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:131,usability,behavi,behavior,131,"Can you expand on why we cannot snapshot from TTree to RNTuple? In general, I'm not sure if it's a good idea to change the default behavior depending on the type of the datasource. Ideally, `kDefault` would for now always mean `kTTree` but be kind of deprecated from the beginning to get users to choose which snapshot format they want. Then at a later point, we could remove it entirely and force users to choose the wanted format, to eventually re-introduce `kDefault` in ROOT7 to mean `kRNTuple`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:288,usability,user,users,288,"Can you expand on why we cannot snapshot from TTree to RNTuple? In general, I'm not sure if it's a good idea to change the default behavior depending on the type of the datasource. Ideally, `kDefault` would for now always mean `kTTree` but be kind of deprecated from the beginning to get users to choose which snapshot format they want. Then at a later point, we could remove it entirely and force users to choose the wanted format, to eventually re-introduce `kDefault` in ROOT7 to mean `kRNTuple`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/pull/15750:398,usability,user,users,398,"Can you expand on why we cannot snapshot from TTree to RNTuple? In general, I'm not sure if it's a good idea to change the default behavior depending on the type of the datasource. Ideally, `kDefault` would for now always mean `kTTree` but be kind of deprecated from the beginning to get users to choose which snapshot format they want. Then at a later point, we could remove it entirely and force users to choose the wanted format, to eventually re-introduce `kDefault` in ROOT7 to mean `kRNTuple`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15750
https://github.com/root-project/root/issues/15755:0,usability,Close,Closed,0,Closed by #14733.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15755
https://github.com/root-project/root/pull/15758:275,energy efficiency,draw,draw,275,> Just a comment. The fact we still have to use naked new and things like Clone to make the graphics work looks really bad in tutorials. Main problem is ownership of histograms. They are destroyed by `DF` handle at the end and cannot be used for graphics. The only chance to draw them - is to clone them. And `new TLegend` required while it referencing same histograms again. . `TLegend::DrawClone()` is simply wrong - while it will clone all referenced objects and loos reference to original histograms. . I see no other chance to correctly create `THStack` and `TLegend` in such situation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15758
https://github.com/root-project/root/pull/15758:388,energy efficiency,Draw,DrawClone,388,> Just a comment. The fact we still have to use naked new and things like Clone to make the graphics work looks really bad in tutorials. Main problem is ownership of histograms. They are destroyed by `DF` handle at the end and cannot be used for graphics. The only chance to draw them - is to clone them. And `new TLegend` required while it referencing same histograms again. . `TLegend::DrawClone()` is simply wrong - while it will clone all referenced objects and loos reference to original histograms. . I see no other chance to correctly create `THStack` and `TLegend` in such situation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15758
https://github.com/root-project/root/pull/15758:404,testability,simpl,simply,404,> Just a comment. The fact we still have to use naked new and things like Clone to make the graphics work looks really bad in tutorials. Main problem is ownership of histograms. They are destroyed by `DF` handle at the end and cannot be used for graphics. The only chance to draw them - is to clone them. And `new TLegend` required while it referencing same histograms again. . `TLegend::DrawClone()` is simply wrong - while it will clone all referenced objects and loos reference to original histograms. . I see no other chance to correctly create `THStack` and `TLegend` in such situation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15758
https://github.com/root-project/root/pull/15758:404,usability,simpl,simply,404,> Just a comment. The fact we still have to use naked new and things like Clone to make the graphics work looks really bad in tutorials. Main problem is ownership of histograms. They are destroyed by `DF` handle at the end and cannot be used for graphics. The only chance to draw them - is to clone them. And `new TLegend` required while it referencing same histograms again. . `TLegend::DrawClone()` is simply wrong - while it will clone all referenced objects and loos reference to original histograms. . I see no other chance to correctly create `THStack` and `TLegend` in such situation.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15758
https://github.com/root-project/root/pull/15758:175,deployability,build,builds,175,"> I see no other chance to correctly create THStack and TLegend in such situation. I agree with you, I still believe it's bad. Anyway, it shouldn't block this PR provided all builds are green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15758
https://github.com/root-project/root/pull/15758:186,energy efficiency,green,green,186,"> I see no other chance to correctly create THStack and TLegend in such situation. I agree with you, I still believe it's bad. Anyway, it shouldn't block this PR provided all builds are green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15758
https://github.com/root-project/root/issues/15763:325,deployability,observ,observables,325,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:266,reliability,doe,doesn,266,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:280,reliability,Doe,Does,280,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:146,safety,test,test,146,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:378,safety,test,test,378,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:472,safety,test,test,472,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:477,safety,test,testGlobalObservables,477,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:146,testability,test,test,146,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:325,testability,observ,observables,325,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:378,testability,test,test,378,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:383,testability,coverag,coverage,383,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:472,testability,test,test,472,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:477,testability,test,testGlobalObservables,477,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:729,testability,simpl,simple,729,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:729,usability,simpl,simple,729,"Hi @will-cern, thanks for the report! I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:. https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice? Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/issues/15763:2,usability,close,closed,2,"I closed this issue because as far as I know, this is already implemented. Please reopen a new issue with a precise reproducer in case you should still encounter a problem with `setData()`. Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15763
https://github.com/root-project/root/pull/15766:82,energy efficiency,Current,Currently,82,"> Therefore, histograms with a negative minimum will be rejected. How it is done? Currently I see no protection for negative bins content.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:130,performance,content,content,130,"> Therefore, histograms with a negative minimum will be rejected. How it is done? Currently I see no protection for negative bins content.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:40,usability,minim,minimum,40,"> Therefore, histograms with a negative minimum will be rejected. How it is done? Currently I see no protection for negative bins content.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:191,availability,Error,Error,191,"> > Therefore, histograms with a negative minimum will be rejected. > . > How it is done? Currently I see no protection for negative bins content. In Add:. ```. if (h1->GetMinimum() < 0.) {. Error(""Add"",""Histograms with a negative minimum cannot be part of a THStack"");. return;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:90,energy efficiency,Current,Currently,90,"> > Therefore, histograms with a negative minimum will be rejected. > . > How it is done? Currently I see no protection for negative bins content. In Add:. ```. if (h1->GetMinimum() < 0.) {. Error(""Add"",""Histograms with a negative minimum cannot be part of a THStack"");. return;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:138,performance,content,content,138,"> > Therefore, histograms with a negative minimum will be rejected. > . > How it is done? Currently I see no protection for negative bins content. In Add:. ```. if (h1->GetMinimum() < 0.) {. Error(""Add"",""Histograms with a negative minimum cannot be part of a THStack"");. return;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:191,performance,Error,Error,191,"> > Therefore, histograms with a negative minimum will be rejected. > . > How it is done? Currently I see no protection for negative bins content. In Add:. ```. if (h1->GetMinimum() < 0.) {. Error(""Add"",""Histograms with a negative minimum cannot be part of a THStack"");. return;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:191,safety,Error,Error,191,"> > Therefore, histograms with a negative minimum will be rejected. > . > How it is done? Currently I see no protection for negative bins content. In Add:. ```. if (h1->GetMinimum() < 0.) {. Error(""Add"",""Histograms with a negative minimum cannot be part of a THStack"");. return;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:42,usability,minim,minimum,42,"> > Therefore, histograms with a negative minimum will be rejected. > . > How it is done? Currently I see no protection for negative bins content. In Add:. ```. if (h1->GetMinimum() < 0.) {. Error(""Add"",""Histograms with a negative minimum cannot be part of a THStack"");. return;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:191,usability,Error,Error,191,"> > Therefore, histograms with a negative minimum will be rejected. > . > How it is done? Currently I see no protection for negative bins content. In Add:. ```. if (h1->GetMinimum() < 0.) {. Error(""Add"",""Histograms with a negative minimum cannot be part of a THStack"");. return;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:231,usability,minim,minimum,231,"> > Therefore, histograms with a negative minimum will be rejected. > . > How it is done? Currently I see no protection for negative bins content. In Add:. ```. if (h1->GetMinimum() < 0.) {. Error(""Add"",""Histograms with a negative minimum cannot be part of a THStack"");. return;. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:34,deployability,fail,fail,34,"Any way this PR make several test fail like ""tutorial-legacy-mlp-mlpRegression"" let see what @moneta think about it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:34,reliability,fail,fail,34,"Any way this PR make several test fail like ""tutorial-legacy-mlp-mlpRegression"" let see what @moneta think about it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:29,safety,test,test,29,"Any way this PR make several test fail like ""tutorial-legacy-mlp-mlpRegression"" let see what @moneta think about it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15766:29,testability,test,test,29,"Any way this PR make several test fail like ""tutorial-legacy-mlp-mlpRegression"" let see what @moneta think about it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15766
https://github.com/root-project/root/pull/15777:69,deployability,patch,patch,69,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:134,deployability,patch,patched,134,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:190,deployability,patch,patch,190,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:274,deployability,patch,patches,274,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:326,deployability,patch,patch,326,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:644,deployability,patch,patch,644,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:252,interoperability,bind,bindings,252,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:252,modifiability,bind,bindings,252,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:69,safety,patch,patch,69,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:134,safety,patch,patched,134,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:190,safety,patch,patch,190,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:274,safety,patch,patches,274,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:326,safety,patch,patch,326,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:644,safety,patch,patch,644,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:69,security,patch,patch,69,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:134,security,patch,patched,134,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:190,security,patch,patch,190,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:274,security,patch,patches,274,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:326,security,patch,patch,326,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/pull/15777:644,security,patch,patch,644,"Hi @vepadulano, thanks a lot for the PR! This looks great. About the patch: since the first line you change is a line that is already patched, you can just change the equivalent line in the patch file:. https://github.com/root-project/root/blob/master/bindings/pyroot/cppyy/patches/CPyCppyy-Always-convert-returned-std-string.patch#L52. The second line you change in `` did not diverge from upstream, so would this also fix upstream CPyCppyy? https://github.com/wlav/CPyCppyy/blob/master/src/Executors.cxx#L593. In that case, it would be good to also open a PR to CPyCppyy, and we assume that it gets merged soon.Then we don't need a dedicated patch for that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15777
https://github.com/root-project/root/issues/15778:487,deployability,stack,stacks,487,"Hi, thanks for this proposal. PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:653,energy efficiency,measur,measurements,653,"Hi, thanks for this proposal. PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:123,integrability,event,event,123,"Hi, thanks for this proposal. PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:572,integrability,topic,topic,572,"Hi, thanks for this proposal. PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:560,performance,time,time,560,"Hi, thanks for this proposal. PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:398,testability,Simul,Simulation,398,"Hi, thanks for this proposal. PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:253,usability,clear,clearly,253,"Hi, thanks for this proposal. PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:351,usability,workflow,workflows,351,"Hi, thanks for this proposal. PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:499,deployability,stack,stacks,499,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:597,energy efficiency,measur,measure,597,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:780,energy efficiency,measur,measurable,780,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:926,energy efficiency,optim,optimize,926,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:1101,energy efficiency,measur,measurements,1101,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:95,integrability,event,event,95,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:1020,integrability,topic,topic,1020,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:1150,interoperability,specif,specific,1150,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:646,modifiability,scenario,scenarios,646,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:670,modifiability,scenario,scenarios,670,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:800,modifiability,scenario,scenarios,800,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:528,performance,workload,workloads,528,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:609,performance,perform,performance,609,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:753,performance,perform,performance,753,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:926,performance,optimiz,optimize,926,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:1008,performance,time,time,1008,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:1159,performance,workload,workload,1159,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:1272,performance,time,time,1272,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:410,testability,Simul,Simulation,410,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:265,usability,clear,clearly,265,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:363,usability,workflow,workflows,363,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:609,usability,perform,performance,609,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:753,usability,perform,performance,753,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:852,usability,document,documentation,852,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:881,usability,user,users,881,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:1194,usability,experien,experience,1194,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results! > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:51,energy efficiency,optim,optimizations,51,"At the moment we have no evidence of potential PGO optimizations ROOT could provide, also given the contribution cited above (a paper is coming soon): no symbol in the ROOT libraries is appearing in the list of the ones that benefit from PGO. While I agree that it could be interesting to expand the findings, we do not have substantial effort to invest there at the moment. I propose to close this issue now and warmly invite you to re-open it as soon as you have concrete results to share and that can be transformed in a list of concrete actions to take on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:325,integrability,sub,substantial,325,"At the moment we have no evidence of potential PGO optimizations ROOT could provide, also given the contribution cited above (a paper is coming soon): no symbol in the ROOT libraries is appearing in the list of the ones that benefit from PGO. While I agree that it could be interesting to expand the findings, we do not have substantial effort to invest there at the moment. I propose to close this issue now and warmly invite you to re-open it as soon as you have concrete results to share and that can be transformed in a list of concrete actions to take on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:507,integrability,transform,transformed,507,"At the moment we have no evidence of potential PGO optimizations ROOT could provide, also given the contribution cited above (a paper is coming soon): no symbol in the ROOT libraries is appearing in the list of the ones that benefit from PGO. While I agree that it could be interesting to expand the findings, we do not have substantial effort to invest there at the moment. I propose to close this issue now and warmly invite you to re-open it as soon as you have concrete results to share and that can be transformed in a list of concrete actions to take on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:485,interoperability,share,share,485,"At the moment we have no evidence of potential PGO optimizations ROOT could provide, also given the contribution cited above (a paper is coming soon): no symbol in the ROOT libraries is appearing in the list of the ones that benefit from PGO. While I agree that it could be interesting to expand the findings, we do not have substantial effort to invest there at the moment. I propose to close this issue now and warmly invite you to re-open it as soon as you have concrete results to share and that can be transformed in a list of concrete actions to take on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:507,interoperability,transform,transformed,507,"At the moment we have no evidence of potential PGO optimizations ROOT could provide, also given the contribution cited above (a paper is coming soon): no symbol in the ROOT libraries is appearing in the list of the ones that benefit from PGO. While I agree that it could be interesting to expand the findings, we do not have substantial effort to invest there at the moment. I propose to close this issue now and warmly invite you to re-open it as soon as you have concrete results to share and that can be transformed in a list of concrete actions to take on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:51,performance,optimiz,optimizations,51,"At the moment we have no evidence of potential PGO optimizations ROOT could provide, also given the contribution cited above (a paper is coming soon): no symbol in the ROOT libraries is appearing in the list of the ones that benefit from PGO. While I agree that it could be interesting to expand the findings, we do not have substantial effort to invest there at the moment. I propose to close this issue now and warmly invite you to re-open it as soon as you have concrete results to share and that can be transformed in a list of concrete actions to take on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:388,usability,close,close,388,"At the moment we have no evidence of potential PGO optimizations ROOT could provide, also given the contribution cited above (a paper is coming soon): no symbol in the ROOT libraries is appearing in the list of the ones that benefit from PGO. While I agree that it could be interesting to expand the findings, we do not have substantial effort to invest there at the moment. I propose to close this issue now and warmly invite you to re-open it as soon as you have concrete results to share and that can be transformed in a list of concrete actions to take on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:198,integrability,repositor,repository,198,"Why not just leave the issue open? If anyone from the community finds the issue interesting - they can start working on it. However, I kindly propose enabling the ""Discussion"" functionality for the repository and then moving the issue to the ""Discussions"" under the ""Ideas"" built-in label. Having the issue closed is not clear for newcomers since they at first look at open issues to start work at, not closed issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:198,interoperability,repositor,repository,198,"Why not just leave the issue open? If anyone from the community finds the issue interesting - they can start working on it. However, I kindly propose enabling the ""Discussion"" functionality for the repository and then moving the issue to the ""Discussions"" under the ""Ideas"" built-in label. Having the issue closed is not clear for newcomers since they at first look at open issues to start work at, not closed issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:307,usability,close,closed,307,"Why not just leave the issue open? If anyone from the community finds the issue interesting - they can start working on it. However, I kindly propose enabling the ""Discussion"" functionality for the repository and then moving the issue to the ""Discussions"" under the ""Ideas"" built-in label. Having the issue closed is not clear for newcomers since they at first look at open issues to start work at, not closed issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:321,usability,clear,clear,321,"Why not just leave the issue open? If anyone from the community finds the issue interesting - they can start working on it. However, I kindly propose enabling the ""Discussion"" functionality for the repository and then moving the issue to the ""Discussions"" under the ""Ideas"" built-in label. Having the issue closed is not clear for newcomers since they at first look at open issues to start work at, not closed issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/issues/15778:403,usability,close,closed,403,"Why not just leave the issue open? If anyone from the community finds the issue interesting - they can start working on it. However, I kindly propose enabling the ""Discussion"" functionality for the repository and then moving the issue to the ""Discussions"" under the ""Ideas"" built-in label. Having the issue closed is not clear for newcomers since they at first look at open issues to start work at, not closed issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15778
https://github.com/root-project/root/pull/15780:140,safety,safe,safe,140,"Thanks for the catch! Maybe, as a reminder, we could add a comment on Bswapcpy.h, before the functions, saying that these functions are not safe to call with n==0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15780
https://github.com/root-project/root/pull/15780:148,safety,safe,safe,148,"> Thanks for the catch! > . > Maybe, as a reminder, we could add a comment on Bswapcpy.h, before the functions, saying that these functions are not safe to call with n==0. I have added a commet to this effect.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15780
https://github.com/root-project/root/issues/15782:202,deployability,manag,managers,202,"Hi, thanks for reporting. At the moment we do not provide ARM images for linux. We plan to add arm nodes to our CI, but it will take a bit of time. In the meanwhile, you can rely on the various package managers providing ROOT or build it from sources (https://root.cern/install/#build-from-source). We will provide the needed support in case you encounter difficulties here https://root-forum.cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15782
https://github.com/root-project/root/issues/15782:229,deployability,build,build,229,"Hi, thanks for reporting. At the moment we do not provide ARM images for linux. We plan to add arm nodes to our CI, but it will take a bit of time. In the meanwhile, you can rely on the various package managers providing ROOT or build it from sources (https://root.cern/install/#build-from-source). We will provide the needed support in case you encounter difficulties here https://root-forum.cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15782
https://github.com/root-project/root/issues/15782:270,deployability,instal,install,270,"Hi, thanks for reporting. At the moment we do not provide ARM images for linux. We plan to add arm nodes to our CI, but it will take a bit of time. In the meanwhile, you can rely on the various package managers providing ROOT or build it from sources (https://root.cern/install/#build-from-source). We will provide the needed support in case you encounter difficulties here https://root-forum.cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15782
https://github.com/root-project/root/issues/15782:279,deployability,build,build-from-source,279,"Hi, thanks for reporting. At the moment we do not provide ARM images for linux. We plan to add arm nodes to our CI, but it will take a bit of time. In the meanwhile, you can rely on the various package managers providing ROOT or build it from sources (https://root.cern/install/#build-from-source). We will provide the needed support in case you encounter difficulties here https://root-forum.cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15782
https://github.com/root-project/root/issues/15782:202,energy efficiency,manag,managers,202,"Hi, thanks for reporting. At the moment we do not provide ARM images for linux. We plan to add arm nodes to our CI, but it will take a bit of time. In the meanwhile, you can rely on the various package managers providing ROOT or build it from sources (https://root.cern/install/#build-from-source). We will provide the needed support in case you encounter difficulties here https://root-forum.cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15782
https://github.com/root-project/root/issues/15782:194,modifiability,pac,package,194,"Hi, thanks for reporting. At the moment we do not provide ARM images for linux. We plan to add arm nodes to our CI, but it will take a bit of time. In the meanwhile, you can rely on the various package managers providing ROOT or build it from sources (https://root.cern/install/#build-from-source). We will provide the needed support in case you encounter difficulties here https://root-forum.cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15782
https://github.com/root-project/root/issues/15782:142,performance,time,time,142,"Hi, thanks for reporting. At the moment we do not provide ARM images for linux. We plan to add arm nodes to our CI, but it will take a bit of time. In the meanwhile, you can rely on the various package managers providing ROOT or build it from sources (https://root.cern/install/#build-from-source). We will provide the needed support in case you encounter difficulties here https://root-forum.cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15782
https://github.com/root-project/root/issues/15782:202,safety,manag,managers,202,"Hi, thanks for reporting. At the moment we do not provide ARM images for linux. We plan to add arm nodes to our CI, but it will take a bit of time. In the meanwhile, you can rely on the various package managers providing ROOT or build it from sources (https://root.cern/install/#build-from-source). We will provide the needed support in case you encounter difficulties here https://root-forum.cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15782
https://github.com/root-project/root/issues/15782:83,testability,plan,plan,83,"Hi, thanks for reporting. At the moment we do not provide ARM images for linux. We plan to add arm nodes to our CI, but it will take a bit of time. In the meanwhile, you can rely on the various package managers providing ROOT or build it from sources (https://root.cern/install/#build-from-source). We will provide the needed support in case you encounter difficulties here https://root-forum.cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15782
https://github.com/root-project/root/issues/15782:326,usability,support,support,326,"Hi, thanks for reporting. At the moment we do not provide ARM images for linux. We plan to add arm nodes to our CI, but it will take a bit of time. In the meanwhile, you can rely on the various package managers providing ROOT or build it from sources (https://root.cern/install/#build-from-source). We will provide the needed support in case you encounter difficulties here https://root-forum.cern.ch/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15782
https://github.com/root-project/root/pull/15787:15,reliability,doe,does,15,"Weird, godbolt does not complain about this https://godbolt.org/z/xv43ehEo6 . I would say rather than the c cast to byte it would be better to just default initialize the value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15787
https://github.com/root-project/root/pull/15787:24,safety,compl,complain,24,"Weird, godbolt does not complain about this https://godbolt.org/z/xv43ehEo6 . I would say rather than the c cast to byte it would be better to just default initialize the value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15787
https://github.com/root-project/root/pull/15787:24,security,compl,complain,24,"Weird, godbolt does not complain about this https://godbolt.org/z/xv43ehEo6 . I would say rather than the c cast to byte it would be better to just default initialize the value.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15787
https://github.com/root-project/root/pull/15787:17,reliability,doe,does,17,"> Weird, godbolt does not complain about this https://godbolt.org/z/xv43ehEo6 . . Yes, weird... > I would say rather than the c cast to byte it would be better to just default initialize the value. How?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15787
https://github.com/root-project/root/pull/15787:26,safety,compl,complain,26,"> Weird, godbolt does not complain about this https://godbolt.org/z/xv43ehEo6 . . Yes, weird... > I would say rather than the c cast to byte it would be better to just default initialize the value. How?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15787
https://github.com/root-project/root/pull/15787:26,security,compl,complain,26,"> Weird, godbolt does not complain about this https://godbolt.org/z/xv43ehEo6 . . Yes, weird... > I would say rather than the c cast to byte it would be better to just default initialize the value. How?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15787
https://github.com/root-project/root/pull/15787:16,testability,simpl,simply,16,"> How? Sorry, I simply meant `std::byte b{};`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15787
https://github.com/root-project/root/pull/15787:16,usability,simpl,simply,16,"> How? Sorry, I simply meant `std::byte b{};`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15787
https://github.com/root-project/root/pull/15787:11,testability,simpl,simply,11,"> Sorry, I simply meant `std::byte b{};`. Oh, right, stupid me...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15787
https://github.com/root-project/root/pull/15787:11,usability,simpl,simply,11,"> Sorry, I simply meant `std::byte b{};`. Oh, right, stupid me...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15787
https://github.com/root-project/root/pull/15788:4,availability,failur,failures,4,The failures on Ubuntu 24 are very similar to those that led to https://github.com/root-project/root/pull/15415 . My first instinct is that the new global `gConvFactories` is not thread-safe and we are hitting this problem in distrdf as usual,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:4,deployability,fail,failures,4,The failures on Ubuntu 24 are very similar to those that led to https://github.com/root-project/root/pull/15415 . My first instinct is that the new global `gConvFactories` is not thread-safe and we are hitting this problem in distrdf as usual,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:4,performance,failur,failures,4,The failures on Ubuntu 24 are very similar to those that led to https://github.com/root-project/root/pull/15415 . My first instinct is that the new global `gConvFactories` is not thread-safe and we are hitting this problem in distrdf as usual,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:4,reliability,fail,failures,4,The failures on Ubuntu 24 are very similar to those that led to https://github.com/root-project/root/pull/15415 . My first instinct is that the new global `gConvFactories` is not thread-safe and we are hitting this problem in distrdf as usual,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:186,safety,safe,safe,186,The failures on Ubuntu 24 are very similar to those that led to https://github.com/root-project/root/pull/15415 . My first instinct is that the new global `gConvFactories` is not thread-safe and we are hitting this problem in distrdf as usual,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:143,usability,help,help,143,Thanks a lot for the insight! I'm trying now what happens when we register the converters and executors on the Python side. Maybe the GIL will help then!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:116,availability,state,statement,116,It works! Besides the small problem with `_finalSetup()` not being called when using the RDF namespace as the first statement in a macro. I'm fixing this up quickly,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:116,integrability,state,statement,116,It works! Besides the small problem with `_finalSetup()` not being called when using the RDF namespace as the first statement in a macro. I'm fixing this up quickly,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:300,deployability,depend,depend,300,"I have now avoided the interpreter call, which caused some performance regression. Then I did some benchmarking with:. ```bash. perf stat -r 100 -B python -c 'import ROOT; ROOT._finalSetup()'. ```. It takes about 0.45 seconds. But there is no significant difference with or without this PR (seems to depend on what else is running on my system at that moment I guess), sometimes one is faster sometimes the other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:300,integrability,depend,depend,300,"I have now avoided the interpreter call, which caused some performance regression. Then I did some benchmarking with:. ```bash. perf stat -r 100 -B python -c 'import ROOT; ROOT._finalSetup()'. ```. It takes about 0.45 seconds. But there is no significant difference with or without this PR (seems to depend on what else is running on my system at that moment I guess), sometimes one is faster sometimes the other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:300,modifiability,depend,depend,300,"I have now avoided the interpreter call, which caused some performance regression. Then I did some benchmarking with:. ```bash. perf stat -r 100 -B python -c 'import ROOT; ROOT._finalSetup()'. ```. It takes about 0.45 seconds. But there is no significant difference with or without this PR (seems to depend on what else is running on my system at that moment I guess), sometimes one is faster sometimes the other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:59,performance,perform,performance,59,"I have now avoided the interpreter call, which caused some performance regression. Then I did some benchmarking with:. ```bash. perf stat -r 100 -B python -c 'import ROOT; ROOT._finalSetup()'. ```. It takes about 0.45 seconds. But there is no significant difference with or without this PR (seems to depend on what else is running on my system at that moment I guess), sometimes one is faster sometimes the other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:11,safety,avoid,avoided,11,"I have now avoided the interpreter call, which caused some performance regression. Then I did some benchmarking with:. ```bash. perf stat -r 100 -B python -c 'import ROOT; ROOT._finalSetup()'. ```. It takes about 0.45 seconds. But there is no significant difference with or without this PR (seems to depend on what else is running on my system at that moment I guess), sometimes one is faster sometimes the other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:300,safety,depend,depend,300,"I have now avoided the interpreter call, which caused some performance regression. Then I did some benchmarking with:. ```bash. perf stat -r 100 -B python -c 'import ROOT; ROOT._finalSetup()'. ```. It takes about 0.45 seconds. But there is no significant difference with or without this PR (seems to depend on what else is running on my system at that moment I guess), sometimes one is faster sometimes the other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:243,security,sign,significant,243,"I have now avoided the interpreter call, which caused some performance regression. Then I did some benchmarking with:. ```bash. perf stat -r 100 -B python -c 'import ROOT; ROOT._finalSetup()'. ```. It takes about 0.45 seconds. But there is no significant difference with or without this PR (seems to depend on what else is running on my system at that moment I guess), sometimes one is faster sometimes the other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:71,testability,regress,regression,71,"I have now avoided the interpreter call, which caused some performance regression. Then I did some benchmarking with:. ```bash. perf stat -r 100 -B python -c 'import ROOT; ROOT._finalSetup()'. ```. It takes about 0.45 seconds. But there is no significant difference with or without this PR (seems to depend on what else is running on my system at that moment I guess), sometimes one is faster sometimes the other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:300,testability,depend,depend,300,"I have now avoided the interpreter call, which caused some performance regression. Then I did some benchmarking with:. ```bash. perf stat -r 100 -B python -c 'import ROOT; ROOT._finalSetup()'. ```. It takes about 0.45 seconds. But there is no significant difference with or without this PR (seems to depend on what else is running on my system at that moment I guess), sometimes one is faster sometimes the other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15788:59,usability,perform,performance,59,"I have now avoided the interpreter call, which caused some performance regression. Then I did some benchmarking with:. ```bash. perf stat -r 100 -B python -c 'import ROOT; ROOT._finalSetup()'. ```. It takes about 0.45 seconds. But there is no significant difference with or without this PR (seems to depend on what else is running on my system at that moment I guess), sometimes one is faster sometimes the other.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15788
https://github.com/root-project/root/pull/15790:32,safety,test,tested,32,Thanks for the PR. Is this code tested anywhere?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15790
https://github.com/root-project/root/pull/15790:32,testability,test,tested,32,Thanks for the PR. Is this code tested anywhere?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15790
https://github.com/root-project/root/issues/15791:22,integrability,repositor,repository,22,Fix applied in JSROOT repository. Soon it will appear in ROOT master and 6.32 branches. Thanks for reporting it!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15791
https://github.com/root-project/root/issues/15791:22,interoperability,repositor,repository,22,Fix applied in JSROOT repository. Soon it will appear in ROOT master and 6.32 branches. Thanks for reporting it!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15791
https://github.com/root-project/root/issues/15791:486,deployability,fail,fail,486,"Thanks. Did you see my feature request for having a way to draw the BinEntries histogram for TProfile and TProfile2D as well? Or would you like me to open a separate feature request issue for that? Essentially I'd like a way to do the equivalent of the following in the JSROOT widget: `prof->ProjectionXY(""_pxy"",""B"")->Draw(""...."")` ... this will allow us to draw the denominator distribution in cases where we use profiles for efficiencies (where the weight is 1 for a pass and 0 for a fail).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15791
https://github.com/root-project/root/issues/15791:59,energy efficiency,draw,draw,59,"Thanks. Did you see my feature request for having a way to draw the BinEntries histogram for TProfile and TProfile2D as well? Or would you like me to open a separate feature request issue for that? Essentially I'd like a way to do the equivalent of the following in the JSROOT widget: `prof->ProjectionXY(""_pxy"",""B"")->Draw(""...."")` ... this will allow us to draw the denominator distribution in cases where we use profiles for efficiencies (where the weight is 1 for a pass and 0 for a fail).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15791
https://github.com/root-project/root/issues/15791:318,energy efficiency,Draw,Draw,318,"Thanks. Did you see my feature request for having a way to draw the BinEntries histogram for TProfile and TProfile2D as well? Or would you like me to open a separate feature request issue for that? Essentially I'd like a way to do the equivalent of the following in the JSROOT widget: `prof->ProjectionXY(""_pxy"",""B"")->Draw(""...."")` ... this will allow us to draw the denominator distribution in cases where we use profiles for efficiencies (where the weight is 1 for a pass and 0 for a fail).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15791
https://github.com/root-project/root/issues/15791:358,energy efficiency,draw,draw,358,"Thanks. Did you see my feature request for having a way to draw the BinEntries histogram for TProfile and TProfile2D as well? Or would you like me to open a separate feature request issue for that? Essentially I'd like a way to do the equivalent of the following in the JSROOT widget: `prof->ProjectionXY(""_pxy"",""B"")->Draw(""...."")` ... this will allow us to draw the denominator distribution in cases where we use profiles for efficiencies (where the weight is 1 for a pass and 0 for a fail).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15791
https://github.com/root-project/root/issues/15791:414,energy efficiency,profil,profiles,414,"Thanks. Did you see my feature request for having a way to draw the BinEntries histogram for TProfile and TProfile2D as well? Or would you like me to open a separate feature request issue for that? Essentially I'd like a way to do the equivalent of the following in the JSROOT widget: `prof->ProjectionXY(""_pxy"",""B"")->Draw(""...."")` ... this will allow us to draw the denominator distribution in cases where we use profiles for efficiencies (where the weight is 1 for a pass and 0 for a fail).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15791
https://github.com/root-project/root/issues/15791:379,interoperability,distribut,distribution,379,"Thanks. Did you see my feature request for having a way to draw the BinEntries histogram for TProfile and TProfile2D as well? Or would you like me to open a separate feature request issue for that? Essentially I'd like a way to do the equivalent of the following in the JSROOT widget: `prof->ProjectionXY(""_pxy"",""B"")->Draw(""...."")` ... this will allow us to draw the denominator distribution in cases where we use profiles for efficiencies (where the weight is 1 for a pass and 0 for a fail).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15791
https://github.com/root-project/root/issues/15791:414,performance,profil,profiles,414,"Thanks. Did you see my feature request for having a way to draw the BinEntries histogram for TProfile and TProfile2D as well? Or would you like me to open a separate feature request issue for that? Essentially I'd like a way to do the equivalent of the following in the JSROOT widget: `prof->ProjectionXY(""_pxy"",""B"")->Draw(""...."")` ... this will allow us to draw the denominator distribution in cases where we use profiles for efficiencies (where the weight is 1 for a pass and 0 for a fail).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15791
https://github.com/root-project/root/issues/15791:486,reliability,fail,fail,486,"Thanks. Did you see my feature request for having a way to draw the BinEntries histogram for TProfile and TProfile2D as well? Or would you like me to open a separate feature request issue for that? Essentially I'd like a way to do the equivalent of the following in the JSROOT widget: `prof->ProjectionXY(""_pxy"",""B"")->Draw(""...."")` ... this will allow us to draw the denominator distribution in cases where we use profiles for efficiencies (where the weight is 1 for a pass and 0 for a fail).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15791
https://github.com/root-project/root/issues/15791:277,usability,widget,widget,277,"Thanks. Did you see my feature request for having a way to draw the BinEntries histogram for TProfile and TProfile2D as well? Or would you like me to open a separate feature request issue for that? Essentially I'd like a way to do the equivalent of the following in the JSROOT widget: `prof->ProjectionXY(""_pxy"",""B"")->Draw(""...."")` ... this will allow us to draw the denominator distribution in cases where we use profiles for efficiencies (where the weight is 1 for a pass and 0 for a fail).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15791
https://github.com/root-project/root/issues/15791:427,usability,efficien,efficiencies,427,"Thanks. Did you see my feature request for having a way to draw the BinEntries histogram for TProfile and TProfile2D as well? Or would you like me to open a separate feature request issue for that? Essentially I'd like a way to do the equivalent of the following in the JSROOT widget: `prof->ProjectionXY(""_pxy"",""B"")->Draw(""...."")` ... this will allow us to draw the denominator distribution in cases where we use profiles for efficiencies (where the weight is 1 for a pass and 0 for a fail).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15791
https://github.com/root-project/root/pull/15797:108,availability,failur,failures,108,"Thank you very much for your work, @egpbos! That's amazing progress! Do you know what's going on with these failures on macOS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:108,deployability,fail,failures,108,"Thank you very much for your work, @egpbos! That's amazing progress! Do you know what's going on with these failures on macOS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:108,performance,failur,failures,108,"Thank you very much for your work, @egpbos! That's amazing progress! Do you know what's going on with these failures on macOS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:108,reliability,fail,failures,108,"Thank you very much for your work, @egpbos! That's amazing progress! Do you know what's going on with these failures on macOS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:59,usability,progress,progress,59,"Thank you very much for your work, @egpbos! That's amazing progress! Do you know what's going on with these failures on macOS?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:77,availability,failur,failures,77,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:252,availability,failur,failures,252,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:345,availability,error,errors,345,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:77,deployability,fail,failures,77,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:117,deployability,build,build,117,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:252,deployability,fail,failures,252,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:275,deployability,fail,failing,275,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:409,deployability,fail,failing,409,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:77,performance,failur,failures,77,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:252,performance,failur,failures,252,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:345,performance,error,errors,345,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:77,reliability,fail,failures,77,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:252,reliability,fail,failures,252,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:275,reliability,fail,failing,275,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:409,reliability,fail,failing,409,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:285,safety,test,tests,285,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:345,safety,error,errors,345,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:417,safety,test,tests,417,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:285,testability,test,tests,285,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:417,testability,test,tests,417,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:345,usability,error,errors,345,"Unfortunately not. The fact that it's ARM and that we see half of those same failures also on the march=native alma9 build makes me suspect something to do with a wrong assumption on floating point arithmetic. However, the issue for those march=native failures (and the same failing 6 tests on mac ARM, which all seem to be small floating point errors) may be a different one than the one causing the other 6 failing tests on mac which are more mysterious (huge difference there).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:65,availability,error,error,65,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:134,deployability,fail,failing,134,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:305,deployability,fail,failed,305,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:362,integrability,messag,message,362,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:362,interoperability,messag,message,362,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:65,performance,error,error,65,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:134,reliability,fail,failing,134,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:305,reliability,fail,failed,305,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:65,safety,error,error,65,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:142,safety,test,tests,142,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:142,testability,test,tests,142,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:65,usability,error,error,65,"I just added an additional commit that adds functionality around error handling. It catches a corner case that may be relevant to the failing tests (so I hope it will add useful information from the prints in the CI runs), but that I think in any case should be checked for, because it's about a fit that failed but that Minuit reports as successful. See commit message for more info.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:223,availability,error,error,223,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:828,availability,error,errors,828,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:911,availability,error,error,911,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:687,energy efficiency,reduc,reduce,687,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:166,integrability,messag,message,166,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:750,integrability,messag,message,750,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:166,interoperability,messag,message,166,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:483,interoperability,specif,specific,483,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:624,interoperability,specif,specific,624,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:750,interoperability,messag,message,750,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:1313,interoperability,Format,Format,1313,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:1329,interoperability,format,formatting,1329,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:672,modifiability,refact,refactoring,672,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:796,modifiability,paramet,parameters,796,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:223,performance,error,error,223,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:504,performance,cach,cache-and-tracking,504,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:672,performance,refactor,refactoring,672,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:828,performance,error,errors,828,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:911,performance,error,error,911,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:223,safety,error,error,223,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:265,safety,test,tests,265,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:428,safety,test,tests,428,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:828,safety,error,errors,828,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:883,safety,valid,valid,883,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:911,safety,error,error,911,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:993,safety,valid,valid,993,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:265,testability,test,tests,265,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:428,testability,test,tests,428,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:223,usability,error,error,223,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:466,usability,interact,interacts,466,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:828,usability,error,errors,828,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:911,usability,error,error,911,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:1280,usability,document,documentation,1280,"While fixing the CI runs, I reordered the commits a bit as well:. 1. The first two commits are still separate from the main part of this PR, see description in first message. 3. The third commit is the actual meat: it adds error handling to MultiProcess, including tests. 4. The fourth commit is a bug fix, but since it is a rather rare bug that is only triggered in pathological cases (that I happened to trigger in one of the tests added in commit 3) and since it interacts with a specific other part (cache-and-tracking), I thought it was better to keep it separate, so that the commit can explain the rationale for that specific fix well. 5. Commit 5 is again a minor refactoring to reduce some duplicated code. 6. Commit 6 adds a strong warning message when fits end after only having tried parameters that give evaluation errors. In such a case, there will not actually be any valid value, but rather the error handling code will return zero as the function value. Minuit sees this as a valid function value and thinks the function converged and so RooFit would also think everything ended well. With this commit, at least a warning is issued. Perhaps this response should be stronger or weaker, that is up for discussion. 7. Commit 7 applies a recommendation from the Form documentation to replace it with Format. 8. Code formatting.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:24,availability,failur,failure,24,`alma9 march_native` CI failure not related to this PR (`roottest-root-hist-h2root` fails).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:24,deployability,fail,failure,24,`alma9 march_native` CI failure not related to this PR (`roottest-root-hist-h2root` fails).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:84,deployability,fail,fails,84,`alma9 march_native` CI failure not related to this PR (`roottest-root-hist-h2root` fails).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:24,performance,failur,failure,24,`alma9 march_native` CI failure not related to this PR (`roottest-root-hist-h2root` fails).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:24,reliability,fail,failure,24,`alma9 march_native` CI failure not related to this PR (`roottest-root-hist-h2root` fails).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:84,reliability,fail,fails,84,`alma9 march_native` CI failure not related to this PR (`roottest-root-hist-h2root` fails).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:10,safety,review,review,10,Ready for review :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:10,testability,review,review,10,Ready for review :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:13,integrability,compon,component-based,13,Switching to component-based splitting indeed fixed it. Will rebase the fixup commit into commit three now and force push the rebased commits.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:13,interoperability,compon,component-based,13,Switching to component-based splitting indeed fixed it. Will rebase the fixup commit into commit three now and force push the rebased commits.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/pull/15797:13,modifiability,compon,component-based,13,Switching to component-based splitting indeed fixed it. Will rebase the fixup commit into commit three now and force push the rebased commits.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15797
https://github.com/root-project/root/issues/15799:38,energy efficiency,green,green,38,"Thanks for the report! Once the CI is green, can you maybe check if this PR fixes the problem? * https://github.com/root-project/root/pull/15807",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:51,safety,test,test,51,I also checked with Python 3.13 on Arch Linux: the test is passing now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:51,testability,test,test,51,I also checked with Python 3.13 on Arch Linux: the test is passing now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:53,safety,test,test,53,> I also checked with Python 3.13 on Arch Linux: the test is passing now. It also works on Fedora. Thank you for addressing this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/issues/15799:53,testability,test,test,53,> I also checked with Python 3.13 on Arch Linux: the test is passing now. It also works on Fedora. Thank you for addressing this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15799
https://github.com/root-project/root/pull/15810:18,safety,test,test,18,Can we also add a test to avoid regressions in the future?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15810
https://github.com/root-project/root/pull/15810:26,safety,avoid,avoid,26,Can we also add a test to avoid regressions in the future?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15810
https://github.com/root-project/root/pull/15810:18,testability,test,test,18,Can we also add a test to avoid regressions in the future?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15810
https://github.com/root-project/root/pull/15810:32,testability,regress,regressions,32,Can we also add a test to avoid regressions in the future?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15810
https://github.com/root-project/root/pull/15810:36,safety,test,tests,36,"Good idea! While implementing these tests, I found also some other problems with these kind of roundtrips in existing unit tests. I'll introduce a test and also fix these other situations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15810
https://github.com/root-project/root/pull/15810:123,safety,test,tests,123,"Good idea! While implementing these tests, I found also some other problems with these kind of roundtrips in existing unit tests. I'll introduce a test and also fix these other situations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15810
https://github.com/root-project/root/pull/15810:147,safety,test,test,147,"Good idea! While implementing these tests, I found also some other problems with these kind of roundtrips in existing unit tests. I'll introduce a test and also fix these other situations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15810
https://github.com/root-project/root/pull/15810:36,testability,test,tests,36,"Good idea! While implementing these tests, I found also some other problems with these kind of roundtrips in existing unit tests. I'll introduce a test and also fix these other situations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15810
https://github.com/root-project/root/pull/15810:118,testability,unit,unit,118,"Good idea! While implementing these tests, I found also some other problems with these kind of roundtrips in existing unit tests. I'll introduce a test and also fix these other situations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15810
https://github.com/root-project/root/pull/15810:123,testability,test,tests,123,"Good idea! While implementing these tests, I found also some other problems with these kind of roundtrips in existing unit tests. I'll introduce a test and also fix these other situations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15810
https://github.com/root-project/root/pull/15810:147,testability,test,test,147,"Good idea! While implementing these tests, I found also some other problems with these kind of roundtrips in existing unit tests. I'll introduce a test and also fix these other situations.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15810
https://github.com/root-project/root/pull/15811:35,safety,avoid,avoid,35,Thanks for this nice PR! We try to avoid merge commits: could you please remove it? After that we can start the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15811
https://github.com/root-project/root/pull/15811:112,safety,test,tests,112,Thanks for this nice PR! We try to avoid merge commits: could you please remove it? After that we can start the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15811
https://github.com/root-project/root/pull/15811:112,testability,test,tests,112,Thanks for this nice PR! We try to avoid merge commits: could you please remove it? After that we can start the tests.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15811
https://github.com/root-project/root/pull/15812:580,deployability,build,build,580,"Sergey, all good questions, thank you :). > 1. Do we need to include all these fonts into ROOT repository? Font files are big and used only via random generator in tutorial. No, we can remove most of them, rebase and force-push to the branch. > 2. How to deal with other fonts? Maybe one can include one default font in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1386,energy efficiency,optim,optimizations,1386,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1516,energy efficiency,core,core,1516,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:95,integrability,repositor,repository,95,"Sergey, all good questions, thank you :). > 1. Do we need to include all these fonts into ROOT repository? Font files are big and used only via random generator in tutorial. No, we can remove most of them, rebase and force-push to the branch. > 2. How to deal with other fonts? Maybe one can include one default font in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:95,interoperability,repositor,repository,95,"Sergey, all good questions, thank you :). > 1. Do we need to include all these fonts into ROOT repository? Font files are big and used only via random generator in tutorial. No, we can remove most of them, rebase and force-push to the branch. > 2. How to deal with other fonts? Maybe one can include one default font in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1613,interoperability,format,formats,1613,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1374,performance,performance optim,performance optimizations,1374,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1454,performance,time,time,1454,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1548,security,hack,hack,1548,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:715,testability,understand,understand,715,"Sergey, all good questions, thank you :). > 1. Do we need to include all these fonts into ROOT repository? Font files are big and used only via random generator in tutorial. No, we can remove most of them, rebase and force-push to the branch. > 2. How to deal with other fonts? Maybe one can include one default font in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:995,testability,simpl,simple,995,"Sergey, all good questions, thank you :). > 1. Do we need to include all these fonts into ROOT repository? Font files are big and used only via random generator in tutorial. No, we can remove most of them, rebase and force-push to the branch. > 2. How to deal with other fonts? Maybe one can include one default font in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:2180,testability,understand,understand,2180,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:566,usability,tool,tool,566,"Sergey, all good questions, thank you :). > 1. Do we need to include all these fonts into ROOT repository? Font files are big and used only via random generator in tutorial. No, we can remove most of them, rebase and force-push to the branch. > 2. How to deal with other fonts? Maybe one can include one default font in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:769,usability,support,supported,769,"Sergey, all good questions, thank you :). > 1. Do we need to include all these fonts into ROOT repository? Font files are big and used only via random generator in tutorial. No, we can remove most of them, rebase and force-push to the branch. > 2. How to deal with other fonts? Maybe one can include one default font in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:830,usability,support,support,830,"Sergey, all good questions, thank you :). > 1. Do we need to include all these fonts into ROOT repository? Font files are big and used only via random generator in tutorial. No, we can remove most of them, rebase and force-push to the branch. > 2. How to deal with other fonts? Maybe one can include one default font in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:995,usability,simpl,simple,995,"Sergey, all good questions, thank you :). > 1. Do we need to include all these fonts into ROOT repository? Font files are big and used only via random generator in tutorial. No, we can remove most of them, rebase and force-push to the branch. > 2. How to deal with other fonts? Maybe one can include one default font in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1123,usability,support,supported,1123,"d used only via random generator in tutorial. No, we can remove most of them, rebase and force-push to the branch. > 2. How to deal with other fonts? Maybe one can include one default font in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1182,usability,support,support,1182,"emove most of them, rebase and force-push to the branch. > 2. How to deal with other fonts? Maybe one can include one default font in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I unders",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1353,usability,support,support,1353,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1374,usability,perform,performance,1374,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1594,usability,support,support,1594,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1766,usability,minim,minimal,1766,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1777,usability,support,support,1777,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1987,usability,support,supports,1987,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:2269,usability,usab,usable,2269,"nt in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found? Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option? This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:117,energy efficiency,reduc,reduce,117,> but at this point our priority is to get something usable in for the existing REve applications. Then I propose to reduce number of fonts - one or two for now. And think how one can allow to use external fonts - in this PR or may be later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:53,usability,usab,usable,53,> but at this point our priority is to get something usable in for the existing REve applications. Then I propose to reduce number of fonts - one or two for now. And think how one can allow to use external fonts - in this PR or may be later.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:38,energy efficiency,reduc,reduce,38,@linev I will add today the change to reduce the number of fonts. Just Serif and Mono Space type fonts in only regular style (no italic and bold).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:79,energy efficiency,reduc,reduce,79,@linev I have pushed changes. I have rebased to master and squashed commits to reduce the load on git repository. There are some pending changes from Matevz. Please wait for his commit.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:90,energy efficiency,load,load,90,@linev I have pushed changes. I have rebased to master and squashed commits to reduce the load on git repository. There are some pending changes from Matevz. Please wait for his commit.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:102,integrability,repositor,repository,102,@linev I have pushed changes. I have rebased to master and squashed commits to reduce the load on git repository. There are some pending changes from Matevz. Please wait for his commit.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:102,interoperability,repositor,repository,102,@linev I have pushed changes. I have rebased to master and squashed commits to reduce the load on git repository. There are some pending changes from Matevz. Please wait for his commit.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:90,performance,load,load,90,@linev I have pushed changes. I have rebased to master and squashed commits to reduce the load on git repository. There are some pending changes from Matevz. Please wait for his commit.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:304,availability,avail,available,304,"OK, I force-pushed a new version, now there are no SDF fonts in the repo -- but I have added two ttf fonts that have all the accented and greek characters. The creator of sdf font stuff is in `graf3d/gl` as it requires open-gl for rendering of the glyphs. `texts.C` demo will now make sure the fonts are available in the web server repo under `ui5/eve7/fonts/`. There is only one thing I couldn't figure out -- how to link against libpng ... so I just added `-lpng` into cmake file for `graf3d/gl/`. Please help me figure out how to do this correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:25,deployability,version,version,25,"OK, I force-pushed a new version, now there are no SDF fonts in the repo -- but I have added two ttf fonts that have all the accented and greek characters. The creator of sdf font stuff is in `graf3d/gl` as it requires open-gl for rendering of the glyphs. `texts.C` demo will now make sure the fonts are available in the web server repo under `ui5/eve7/fonts/`. There is only one thing I couldn't figure out -- how to link against libpng ... so I just added `-lpng` into cmake file for `graf3d/gl/`. Please help me figure out how to do this correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:25,integrability,version,version,25,"OK, I force-pushed a new version, now there are no SDF fonts in the repo -- but I have added two ttf fonts that have all the accented and greek characters. The creator of sdf font stuff is in `graf3d/gl` as it requires open-gl for rendering of the glyphs. `texts.C` demo will now make sure the fonts are available in the web server repo under `ui5/eve7/fonts/`. There is only one thing I couldn't figure out -- how to link against libpng ... so I just added `-lpng` into cmake file for `graf3d/gl/`. Please help me figure out how to do this correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:25,modifiability,version,version,25,"OK, I force-pushed a new version, now there are no SDF fonts in the repo -- but I have added two ttf fonts that have all the accented and greek characters. The creator of sdf font stuff is in `graf3d/gl` as it requires open-gl for rendering of the glyphs. `texts.C` demo will now make sure the fonts are available in the web server repo under `ui5/eve7/fonts/`. There is only one thing I couldn't figure out -- how to link against libpng ... so I just added `-lpng` into cmake file for `graf3d/gl/`. Please help me figure out how to do this correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:304,reliability,availab,available,304,"OK, I force-pushed a new version, now there are no SDF fonts in the repo -- but I have added two ttf fonts that have all the accented and greek characters. The creator of sdf font stuff is in `graf3d/gl` as it requires open-gl for rendering of the glyphs. `texts.C` demo will now make sure the fonts are available in the web server repo under `ui5/eve7/fonts/`. There is only one thing I couldn't figure out -- how to link against libpng ... so I just added `-lpng` into cmake file for `graf3d/gl/`. Please help me figure out how to do this correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:304,safety,avail,available,304,"OK, I force-pushed a new version, now there are no SDF fonts in the repo -- but I have added two ttf fonts that have all the accented and greek characters. The creator of sdf font stuff is in `graf3d/gl` as it requires open-gl for rendering of the glyphs. `texts.C` demo will now make sure the fonts are available in the web server repo under `ui5/eve7/fonts/`. There is only one thing I couldn't figure out -- how to link against libpng ... so I just added `-lpng` into cmake file for `graf3d/gl/`. Please help me figure out how to do this correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:304,security,availab,available,304,"OK, I force-pushed a new version, now there are no SDF fonts in the repo -- but I have added two ttf fonts that have all the accented and greek characters. The creator of sdf font stuff is in `graf3d/gl` as it requires open-gl for rendering of the glyphs. `texts.C` demo will now make sure the fonts are available in the web server repo under `ui5/eve7/fonts/`. There is only one thing I couldn't figure out -- how to link against libpng ... so I just added `-lpng` into cmake file for `graf3d/gl/`. Please help me figure out how to do this correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:507,usability,help,help,507,"OK, I force-pushed a new version, now there are no SDF fonts in the repo -- but I have added two ttf fonts that have all the accented and greek characters. The creator of sdf font stuff is in `graf3d/gl` as it requires open-gl for rendering of the glyphs. `texts.C` demo will now make sure the fonts are available in the web server repo under `ui5/eve7/fonts/`. There is only one thing I couldn't figure out -- how to link against libpng ... so I just added `-lpng` into cmake file for `graf3d/gl/`. Please help me figure out how to do this correctly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:184,deployability,depend,depends,184,"Sergey, semi-related, have been running with valgrind (root supressions on), and this came up:. ```. root [1] ==975849== Thread 8 civetweb-worker:. ==975849== Conditional jump or move depends on uninitialised value(s). ==975849== at 0x4CD6584: R__longest_match (ZDeflate.c:430). ==975849== by 0x4CD6EA8: R__Deflate (ZDeflate.c:677). ==975849== by 0x4CD6084: R__memcompress (Bits.c:329). ==975849== by 0x22699978: THttpCallArg::CompressWithGzip() (THttpCallArg.cxx:420). ==975849== by 0x22693E4F: begin_request_handler(mg_connection*, void*) (TCivetweb.cxx:467). ==975849== by 0x226CCE61: handle_request (civetweb.c:14331). ==975849== by 0x226BCF09: handle_request_stat_log (civetweb.c:6544). ==975849== by 0x226D3421: process_new_connection (civetweb.c:18629). ==975849== by 0x226D4038: worker_thread_run (civetweb.c:19036). ==975849== by 0x226D416F: worker_thread (civetweb.c:19097). ==975849== by 0x535D896: start_thread (pthread_create.c:444). ==975849== by 0x53E48C3: clone (clone.S:100). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:184,integrability,depend,depends,184,"Sergey, semi-related, have been running with valgrind (root supressions on), and this came up:. ```. root [1] ==975849== Thread 8 civetweb-worker:. ==975849== Conditional jump or move depends on uninitialised value(s). ==975849== at 0x4CD6584: R__longest_match (ZDeflate.c:430). ==975849== by 0x4CD6EA8: R__Deflate (ZDeflate.c:677). ==975849== by 0x4CD6084: R__memcompress (Bits.c:329). ==975849== by 0x22699978: THttpCallArg::CompressWithGzip() (THttpCallArg.cxx:420). ==975849== by 0x22693E4F: begin_request_handler(mg_connection*, void*) (TCivetweb.cxx:467). ==975849== by 0x226CCE61: handle_request (civetweb.c:14331). ==975849== by 0x226BCF09: handle_request_stat_log (civetweb.c:6544). ==975849== by 0x226D3421: process_new_connection (civetweb.c:18629). ==975849== by 0x226D4038: worker_thread_run (civetweb.c:19036). ==975849== by 0x226D416F: worker_thread (civetweb.c:19097). ==975849== by 0x535D896: start_thread (pthread_create.c:444). ==975849== by 0x53E48C3: clone (clone.S:100). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:184,modifiability,depend,depends,184,"Sergey, semi-related, have been running with valgrind (root supressions on), and this came up:. ```. root [1] ==975849== Thread 8 civetweb-worker:. ==975849== Conditional jump or move depends on uninitialised value(s). ==975849== at 0x4CD6584: R__longest_match (ZDeflate.c:430). ==975849== by 0x4CD6EA8: R__Deflate (ZDeflate.c:677). ==975849== by 0x4CD6084: R__memcompress (Bits.c:329). ==975849== by 0x22699978: THttpCallArg::CompressWithGzip() (THttpCallArg.cxx:420). ==975849== by 0x22693E4F: begin_request_handler(mg_connection*, void*) (TCivetweb.cxx:467). ==975849== by 0x226CCE61: handle_request (civetweb.c:14331). ==975849== by 0x226BCF09: handle_request_stat_log (civetweb.c:6544). ==975849== by 0x226D3421: process_new_connection (civetweb.c:18629). ==975849== by 0x226D4038: worker_thread_run (civetweb.c:19036). ==975849== by 0x226D416F: worker_thread (civetweb.c:19097). ==975849== by 0x535D896: start_thread (pthread_create.c:444). ==975849== by 0x53E48C3: clone (clone.S:100). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:184,safety,depend,depends,184,"Sergey, semi-related, have been running with valgrind (root supressions on), and this came up:. ```. root [1] ==975849== Thread 8 civetweb-worker:. ==975849== Conditional jump or move depends on uninitialised value(s). ==975849== at 0x4CD6584: R__longest_match (ZDeflate.c:430). ==975849== by 0x4CD6EA8: R__Deflate (ZDeflate.c:677). ==975849== by 0x4CD6084: R__memcompress (Bits.c:329). ==975849== by 0x22699978: THttpCallArg::CompressWithGzip() (THttpCallArg.cxx:420). ==975849== by 0x22693E4F: begin_request_handler(mg_connection*, void*) (TCivetweb.cxx:467). ==975849== by 0x226CCE61: handle_request (civetweb.c:14331). ==975849== by 0x226BCF09: handle_request_stat_log (civetweb.c:6544). ==975849== by 0x226D3421: process_new_connection (civetweb.c:18629). ==975849== by 0x226D4038: worker_thread_run (civetweb.c:19036). ==975849== by 0x226D416F: worker_thread (civetweb.c:19097). ==975849== by 0x535D896: start_thread (pthread_create.c:444). ==975849== by 0x53E48C3: clone (clone.S:100). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:184,testability,depend,depends,184,"Sergey, semi-related, have been running with valgrind (root supressions on), and this came up:. ```. root [1] ==975849== Thread 8 civetweb-worker:. ==975849== Conditional jump or move depends on uninitialised value(s). ==975849== at 0x4CD6584: R__longest_match (ZDeflate.c:430). ==975849== by 0x4CD6EA8: R__Deflate (ZDeflate.c:677). ==975849== by 0x4CD6084: R__memcompress (Bits.c:329). ==975849== by 0x22699978: THttpCallArg::CompressWithGzip() (THttpCallArg.cxx:420). ==975849== by 0x22693E4F: begin_request_handler(mg_connection*, void*) (TCivetweb.cxx:467). ==975849== by 0x226CCE61: handle_request (civetweb.c:14331). ==975849== by 0x226BCF09: handle_request_stat_log (civetweb.c:6544). ==975849== by 0x226D3421: process_new_connection (civetweb.c:18629). ==975849== by 0x226D4038: worker_thread_run (civetweb.c:19036). ==975849== by 0x226D416F: worker_thread (civetweb.c:19097). ==975849== by 0x535D896: start_thread (pthread_create.c:444). ==975849== by 0x53E48C3: clone (clone.S:100). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:466,availability,avail,available,466,"Yeah, they probably do some quirky simd stuff in there :). I realized yesterday that the stuff for creation of sdf textures always puts them in $ROOTSYS/ui5/eve7/ ... which will not be writable for experiment-wide / cvmfs installs. Would it be possible to do something like this:. 1. if $ROOTSYS/ is not writable, write to ./fonts/;. 2. forward requests for files in $ROOTSYS/ui5/eve7/ to some REveManager function that can then check where these fonts are actually available and route the GET to the proper local file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:222,deployability,instal,installs,222,"Yeah, they probably do some quirky simd stuff in there :). I realized yesterday that the stuff for creation of sdf textures always puts them in $ROOTSYS/ui5/eve7/ ... which will not be writable for experiment-wide / cvmfs installs. Would it be possible to do something like this:. 1. if $ROOTSYS/ is not writable, write to ./fonts/;. 2. forward requests for files in $ROOTSYS/ui5/eve7/ to some REveManager function that can then check where these fonts are actually available and route the GET to the proper local file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:480,integrability,rout,route,480,"Yeah, they probably do some quirky simd stuff in there :). I realized yesterday that the stuff for creation of sdf textures always puts them in $ROOTSYS/ui5/eve7/ ... which will not be writable for experiment-wide / cvmfs installs. Would it be possible to do something like this:. 1. if $ROOTSYS/ is not writable, write to ./fonts/;. 2. forward requests for files in $ROOTSYS/ui5/eve7/ to some REveManager function that can then check where these fonts are actually available and route the GET to the proper local file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:466,reliability,availab,available,466,"Yeah, they probably do some quirky simd stuff in there :). I realized yesterday that the stuff for creation of sdf textures always puts them in $ROOTSYS/ui5/eve7/ ... which will not be writable for experiment-wide / cvmfs installs. Would it be possible to do something like this:. 1. if $ROOTSYS/ is not writable, write to ./fonts/;. 2. forward requests for files in $ROOTSYS/ui5/eve7/ to some REveManager function that can then check where these fonts are actually available and route the GET to the proper local file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:466,safety,avail,available,466,"Yeah, they probably do some quirky simd stuff in there :). I realized yesterday that the stuff for creation of sdf textures always puts them in $ROOTSYS/ui5/eve7/ ... which will not be writable for experiment-wide / cvmfs installs. Would it be possible to do something like this:. 1. if $ROOTSYS/ is not writable, write to ./fonts/;. 2. forward requests for files in $ROOTSYS/ui5/eve7/ to some REveManager function that can then check where these fonts are actually available and route the GET to the proper local file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:466,security,availab,available,466,"Yeah, they probably do some quirky simd stuff in there :). I realized yesterday that the stuff for creation of sdf textures always puts them in $ROOTSYS/ui5/eve7/ ... which will not be writable for experiment-wide / cvmfs installs. Would it be possible to do something like this:. 1. if $ROOTSYS/ is not writable, write to ./fonts/;. 2. forward requests for files in $ROOTSYS/ui5/eve7/ to some REveManager function that can then check where these fonts are actually available and route the GET to the proper local file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:377,availability,avail,available,377,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:263,deployability,version,version,263,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:699,deployability,modul,modules,699,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:263,integrability,version,version,263,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:307,interoperability,conflict,conflict,307,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:263,modifiability,version,version,263,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:699,modifiability,modul,modules,699,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:377,reliability,availab,available,377,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:377,safety,avail,available,377,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:699,safety,modul,modules,699,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:377,security,availab,available,377,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:195,testability,simpl,simple,195,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:143,usability,help,help,143,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:195,usability,simpl,simple,195,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:605,usability,custom,custom,605,"> There is only one thing I couldn't figure out -- how to link against libpng ... so I just added -lpng into cmake file for graf3d/gl/. Please help me figure out how to do this correctly. Not so simple. Sometime ROOT uses system-wide `libpng`, sometime - builtin version included in `ASImage`. And they can conflict with each other. Major problem - builtin with ASImage is not available from outside. You have to ensure that your code not linked with `ASImage`. And provide in your CMakeLists.txt file construct like. ```. find_Package(PNG). # handle include directories. ```. Because you may need to use custom include directories. See [here](https://github.com/root-project/root/blob/master/cmake/modules/SearchInstalledSoftware.cmake#L403-L410)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:380,availability,avail,available,380,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory. http server uses `http://server/currentdir/` alias for files from current directory. One can use it to load fonts. The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:86,energy efficiency,load,load,86,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory. http server uses `http://server/currentdir/` alias for files from current directory. One can use it to load fonts. The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:102,energy efficiency,current,current,102,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory. http server uses `http://server/currentdir/` alias for files from current directory. One can use it to load fonts. The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:153,energy efficiency,current,currentdir,153,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory. http server uses `http://server/currentdir/` alias for files from current directory. One can use it to load fonts. The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:187,energy efficiency,current,current,187,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory. http server uses `http://server/currentdir/` alias for files from current directory. One can use it to load fonts. The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:224,energy efficiency,load,load,224,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory. http server uses `http://server/currentdir/` alias for files from current directory. One can use it to load fonts. The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:86,performance,load,load,86,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory. http server uses `http://server/currentdir/` alias for files from current directory. One can use it to load fonts. The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:224,performance,load,load,224,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory. http server uses `http://server/currentdir/` alias for files from current directory. One can use it to load fonts. The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:380,reliability,availab,available,380,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory. http server uses `http://server/currentdir/` alias for files from current directory. One can use it to load fonts. The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:380,safety,avail,available,380,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory. http server uses `http://server/currentdir/` alias for files from current directory. One can use it to load fonts. The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:329,security,secur,security,329,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory. http server uses `http://server/currentdir/` alias for files from current directory. One can use it to load fonts. The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:380,security,availab,available,380,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory. http server uses `http://server/currentdir/` alias for files from current directory. One can use it to load fonts. The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1185,deployability,depend,dependency,1185,"Hmmh, but then I'd need to stream path information with every REveText object, now only the font name is streamed. It is indeed a reasonable thing to check if the font files exist before object's json is sent over to the client --- but creating a font during the streaming traversal would be pushing it a bit. Is it possible to register custom prefixes and callbacks from REveManager (via RWebWindow) so they can be handled when requests come in? Like: http://server/sdf-fonts/. I went through the code a bit (but clearly do not have the full picture) ... one way would be to add THttpServer::fActiveLocations, where instead of replacement string one provides a lambda [](TString& prefix, TString& reminder, THttpRequest& req, THttpServer &srv) so one can then do appropriate lookup in the callback, potentially generating the font, and then calling srv->SendFile() (or sending back the default font, if the desired one can not be found/generated). I think this functionality could be useful for other cases in REve, where semi-static data needs to be provided. The font-generation code in REveText invokes TGL generator through the interpreter now, via gROOT->ProcessLine(), to avoid dependency of REve on RGL. Is this OK to do from a request handler thread or should cross-thread request to the main thread be made (and request told to try again in N seconds)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1185,integrability,depend,dependency,1185,"Hmmh, but then I'd need to stream path information with every REveText object, now only the font name is streamed. It is indeed a reasonable thing to check if the font files exist before object's json is sent over to the client --- but creating a font during the streaming traversal would be pushing it a bit. Is it possible to register custom prefixes and callbacks from REveManager (via RWebWindow) so they can be handled when requests come in? Like: http://server/sdf-fonts/. I went through the code a bit (but clearly do not have the full picture) ... one way would be to add THttpServer::fActiveLocations, where instead of replacement string one provides a lambda [](TString& prefix, TString& reminder, THttpRequest& req, THttpServer &srv) so one can then do appropriate lookup in the callback, potentially generating the font, and then calling srv->SendFile() (or sending back the default font, if the desired one can not be found/generated). I think this functionality could be useful for other cases in REve, where semi-static data needs to be provided. The font-generation code in REveText invokes TGL generator through the interpreter now, via gROOT->ProcessLine(), to avoid dependency of REve on RGL. Is this OK to do from a request handler thread or should cross-thread request to the main thread be made (and request told to try again in N seconds)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1185,modifiability,depend,dependency,1185,"Hmmh, but then I'd need to stream path information with every REveText object, now only the font name is streamed. It is indeed a reasonable thing to check if the font files exist before object's json is sent over to the client --- but creating a font during the streaming traversal would be pushing it a bit. Is it possible to register custom prefixes and callbacks from REveManager (via RWebWindow) so they can be handled when requests come in? Like: http://server/sdf-fonts/. I went through the code a bit (but clearly do not have the full picture) ... one way would be to add THttpServer::fActiveLocations, where instead of replacement string one provides a lambda [](TString& prefix, TString& reminder, THttpRequest& req, THttpServer &srv) so one can then do appropriate lookup in the callback, potentially generating the font, and then calling srv->SendFile() (or sending back the default font, if the desired one can not be found/generated). I think this functionality could be useful for other cases in REve, where semi-static data needs to be provided. The font-generation code in REveText invokes TGL generator through the interpreter now, via gROOT->ProcessLine(), to avoid dependency of REve on RGL. Is this OK to do from a request handler thread or should cross-thread request to the main thread be made (and request told to try again in N seconds)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1179,safety,avoid,avoid,1179,"Hmmh, but then I'd need to stream path information with every REveText object, now only the font name is streamed. It is indeed a reasonable thing to check if the font files exist before object's json is sent over to the client --- but creating a font during the streaming traversal would be pushing it a bit. Is it possible to register custom prefixes and callbacks from REveManager (via RWebWindow) so they can be handled when requests come in? Like: http://server/sdf-fonts/. I went through the code a bit (but clearly do not have the full picture) ... one way would be to add THttpServer::fActiveLocations, where instead of replacement string one provides a lambda [](TString& prefix, TString& reminder, THttpRequest& req, THttpServer &srv) so one can then do appropriate lookup in the callback, potentially generating the font, and then calling srv->SendFile() (or sending back the default font, if the desired one can not be found/generated). I think this functionality could be useful for other cases in REve, where semi-static data needs to be provided. The font-generation code in REveText invokes TGL generator through the interpreter now, via gROOT->ProcessLine(), to avoid dependency of REve on RGL. Is this OK to do from a request handler thread or should cross-thread request to the main thread be made (and request told to try again in N seconds)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1185,safety,depend,dependency,1185,"Hmmh, but then I'd need to stream path information with every REveText object, now only the font name is streamed. It is indeed a reasonable thing to check if the font files exist before object's json is sent over to the client --- but creating a font during the streaming traversal would be pushing it a bit. Is it possible to register custom prefixes and callbacks from REveManager (via RWebWindow) so they can be handled when requests come in? Like: http://server/sdf-fonts/. I went through the code a bit (but clearly do not have the full picture) ... one way would be to add THttpServer::fActiveLocations, where instead of replacement string one provides a lambda [](TString& prefix, TString& reminder, THttpRequest& req, THttpServer &srv) so one can then do appropriate lookup in the callback, potentially generating the font, and then calling srv->SendFile() (or sending back the default font, if the desired one can not be found/generated). I think this functionality could be useful for other cases in REve, where semi-static data needs to be provided. The font-generation code in REveText invokes TGL generator through the interpreter now, via gROOT->ProcessLine(), to avoid dependency of REve on RGL. Is this OK to do from a request handler thread or should cross-thread request to the main thread be made (and request told to try again in N seconds)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1185,testability,depend,dependency,1185,"Hmmh, but then I'd need to stream path information with every REveText object, now only the font name is streamed. It is indeed a reasonable thing to check if the font files exist before object's json is sent over to the client --- but creating a font during the streaming traversal would be pushing it a bit. Is it possible to register custom prefixes and callbacks from REveManager (via RWebWindow) so they can be handled when requests come in? Like: http://server/sdf-fonts/. I went through the code a bit (but clearly do not have the full picture) ... one way would be to add THttpServer::fActiveLocations, where instead of replacement string one provides a lambda [](TString& prefix, TString& reminder, THttpRequest& req, THttpServer &srv) so one can then do appropriate lookup in the callback, potentially generating the font, and then calling srv->SendFile() (or sending back the default font, if the desired one can not be found/generated). I think this functionality could be useful for other cases in REve, where semi-static data needs to be provided. The font-generation code in REveText invokes TGL generator through the interpreter now, via gROOT->ProcessLine(), to avoid dependency of REve on RGL. Is this OK to do from a request handler thread or should cross-thread request to the main thread be made (and request told to try again in N seconds)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:337,usability,custom,custom,337,"Hmmh, but then I'd need to stream path information with every REveText object, now only the font name is streamed. It is indeed a reasonable thing to check if the font files exist before object's json is sent over to the client --- but creating a font during the streaming traversal would be pushing it a bit. Is it possible to register custom prefixes and callbacks from REveManager (via RWebWindow) so they can be handled when requests come in? Like: http://server/sdf-fonts/. I went through the code a bit (but clearly do not have the full picture) ... one way would be to add THttpServer::fActiveLocations, where instead of replacement string one provides a lambda [](TString& prefix, TString& reminder, THttpRequest& req, THttpServer &srv) so one can then do appropriate lookup in the callback, potentially generating the font, and then calling srv->SendFile() (or sending back the default font, if the desired one can not be found/generated). I think this functionality could be useful for other cases in REve, where semi-static data needs to be provided. The font-generation code in REveText invokes TGL generator through the interpreter now, via gROOT->ProcessLine(), to avoid dependency of REve on RGL. Is this OK to do from a request handler thread or should cross-thread request to the main thread be made (and request told to try again in N seconds)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:514,usability,clear,clearly,514,"Hmmh, but then I'd need to stream path information with every REveText object, now only the font name is streamed. It is indeed a reasonable thing to check if the font files exist before object's json is sent over to the client --- but creating a font during the streaming traversal would be pushing it a bit. Is it possible to register custom prefixes and callbacks from REveManager (via RWebWindow) so they can be handled when requests come in? Like: http://server/sdf-fonts/. I went through the code a bit (but clearly do not have the full picture) ... one way would be to add THttpServer::fActiveLocations, where instead of replacement string one provides a lambda [](TString& prefix, TString& reminder, THttpRequest& req, THttpServer &srv) so one can then do appropriate lookup in the callback, potentially generating the font, and then calling srv->SendFile() (or sending back the default font, if the desired one can not be found/generated). I think this functionality could be useful for other cases in REve, where semi-static data needs to be provided. The font-generation code in REveText invokes TGL generator through the interpreter now, via gROOT->ProcessLine(), to avoid dependency of REve on RGL. Is this OK to do from a request handler thread or should cross-thread request to the main thread be made (and request told to try again in N seconds)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:318,deployability,automat,automatically,318,"In my mind, procedure can be:. 1. Before starting server and display window, one creates fonts from TTF file and put them in current directory. Like `REveManager::CreateFonts(....)`. 2. Enable usage of current dir with `win.SetUseCurrentDir(true)`. 3. Font name is file name. If font name does not include path - then automatically `currentdir/` is prepended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:125,energy efficiency,current,current,125,"In my mind, procedure can be:. 1. Before starting server and display window, one creates fonts from TTF file and put them in current directory. Like `REveManager::CreateFonts(....)`. 2. Enable usage of current dir with `win.SetUseCurrentDir(true)`. 3. Font name is file name. If font name does not include path - then automatically `currentdir/` is prepended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:202,energy efficiency,current,current,202,"In my mind, procedure can be:. 1. Before starting server and display window, one creates fonts from TTF file and put them in current directory. Like `REveManager::CreateFonts(....)`. 2. Enable usage of current dir with `win.SetUseCurrentDir(true)`. 3. Font name is file name. If font name does not include path - then automatically `currentdir/` is prepended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:333,energy efficiency,current,currentdir,333,"In my mind, procedure can be:. 1. Before starting server and display window, one creates fonts from TTF file and put them in current directory. Like `REveManager::CreateFonts(....)`. 2. Enable usage of current dir with `win.SetUseCurrentDir(true)`. 3. Font name is file name. If font name does not include path - then automatically `currentdir/` is prepended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:289,reliability,doe,does,289,"In my mind, procedure can be:. 1. Before starting server and display window, one creates fonts from TTF file and put them in current directory. Like `REveManager::CreateFonts(....)`. 2. Enable usage of current dir with `win.SetUseCurrentDir(true)`. 3. Font name is file name. If font name does not include path - then automatically `currentdir/` is prepended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:318,testability,automat,automatically,318,"In my mind, procedure can be:. 1. Before starting server and display window, one creates fonts from TTF file and put them in current directory. Like `REveManager::CreateFonts(....)`. 2. Enable usage of current dir with `win.SetUseCurrentDir(true)`. 3. Font name is file name. If font name does not include path - then automatically `currentdir/` is prepended.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:92,security,access,accessing,92,"Hmmh, so you don't want to give me an active directory? :). This could be really useful for accessing large tables per-partes ... or pre-processed parts of geometry, you know ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:241,energy efficiency,current,currentdir,241,"> Hmmh, so you don't want to give me an active directory? :). For the moment there is no direct support of such feature with `RWebWindow`. But can be provided - if really necessary. In my mind, solution with direct access of font files via `currentdir/` path is much clear. And does not require any extra threads locking. You always can implement active directory - but does it necessary with fonts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:313,performance,lock,locking,313,"> Hmmh, so you don't want to give me an active directory? :). For the moment there is no direct support of such feature with `RWebWindow`. But can be provided - if really necessary. In my mind, solution with direct access of font files via `currentdir/` path is much clear. And does not require any extra threads locking. You always can implement active directory - but does it necessary with fonts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:278,reliability,doe,does,278,"> Hmmh, so you don't want to give me an active directory? :). For the moment there is no direct support of such feature with `RWebWindow`. But can be provided - if really necessary. In my mind, solution with direct access of font files via `currentdir/` path is much clear. And does not require any extra threads locking. You always can implement active directory - but does it necessary with fonts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:370,reliability,doe,does,370,"> Hmmh, so you don't want to give me an active directory? :). For the moment there is no direct support of such feature with `RWebWindow`. But can be provided - if really necessary. In my mind, solution with direct access of font files via `currentdir/` path is much clear. And does not require any extra threads locking. You always can implement active directory - but does it necessary with fonts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:215,security,access,access,215,"> Hmmh, so you don't want to give me an active directory? :). For the moment there is no direct support of such feature with `RWebWindow`. But can be provided - if really necessary. In my mind, solution with direct access of font files via `currentdir/` path is much clear. And does not require any extra threads locking. You always can implement active directory - but does it necessary with fonts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:313,security,lock,locking,313,"> Hmmh, so you don't want to give me an active directory? :). For the moment there is no direct support of such feature with `RWebWindow`. But can be provided - if really necessary. In my mind, solution with direct access of font files via `currentdir/` path is much clear. And does not require any extra threads locking. You always can implement active directory - but does it necessary with fonts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:96,usability,support,support,96,"> Hmmh, so you don't want to give me an active directory? :). For the moment there is no direct support of such feature with `RWebWindow`. But can be provided - if really necessary. In my mind, solution with direct access of font files via `currentdir/` path is much clear. And does not require any extra threads locking. You always can implement active directory - but does it necessary with fonts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:267,usability,clear,clear,267,"> Hmmh, so you don't want to give me an active directory? :). For the moment there is no direct support of such feature with `RWebWindow`. But can be provided - if really necessary. In my mind, solution with direct access of font files via `currentdir/` path is much clear. And does not require any extra threads locking. You always can implement active directory - but does it necessary with fonts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:142,interoperability,specif,specify,142,OK ... done. I have used THttpServer::AddLocation() to register sdf-fonts/ to either $ROOTSYS/ui5/eve7/sdf-fonts or ./sdf-fonts. One can also specify the location manually through REveText::SetSdfFontDir().,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:182,availability,Error,Error,182,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:262,availability,error,error,262,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:855,availability,down,download,855,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:18,deployability,build,builds,18,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:100,deployability,Build,Building,100,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:452,deployability,build,build,452,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:480,deployability,instal,install,480,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:525,deployability,build,builds,525,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:572,deployability,build,build,572,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:578,deployability,log,log,578,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:897,deployability,updat,update,897,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:937,deployability,patch,patch,937,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1163,deployability,log,log,1163,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1186,deployability,build,build,1186,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1229,deployability,build,build,1229,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1345,deployability,build,build,1345,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1353,deployability,log,log,1353,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1376,deployability,instal,install,1376,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1421,deployability,instal,install,1421,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1539,deployability,instal,install,1539,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1549,deployability,log,log,1549,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1656,deployability,Build,Building,1656,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1744,deployability,Build,Building,1744,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1829,deployability,Build,Building,1829,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:984,integrability,configur,configure,984,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1031,integrability,configur,configure,1031,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1151,integrability,configur,configure,1151,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1930,interoperability,share,shared,1930,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:984,modifiability,configur,configure,984,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1031,modifiability,configur,configure,1031,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1151,modifiability,configur,configure,1151,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:182,performance,Error,Error,182,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:262,performance,error,error,262,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:844,performance,Perform,Performing,844,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:973,performance,Perform,Performing,973,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1175,performance,Perform,Performing,1175,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1365,performance,Perform,Performing,1365,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:182,safety,Error,Error,182,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:262,safety,error,error,262,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:578,safety,log,log,578,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:897,safety,updat,update,897,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:937,safety,patch,patch,937,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1163,safety,log,log,1163,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1353,safety,log,log,1353,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1549,safety,log,log,1549,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1561,safety,Compl,Completed,1561,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:578,security,log,log,578,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:897,security,updat,update,897,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:937,security,patch,patch,937,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:984,security,configur,configure,984,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1031,security,configur,configure,1031,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1151,security,configur,configure,1151,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1163,security,log,log,1163,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1353,security,log,log,1353,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1549,security,log,log,1549,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1561,security,Compl,Completed,1561,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:578,testability,log,log,578,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1163,testability,log,log,1163,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1353,testability,log,log,1353,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1549,testability,log,log,1549,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:182,usability,Error,Error,182,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:262,usability,error,error,262,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:844,usability,Perform,Performing,844,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:973,usability,Perform,Performing,973,"Hmmh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. `",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1041,usability,command,command,1041,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1175,usability,Perform,Performing,1175,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1235,usability,command,command,1235,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1365,usability,Perform,Performing,1365,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:1429,usability,command,command,1429,"mh, it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:. ```. [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory. 3 | #include <afterrootpngwrite.h>. | ^~~~~~~~~~~~~~~~~~~~~. compilation terminated. ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here? The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):. ```. [ 0%] Built target AFTERIMAGE. ```. while mine has (grepped out AFTERIMAGE parts):. ```. [ 0%] Creating directories for 'AFTERIMAGE'. [ 2%] Performing download step for 'AFTERIMAGE'. [ 10%] No update step for 'AFTERIMAGE'. [ 12%] No patch step for 'AFTERIMAGE'. [ 16%] Performing configure step for 'AFTERIMAGE'. -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log. [ 85%] Performing build step for 'AFTERIMAGE'. -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log. [ 97%] Performing install step for 'AFTERIMAGE'. -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log. [ 97%] Completed 'AFTERIMAGE'. [ 97%] Built target AFTERIMAGE. [ 97%] Built target G__ASImage. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o. [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o. [ 97%] Linking CXX shared library ../../lib/libASImage.so. [ 97%] Built target ASImage. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:59,deployability,build,builds,59,"Oh, I see now ... builtin_afterimage is not used in the CI builds -- and might or might not be used in an arbitrary build. That means my changes can ***not*** go into libAfterImage after all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:116,deployability,build,build,116,"Oh, I see now ... builtin_afterimage is not used in the CI builds -- and might or might not be used in an arbitrary build. That means my changes can ***not*** go into libAfterImage after all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:96,deployability,build,build,96,Vincenzo told me `builtin_afterimage` is always on now ... and Danilo told me to add the `clean build` tag. Now things seem to be building as expected on linuxen. Something still goes wrong on macs but there is not much info in the [CI log](https://github.com/root-project/root/actions/runs/10101821047/job/27936164875?pr=15812#step:5:6050) ... it says there is some more in the actual log file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:130,deployability,build,building,130,Vincenzo told me `builtin_afterimage` is always on now ... and Danilo told me to add the `clean build` tag. Now things seem to be building as expected on linuxen. Something still goes wrong on macs but there is not much info in the [CI log](https://github.com/root-project/root/actions/runs/10101821047/job/27936164875?pr=15812#step:5:6050) ... it says there is some more in the actual log file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:236,deployability,log,log,236,Vincenzo told me `builtin_afterimage` is always on now ... and Danilo told me to add the `clean build` tag. Now things seem to be building as expected on linuxen. Something still goes wrong on macs but there is not much info in the [CI log](https://github.com/root-project/root/actions/runs/10101821047/job/27936164875?pr=15812#step:5:6050) ... it says there is some more in the actual log file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:386,deployability,log,log,386,Vincenzo told me `builtin_afterimage` is always on now ... and Danilo told me to add the `clean build` tag. Now things seem to be building as expected on linuxen. Something still goes wrong on macs but there is not much info in the [CI log](https://github.com/root-project/root/actions/runs/10101821047/job/27936164875?pr=15812#step:5:6050) ... it says there is some more in the actual log file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:236,safety,log,log,236,Vincenzo told me `builtin_afterimage` is always on now ... and Danilo told me to add the `clean build` tag. Now things seem to be building as expected on linuxen. Something still goes wrong on macs but there is not much info in the [CI log](https://github.com/root-project/root/actions/runs/10101821047/job/27936164875?pr=15812#step:5:6050) ... it says there is some more in the actual log file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:386,safety,log,log,386,Vincenzo told me `builtin_afterimage` is always on now ... and Danilo told me to add the `clean build` tag. Now things seem to be building as expected on linuxen. Something still goes wrong on macs but there is not much info in the [CI log](https://github.com/root-project/root/actions/runs/10101821047/job/27936164875?pr=15812#step:5:6050) ... it says there is some more in the actual log file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:236,security,log,log,236,Vincenzo told me `builtin_afterimage` is always on now ... and Danilo told me to add the `clean build` tag. Now things seem to be building as expected on linuxen. Something still goes wrong on macs but there is not much info in the [CI log](https://github.com/root-project/root/actions/runs/10101821047/job/27936164875?pr=15812#step:5:6050) ... it says there is some more in the actual log file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:386,security,log,log,386,Vincenzo told me `builtin_afterimage` is always on now ... and Danilo told me to add the `clean build` tag. Now things seem to be building as expected on linuxen. Something still goes wrong on macs but there is not much info in the [CI log](https://github.com/root-project/root/actions/runs/10101821047/job/27936164875?pr=15812#step:5:6050) ... it says there is some more in the actual log file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:236,testability,log,log,236,Vincenzo told me `builtin_afterimage` is always on now ... and Danilo told me to add the `clean build` tag. Now things seem to be building as expected on linuxen. Something still goes wrong on macs but there is not much info in the [CI log](https://github.com/root-project/root/actions/runs/10101821047/job/27936164875?pr=15812#step:5:6050) ... it says there is some more in the actual log file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:386,testability,log,log,386,Vincenzo told me `builtin_afterimage` is always on now ... and Danilo told me to add the `clean build` tag. Now things seem to be building as expected on linuxen. Something still goes wrong on macs but there is not much info in the [CI log](https://github.com/root-project/root/actions/runs/10101821047/job/27936164875?pr=15812#step:5:6050) ... it says there is some more in the actual log file.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:39,deployability,build,build,39,I don't know how or why but AFTERIMAGE build did not run for windows and mac.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:115,deployability,depend,dependency,115,"@alja @osschar . Grate! Now it compiles! Last question. Why you include `TGLSdfFontMaker` into `libGL`? It creates dependency of `libGL` from `libAfterImage` and indirectly from many libs like `libpng`, `libjpeg`, `libungif`. This can be dangerous - if somebody already uses ROOT and link against `libGL`. . Maybe one just can create special small library within `REve` folder? You anyway using `ProcessLine` and therefore independent from where class comes from. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:115,integrability,depend,dependency,115,"@alja @osschar . Grate! Now it compiles! Last question. Why you include `TGLSdfFontMaker` into `libGL`? It creates dependency of `libGL` from `libAfterImage` and indirectly from many libs like `libpng`, `libjpeg`, `libungif`. This can be dangerous - if somebody already uses ROOT and link against `libGL`. . Maybe one just can create special small library within `REve` folder? You anyway using `ProcessLine` and therefore independent from where class comes from. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:115,modifiability,depend,dependency,115,"@alja @osschar . Grate! Now it compiles! Last question. Why you include `TGLSdfFontMaker` into `libGL`? It creates dependency of `libGL` from `libAfterImage` and indirectly from many libs like `libpng`, `libjpeg`, `libungif`. This can be dangerous - if somebody already uses ROOT and link against `libGL`. . Maybe one just can create special small library within `REve` folder? You anyway using `ProcessLine` and therefore independent from where class comes from. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:115,safety,depend,dependency,115,"@alja @osschar . Grate! Now it compiles! Last question. Why you include `TGLSdfFontMaker` into `libGL`? It creates dependency of `libGL` from `libAfterImage` and indirectly from many libs like `libpng`, `libjpeg`, `libungif`. This can be dangerous - if somebody already uses ROOT and link against `libGL`. . Maybe one just can create special small library within `REve` folder? You anyway using `ProcessLine` and therefore independent from where class comes from. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:115,testability,depend,dependency,115,"@alja @osschar . Grate! Now it compiles! Last question. Why you include `TGLSdfFontMaker` into `libGL`? It creates dependency of `libGL` from `libAfterImage` and indirectly from many libs like `libpng`, `libjpeg`, `libungif`. This can be dangerous - if somebody already uses ROOT and link against `libGL`. . Maybe one just can create special small library within `REve` folder? You anyway using `ProcessLine` and therefore independent from where class comes from. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:146,deployability,depend,depends,146,"Yay, thanks for your help Sergey! I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:418,deployability,instal,install,418,"Yay, thanks for your help Sergey! I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:146,integrability,depend,depends,146,"Yay, thanks for your help Sergey! I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:146,modifiability,depend,depends,146,"Yay, thanks for your help Sergey! I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:146,safety,depend,depends,146,"Yay, thanks for your help Sergey! I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:566,safety,test,test,566,"Yay, thanks for your help Sergey! I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:94,testability,context,context,94,"Yay, thanks for your help Sergey! I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:146,testability,depend,depends,146,"Yay, thanks for your help Sergey! I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:566,testability,test,test,566,"Yay, thanks for your help Sergey! I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:21,usability,help,help,21,"Yay, thanks for your help Sergey! I put `TGLSdfFontMaker` in RGL as it requires off-screen GL context to render the SDF font texture. RGL already depends on libASImage ... TGLViewer::SaveAs() calls it directly to store screenshots into png/jpg files. Alja and I have checked it on mac and it works ok. There was an interesting side-story where libRGL got linked against /usr/X11R6/lib/libGL.so (presumably from an old install of XQuartz and libX11 stuff from homebrew -- it worked after we wiped both of those) instead of Apple's OpenGL framework. . I still want to test this on Windows, then I'll rebase and force-push so there's a single commit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:23,deployability,depend,depends,23,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:146,deployability,automat,automatically,146,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:23,integrability,depend,depends,23,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:174,interoperability,platform,platforms,174,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:23,modifiability,depend,depends,23,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:23,safety,depend,depends,23,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:160,safety,test,tested,160,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:23,testability,depend,depends,23,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:83,testability,simpl,simple,83,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:146,testability,automat,automatically,146,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:160,testability,test,tested,160,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:83,usability,simpl,simple,83,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15812:19,usability,guidanc,guidance,19,Thank you for your guidance Sergey! I'm glad this got done right :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15812
https://github.com/root-project/root/pull/15816:596,energy efficiency,optim,optimisations,596,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15816
https://github.com/root-project/root/pull/15816:725,interoperability,Plug,PluginHandler,725,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15816
https://github.com/root-project/root/pull/15816:853,interoperability,compatib,compatible,853,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15816
https://github.com/root-project/root/pull/15816:581,safety,avoid,avoid,581,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15816
https://github.com/root-project/root/pull/15816:40,testability,simpl,simple,40,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15816
https://github.com/root-project/root/pull/15816:185,testability,context,context,185,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15816
https://github.com/root-project/root/pull/15816:40,usability,simpl,simple,40,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : . ```.cpp. // Inspired by Alice production code, extracted from the surrounding context. #include ""TF1.h"". void Foo(int N) {. double am = 90;. double awidth = 1;. for (int i = 0; i < N; ++i) {. static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);. rbw.SetRange(am - 5 * awidth, am + 5 * awidth);. rbw.SetParameter(0, am);. rbw.SetParameter(1, awidth);. am = rbw.GetRandom();. if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations. }. }. int main(). {. Foo(1000);. return 0;. }. ```. The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15816
https://github.com/root-project/root/pull/15817:200,integrability,sub,sub-scope,200,It is unclear from the titles of the commit (but clarifying by the included report). The changes in the functions using `TTreeReader` are required (alternative could be to have the `TTreeReader` is a sub-scope that ends before the call to delete) while all the other changes are stylistic only (to use the same code pattern in the whole file). This should be clarified and possibly split the functional and stylistic changes in separate commits.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15817
https://github.com/root-project/root/pull/15817:67,energy efficiency,green,green,67,All comments have been addressed. Will merge the PR once the CI is green,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15817
https://github.com/root-project/root/issues/15818:29,performance,time,time,29,"Turns out it's not the first time we see this problem, I found a relevant forum post from 2018 https://root-forum.cern.ch/t/interpreter-declare-crashing-on-long-strings/30421. It seems to be a bug/limitation in clang, pending further investigation",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:594,availability,ERROR,ERROR,594,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1389,availability,ERROR,ERROR,1389,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:255,deployability,version,version,255,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:286,deployability,version,version,286,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:357,deployability,Instal,InstalledDir,357,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:754,deployability,Build,BuildId,754,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1202,deployability,releas,release,1202,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1238,deployability,Build,BuildId,1238,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1549,deployability,Build,BuildId,1549,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:343,energy efficiency,model,model,343,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:683,energy efficiency,alloc,allocated,683,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1343,energy efficiency,alloc,allocation,1343,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1478,energy efficiency,alloc,allocated,1478,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:2047,energy efficiency,alloc,allocation,2047,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:255,integrability,version,version,255,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:286,integrability,version,version,286,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:255,modifiability,version,version,255,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:286,modifiability,version,version,286,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:594,performance,ERROR,ERROR,594,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:625,performance,memor,memory,625,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1389,performance,ERROR,ERROR,1389,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1420,performance,memor,memory,1420,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:594,safety,ERROR,ERROR,594,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:616,safety,detect,detected,616,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1389,safety,ERROR,ERROR,1389,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1411,safety,detect,detected,1411,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:343,security,model,model,343,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:616,security,detect,detected,616,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:916,security,Ident,IdentifierInfo,916,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1411,security,detect,detected,1411,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1711,security,Ident,IdentifierInfo,1711,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:100,usability,command,command,100,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:594,usability,ERROR,ERROR,594,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:625,usability,memor,memory,625,"I just tried to compile and run the example with clang on my machine (running Debian trixie/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMAR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1389,usability,ERROR,ERROR,1389,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:1420,usability,memor,memory,1420,"e/sid). **command line used**: . ```fish. clang++ -fsanitize=address $(root-config --cflags) long.cxx $(root-config --libs) -O#. ```. (where `# = 0,1,2,3`). **clang version**: . ```. Debian clang version 16.0.6 (27). Target: x86_64-pc-linux-gnu. Thread model: posix. InstalledDir: /usr/bin. ```. The results were all the same independently on the opt level. ROOT was compiled from source from the `master` branch. Tried both in Debug and in RelWithDebSymbols modes. ROOT RelWithDebSymbols:. ```. ==7224==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8176 byte(s) in 70 object(s) allocated from:. #0 0x55c975513f82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f22a18192d6097da92ce5b1350d6cc50f66c0c83). #1 0x7f3f1567d59a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) (/home/jp/root_build/release/lib/libCling.so+0x147d59a) (BuildId: 3d3940bfa5d71a7ddadacb52dc8efab302b58bd0). SUMMARY: AddressSanitizer: 8176 byte(s) leaked in 70 allocation(s). ```. ROOT Debug:. ```. ==6956==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 8904 byte(s) in 76 object(s) allocated from:. #0 0x557ce50baf82 in malloc (/home/jp/a.out+0xb9f82) (BuildId: f61cf0a7a2dabd0ff44f3a73dc969a3c8bbdbc6b). #1 0x7fe17b35224a in clang::TemplateIdAnnotation::Create(clang::SourceLocation, clang::SourceLocation, clang::IdentifierInfo*, clang::OverloadedOperatorKind, clang::OpaquePtr<clang::TemplateName>, clang::TemplateNameKind, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<clang::ParsedTemplateArgument>, bool, llvm::SmallVectorImpl<clang::TemplateIdAnnotation*>&) ParseExprCXX.cpp. SUMMARY: AddressSanitizer: 8904 byte(s) leaked in 76 allocation(s). ```. There was no segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:69,availability,avail,available,69,"More info to add:. On godbolt, clang 16.0.0 (unfortunately no 16.0.6 available) aborts with SIGSEGV, but clang 18.1.0 is fine. https://godbolt.org/z/dKfsfh44j. Also just for reference, the number of times `var0` is summed is 4096.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:199,performance,time,times,199,"More info to add:. On godbolt, clang 16.0.0 (unfortunately no 16.0.6 available) aborts with SIGSEGV, but clang 18.1.0 is fine. https://godbolt.org/z/dKfsfh44j. Also just for reference, the number of times `var0` is summed is 4096.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:69,reliability,availab,available,69,"More info to add:. On godbolt, clang 16.0.0 (unfortunately no 16.0.6 available) aborts with SIGSEGV, but clang 18.1.0 is fine. https://godbolt.org/z/dKfsfh44j. Also just for reference, the number of times `var0` is summed is 4096.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:69,safety,avail,available,69,"More info to add:. On godbolt, clang 16.0.0 (unfortunately no 16.0.6 available) aborts with SIGSEGV, but clang 18.1.0 is fine. https://godbolt.org/z/dKfsfh44j. Also just for reference, the number of times `var0` is summed is 4096.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/issues/15818:69,security,availab,available,69,"More info to add:. On godbolt, clang 16.0.0 (unfortunately no 16.0.6 available) aborts with SIGSEGV, but clang 18.1.0 is fine. https://godbolt.org/z/dKfsfh44j. Also just for reference, the number of times `var0` is summed is 4096.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15818
https://github.com/root-project/root/pull/15819:0,safety,Test,Test,0,Test and linked issue?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15819
https://github.com/root-project/root/pull/15819:0,testability,Test,Test,0,Test and linked issue?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15819
https://github.com/root-project/root/pull/15819:147,safety,review,reviewing,147,This is needed to fix root bench: . https://github.com/root-project/rootbench/pull/239. It is a blocker for the summer student project. Thanks for reviewing it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15819
https://github.com/root-project/root/pull/15819:147,testability,review,reviewing,147,This is needed to fix root bench: . https://github.com/root-project/rootbench/pull/239. It is a blocker for the summer student project. Thanks for reviewing it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15819
https://github.com/root-project/root/pull/15822:471,energy efficiency,draw,drawn,471,"LGTM, There are more TLIst::Addxxx methods that might be interesting to have. FindObject also may be. Some tutorials can be also changed:. ```. eve/SplitGLView.C: fPad->GetListOfPrimitives()->Delete();. eve/SplitGLView.C: fPad->GetListOfPrimitives()->Add(gGeoManager->GetTopVolume());. eve7/lego.C: p->GetListOfPrimitives()->Add(h, ""LEGO2"");. eve7/lego.C: p->GetListOfPrimitives()->Add(s);. eve7/lego.C: p->GetListOfPrimitives()->Add(line, ""LINE"");. geom/csgdemo.C: bool drawn = gPad->GetListOfPrimitives()->FindObject(top);. geom/geodemo.C: bool drawn = gPad->GetListOfPrimitives()->FindObject(top);. webgui/qtweb/ExampleWidget.cpp: canv->GetListOfPrimitives()->Add(geom,"""");. webgui/qtweb/ExampleWidget.cpp: canv->GetListOfPrimitives()->Add(pm,"""");. webgui/qtweb/ExampleWidget.cpp: canv->GetListOfPrimitives()->Add(pl,"""");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:547,energy efficiency,draw,drawn,547,"LGTM, There are more TLIst::Addxxx methods that might be interesting to have. FindObject also may be. Some tutorials can be also changed:. ```. eve/SplitGLView.C: fPad->GetListOfPrimitives()->Delete();. eve/SplitGLView.C: fPad->GetListOfPrimitives()->Add(gGeoManager->GetTopVolume());. eve7/lego.C: p->GetListOfPrimitives()->Add(h, ""LEGO2"");. eve7/lego.C: p->GetListOfPrimitives()->Add(s);. eve7/lego.C: p->GetListOfPrimitives()->Add(line, ""LINE"");. geom/csgdemo.C: bool drawn = gPad->GetListOfPrimitives()->FindObject(top);. geom/geodemo.C: bool drawn = gPad->GetListOfPrimitives()->FindObject(top);. webgui/qtweb/ExampleWidget.cpp: canv->GetListOfPrimitives()->Add(geom,"""");. webgui/qtweb/ExampleWidget.cpp: canv->GetListOfPrimitives()->Add(pm,"""");. webgui/qtweb/ExampleWidget.cpp: canv->GetListOfPrimitives()->Add(pl,"""");. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:135,energy efficiency,draw,draw,135,> There are more TLIst::Addxxx methods. `AddLast` and `Add` are equivalent. . Also there is no need duplicate methods with and without draw option. And TList::Delete method is too specialized and therefore I prefer to keep it out. Idea of PR is provide shortcuts for very basic manipulation with primitives - add and remove. Mainly in different tutorials. More specific code can still be done with `pad->GetListOfPrimitives()`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:361,interoperability,specif,specific,361,> There are more TLIst::Addxxx methods. `AddLast` and `Add` are equivalent. . Also there is no need duplicate methods with and without draw option. And TList::Delete method is too specialized and therefore I prefer to keep it out. Idea of PR is provide shortcuts for very basic manipulation with primitives - add and remove. Mainly in different tutorials. More specific code can still be done with `pad->GetListOfPrimitives()`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:208,usability,prefer,prefer,208,> There are more TLIst::Addxxx methods. `AddLast` and `Add` are equivalent. . Also there is no need duplicate methods with and without draw option. And TList::Delete method is too specialized and therefore I prefer to keep it out. Idea of PR is provide shortcuts for very basic manipulation with primitives - add and remove. Mainly in different tutorials. More specific code can still be done with `pad->GetListOfPrimitives()`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:253,usability,shortcut,shortcuts,253,> There are more TLIst::Addxxx methods. `AddLast` and `Add` are equivalent. . Also there is no need duplicate methods with and without draw option. And TList::Delete method is too specialized and therefore I prefer to keep it out. Idea of PR is provide shortcuts for very basic manipulation with primitives - add and remove. Mainly in different tutorials. More specific code can still be done with `pad->GetListOfPrimitives()`.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:190,deployability,depend,depend,190,"> Can we maybe make these methods private and only use them internally in ROOT? It is other way around. . We want to use these methods in tutorials to propagate functionality which does not depend from `gPad`. . Up to now everywhere we have `obj->Draw()` or `obj->DrawClone()`. . Last is evil - while it uses on the first place `gROOT->GetSelectedPad()` and only then `gPad`. With new methods one can write in tutorials: `c1->Add(obj, ""option"");` or `c1->Add(obj->Clone(), ""option"")`. No any **gPads** - which is unreliable because of #15498 . I found workaround for TWebCanvas for #15498, but it is not a solid solution. . `gPad` can be broken because of other libraries running before canvas is created.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:247,energy efficiency,Draw,Draw,247,"> Can we maybe make these methods private and only use them internally in ROOT? It is other way around. . We want to use these methods in tutorials to propagate functionality which does not depend from `gPad`. . Up to now everywhere we have `obj->Draw()` or `obj->DrawClone()`. . Last is evil - while it uses on the first place `gROOT->GetSelectedPad()` and only then `gPad`. With new methods one can write in tutorials: `c1->Add(obj, ""option"");` or `c1->Add(obj->Clone(), ""option"")`. No any **gPads** - which is unreliable because of #15498 . I found workaround for TWebCanvas for #15498, but it is not a solid solution. . `gPad` can be broken because of other libraries running before canvas is created.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:264,energy efficiency,Draw,DrawClone,264,"> Can we maybe make these methods private and only use them internally in ROOT? It is other way around. . We want to use these methods in tutorials to propagate functionality which does not depend from `gPad`. . Up to now everywhere we have `obj->Draw()` or `obj->DrawClone()`. . Last is evil - while it uses on the first place `gROOT->GetSelectedPad()` and only then `gPad`. With new methods one can write in tutorials: `c1->Add(obj, ""option"");` or `c1->Add(obj->Clone(), ""option"")`. No any **gPads** - which is unreliable because of #15498 . I found workaround for TWebCanvas for #15498, but it is not a solid solution. . `gPad` can be broken because of other libraries running before canvas is created.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:190,integrability,depend,depend,190,"> Can we maybe make these methods private and only use them internally in ROOT? It is other way around. . We want to use these methods in tutorials to propagate functionality which does not depend from `gPad`. . Up to now everywhere we have `obj->Draw()` or `obj->DrawClone()`. . Last is evil - while it uses on the first place `gROOT->GetSelectedPad()` and only then `gPad`. With new methods one can write in tutorials: `c1->Add(obj, ""option"");` or `c1->Add(obj->Clone(), ""option"")`. No any **gPads** - which is unreliable because of #15498 . I found workaround for TWebCanvas for #15498, but it is not a solid solution. . `gPad` can be broken because of other libraries running before canvas is created.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:190,modifiability,depend,depend,190,"> Can we maybe make these methods private and only use them internally in ROOT? It is other way around. . We want to use these methods in tutorials to propagate functionality which does not depend from `gPad`. . Up to now everywhere we have `obj->Draw()` or `obj->DrawClone()`. . Last is evil - while it uses on the first place `gROOT->GetSelectedPad()` and only then `gPad`. With new methods one can write in tutorials: `c1->Add(obj, ""option"");` or `c1->Add(obj->Clone(), ""option"")`. No any **gPads** - which is unreliable because of #15498 . I found workaround for TWebCanvas for #15498, but it is not a solid solution. . `gPad` can be broken because of other libraries running before canvas is created.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:181,reliability,doe,does,181,"> Can we maybe make these methods private and only use them internally in ROOT? It is other way around. . We want to use these methods in tutorials to propagate functionality which does not depend from `gPad`. . Up to now everywhere we have `obj->Draw()` or `obj->DrawClone()`. . Last is evil - while it uses on the first place `gROOT->GetSelectedPad()` and only then `gPad`. With new methods one can write in tutorials: `c1->Add(obj, ""option"");` or `c1->Add(obj->Clone(), ""option"")`. No any **gPads** - which is unreliable because of #15498 . I found workaround for TWebCanvas for #15498, but it is not a solid solution. . `gPad` can be broken because of other libraries running before canvas is created.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:190,safety,depend,depend,190,"> Can we maybe make these methods private and only use them internally in ROOT? It is other way around. . We want to use these methods in tutorials to propagate functionality which does not depend from `gPad`. . Up to now everywhere we have `obj->Draw()` or `obj->DrawClone()`. . Last is evil - while it uses on the first place `gROOT->GetSelectedPad()` and only then `gPad`. With new methods one can write in tutorials: `c1->Add(obj, ""option"");` or `c1->Add(obj->Clone(), ""option"")`. No any **gPads** - which is unreliable because of #15498 . I found workaround for TWebCanvas for #15498, but it is not a solid solution. . `gPad` can be broken because of other libraries running before canvas is created.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:190,testability,depend,depend,190,"> Can we maybe make these methods private and only use them internally in ROOT? It is other way around. . We want to use these methods in tutorials to propagate functionality which does not depend from `gPad`. . Up to now everywhere we have `obj->Draw()` or `obj->DrawClone()`. . Last is evil - while it uses on the first place `gROOT->GetSelectedPad()` and only then `gPad`. With new methods one can write in tutorials: `c1->Add(obj, ""option"");` or `c1->Add(obj->Clone(), ""option"")`. No any **gPads** - which is unreliable because of #15498 . I found workaround for TWebCanvas for #15498, but it is not a solid solution. . `gPad` can be broken because of other libraries running before canvas is created.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:410,energy efficiency,Draw,Draw,410,"Alright, at a first glance I completely missed the point of the changes! Thanks for the clarification. Let me see if I understand this correctly. With these changes, in principle, one could drive a ROOT graphics program with the following (pseudo) code pattern? ```cpp. ROOT::RDataFrame df{...};. auto histoptr = df.Histo1D();. TCanvas c;. c.Add(histoptr.GetPtr()); // GetPtr() returns a TH1D* in this case. c.Draw();. ```. That is without needing to ask the histogram to draw itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:472,energy efficiency,draw,draw,472,"Alright, at a first glance I completely missed the point of the changes! Thanks for the clarification. Let me see if I understand this correctly. With these changes, in principle, one could drive a ROOT graphics program with the following (pseudo) code pattern? ```cpp. ROOT::RDataFrame df{...};. auto histoptr = df.Histo1D();. TCanvas c;. c.Add(histoptr.GetPtr()); // GetPtr() returns a TH1D* in this case. c.Draw();. ```. That is without needing to ask the histogram to draw itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:29,safety,compl,completely,29,"Alright, at a first glance I completely missed the point of the changes! Thanks for the clarification. Let me see if I understand this correctly. With these changes, in principle, one could drive a ROOT graphics program with the following (pseudo) code pattern? ```cpp. ROOT::RDataFrame df{...};. auto histoptr = df.Histo1D();. TCanvas c;. c.Add(histoptr.GetPtr()); // GetPtr() returns a TH1D* in this case. c.Draw();. ```. That is without needing to ask the histogram to draw itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:29,security,compl,completely,29,"Alright, at a first glance I completely missed the point of the changes! Thanks for the clarification. Let me see if I understand this correctly. With these changes, in principle, one could drive a ROOT graphics program with the following (pseudo) code pattern? ```cpp. ROOT::RDataFrame df{...};. auto histoptr = df.Histo1D();. TCanvas c;. c.Add(histoptr.GetPtr()); // GetPtr() returns a TH1D* in this case. c.Draw();. ```. That is without needing to ask the histogram to draw itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:119,testability,understand,understand,119,"Alright, at a first glance I completely missed the point of the changes! Thanks for the clarification. Let me see if I understand this correctly. With these changes, in principle, one could drive a ROOT graphics program with the following (pseudo) code pattern? ```cpp. ROOT::RDataFrame df{...};. auto histoptr = df.Histo1D();. TCanvas c;. c.Add(histoptr.GetPtr()); // GetPtr() returns a TH1D* in this case. c.Draw();. ```. That is without needing to ask the histogram to draw itself?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:50,energy efficiency,draw,draw,50,> That is without needing to ask the histogram to draw itself? Yes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:147,deployability,API,API,147,"> Yes. But this is *wonderful*! This is a fantastic approach imho! Can I just throw in another suggestion then. Since we are introducing these new API methods from scratch and they do not belong already to any of the base classes of `TVirtualPad`, maybe we can take the opportunity to give them some more meaningful name. For example, `Add` could be `RegisterDrawable` or `AdoptDrawable` or just `Register`/`Adopt`. I would be in this sense very much in favour of having `Adopt(std::shared_ptr<TObject> obj)` so that the memory ownership is clear. This would for example enable any use case where the drawable object is not registered with the list of global cleanups. In the same spirit, I don't see (yet) the need for `AddFirst` and `Remove`. What are the user-side reasons for these? In the current changes:. * `AddFirst` is defined in the class but never used anywhere else, so it should be removed. * `Remove` is used only for internal purposes and could be made a private method.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:601,energy efficiency,draw,drawable,601,"> Yes. But this is *wonderful*! This is a fantastic approach imho! Can I just throw in another suggestion then. Since we are introducing these new API methods from scratch and they do not belong already to any of the base classes of `TVirtualPad`, maybe we can take the opportunity to give them some more meaningful name. For example, `Add` could be `RegisterDrawable` or `AdoptDrawable` or just `Register`/`Adopt`. I would be in this sense very much in favour of having `Adopt(std::shared_ptr<TObject> obj)` so that the memory ownership is clear. This would for example enable any use case where the drawable object is not registered with the list of global cleanups. In the same spirit, I don't see (yet) the need for `AddFirst` and `Remove`. What are the user-side reasons for these? In the current changes:. * `AddFirst` is defined in the class but never used anywhere else, so it should be removed. * `Remove` is used only for internal purposes and could be made a private method.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:794,energy efficiency,current,current,794,"> Yes. But this is *wonderful*! This is a fantastic approach imho! Can I just throw in another suggestion then. Since we are introducing these new API methods from scratch and they do not belong already to any of the base classes of `TVirtualPad`, maybe we can take the opportunity to give them some more meaningful name. For example, `Add` could be `RegisterDrawable` or `AdoptDrawable` or just `Register`/`Adopt`. I would be in this sense very much in favour of having `Adopt(std::shared_ptr<TObject> obj)` so that the memory ownership is clear. This would for example enable any use case where the drawable object is not registered with the list of global cleanups. In the same spirit, I don't see (yet) the need for `AddFirst` and `Remove`. What are the user-side reasons for these? In the current changes:. * `AddFirst` is defined in the class but never used anywhere else, so it should be removed. * `Remove` is used only for internal purposes and could be made a private method.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:147,integrability,API,API,147,"> Yes. But this is *wonderful*! This is a fantastic approach imho! Can I just throw in another suggestion then. Since we are introducing these new API methods from scratch and they do not belong already to any of the base classes of `TVirtualPad`, maybe we can take the opportunity to give them some more meaningful name. For example, `Add` could be `RegisterDrawable` or `AdoptDrawable` or just `Register`/`Adopt`. I would be in this sense very much in favour of having `Adopt(std::shared_ptr<TObject> obj)` so that the memory ownership is clear. This would for example enable any use case where the drawable object is not registered with the list of global cleanups. In the same spirit, I don't see (yet) the need for `AddFirst` and `Remove`. What are the user-side reasons for these? In the current changes:. * `AddFirst` is defined in the class but never used anywhere else, so it should be removed. * `Remove` is used only for internal purposes and could be made a private method.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:147,interoperability,API,API,147,"> Yes. But this is *wonderful*! This is a fantastic approach imho! Can I just throw in another suggestion then. Since we are introducing these new API methods from scratch and they do not belong already to any of the base classes of `TVirtualPad`, maybe we can take the opportunity to give them some more meaningful name. For example, `Add` could be `RegisterDrawable` or `AdoptDrawable` or just `Register`/`Adopt`. I would be in this sense very much in favour of having `Adopt(std::shared_ptr<TObject> obj)` so that the memory ownership is clear. This would for example enable any use case where the drawable object is not registered with the list of global cleanups. In the same spirit, I don't see (yet) the need for `AddFirst` and `Remove`. What are the user-side reasons for these? In the current changes:. * `AddFirst` is defined in the class but never used anywhere else, so it should be removed. * `Remove` is used only for internal purposes and could be made a private method.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:521,performance,memor,memory,521,"> Yes. But this is *wonderful*! This is a fantastic approach imho! Can I just throw in another suggestion then. Since we are introducing these new API methods from scratch and they do not belong already to any of the base classes of `TVirtualPad`, maybe we can take the opportunity to give them some more meaningful name. For example, `Add` could be `RegisterDrawable` or `AdoptDrawable` or just `Register`/`Adopt`. I would be in this sense very much in favour of having `Adopt(std::shared_ptr<TObject> obj)` so that the memory ownership is clear. This would for example enable any use case where the drawable object is not registered with the list of global cleanups. In the same spirit, I don't see (yet) the need for `AddFirst` and `Remove`. What are the user-side reasons for these? In the current changes:. * `AddFirst` is defined in the class but never used anywhere else, so it should be removed. * `Remove` is used only for internal purposes and could be made a private method.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:521,usability,memor,memory,521,"> Yes. But this is *wonderful*! This is a fantastic approach imho! Can I just throw in another suggestion then. Since we are introducing these new API methods from scratch and they do not belong already to any of the base classes of `TVirtualPad`, maybe we can take the opportunity to give them some more meaningful name. For example, `Add` could be `RegisterDrawable` or `AdoptDrawable` or just `Register`/`Adopt`. I would be in this sense very much in favour of having `Adopt(std::shared_ptr<TObject> obj)` so that the memory ownership is clear. This would for example enable any use case where the drawable object is not registered with the list of global cleanups. In the same spirit, I don't see (yet) the need for `AddFirst` and `Remove`. What are the user-side reasons for these? In the current changes:. * `AddFirst` is defined in the class but never used anywhere else, so it should be removed. * `Remove` is used only for internal purposes and could be made a private method.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:541,usability,clear,clear,541,"> Yes. But this is *wonderful*! This is a fantastic approach imho! Can I just throw in another suggestion then. Since we are introducing these new API methods from scratch and they do not belong already to any of the base classes of `TVirtualPad`, maybe we can take the opportunity to give them some more meaningful name. For example, `Add` could be `RegisterDrawable` or `AdoptDrawable` or just `Register`/`Adopt`. I would be in this sense very much in favour of having `Adopt(std::shared_ptr<TObject> obj)` so that the memory ownership is clear. This would for example enable any use case where the drawable object is not registered with the list of global cleanups. In the same spirit, I don't see (yet) the need for `AddFirst` and `Remove`. What are the user-side reasons for these? In the current changes:. * `AddFirst` is defined in the class but never used anywhere else, so it should be removed. * `Remove` is used only for internal purposes and could be made a private method.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:758,usability,user,user-side,758,"> Yes. But this is *wonderful*! This is a fantastic approach imho! Can I just throw in another suggestion then. Since we are introducing these new API methods from scratch and they do not belong already to any of the base classes of `TVirtualPad`, maybe we can take the opportunity to give them some more meaningful name. For example, `Add` could be `RegisterDrawable` or `AdoptDrawable` or just `Register`/`Adopt`. I would be in this sense very much in favour of having `Adopt(std::shared_ptr<TObject> obj)` so that the memory ownership is clear. This would for example enable any use case where the drawable object is not registered with the list of global cleanups. In the same spirit, I don't see (yet) the need for `AddFirst` and `Remove`. What are the user-side reasons for these? In the current changes:. * `AddFirst` is defined in the class but never used anywhere else, so it should be removed. * `Remove` is used only for internal purposes and could be made a private method.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:226,deployability,automat,automatically,226,"`Drawable` is ""reserved"" word for the ROOT7 classes :) . Drawing of `TObject` in ROOT6 is just adding it to list of canvas primitives. My idea is to move **some** `TList` methods of primitives to `TPad`, ensure list exist and automatically mark pad modified after that. . `TPad::Remove()` is not internal method. . `TObject::Pop()` and `TPad::Pop()` used them. Also it is just contrary to `TPad::Add()`. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:1,energy efficiency,Draw,Drawable,1,"`Drawable` is ""reserved"" word for the ROOT7 classes :) . Drawing of `TObject` in ROOT6 is just adding it to list of canvas primitives. My idea is to move **some** `TList` methods of primitives to `TPad`, ensure list exist and automatically mark pad modified after that. . `TPad::Remove()` is not internal method. . `TObject::Pop()` and `TPad::Pop()` used them. Also it is just contrary to `TPad::Add()`. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:57,energy efficiency,Draw,Drawing,57,"`Drawable` is ""reserved"" word for the ROOT7 classes :) . Drawing of `TObject` in ROOT6 is just adding it to list of canvas primitives. My idea is to move **some** `TList` methods of primitives to `TPad`, ensure list exist and automatically mark pad modified after that. . `TPad::Remove()` is not internal method. . `TObject::Pop()` and `TPad::Pop()` used them. Also it is just contrary to `TPad::Add()`. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:249,security,modif,modified,249,"`Drawable` is ""reserved"" word for the ROOT7 classes :) . Drawing of `TObject` in ROOT6 is just adding it to list of canvas primitives. My idea is to move **some** `TList` methods of primitives to `TPad`, ensure list exist and automatically mark pad modified after that. . `TPad::Remove()` is not internal method. . `TObject::Pop()` and `TPad::Pop()` used them. Also it is just contrary to `TPad::Add()`. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:226,testability,automat,automatically,226,"`Drawable` is ""reserved"" word for the ROOT7 classes :) . Drawing of `TObject` in ROOT6 is just adding it to list of canvas primitives. My idea is to move **some** `TList` methods of primitives to `TPad`, ensure list exist and automatically mark pad modified after that. . `TPad::Remove()` is not internal method. . `TObject::Pop()` and `TPad::Pop()` used them. Also it is just contrary to `TPad::Add()`. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:51,energy efficiency,current,current,51,"This is a nice way to avoid having the concept of ""current pad"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:22,safety,avoid,avoid,22,"This is a nice way to avoid having the concept of ""current pad"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:184,energy efficiency,draw,drawing,184,"`TPad::AddFirst` is not used by this PR, but can appear later. . For instance `TFrame` object always must be first in list of primitives. . Or one can add as first primitive histogram drawing axis - after all other objects already created.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:625,availability,mainten,maintenance,625,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:594,deployability,API,APIs,594,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:887,deployability,API,API,887,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:647,energy efficiency,Draw,Drawable,647,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:1097,energy efficiency,draw,drawing,1097,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:82,integrability,pub,public,82,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:572,integrability,pub,public,572,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:594,integrability,API,APIs,594,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:887,integrability,API,API,887,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:594,interoperability,API,APIs,594,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:887,interoperability,API,API,887,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:375,modifiability,inherit,inherits,375,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:875,performance,memor,memory-safe,875,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:625,reliability,mainten,maintenance,625,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:882,safety,safe,safe,882,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:315,security,access,access,315,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:354,security,access,access,354,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:425,security,access,access,425,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:462,usability,help,helper,462,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:559,usability,minim,minimize,559,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:875,usability,memor,memory-safe,875,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:1243,usability,user,user,1243,"> Also it is just contrary to TPad::Add(). Not enough reason for me to make a new public method just to provide some vague simmetry. > TObject::Pop() and TPad::Pop() used them. Exactly! So `TPad::Remove` is internal to ROOT classes only. It can be a protected method of `TVirtualPad` and then the `Pop` methods can access it (`TPad::Pop` will be able to access it because it inherits from `TVirtualPad`, `TObject` can easily access the method with an `Internal` helper such as `ROOT::Internal::GraphicsUtils::CallTVirtualPadRemove`). We should strive imho to minimize the public surface of our APIs so we do not increase the maintenance burden. > Drawable is ""reserved"" word for the ROOT7 classes :). Fine, not too big of an issue I guess, still `Register` or `Adopt` sound better but that is probably just my own opinion. I would still very much encourage the addition of a memory-safe API with smart pointers anyway. > TPad::AddFirst is not used by this PR, but can appear later. For instance TFrame object always must be first in list of primitives. Or one can add as first primitive histogram drawing axis - after all other objects already created. Again from this description everything sounds internal to ROOT only and not something the user should care about. So I insist also `AddFirst` is removed from this PR or at least made private.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:834,deployability,log,logic,834,">> Also it is just contrary to TPad::Add(). > Not enough reason for me to make a new public method just to provide some vague simmetry. It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. >> TPad::AddFirst is not used by this PR, but can appear later. > Again from this description everything sounds internal to ROOT only and not something the user should care about. . No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. . > Fine, not too big of an issue I guess, still Register or Adopt sound better but that is probably just my own opinion. I prefer to stay in `ROOT6`/`TList` logic and naming used there. `TPad` is just list of primitives and can be considered so in tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:85,integrability,pub,public,85,">> Also it is just contrary to TPad::Add(). > Not enough reason for me to make a new public method just to provide some vague simmetry. It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. >> TPad::AddFirst is not used by this PR, but can appear later. > Again from this description everything sounds internal to ROOT only and not something the user should care about. . No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. . > Fine, not too big of an issue I guess, still Register or Adopt sound better but that is probably just my own opinion. I prefer to stay in `ROOT6`/`TList` logic and naming used there. `TPad` is just list of primitives and can be considered so in tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:274,integrability,interfac,interface,274,">> Also it is just contrary to TPad::Add(). > Not enough reason for me to make a new public method just to provide some vague simmetry. It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. >> TPad::AddFirst is not used by this PR, but can appear later. > Again from this description everything sounds internal to ROOT only and not something the user should care about. . No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. . > Fine, not too big of an issue I guess, still Register or Adopt sound better but that is probably just my own opinion. I prefer to stay in `ROOT6`/`TList` logic and naming used there. `TPad` is just list of primitives and can be considered so in tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:274,interoperability,interfac,interface,274,">> Also it is just contrary to TPad::Add(). > Not enough reason for me to make a new public method just to provide some vague simmetry. It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. >> TPad::AddFirst is not used by this PR, but can appear later. > Again from this description everything sounds internal to ROOT only and not something the user should care about. . No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. . > Fine, not too big of an issue I guess, still Register or Adopt sound better but that is probably just my own opinion. I prefer to stay in `ROOT6`/`TList` logic and naming used there. `TPad` is just list of primitives and can be considered so in tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:274,modifiability,interfac,interface,274,">> Also it is just contrary to TPad::Add(). > Not enough reason for me to make a new public method just to provide some vague simmetry. It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. >> TPad::AddFirst is not used by this PR, but can appear later. > Again from this description everything sounds internal to ROOT only and not something the user should care about. . No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. . > Fine, not too big of an issue I guess, still Register or Adopt sound better but that is probably just my own opinion. I prefer to stay in `ROOT6`/`TList` logic and naming used there. `TPad` is just list of primitives and can be considered so in tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:834,safety,log,logic,834,">> Also it is just contrary to TPad::Add(). > Not enough reason for me to make a new public method just to provide some vague simmetry. It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. >> TPad::AddFirst is not used by this PR, but can appear later. > Again from this description everything sounds internal to ROOT only and not something the user should care about. . No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. . > Fine, not too big of an issue I guess, still Register or Adopt sound better but that is probably just my own opinion. I prefer to stay in `ROOT6`/`TList` logic and naming used there. `TPad` is just list of primitives and can be considered so in tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:834,security,log,logic,834,">> Also it is just contrary to TPad::Add(). > Not enough reason for me to make a new public method just to provide some vague simmetry. It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. >> TPad::AddFirst is not used by this PR, but can appear later. > Again from this description everything sounds internal to ROOT only and not something the user should care about. . No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. . > Fine, not too big of an issue I guess, still Register or Adopt sound better but that is probably just my own opinion. I prefer to stay in `ROOT6`/`TList` logic and naming used there. `TPad` is just list of primitives and can be considered so in tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:834,testability,log,logic,834,">> Also it is just contrary to TPad::Add(). > Not enough reason for me to make a new public method just to provide some vague simmetry. It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. >> TPad::AddFirst is not used by this PR, but can appear later. > Again from this description everything sounds internal to ROOT only and not something the user should care about. . No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. . > Fine, not too big of an issue I guess, still Register or Adopt sound better but that is probably just my own opinion. I prefer to stay in `ROOT6`/`TList` logic and naming used there. `TPad` is just list of primitives and can be considered so in tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:517,usability,user,user,517,">> Also it is just contrary to TPad::Add(). > Not enough reason for me to make a new public method just to provide some vague simmetry. It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. >> TPad::AddFirst is not used by this PR, but can appear later. > Again from this description everything sounds internal to ROOT only and not something the user should care about. . No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. . > Fine, not too big of an issue I guess, still Register or Adopt sound better but that is probably just my own opinion. I prefer to stay in `ROOT6`/`TList` logic and naming used there. `TPad` is just list of primitives and can be considered so in tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:800,usability,prefer,prefer,800,">> Also it is just contrary to TPad::Add(). > Not enough reason for me to make a new public method just to provide some vague simmetry. It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. >> TPad::AddFirst is not used by this PR, but can appear later. > Again from this description everything sounds internal to ROOT only and not something the user should care about. . No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. . > Fine, not too big of an issue I guess, still Register or Adopt sound better but that is probably just my own opinion. I prefer to stay in `ROOT6`/`TList` logic and naming used there. `TPad` is just list of primitives and can be considered so in tutorials.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:767,deployability,API,APIs,767,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:1000,deployability,API,API,1000,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:1023,deployability,manag,management,1023,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:570,energy efficiency,core,core,570,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:1023,energy efficiency,manag,management,1023,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:140,integrability,interfac,interface,140,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:760,integrability,pub,public,760,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:767,integrability,API,APIs,767,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:1000,integrability,API,API,1000,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:140,interoperability,interfac,interface,140,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:767,interoperability,API,APIs,767,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:1000,interoperability,API,API,1000,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:140,modifiability,interfac,interface,140,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:676,modifiability,extens,extensions,676,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:988,performance,memor,memory,988,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:1016,performance,memor,memory,1016,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:451,safety,compl,complicated,451,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:995,safety,safe,safe,995,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:1023,safety,manag,management,1023,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:451,security,compl,complicated,451,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:411,usability,user,user,411,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:813,usability,user,users,813,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:988,usability,memor,memory,988,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:1016,usability,memor,memory,1016,"> It is. One creates canvas, store image, remove and delete temporary object, create next image or let canvas running. We did not have such interface up to now - therefore we did not provide such demos. Now it can be possible. > No, it can be very well used in tutorials. Manipulating primitives order was not easy before. With such few methods it will be easy. Again, why is any of this something a final ROOT user would want to do? This sounds very complicated and old imperative approach and I do not see the appeal of it for new code, as much as it may be living in core parts of the codebase. I could maybe, just maybe see this approach being used when creating plotting extensions based on ROOT graphics, but I strongly believe we should not provide new public APIs unless there is an explicit request from users/github issue/forum post or something similar. Of all the changes of this PR, only the `Add` method fits in this description. And again let me ask for providing a modern memory safe API with proper memory management in place by default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:58,deployability,API,API,58,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:81,deployability,manag,management,81,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:238,deployability,manag,management,238,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:282,deployability,API,API,282,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:81,energy efficiency,manag,management,81,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:238,energy efficiency,manag,management,238,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:401,energy efficiency,Draw,Draw,401,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:58,integrability,API,API,58,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:282,integrability,API,API,282,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:58,interoperability,API,API,58,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:282,interoperability,API,API,282,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:260,modifiability,extens,extension,260,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:46,performance,memor,memory,46,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:74,performance,memor,memory,74,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:231,performance,memor,memory,231,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:53,safety,safe,safe,53,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:81,safety,manag,management,81,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:238,safety,manag,management,238,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:424,safety,avoid,avoid,424,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:581,security,Modif,Modified,581,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:253,testability,simpl,simple,253,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:46,usability,memor,memory,46,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:74,usability,memor,memory,74,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:231,usability,memor,memory,231,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15822:253,usability,simpl,simple,253,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```. new TCanvas(); // assign gPad - unreliable. ... histo->Draw(). ```. I want to avoid gPad - for that I need to write now:. ```. auto c1 = new TCanvas();. ... if (c1->GetListOfPrimitives()) {. c1->GetListOfPrimitives()->Add(histo);. c1->Modified();. }. ```. This is main pattern for 90% of graphical tutorials which I want to be looking:. ```. auto c1 = new TCanvas();. ... c1->Add(histo);. ```.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15822
https://github.com/root-project/root/pull/15823:5,deployability,build,build,5,"This build will become a ""Long build"" together with the asan build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15823
https://github.com/root-project/root/pull/15823:31,deployability,build,build,31,"This build will become a ""Long build"" together with the asan build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15823
https://github.com/root-project/root/pull/15823:61,deployability,build,build,61,"This build will become a ""Long build"" together with the asan build.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15823
https://github.com/root-project/root/pull/15825:301,energy efficiency,load,loaded,301,> To be honest I am not sure if this is the right change to do. . I am sure it is pure workaround and not a solution. . For now I have no clue how to make in all situations main thread id assigned properly. . As I mentioned - maybe for python we could agree to initialize it when PyROOT libraries are loaded. . In best case it should be assigned at the place where `gROOT` is initialized - but this can have too many side effects.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:301,performance,load,loaded,301,> To be honest I am not sure if this is the right change to do. . I am sure it is pure workaround and not a solution. . For now I have no clue how to make in all situations main thread id assigned properly. . As I mentioned - maybe for python we could agree to initialize it when PyROOT libraries are loaded. . In best case it should be assigned at the place where `gROOT` is initialized - but this can have too many side effects.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:75,availability,slo,slow-down,75,> Isn't EnableThreadSafety() enough? It is not necessary here and probably slow-down other ROOT components. . The only intention here - initialize `TThread::fgMainId` before this will be done in some random thread started by `RWebWindowsManager` or `THttpServer`. . `fgMainId` used when gPad returned depending from current thread id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:301,deployability,depend,depending,301,> Isn't EnableThreadSafety() enough? It is not necessary here and probably slow-down other ROOT components. . The only intention here - initialize `TThread::fgMainId` before this will be done in some random thread started by `RWebWindowsManager` or `THttpServer`. . `fgMainId` used when gPad returned depending from current thread id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:316,energy efficiency,current,current,316,> Isn't EnableThreadSafety() enough? It is not necessary here and probably slow-down other ROOT components. . The only intention here - initialize `TThread::fgMainId` before this will be done in some random thread started by `RWebWindowsManager` or `THttpServer`. . `fgMainId` used when gPad returned depending from current thread id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:96,integrability,compon,components,96,> Isn't EnableThreadSafety() enough? It is not necessary here and probably slow-down other ROOT components. . The only intention here - initialize `TThread::fgMainId` before this will be done in some random thread started by `RWebWindowsManager` or `THttpServer`. . `fgMainId` used when gPad returned depending from current thread id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:301,integrability,depend,depending,301,> Isn't EnableThreadSafety() enough? It is not necessary here and probably slow-down other ROOT components. . The only intention here - initialize `TThread::fgMainId` before this will be done in some random thread started by `RWebWindowsManager` or `THttpServer`. . `fgMainId` used when gPad returned depending from current thread id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:96,interoperability,compon,components,96,> Isn't EnableThreadSafety() enough? It is not necessary here and probably slow-down other ROOT components. . The only intention here - initialize `TThread::fgMainId` before this will be done in some random thread started by `RWebWindowsManager` or `THttpServer`. . `fgMainId` used when gPad returned depending from current thread id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:96,modifiability,compon,components,96,> Isn't EnableThreadSafety() enough? It is not necessary here and probably slow-down other ROOT components. . The only intention here - initialize `TThread::fgMainId` before this will be done in some random thread started by `RWebWindowsManager` or `THttpServer`. . `fgMainId` used when gPad returned depending from current thread id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:301,modifiability,depend,depending,301,> Isn't EnableThreadSafety() enough? It is not necessary here and probably slow-down other ROOT components. . The only intention here - initialize `TThread::fgMainId` before this will be done in some random thread started by `RWebWindowsManager` or `THttpServer`. . `fgMainId` used when gPad returned depending from current thread id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:75,reliability,slo,slow-down,75,> Isn't EnableThreadSafety() enough? It is not necessary here and probably slow-down other ROOT components. . The only intention here - initialize `TThread::fgMainId` before this will be done in some random thread started by `RWebWindowsManager` or `THttpServer`. . `fgMainId` used when gPad returned depending from current thread id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:301,safety,depend,depending,301,> Isn't EnableThreadSafety() enough? It is not necessary here and probably slow-down other ROOT components. . The only intention here - initialize `TThread::fgMainId` before this will be done in some random thread started by `RWebWindowsManager` or `THttpServer`. . `fgMainId` used when gPad returned depending from current thread id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:301,testability,depend,depending,301,> Isn't EnableThreadSafety() enough? It is not necessary here and probably slow-down other ROOT components. . The only intention here - initialize `TThread::fgMainId` before this will be done in some random thread started by `RWebWindowsManager` or `THttpServer`. . `fgMainId` used when gPad returned depending from current thread id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15825:54,testability,context,context,54,"Ok, then `EnableThreadSafety()` is not enough in this context. By invoking `TThread::SelfId()`, also `TThread::Init()` (which is the same of `TThread::Initialize()`) is invoked, but here we need to do something more...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15825
https://github.com/root-project/root/pull/15827:3,availability,failur,failures,3,CI failures has nothing to do with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15827
https://github.com/root-project/root/pull/15827:3,deployability,fail,failures,3,CI failures has nothing to do with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15827
https://github.com/root-project/root/pull/15827:3,performance,failur,failures,3,CI failures has nothing to do with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15827
https://github.com/root-project/root/pull/15827:3,reliability,fail,failures,3,CI failures has nothing to do with PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15827
https://github.com/root-project/root/pull/15837:25,interoperability,format,format,25,There are a lot of clang format warnings. Can they be addressed?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15837
https://github.com/root-project/root/pull/15837:27,interoperability,format,format,27,"> There are a lot of clang format warnings. Can they be addressed? I would prefer to address these formatting issues in separate PR, since affecting a large number of code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15837
https://github.com/root-project/root/pull/15837:99,interoperability,format,formatting,99,"> There are a lot of clang format warnings. Can they be addressed? I would prefer to address these formatting issues in separate PR, since affecting a large number of code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15837
https://github.com/root-project/root/pull/15837:75,usability,prefer,prefer,75,"> There are a lot of clang format warnings. Can they be addressed? I would prefer to address these formatting issues in separate PR, since affecting a large number of code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15837
https://github.com/root-project/root/pull/15838:38,deployability,fail,fails,38,It's unclear to me why `clang-format` fails here. The supposed style violations seem to be in accordance to our `.clang-format` file and running `clang-format` locally no violations are reported..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15838
https://github.com/root-project/root/pull/15838:30,interoperability,format,format,30,It's unclear to me why `clang-format` fails here. The supposed style violations seem to be in accordance to our `.clang-format` file and running `clang-format` locally no violations are reported..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15838
https://github.com/root-project/root/pull/15838:120,interoperability,format,format,120,It's unclear to me why `clang-format` fails here. The supposed style violations seem to be in accordance to our `.clang-format` file and running `clang-format` locally no violations are reported..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15838
https://github.com/root-project/root/pull/15838:152,interoperability,format,format,152,It's unclear to me why `clang-format` fails here. The supposed style violations seem to be in accordance to our `.clang-format` file and running `clang-format` locally no violations are reported..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15838
https://github.com/root-project/root/pull/15838:38,reliability,fail,fails,38,It's unclear to me why `clang-format` fails here. The supposed style violations seem to be in accordance to our `.clang-format` file and running `clang-format` locally no violations are reported..,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15838
https://github.com/root-project/root/issues/15842:508,availability,operat,operator,508,"Hi, I think this is a known limitation of the design. The issue here is not a mixture of vector classes but a negation of a vector from a coordinate system using mass (so just the `PxPyPzMVector` part):. ```cpp. root [0] auto v = ROOT::Math::PxPyPzMVector(0,0,1,0). (ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > &) (0,0,1,0). root [1] v-v. (ROOT::Math::LorentzVector) (0,0,0,0). root [2] v+(-v). (ROOT::Math::LorentzVector) (0,0,0,2). ```. For coordinate systems represented with mass an unary `operator-` doesn't model a '4-vector negation' operation, because it returns a vector with negated momentum and negated mass instead of returning a properly negated 4-vector. A negated 4-vector should have negated momentum and negated energy but the same mass, and that can't be achieved with a representation containing only momentum and mass. It could be done by introducing another member (sign of energy), but that would be intrusive into design",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/issues/15842:555,availability,operat,operation,555,"Hi, I think this is a known limitation of the design. The issue here is not a mixture of vector classes but a negation of a vector from a coordinate system using mass (so just the `PxPyPzMVector` part):. ```cpp. root [0] auto v = ROOT::Math::PxPyPzMVector(0,0,1,0). (ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > &) (0,0,1,0). root [1] v-v. (ROOT::Math::LorentzVector) (0,0,0,0). root [2] v+(-v). (ROOT::Math::LorentzVector) (0,0,0,2). ```. For coordinate systems represented with mass an unary `operator-` doesn't model a '4-vector negation' operation, because it returns a vector with negated momentum and negated mass instead of returning a properly negated 4-vector. A negated 4-vector should have negated momentum and negated energy but the same mass, and that can't be achieved with a representation containing only momentum and mass. It could be done by introducing another member (sign of energy), but that would be intrusive into design",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/issues/15842:818,deployability,contain,containing,818,"Hi, I think this is a known limitation of the design. The issue here is not a mixture of vector classes but a negation of a vector from a coordinate system using mass (so just the `PxPyPzMVector` part):. ```cpp. root [0] auto v = ROOT::Math::PxPyPzMVector(0,0,1,0). (ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > &) (0,0,1,0). root [1] v-v. (ROOT::Math::LorentzVector) (0,0,0,0). root [2] v+(-v). (ROOT::Math::LorentzVector) (0,0,0,2). ```. For coordinate systems represented with mass an unary `operator-` doesn't model a '4-vector negation' operation, because it returns a vector with negated momentum and negated mass instead of returning a properly negated 4-vector. A negated 4-vector should have negated momentum and negated energy but the same mass, and that can't be achieved with a representation containing only momentum and mass. It could be done by introducing another member (sign of energy), but that would be intrusive into design",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/issues/15842:527,energy efficiency,model,model,527,"Hi, I think this is a known limitation of the design. The issue here is not a mixture of vector classes but a negation of a vector from a coordinate system using mass (so just the `PxPyPzMVector` part):. ```cpp. root [0] auto v = ROOT::Math::PxPyPzMVector(0,0,1,0). (ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > &) (0,0,1,0). root [1] v-v. (ROOT::Math::LorentzVector) (0,0,0,0). root [2] v+(-v). (ROOT::Math::LorentzVector) (0,0,0,2). ```. For coordinate systems represented with mass an unary `operator-` doesn't model a '4-vector negation' operation, because it returns a vector with negated momentum and negated mass instead of returning a properly negated 4-vector. A negated 4-vector should have negated momentum and negated energy but the same mass, and that can't be achieved with a representation containing only momentum and mass. It could be done by introducing another member (sign of energy), but that would be intrusive into design",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/issues/15842:743,energy efficiency,energ,energy,743,"Hi, I think this is a known limitation of the design. The issue here is not a mixture of vector classes but a negation of a vector from a coordinate system using mass (so just the `PxPyPzMVector` part):. ```cpp. root [0] auto v = ROOT::Math::PxPyPzMVector(0,0,1,0). (ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > &) (0,0,1,0). root [1] v-v. (ROOT::Math::LorentzVector) (0,0,0,0). root [2] v+(-v). (ROOT::Math::LorentzVector) (0,0,0,2). ```. For coordinate systems represented with mass an unary `operator-` doesn't model a '4-vector negation' operation, because it returns a vector with negated momentum and negated mass instead of returning a properly negated 4-vector. A negated 4-vector should have negated momentum and negated energy but the same mass, and that can't be achieved with a representation containing only momentum and mass. It could be done by introducing another member (sign of energy), but that would be intrusive into design",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/issues/15842:909,energy efficiency,energ,energy,909,"Hi, I think this is a known limitation of the design. The issue here is not a mixture of vector classes but a negation of a vector from a coordinate system using mass (so just the `PxPyPzMVector` part):. ```cpp. root [0] auto v = ROOT::Math::PxPyPzMVector(0,0,1,0). (ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > &) (0,0,1,0). root [1] v-v. (ROOT::Math::LorentzVector) (0,0,0,0). root [2] v+(-v). (ROOT::Math::LorentzVector) (0,0,0,2). ```. For coordinate systems represented with mass an unary `operator-` doesn't model a '4-vector negation' operation, because it returns a vector with negated momentum and negated mass instead of returning a properly negated 4-vector. A negated 4-vector should have negated momentum and negated energy but the same mass, and that can't be achieved with a representation containing only momentum and mass. It could be done by introducing another member (sign of energy), but that would be intrusive into design",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/issues/15842:138,interoperability,coordinat,coordinate,138,"Hi, I think this is a known limitation of the design. The issue here is not a mixture of vector classes but a negation of a vector from a coordinate system using mass (so just the `PxPyPzMVector` part):. ```cpp. root [0] auto v = ROOT::Math::PxPyPzMVector(0,0,1,0). (ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > &) (0,0,1,0). root [1] v-v. (ROOT::Math::LorentzVector) (0,0,0,0). root [2] v+(-v). (ROOT::Math::LorentzVector) (0,0,0,2). ```. For coordinate systems represented with mass an unary `operator-` doesn't model a '4-vector negation' operation, because it returns a vector with negated momentum and negated mass instead of returning a properly negated 4-vector. A negated 4-vector should have negated momentum and negated energy but the same mass, and that can't be achieved with a representation containing only momentum and mass. It could be done by introducing another member (sign of energy), but that would be intrusive into design",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/issues/15842:457,interoperability,coordinat,coordinate,457,"Hi, I think this is a known limitation of the design. The issue here is not a mixture of vector classes but a negation of a vector from a coordinate system using mass (so just the `PxPyPzMVector` part):. ```cpp. root [0] auto v = ROOT::Math::PxPyPzMVector(0,0,1,0). (ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > &) (0,0,1,0). root [1] v-v. (ROOT::Math::LorentzVector) (0,0,0,0). root [2] v+(-v). (ROOT::Math::LorentzVector) (0,0,0,2). ```. For coordinate systems represented with mass an unary `operator-` doesn't model a '4-vector negation' operation, because it returns a vector with negated momentum and negated mass instead of returning a properly negated 4-vector. A negated 4-vector should have negated momentum and negated energy but the same mass, and that can't be achieved with a representation containing only momentum and mass. It could be done by introducing another member (sign of energy), but that would be intrusive into design",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/issues/15842:519,reliability,doe,doesn,519,"Hi, I think this is a known limitation of the design. The issue here is not a mixture of vector classes but a negation of a vector from a coordinate system using mass (so just the `PxPyPzMVector` part):. ```cpp. root [0] auto v = ROOT::Math::PxPyPzMVector(0,0,1,0). (ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > &) (0,0,1,0). root [1] v-v. (ROOT::Math::LorentzVector) (0,0,0,0). root [2] v+(-v). (ROOT::Math::LorentzVector) (0,0,0,2). ```. For coordinate systems represented with mass an unary `operator-` doesn't model a '4-vector negation' operation, because it returns a vector with negated momentum and negated mass instead of returning a properly negated 4-vector. A negated 4-vector should have negated momentum and negated energy but the same mass, and that can't be achieved with a representation containing only momentum and mass. It could be done by introducing another member (sign of energy), but that would be intrusive into design",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/issues/15842:527,security,model,model,527,"Hi, I think this is a known limitation of the design. The issue here is not a mixture of vector classes but a negation of a vector from a coordinate system using mass (so just the `PxPyPzMVector` part):. ```cpp. root [0] auto v = ROOT::Math::PxPyPzMVector(0,0,1,0). (ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > &) (0,0,1,0). root [1] v-v. (ROOT::Math::LorentzVector) (0,0,0,0). root [2] v+(-v). (ROOT::Math::LorentzVector) (0,0,0,2). ```. For coordinate systems represented with mass an unary `operator-` doesn't model a '4-vector negation' operation, because it returns a vector with negated momentum and negated mass instead of returning a properly negated 4-vector. A negated 4-vector should have negated momentum and negated energy but the same mass, and that can't be achieved with a representation containing only momentum and mass. It could be done by introducing another member (sign of energy), but that would be intrusive into design",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/issues/15842:901,security,sign,sign,901,"Hi, I think this is a known limitation of the design. The issue here is not a mixture of vector classes but a negation of a vector from a coordinate system using mass (so just the `PxPyPzMVector` part):. ```cpp. root [0] auto v = ROOT::Math::PxPyPzMVector(0,0,1,0). (ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > &) (0,0,1,0). root [1] v-v. (ROOT::Math::LorentzVector) (0,0,0,0). root [2] v+(-v). (ROOT::Math::LorentzVector) (0,0,0,2). ```. For coordinate systems represented with mass an unary `operator-` doesn't model a '4-vector negation' operation, because it returns a vector with negated momentum and negated mass instead of returning a properly negated 4-vector. A negated 4-vector should have negated momentum and negated energy but the same mass, and that can't be achieved with a representation containing only momentum and mass. It could be done by introducing another member (sign of energy), but that would be intrusive into design",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/issues/15842:936,security,intrus,intrusive,936,"Hi, I think this is a known limitation of the design. The issue here is not a mixture of vector classes but a negation of a vector from a coordinate system using mass (so just the `PxPyPzMVector` part):. ```cpp. root [0] auto v = ROOT::Math::PxPyPzMVector(0,0,1,0). (ROOT::Math::LorentzVector<ROOT::Math::PxPyPzM4D<double> > &) (0,0,1,0). root [1] v-v. (ROOT::Math::LorentzVector) (0,0,0,0). root [2] v+(-v). (ROOT::Math::LorentzVector) (0,0,0,2). ```. For coordinate systems represented with mass an unary `operator-` doesn't model a '4-vector negation' operation, because it returns a vector with negated momentum and negated mass instead of returning a properly negated 4-vector. A negated 4-vector should have negated momentum and negated energy but the same mass, and that can't be achieved with a representation containing only momentum and mass. It could be done by introducing another member (sign of energy), but that would be intrusive into design",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15842
https://github.com/root-project/root/pull/15843:43,deployability,build,builds,43,Thanks for the proposed changes. I let the builds go to start checking the code through the CI. I of course let @lmoneta and @guitargeek decide about the review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15843
https://github.com/root-project/root/pull/15843:154,safety,review,review,154,Thanks for the proposed changes. I let the builds go to start checking the code through the CI. I of course let @lmoneta and @guitargeek decide about the review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15843
https://github.com/root-project/root/pull/15843:154,testability,review,review,154,Thanks for the proposed changes. I let the builds go to start checking the code through the CI. I of course let @lmoneta and @guitargeek decide about the review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15843
https://github.com/root-project/root/issues/15851:133,energy efficiency,Draw,Draw,133,"For example, we are missing the functionality that would show the following histogram:. ```. profile2d->GetProjectionXY(""_pxy"",OPT)->Draw(DRAWOPT). ```. Where OPT and DRAWOPT are somehow to be determined. OPT can be one of:. """". ""W"". ""C=E"". ""E"". ""B"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:138,energy efficiency,DRAW,DRAWOPT,138,"For example, we are missing the functionality that would show the following histogram:. ```. profile2d->GetProjectionXY(""_pxy"",OPT)->Draw(DRAWOPT). ```. Where OPT and DRAWOPT are somehow to be determined. OPT can be one of:. """". ""W"". ""C=E"". ""E"". ""B"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:167,energy efficiency,DRAW,DRAWOPT,167,"For example, we are missing the functionality that would show the following histogram:. ```. profile2d->GetProjectionXY(""_pxy"",OPT)->Draw(DRAWOPT). ```. Where OPT and DRAWOPT are somehow to be determined. OPT can be one of:. """". ""W"". ""C=E"". ""E"". ""B"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:280,energy efficiency,draw,draw,280,Do I understand you correctly - you want to have new `TProfile2D::ProjectionXY()` method with different options which content will be in produced histogram? And also special implementation for `TProfile2D::ProjectX()` and `TProfile2D::ProjectY()`? And then display it with custom draw options? Main question - do you want to have such projections only for visualization or it make sense implementing them in `TProfile2D` class of ROOT. If only visualization is interesting - one can provide pure JavaScript implementation. . If methods have to be implemented in C++ classes - probably this should be done first and then `TWebCanvas`/JSROOT can provide support of such methods.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:118,performance,content,content,118,Do I understand you correctly - you want to have new `TProfile2D::ProjectionXY()` method with different options which content will be in produced histogram? And also special implementation for `TProfile2D::ProjectX()` and `TProfile2D::ProjectY()`? And then display it with custom draw options? Main question - do you want to have such projections only for visualization or it make sense implementing them in `TProfile2D` class of ROOT. If only visualization is interesting - one can provide pure JavaScript implementation. . If methods have to be implemented in C++ classes - probably this should be done first and then `TWebCanvas`/JSROOT can provide support of such methods.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:5,testability,understand,understand,5,Do I understand you correctly - you want to have new `TProfile2D::ProjectionXY()` method with different options which content will be in produced histogram? And also special implementation for `TProfile2D::ProjectX()` and `TProfile2D::ProjectY()`? And then display it with custom draw options? Main question - do you want to have such projections only for visualization or it make sense implementing them in `TProfile2D` class of ROOT. If only visualization is interesting - one can provide pure JavaScript implementation. . If methods have to be implemented in C++ classes - probably this should be done first and then `TWebCanvas`/JSROOT can provide support of such methods.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:273,usability,custom,custom,273,Do I understand you correctly - you want to have new `TProfile2D::ProjectionXY()` method with different options which content will be in produced histogram? And also special implementation for `TProfile2D::ProjectX()` and `TProfile2D::ProjectY()`? And then display it with custom draw options? Main question - do you want to have such projections only for visualization or it make sense implementing them in `TProfile2D` class of ROOT. If only visualization is interesting - one can provide pure JavaScript implementation. . If methods have to be implemented in C++ classes - probably this should be done first and then `TWebCanvas`/JSROOT can provide support of such methods.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:356,usability,visual,visualization,356,Do I understand you correctly - you want to have new `TProfile2D::ProjectionXY()` method with different options which content will be in produced histogram? And also special implementation for `TProfile2D::ProjectX()` and `TProfile2D::ProjectY()`? And then display it with custom draw options? Main question - do you want to have such projections only for visualization or it make sense implementing them in `TProfile2D` class of ROOT. If only visualization is interesting - one can provide pure JavaScript implementation. . If methods have to be implemented in C++ classes - probably this should be done first and then `TWebCanvas`/JSROOT can provide support of such methods.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:444,usability,visual,visualization,444,Do I understand you correctly - you want to have new `TProfile2D::ProjectionXY()` method with different options which content will be in produced histogram? And also special implementation for `TProfile2D::ProjectX()` and `TProfile2D::ProjectY()`? And then display it with custom draw options? Main question - do you want to have such projections only for visualization or it make sense implementing them in `TProfile2D` class of ROOT. If only visualization is interesting - one can provide pure JavaScript implementation. . If methods have to be implemented in C++ classes - probably this should be done first and then `TWebCanvas`/JSROOT can provide support of such methods.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:652,usability,support,support,652,Do I understand you correctly - you want to have new `TProfile2D::ProjectionXY()` method with different options which content will be in produced histogram? And also special implementation for `TProfile2D::ProjectX()` and `TProfile2D::ProjectY()`? And then display it with custom draw options? Main question - do you want to have such projections only for visualization or it make sense implementing them in `TProfile2D` class of ROOT. If only visualization is interesting - one can provide pure JavaScript implementation. . If methods have to be implemented in C++ classes - probably this should be done first and then `TWebCanvas`/JSROOT can provide support of such methods.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:79,availability,monitor,monitoring,79,"The use case is that in ATLAS experiment we use JSROOT for display of detector monitoring plots, which include things like efficiency plots that exist as TProfile or TProfile2D. It would be nice to have a way in JSROOT to view the denominator distribution for such a plot, which is obtained from the ProjectionX or ProjectionXY method with the ""B"" option. . I think this is about visualization in JSROOT. If we had a C++ or python prompt we know what we need to do to view the projection. I just want to have a way to do that just with a JSROOT draw option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:79,deployability,monitor,monitoring,79,"The use case is that in ATLAS experiment we use JSROOT for display of detector monitoring plots, which include things like efficiency plots that exist as TProfile or TProfile2D. It would be nice to have a way in JSROOT to view the denominator distribution for such a plot, which is obtained from the ProjectionX or ProjectionXY method with the ""B"" option. . I think this is about visualization in JSROOT. If we had a C++ or python prompt we know what we need to do to view the projection. I just want to have a way to do that just with a JSROOT draw option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:79,energy efficiency,monitor,monitoring,79,"The use case is that in ATLAS experiment we use JSROOT for display of detector monitoring plots, which include things like efficiency plots that exist as TProfile or TProfile2D. It would be nice to have a way in JSROOT to view the denominator distribution for such a plot, which is obtained from the ProjectionX or ProjectionXY method with the ""B"" option. . I think this is about visualization in JSROOT. If we had a C++ or python prompt we know what we need to do to view the projection. I just want to have a way to do that just with a JSROOT draw option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:545,energy efficiency,draw,draw,545,"The use case is that in ATLAS experiment we use JSROOT for display of detector monitoring plots, which include things like efficiency plots that exist as TProfile or TProfile2D. It would be nice to have a way in JSROOT to view the denominator distribution for such a plot, which is obtained from the ProjectionX or ProjectionXY method with the ""B"" option. . I think this is about visualization in JSROOT. If we had a C++ or python prompt we know what we need to do to view the projection. I just want to have a way to do that just with a JSROOT draw option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:243,interoperability,distribut,distribution,243,"The use case is that in ATLAS experiment we use JSROOT for display of detector monitoring plots, which include things like efficiency plots that exist as TProfile or TProfile2D. It would be nice to have a way in JSROOT to view the denominator distribution for such a plot, which is obtained from the ProjectionX or ProjectionXY method with the ""B"" option. . I think this is about visualization in JSROOT. If we had a C++ or python prompt we know what we need to do to view the projection. I just want to have a way to do that just with a JSROOT draw option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:79,reliability,monitor,monitoring,79,"The use case is that in ATLAS experiment we use JSROOT for display of detector monitoring plots, which include things like efficiency plots that exist as TProfile or TProfile2D. It would be nice to have a way in JSROOT to view the denominator distribution for such a plot, which is obtained from the ProjectionX or ProjectionXY method with the ""B"" option. . I think this is about visualization in JSROOT. If we had a C++ or python prompt we know what we need to do to view the projection. I just want to have a way to do that just with a JSROOT draw option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:70,safety,detect,detector,70,"The use case is that in ATLAS experiment we use JSROOT for display of detector monitoring plots, which include things like efficiency plots that exist as TProfile or TProfile2D. It would be nice to have a way in JSROOT to view the denominator distribution for such a plot, which is obtained from the ProjectionX or ProjectionXY method with the ""B"" option. . I think this is about visualization in JSROOT. If we had a C++ or python prompt we know what we need to do to view the projection. I just want to have a way to do that just with a JSROOT draw option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:79,safety,monitor,monitoring,79,"The use case is that in ATLAS experiment we use JSROOT for display of detector monitoring plots, which include things like efficiency plots that exist as TProfile or TProfile2D. It would be nice to have a way in JSROOT to view the denominator distribution for such a plot, which is obtained from the ProjectionX or ProjectionXY method with the ""B"" option. . I think this is about visualization in JSROOT. If we had a C++ or python prompt we know what we need to do to view the projection. I just want to have a way to do that just with a JSROOT draw option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:70,security,detect,detector,70,"The use case is that in ATLAS experiment we use JSROOT for display of detector monitoring plots, which include things like efficiency plots that exist as TProfile or TProfile2D. It would be nice to have a way in JSROOT to view the denominator distribution for such a plot, which is obtained from the ProjectionX or ProjectionXY method with the ""B"" option. . I think this is about visualization in JSROOT. If we had a C++ or python prompt we know what we need to do to view the projection. I just want to have a way to do that just with a JSROOT draw option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:79,testability,monitor,monitoring,79,"The use case is that in ATLAS experiment we use JSROOT for display of detector monitoring plots, which include things like efficiency plots that exist as TProfile or TProfile2D. It would be nice to have a way in JSROOT to view the denominator distribution for such a plot, which is obtained from the ProjectionX or ProjectionXY method with the ""B"" option. . I think this is about visualization in JSROOT. If we had a C++ or python prompt we know what we need to do to view the projection. I just want to have a way to do that just with a JSROOT draw option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:123,usability,efficien,efficiency,123,"The use case is that in ATLAS experiment we use JSROOT for display of detector monitoring plots, which include things like efficiency plots that exist as TProfile or TProfile2D. It would be nice to have a way in JSROOT to view the denominator distribution for such a plot, which is obtained from the ProjectionX or ProjectionXY method with the ""B"" option. . I think this is about visualization in JSROOT. If we had a C++ or python prompt we know what we need to do to view the projection. I just want to have a way to do that just with a JSROOT draw option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:380,usability,visual,visualization,380,"The use case is that in ATLAS experiment we use JSROOT for display of detector monitoring plots, which include things like efficiency plots that exist as TProfile or TProfile2D. It would be nice to have a way in JSROOT to view the denominator distribution for such a plot, which is obtained from the ProjectionX or ProjectionXY method with the ""B"" option. . I think this is about visualization in JSROOT. If we had a C++ or python prompt we know what we need to do to view the projection. I just want to have a way to do that just with a JSROOT draw option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:141,energy efficiency,draw,draw,141,"Since it's a 2d projection, I would have said you could either view it side-by-side with the original, or you could just this as a different draw option that's unique to tprofile2d. I was imagining the latter, where I see you have the ""proj"" submenu already, and I would have added options there for each of the options of ""projectionxy"". And similarly for TProfile::ProjectionX. . But then there is the question of how you would control the option that *THAT* histogram displays with. Here I can see the benefit of what you propose that it displays the ""projection"" side-by-side with the original plot. Then you can use the context menu of the projection to change the draw style of it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:670,energy efficiency,draw,draw,670,"Since it's a 2d projection, I would have said you could either view it side-by-side with the original, or you could just this as a different draw option that's unique to tprofile2d. I was imagining the latter, where I see you have the ""proj"" submenu already, and I would have added options there for each of the options of ""projectionxy"". And similarly for TProfile::ProjectionX. . But then there is the question of how you would control the option that *THAT* histogram displays with. Here I can see the benefit of what you propose that it displays the ""projection"" side-by-side with the original plot. Then you can use the context menu of the projection to change the draw style of it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:242,integrability,sub,submenu,242,"Since it's a 2d projection, I would have said you could either view it side-by-side with the original, or you could just this as a different draw option that's unique to tprofile2d. I was imagining the latter, where I see you have the ""proj"" submenu already, and I would have added options there for each of the options of ""projectionxy"". And similarly for TProfile::ProjectionX. . But then there is the question of how you would control the option that *THAT* histogram displays with. Here I can see the benefit of what you propose that it displays the ""projection"" side-by-side with the original plot. Then you can use the context menu of the projection to change the draw style of it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:430,security,control,control,430,"Since it's a 2d projection, I would have said you could either view it side-by-side with the original, or you could just this as a different draw option that's unique to tprofile2d. I was imagining the latter, where I see you have the ""proj"" submenu already, and I would have added options there for each of the options of ""projectionxy"". And similarly for TProfile::ProjectionX. . But then there is the question of how you would control the option that *THAT* histogram displays with. Here I can see the benefit of what you propose that it displays the ""projection"" side-by-side with the original plot. Then you can use the context menu of the projection to change the draw style of it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:430,testability,control,control,430,"Since it's a 2d projection, I would have said you could either view it side-by-side with the original, or you could just this as a different draw option that's unique to tprofile2d. I was imagining the latter, where I see you have the ""proj"" submenu already, and I would have added options there for each of the options of ""projectionxy"". And similarly for TProfile::ProjectionX. . But then there is the question of how you would control the option that *THAT* histogram displays with. Here I can see the benefit of what you propose that it displays the ""projection"" side-by-side with the original plot. Then you can use the context menu of the projection to change the draw style of it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:625,testability,context,context,625,"Since it's a 2d projection, I would have said you could either view it side-by-side with the original, or you could just this as a different draw option that's unique to tprofile2d. I was imagining the latter, where I see you have the ""proj"" submenu already, and I would have added options there for each of the options of ""projectionxy"". And similarly for TProfile::ProjectionX. . But then there is the question of how you would control the option that *THAT* histogram displays with. Here I can see the benefit of what you propose that it displays the ""projection"" side-by-side with the original plot. Then you can use the context menu of the projection to change the draw style of it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:633,usability,menu,menu,633,"Since it's a 2d projection, I would have said you could either view it side-by-side with the original, or you could just this as a different draw option that's unique to tprofile2d. I was imagining the latter, where I see you have the ""proj"" submenu already, and I would have added options there for each of the options of ""projectionxy"". And similarly for TProfile::ProjectionX. . But then there is the question of how you would control the option that *THAT* histogram displays with. Here I can see the benefit of what you propose that it displays the ""projection"" side-by-side with the original plot. Then you can use the context menu of the projection to change the draw style of it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:214,availability,error,error,214,"I implement several new draw options for `TProfile2D`: `projxyb`, `projxyc=e`, `projxyw`. Example: https://jsroot.gsi.de/dev/examples.htm#tprofile2d_projxyb. I only skipped option 'e' while it makes no big sense - error just remain as is. JSROOT does not modify histogram but just manipulates internally `GetBinContent()` method. . Therefore draw options can be switched any time to something else. Same kind of projection I will provide for `TProfile` class later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:24,energy efficiency,draw,draw,24,"I implement several new draw options for `TProfile2D`: `projxyb`, `projxyc=e`, `projxyw`. Example: https://jsroot.gsi.de/dev/examples.htm#tprofile2d_projxyb. I only skipped option 'e' while it makes no big sense - error just remain as is. JSROOT does not modify histogram but just manipulates internally `GetBinContent()` method. . Therefore draw options can be switched any time to something else. Same kind of projection I will provide for `TProfile` class later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:342,energy efficiency,draw,draw,342,"I implement several new draw options for `TProfile2D`: `projxyb`, `projxyc=e`, `projxyw`. Example: https://jsroot.gsi.de/dev/examples.htm#tprofile2d_projxyb. I only skipped option 'e' while it makes no big sense - error just remain as is. JSROOT does not modify histogram but just manipulates internally `GetBinContent()` method. . Therefore draw options can be switched any time to something else. Same kind of projection I will provide for `TProfile` class later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:214,performance,error,error,214,"I implement several new draw options for `TProfile2D`: `projxyb`, `projxyc=e`, `projxyw`. Example: https://jsroot.gsi.de/dev/examples.htm#tprofile2d_projxyb. I only skipped option 'e' while it makes no big sense - error just remain as is. JSROOT does not modify histogram but just manipulates internally `GetBinContent()` method. . Therefore draw options can be switched any time to something else. Same kind of projection I will provide for `TProfile` class later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:375,performance,time,time,375,"I implement several new draw options for `TProfile2D`: `projxyb`, `projxyc=e`, `projxyw`. Example: https://jsroot.gsi.de/dev/examples.htm#tprofile2d_projxyb. I only skipped option 'e' while it makes no big sense - error just remain as is. JSROOT does not modify histogram but just manipulates internally `GetBinContent()` method. . Therefore draw options can be switched any time to something else. Same kind of projection I will provide for `TProfile` class later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:246,reliability,doe,does,246,"I implement several new draw options for `TProfile2D`: `projxyb`, `projxyc=e`, `projxyw`. Example: https://jsroot.gsi.de/dev/examples.htm#tprofile2d_projxyb. I only skipped option 'e' while it makes no big sense - error just remain as is. JSROOT does not modify histogram but just manipulates internally `GetBinContent()` method. . Therefore draw options can be switched any time to something else. Same kind of projection I will provide for `TProfile` class later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:214,safety,error,error,214,"I implement several new draw options for `TProfile2D`: `projxyb`, `projxyc=e`, `projxyw`. Example: https://jsroot.gsi.de/dev/examples.htm#tprofile2d_projxyb. I only skipped option 'e' while it makes no big sense - error just remain as is. JSROOT does not modify histogram but just manipulates internally `GetBinContent()` method. . Therefore draw options can be switched any time to something else. Same kind of projection I will provide for `TProfile` class later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:255,security,modif,modify,255,"I implement several new draw options for `TProfile2D`: `projxyb`, `projxyc=e`, `projxyw`. Example: https://jsroot.gsi.de/dev/examples.htm#tprofile2d_projxyb. I only skipped option 'e' while it makes no big sense - error just remain as is. JSROOT does not modify histogram but just manipulates internally `GetBinContent()` method. . Therefore draw options can be switched any time to something else. Same kind of projection I will provide for `TProfile` class later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:214,usability,error,error,214,"I implement several new draw options for `TProfile2D`: `projxyb`, `projxyc=e`, `projxyw`. Example: https://jsroot.gsi.de/dev/examples.htm#tprofile2d_projxyb. I only skipped option 'e' while it makes no big sense - error just remain as is. JSROOT does not modify histogram but just manipulates internally `GetBinContent()` method. . Therefore draw options can be switched any time to something else. Same kind of projection I will provide for `TProfile` class later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:132,availability,monitor,monitoring,132,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:169,availability,monitor,monitoring,169,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:132,deployability,monitor,monitoring,132,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:169,deployability,monitor,monitoring,169,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:132,energy efficiency,monitor,monitoring,132,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:169,energy efficiency,monitor,monitoring,169,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:271,performance,time,time,271,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:132,reliability,monitor,monitoring,132,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:169,reliability,monitor,monitoring,169,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:132,safety,monitor,monitoring,132,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:169,safety,monitor,monitoring,169,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:132,testability,monitor,monitoring,132,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:169,testability,monitor,monitoring,169,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:30,usability,help,helpful,30,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:447,usability,efficien,efficiency,447,"Many thanks, this looks super helpful for us because it will save us having to save the bin entries as a separate histogram for our monitoring framework (which displays monitoring plots with JSROOT). When you add the feature for TProfile, it would be good if at the same time you could do something similar for TEfficiency, to allow display of the ""Total histogram"" (equivalent to a projection with option ""B"" in a TProfile that has been used for efficiency), since some of our plots are TEfficiency rather than TProfile. .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:217,energy efficiency,draw,draw,217,I add `projx` for `TProfile` . https://jsroot.gsi.de/dev/examples.htm#tprofile_projxb. https://jsroot.gsi.de/dev/examples.htm#tprofile_projxc=e. https://jsroot.gsi.de/dev/examples.htm#tprofile_projxw. and special 'b' draw option for `TEfficiency`. String after 'b' used as draw option for total histogram:. https://jsroot.gsi.de/dev/examples.htm#tefficiency_b. https://jsroot.gsi.de/dev/examples.htm#tefficiency_bbox.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:273,energy efficiency,draw,draw,273,I add `projx` for `TProfile` . https://jsroot.gsi.de/dev/examples.htm#tprofile_projxb. https://jsroot.gsi.de/dev/examples.htm#tprofile_projxc=e. https://jsroot.gsi.de/dev/examples.htm#tprofile_projxw. and special 'b' draw option for `TEfficiency`. String after 'b' used as draw option for total histogram:. https://jsroot.gsi.de/dev/examples.htm#tefficiency_b. https://jsroot.gsi.de/dev/examples.htm#tefficiency_bbox.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:59,energy efficiency,draw,draw,59,"Thank you! For the TEfficiency, is it possible to add that draw option to the context menu of the TEfficiency? I note at the moment there is in fact no context menu for TEfficiency (if I select it from the list of drawn primitives, no menu is displayed). Adding a way to switch between the different draw options of TEfficiency through such a context menu is what we ultimately would prefer. Is that possible to do? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:214,energy efficiency,draw,drawn,214,"Thank you! For the TEfficiency, is it possible to add that draw option to the context menu of the TEfficiency? I note at the moment there is in fact no context menu for TEfficiency (if I select it from the list of drawn primitives, no menu is displayed). Adding a way to switch between the different draw options of TEfficiency through such a context menu is what we ultimately would prefer. Is that possible to do? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:300,energy efficiency,draw,draw,300,"Thank you! For the TEfficiency, is it possible to add that draw option to the context menu of the TEfficiency? I note at the moment there is in fact no context menu for TEfficiency (if I select it from the list of drawn primitives, no menu is displayed). Adding a way to switch between the different draw options of TEfficiency through such a context menu is what we ultimately would prefer. Is that possible to do? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:78,testability,context,context,78,"Thank you! For the TEfficiency, is it possible to add that draw option to the context menu of the TEfficiency? I note at the moment there is in fact no context menu for TEfficiency (if I select it from the list of drawn primitives, no menu is displayed). Adding a way to switch between the different draw options of TEfficiency through such a context menu is what we ultimately would prefer. Is that possible to do? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:152,testability,context,context,152,"Thank you! For the TEfficiency, is it possible to add that draw option to the context menu of the TEfficiency? I note at the moment there is in fact no context menu for TEfficiency (if I select it from the list of drawn primitives, no menu is displayed). Adding a way to switch between the different draw options of TEfficiency through such a context menu is what we ultimately would prefer. Is that possible to do? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:343,testability,context,context,343,"Thank you! For the TEfficiency, is it possible to add that draw option to the context menu of the TEfficiency? I note at the moment there is in fact no context menu for TEfficiency (if I select it from the list of drawn primitives, no menu is displayed). Adding a way to switch between the different draw options of TEfficiency through such a context menu is what we ultimately would prefer. Is that possible to do? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:86,usability,menu,menu,86,"Thank you! For the TEfficiency, is it possible to add that draw option to the context menu of the TEfficiency? I note at the moment there is in fact no context menu for TEfficiency (if I select it from the list of drawn primitives, no menu is displayed). Adding a way to switch between the different draw options of TEfficiency through such a context menu is what we ultimately would prefer. Is that possible to do? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:160,usability,menu,menu,160,"Thank you! For the TEfficiency, is it possible to add that draw option to the context menu of the TEfficiency? I note at the moment there is in fact no context menu for TEfficiency (if I select it from the list of drawn primitives, no menu is displayed). Adding a way to switch between the different draw options of TEfficiency through such a context menu is what we ultimately would prefer. Is that possible to do? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:235,usability,menu,menu,235,"Thank you! For the TEfficiency, is it possible to add that draw option to the context menu of the TEfficiency? I note at the moment there is in fact no context menu for TEfficiency (if I select it from the list of drawn primitives, no menu is displayed). Adding a way to switch between the different draw options of TEfficiency through such a context menu is what we ultimately would prefer. Is that possible to do? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:351,usability,menu,menu,351,"Thank you! For the TEfficiency, is it possible to add that draw option to the context menu of the TEfficiency? I note at the moment there is in fact no context menu for TEfficiency (if I select it from the list of drawn primitives, no menu is displayed). Adding a way to switch between the different draw options of TEfficiency through such a context menu is what we ultimately would prefer. Is that possible to do? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:384,usability,prefer,prefer,384,"Thank you! For the TEfficiency, is it possible to add that draw option to the context menu of the TEfficiency? I note at the moment there is in fact no context menu for TEfficiency (if I select it from the list of drawn primitives, no menu is displayed). Adding a way to switch between the different draw options of TEfficiency through such a context menu is what we ultimately would prefer. Is that possible to do? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:28,energy efficiency,draw,drawn,28,"`TEfficiency` itself is not drawn - but derived objects like graph or histogram. . Only in the hierarchy browser on left side efficiency can be seen as is. I will add 'b' as list of supported options, but filling of context menu can be tricky.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:216,testability,context,context,216,"`TEfficiency` itself is not drawn - but derived objects like graph or histogram. . Only in the hierarchy browser on left side efficiency can be seen as is. I will add 'b' as list of supported options, but filling of context menu can be tricky.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:126,usability,efficien,efficiency,126,"`TEfficiency` itself is not drawn - but derived objects like graph or histogram. . Only in the hierarchy browser on left side efficiency can be seen as is. I will add 'b' as list of supported options, but filling of context menu can be tricky.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:182,usability,support,supported,182,"`TEfficiency` itself is not drawn - but derived objects like graph or histogram. . Only in the hierarchy browser on left side efficiency can be seen as is. I will add 'b' as list of supported options, but filling of context menu can be tricky.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:224,usability,menu,menu,224,"`TEfficiency` itself is not drawn - but derived objects like graph or histogram. . Only in the hierarchy browser on left side efficiency can be seen as is. I will add 'b' as list of supported options, but filling of context menu can be tricky.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:99,energy efficiency,draw,draw,99,"I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:325,energy efficiency,draw,drawn,325,"I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:179,security,access,access,179,"I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:298,security,access,access,298,"I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:200,testability,context,context,200,"I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:305,testability,context,context,305,"I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:13,usability,prototyp,prototype,13,"I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:208,usability,menu,menu,208,"I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:313,usability,menu,menu,313,"I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:467,availability,monitor,monitoring,467,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:445,deployability,roll,rolling,445,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:467,deployability,monitor,monitoring,467,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:101,energy efficiency,draw,draw,101,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:339,energy efficiency,draw,drawn,339,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:467,energy efficiency,monitor,monitoring,467,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:467,reliability,monitor,monitoring,467,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:467,safety,monitor,monitoring,467,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:193,security,access,access,193,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:312,security,access,access,312,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:214,testability,context,context,214,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:319,testability,context,context,319,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:467,testability,monitor,monitoring,467,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:15,usability,prototyp,prototype,15,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:222,usability,menu,menu,222,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/issues/15851:327,usability,menu,menu,327,"> I made first prototype of redrawing `TEfficiency`, `THStack`, `TMultiGraph` objects with different draw options. > . > https://jsroot.gsi.de/dev/examples.htm#tefficiency_docu1. > . > You can access `TEfficiency` context menu either via derived objects `TGraphAssymErrors` or via `?` pad button which allows to access context menu of any drawn objects. This works really nicely! Thanks for adding all this functionality, I'm looking forward to rolling it out to our monitoring framework",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15851
https://github.com/root-project/root/pull/15853:69,safety,test,test,69,> [enable on] (potentially all) . We need to make sure that we still test the environment the users will actually use (i.e `dev=OFF` on each PR).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:69,testability,test,test,69,> [enable on] (potentially all) . We need to make sure that we still test the environment the users will actually use (i.e `dev=OFF` on each PR).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:94,usability,user,users,94,> [enable on] (potentially all) . We need to make sure that we still test the environment the users will actually use (i.e `dev=OFF` on each PR).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:29,deployability,build,build,29,"Maybe we can add a ""special"" build, like ""modules off"" or ""march=native""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:42,deployability,modul,modules,42,"Maybe we can add a ""special"" build, like ""modules off"" or ""march=native""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:42,modifiability,modul,modules,42,"Maybe we can add a ""special"" build, like ""modules off"" or ""march=native""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:42,safety,modul,modules,42,"Maybe we can add a ""special"" build, like ""modules off"" or ""march=native""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:51,deployability,build,build,51,I also would start with `-Ddev=ON` being a special build tested on just a few platforms and nightly. In any case currently it cannot work (at least) because of the many warnings coming from LLVM so we need to suppress those before continuing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:231,deployability,continu,continuing,231,I also would start with `-Ddev=ON` being a special build tested on just a few platforms and nightly. In any case currently it cannot work (at least) because of the many warnings coming from LLVM so we need to suppress those before continuing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:113,energy efficiency,current,currently,113,I also would start with `-Ddev=ON` being a special build tested on just a few platforms and nightly. In any case currently it cannot work (at least) because of the many warnings coming from LLVM so we need to suppress those before continuing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:78,interoperability,platform,platforms,78,I also would start with `-Ddev=ON` being a special build tested on just a few platforms and nightly. In any case currently it cannot work (at least) because of the many warnings coming from LLVM so we need to suppress those before continuing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:57,safety,test,tested,57,I also would start with `-Ddev=ON` being a special build tested on just a few platforms and nightly. In any case currently it cannot work (at least) because of the many warnings coming from LLVM so we need to suppress those before continuing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:57,testability,test,tested,57,I also would start with `-Ddev=ON` being a special build tested on just a few platforms and nightly. In any case currently it cannot work (at least) because of the many warnings coming from LLVM so we need to suppress those before continuing,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:253,deployability,build,building,253,"@pcanal if that proves feasible, wouldn't it be beneficial to enable some of the flags everywhere instead of having them opt-in? Namely:. - enabling -Werror everywhere except llvm-facing parts. - using lld when possible (of course we still want to keep building with the default linker to test it works - but maybe it should be the exception rather than the rule). - always defining R__LESS_INCLUDES (or, better, removing all the code in the `#else` parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:529,interoperability,platform,platform,529,"@pcanal if that proves feasible, wouldn't it be beneficial to enable some of the flags everywhere instead of having them opt-in? Namely:. - enabling -Werror everywhere except llvm-facing parts. - using lld when possible (of course we still want to keep building with the default linker to test it works - but maybe it should be the exception rather than the rule). - always defining R__LESS_INCLUDES (or, better, removing all the code in the `#else` parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:168,safety,except,except,168,"@pcanal if that proves feasible, wouldn't it be beneficial to enable some of the flags everywhere instead of having them opt-in? Namely:. - enabling -Werror everywhere except llvm-facing parts. - using lld when possible (of course we still want to keep building with the default linker to test it works - but maybe it should be the exception rather than the rule). - always defining R__LESS_INCLUDES (or, better, removing all the code in the `#else` parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:289,safety,test,test,289,"@pcanal if that proves feasible, wouldn't it be beneficial to enable some of the flags everywhere instead of having them opt-in? Namely:. - enabling -Werror everywhere except llvm-facing parts. - using lld when possible (of course we still want to keep building with the default linker to test it works - but maybe it should be the exception rather than the rule). - always defining R__LESS_INCLUDES (or, better, removing all the code in the `#else` parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:332,safety,except,exception,332,"@pcanal if that proves feasible, wouldn't it be beneficial to enable some of the flags everywhere instead of having them opt-in? Namely:. - enabling -Werror everywhere except llvm-facing parts. - using lld when possible (of course we still want to keep building with the default linker to test it works - but maybe it should be the exception rather than the rule). - always defining R__LESS_INCLUDES (or, better, removing all the code in the `#else` parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:289,testability,test,test,289,"@pcanal if that proves feasible, wouldn't it be beneficial to enable some of the flags everywhere instead of having them opt-in? Namely:. - enabling -Werror everywhere except llvm-facing parts. - using lld when possible (of course we still want to keep building with the default linker to test it works - but maybe it should be the exception rather than the rule). - always defining R__LESS_INCLUDES (or, better, removing all the code in the `#else` parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:243,deployability,build,building,243,"> enabling -Werror everywhere except llvm-facing parts. We don't want `-Werror` by default because there will always be weird platforms that we cannot test, and future compilers may enable other warnings but we don't want to prevent them from building an older release of ROOT. FWIW LLVM sources should explicitly opt out of `-Werror` in our setup. The only place this doesn't work are some ROOT files including Clang headers - I don't have a good idea what to do about that case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:261,deployability,releas,release,261,"> enabling -Werror everywhere except llvm-facing parts. We don't want `-Werror` by default because there will always be weird platforms that we cannot test, and future compilers may enable other warnings but we don't want to prevent them from building an older release of ROOT. FWIW LLVM sources should explicitly opt out of `-Werror` in our setup. The only place this doesn't work are some ROOT files including Clang headers - I don't have a good idea what to do about that case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:126,interoperability,platform,platforms,126,"> enabling -Werror everywhere except llvm-facing parts. We don't want `-Werror` by default because there will always be weird platforms that we cannot test, and future compilers may enable other warnings but we don't want to prevent them from building an older release of ROOT. FWIW LLVM sources should explicitly opt out of `-Werror` in our setup. The only place this doesn't work are some ROOT files including Clang headers - I don't have a good idea what to do about that case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:369,reliability,doe,doesn,369,"> enabling -Werror everywhere except llvm-facing parts. We don't want `-Werror` by default because there will always be weird platforms that we cannot test, and future compilers may enable other warnings but we don't want to prevent them from building an older release of ROOT. FWIW LLVM sources should explicitly opt out of `-Werror` in our setup. The only place this doesn't work are some ROOT files including Clang headers - I don't have a good idea what to do about that case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:30,safety,except,except,30,"> enabling -Werror everywhere except llvm-facing parts. We don't want `-Werror` by default because there will always be weird platforms that we cannot test, and future compilers may enable other warnings but we don't want to prevent them from building an older release of ROOT. FWIW LLVM sources should explicitly opt out of `-Werror` in our setup. The only place this doesn't work are some ROOT files including Clang headers - I don't have a good idea what to do about that case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:151,safety,test,test,151,"> enabling -Werror everywhere except llvm-facing parts. We don't want `-Werror` by default because there will always be weird platforms that we cannot test, and future compilers may enable other warnings but we don't want to prevent them from building an older release of ROOT. FWIW LLVM sources should explicitly opt out of `-Werror` in our setup. The only place this doesn't work are some ROOT files including Clang headers - I don't have a good idea what to do about that case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:225,safety,prevent,prevent,225,"> enabling -Werror everywhere except llvm-facing parts. We don't want `-Werror` by default because there will always be weird platforms that we cannot test, and future compilers may enable other warnings but we don't want to prevent them from building an older release of ROOT. FWIW LLVM sources should explicitly opt out of `-Werror` in our setup. The only place this doesn't work are some ROOT files including Clang headers - I don't have a good idea what to do about that case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:225,security,preven,prevent,225,"> enabling -Werror everywhere except llvm-facing parts. We don't want `-Werror` by default because there will always be weird platforms that we cannot test, and future compilers may enable other warnings but we don't want to prevent them from building an older release of ROOT. FWIW LLVM sources should explicitly opt out of `-Werror` in our setup. The only place this doesn't work are some ROOT files including Clang headers - I don't have a good idea what to do about that case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:151,testability,test,test,151,"> enabling -Werror everywhere except llvm-facing parts. We don't want `-Werror` by default because there will always be weird platforms that we cannot test, and future compilers may enable other warnings but we don't want to prevent them from building an older release of ROOT. FWIW LLVM sources should explicitly opt out of `-Werror` in our setup. The only place this doesn't work are some ROOT files including Clang headers - I don't have a good idea what to do about that case...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:152,availability,error,error,152,"@hahnjo that's fair; but I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:83,interoperability,platform,platforms,83,"@hahnjo that's fair; but I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:152,performance,error,error,152,"@hahnjo that's fair; but I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:76,safety,test,tested,76,"@hahnjo that's fair; but I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:152,safety,error,error,152,"@hahnjo that's fair; but I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:76,testability,test,tested,76,"@hahnjo that's fair; but I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:152,usability,error,error,152,"@hahnjo that's fair; but I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:148,availability,error,error,148,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tend to agree. > I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this. As mentioned before, I think nothing is needed for `interpreter/` because we already disable all warnings for LLVM libraries. For `core/clingutils` and `core/metacling`, I think the flags must be set before `ROOT_OBJECT_LIBRARY`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:528,energy efficiency,core,core,528,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tend to agree. > I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this. As mentioned before, I think nothing is needed for `interpreter/` because we already disable all warnings for LLVM libraries. For `core/clingutils` and `core/metacling`, I think the flags must be set before `ROOT_OBJECT_LIBRARY`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:550,energy efficiency,core,core,550,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tend to agree. > I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this. As mentioned before, I think nothing is needed for `interpreter/` because we already disable all warnings for LLVM libraries. For `core/clingutils` and `core/metacling`, I think the flags must be set before `ROOT_OBJECT_LIBRARY`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:60,interoperability,platform,platforms,60,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tend to agree. > I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this. As mentioned before, I think nothing is needed for `interpreter/` because we already disable all warnings for LLVM libraries. For `core/clingutils` and `core/metacling`, I think the flags must be set before `ROOT_OBJECT_LIBRARY`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:148,performance,error,error,148,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tend to agree. > I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this. As mentioned before, I think nothing is needed for `interpreter/` because we already disable all warnings for LLVM libraries. For `core/clingutils` and `core/metacling`, I think the flags must be set before `ROOT_OBJECT_LIBRARY`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:53,safety,test,tested,53,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tend to agree. > I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this. As mentioned before, I think nothing is needed for `interpreter/` because we already disable all warnings for LLVM libraries. For `core/clingutils` and `core/metacling`, I think the flags must be set before `ROOT_OBJECT_LIBRARY`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:148,safety,error,error,148,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tend to agree. > I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this. As mentioned before, I think nothing is needed for `interpreter/` because we already disable all warnings for LLVM libraries. For `core/clingutils` and `core/metacling`, I think the flags must be set before `ROOT_OBJECT_LIBRARY`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:53,testability,test,tested,53,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tend to agree. > I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this. As mentioned before, I think nothing is needed for `interpreter/` because we already disable all warnings for LLVM libraries. For `core/clingutils` and `core/metacling`, I think the flags must be set before `ROOT_OBJECT_LIBRARY`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:148,usability,error,error,148,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. I tend to agree. > I tried adding appending `-Wno-error` to the CMakeLists of some directories (like `interpreter`), but it didn't really work (I guess `-Werror` gets added after it so it suppresses the other flag) and even if it did it looks sketchy. Not sure what's the best way to approach this. As mentioned before, I think nothing is needed for `interpreter/` because we already disable all warnings for LLVM libraries. For `core/clingutils` and `core/metacling`, I think the flags must be set before `ROOT_OBJECT_LIBRARY`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:207,integrability,event,eventually,207,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. We still need to test (at the very least in the nightly) what the user will see. If we don't test it we will eventually break it (for example some new `CMake` that inadvertently relies on side-effect of that code path).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:60,interoperability,platform,platforms,60,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. We still need to test (at the very least in the nightly) what the user will see. If we don't test it we will eventually break it (for example some new `CMake` that inadvertently relies on side-effect of that code path).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:53,safety,test,tested,53,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. We still need to test (at the very least in the nightly) what the user will see. If we don't test it we will eventually break it (for example some new `CMake` that inadvertently relies on side-effect of that code path).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:115,safety,test,test,115,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. We still need to test (at the very least in the nightly) what the user will see. If we don't test it we will eventually break it (for example some new `CMake` that inadvertently relies on side-effect of that code path).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:191,safety,test,test,191,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. We still need to test (at the very least in the nightly) what the user will see. If we don't test it we will eventually break it (for example some new `CMake` that inadvertently relies on side-effect of that code path).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:53,testability,test,tested,53,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. We still need to test (at the very least in the nightly) what the user will see. If we don't test it we will eventually break it (for example some new `CMake` that inadvertently relies on side-effect of that code path).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:115,testability,test,test,115,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. We still need to test (at the very least in the nightly) what the user will see. If we don't test it we will eventually break it (for example some new `CMake` that inadvertently relies on side-effect of that code path).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:191,testability,test,test,191,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. We still need to test (at the very least in the nightly) what the user will see. If we don't test it we will eventually break it (for example some new `CMake` that inadvertently relies on side-effect of that code path).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:164,usability,user,user,164,"> I suppose we still wanna enable it on all our main tested platforms, at least for the CI nodes. We still need to test (at the very least in the nightly) what the user will see. If we don't test it we will eventually break it (for example some new `CMake` that inadvertently relies on side-effect of that code path).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:232,deployability,log,log,232,"> always defining R__LESS_INCLUDES (or, better, removing all the code in the #else parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined? Per the commit log:. ```. When -Ddev=ON specified, R__LESS_INCLUDES is defined. It will be used to reduce includes which are exposed to the public. While such changes can have side-effects on user code,. option is off by default. ```. i.e. the changes of which header files are included where is a code-wise backward incompatible change (that has only light to zero actual benefit to the user), so we want to thread carefully in introducing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:316,energy efficiency,reduc,reduce,316,"> always defining R__LESS_INCLUDES (or, better, removing all the code in the #else parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined? Per the commit log:. ```. When -Ddev=ON specified, R__LESS_INCLUDES is defined. It will be used to reduce includes which are exposed to the public. While such changes can have side-effects on user code,. option is off by default. ```. i.e. the changes of which header files are included where is a code-wise backward incompatible change (that has only light to zero actual benefit to the user), so we want to thread carefully in introducing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:357,integrability,pub,public,357,"> always defining R__LESS_INCLUDES (or, better, removing all the code in the #else parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined? Per the commit log:. ```. When -Ddev=ON specified, R__LESS_INCLUDES is defined. It will be used to reduce includes which are exposed to the public. While such changes can have side-effects on user code,. option is off by default. ```. i.e. the changes of which header files are included where is a code-wise backward incompatible change (that has only light to zero actual benefit to the user), so we want to thread carefully in introducing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:162,interoperability,platform,platform,162,"> always defining R__LESS_INCLUDES (or, better, removing all the code in the #else parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined? Per the commit log:. ```. When -Ddev=ON specified, R__LESS_INCLUDES is defined. It will be used to reduce includes which are exposed to the public. While such changes can have side-effects on user code,. option is off by default. ```. i.e. the changes of which header files are included where is a code-wise backward incompatible change (that has only light to zero actual benefit to the user), so we want to thread carefully in introducing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:257,interoperability,specif,specified,257,"> always defining R__LESS_INCLUDES (or, better, removing all the code in the #else parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined? Per the commit log:. ```. When -Ddev=ON specified, R__LESS_INCLUDES is defined. It will be used to reduce includes which are exposed to the public. While such changes can have side-effects on user code,. option is off by default. ```. i.e. the changes of which header files are included where is a code-wise backward incompatible change (that has only light to zero actual benefit to the user), so we want to thread carefully in introducing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:534,interoperability,incompatib,incompatible,534,"> always defining R__LESS_INCLUDES (or, better, removing all the code in the #else parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined? Per the commit log:. ```. When -Ddev=ON specified, R__LESS_INCLUDES is defined. It will be used to reduce includes which are exposed to the public. While such changes can have side-effects on user code,. option is off by default. ```. i.e. the changes of which header files are included where is a code-wise backward incompatible change (that has only light to zero actual benefit to the user), so we want to thread carefully in introducing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:232,safety,log,log,232,"> always defining R__LESS_INCLUDES (or, better, removing all the code in the #else parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined? Per the commit log:. ```. When -Ddev=ON specified, R__LESS_INCLUDES is defined. It will be used to reduce includes which are exposed to the public. While such changes can have side-effects on user code,. option is off by default. ```. i.e. the changes of which header files are included where is a code-wise backward incompatible change (that has only light to zero actual benefit to the user), so we want to thread carefully in introducing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:232,security,log,log,232,"> always defining R__LESS_INCLUDES (or, better, removing all the code in the #else parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined? Per the commit log:. ```. When -Ddev=ON specified, R__LESS_INCLUDES is defined. It will be used to reduce includes which are exposed to the public. While such changes can have side-effects on user code,. option is off by default. ```. i.e. the changes of which header files are included where is a code-wise backward incompatible change (that has only light to zero actual benefit to the user), so we want to thread carefully in introducing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:342,security,expos,exposed,342,"> always defining R__LESS_INCLUDES (or, better, removing all the code in the #else parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined? Per the commit log:. ```. When -Ddev=ON specified, R__LESS_INCLUDES is defined. It will be used to reduce includes which are exposed to the public. While such changes can have side-effects on user code,. option is off by default. ```. i.e. the changes of which header files are included where is a code-wise backward incompatible change (that has only light to zero actual benefit to the user), so we want to thread carefully in introducing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:232,testability,log,log,232,"> always defining R__LESS_INCLUDES (or, better, removing all the code in the #else parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined? Per the commit log:. ```. When -Ddev=ON specified, R__LESS_INCLUDES is defined. It will be used to reduce includes which are exposed to the public. While such changes can have side-effects on user code,. option is off by default. ```. i.e. the changes of which header files are included where is a code-wise backward incompatible change (that has only light to zero actual benefit to the user), so we want to thread carefully in introducing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:409,usability,user,user,409,"> always defining R__LESS_INCLUDES (or, better, removing all the code in the #else parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined? Per the commit log:. ```. When -Ddev=ON specified, R__LESS_INCLUDES is defined. It will be used to reduce includes which are exposed to the public. While such changes can have side-effects on user code,. option is off by default. ```. i.e. the changes of which header files are included where is a code-wise backward incompatible change (that has only light to zero actual benefit to the user), so we want to thread carefully in introducing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:605,usability,user,user,605,"> always defining R__LESS_INCLUDES (or, better, removing all the code in the #else parts). By the way, do you know why this define exists? Is there some compiler/platform where compilation breaks if it's not defined? Per the commit log:. ```. When -Ddev=ON specified, R__LESS_INCLUDES is defined. It will be used to reduce includes which are exposed to the public. While such changes can have side-effects on user code,. option is off by default. ```. i.e. the changes of which header files are included where is a code-wise backward incompatible change (that has only light to zero actual benefit to the user), so we want to thread carefully in introducing them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:26,availability,error,error,26,"@agheata it was a compile error with `dev=on` due to `-Werror`. It was actually already fixed by https://github.com/root-project/root/pull/16142, but I temporarily put it on this PR so the CI could build correctly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:198,deployability,build,build,198,"@agheata it was a compile error with `dev=on` due to `-Werror`. It was actually already fixed by https://github.com/root-project/root/pull/16142, but I temporarily put it on this PR so the CI could build correctly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:26,performance,error,error,26,"@agheata it was a compile error with `dev=on` due to `-Werror`. It was actually already fixed by https://github.com/root-project/root/pull/16142, but I temporarily put it on this PR so the CI could build correctly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:26,safety,error,error,26,"@agheata it was a compile error with `dev=on` due to `-Werror`. It was actually already fixed by https://github.com/root-project/root/pull/16142, but I temporarily put it on this PR so the CI could build correctly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:26,usability,error,error,26,"@agheata it was a compile error with `dev=on` due to `-Werror`. It was actually already fixed by https://github.com/root-project/root/pull/16142, but I temporarily put it on this PR so the CI could build correctly",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:22,availability,error,error,22,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:75,availability,error,error,75,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:119,availability,error,error,119,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:228,availability,error,error,228,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:22,performance,error,error,22,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:75,performance,error,error,75,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:119,performance,error,error,119,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:228,performance,error,error,228,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:22,safety,error,error,22,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:75,safety,error,error,75,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:119,safety,error,error,119,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:228,safety,error,error,228,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:22,usability,error,error,22,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:62,usability,command,command,62,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:75,usability,error,error,75,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:119,usability,error,error,119,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15853:228,usability,error,error,228,"@silverweed FYI `-Wno-error` is not known by MSVC:. ```. cl : command line error D8021: invalid numeric argument '/Wno-error'. ```. You should use something like:. ```. if(NOT MSVC). set(CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -Wno-error"")`. endif(). ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15853
https://github.com/root-project/root/pull/15855:52,deployability,build,build,52,"> LGTM if all tests pass. Thanks! This PR fixes the build, but then some tests are failing. Need more investigations. Still working on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15855:83,deployability,fail,failing,83,"> LGTM if all tests pass. Thanks! This PR fixes the build, but then some tests are failing. Need more investigations. Still working on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15855:83,reliability,fail,failing,83,"> LGTM if all tests pass. Thanks! This PR fixes the build, but then some tests are failing. Need more investigations. Still working on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15855:14,safety,test,tests,14,"> LGTM if all tests pass. Thanks! This PR fixes the build, but then some tests are failing. Need more investigations. Still working on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15855:73,safety,test,tests,73,"> LGTM if all tests pass. Thanks! This PR fixes the build, but then some tests are failing. Need more investigations. Still working on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15855:14,testability,test,tests,14,"> LGTM if all tests pass. Thanks! This PR fixes the build, but then some tests are failing. Need more investigations. Still working on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15855:73,testability,test,tests,73,"> LGTM if all tests pass. Thanks! This PR fixes the build, but then some tests are failing. Need more investigations. Still working on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15855
https://github.com/root-project/root/pull/15858:2,safety,test,tested,2,"I tested this and I can confirm I do not see the segfault anymore. Can you have a 6.30 tag, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15858
https://github.com/root-project/root/pull/15858:2,testability,test,tested,2,"I tested this and I can confirm I do not see the segfault anymore. Can you have a 6.30 tag, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15858
https://github.com/root-project/root/pull/15858:24,usability,confirm,confirm,24,"I tested this and I can confirm I do not see the segfault anymore. Can you have a 6.30 tag, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15858
https://github.com/root-project/root/pull/15863:48,deployability,releas,release,48,"@dpiparo, can this me merged before the 6.32.02 release? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15863
https://github.com/root-project/root/pull/15864:70,deployability,fail,failing,70,some tests timed out likely because of a glitch. I just restarted the failing builds to be sure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15864
https://github.com/root-project/root/pull/15864:78,deployability,build,builds,78,some tests timed out likely because of a glitch. I just restarted the failing builds to be sure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15864
https://github.com/root-project/root/pull/15864:11,performance,time,timed,11,some tests timed out likely because of a glitch. I just restarted the failing builds to be sure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15864
https://github.com/root-project/root/pull/15864:70,reliability,fail,failing,70,some tests timed out likely because of a glitch. I just restarted the failing builds to be sure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15864
https://github.com/root-project/root/pull/15864:5,safety,test,tests,5,some tests timed out likely because of a glitch. I just restarted the failing builds to be sure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15864
https://github.com/root-project/root/pull/15864:5,testability,test,tests,5,some tests timed out likely because of a glitch. I just restarted the failing builds to be sure.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15864
https://github.com/root-project/root/pull/15864:44,deployability,build,build,44,@smuzaffar could we get an CMSSW 14_1 ROOT6 build which includes this commit?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15864
https://github.com/root-project/root/pull/15868:14,reliability,rca,rcanvas,14,@linev is the rcanvas tutorial related?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15868
https://github.com/root-project/root/pull/15868:0,availability,Failur,Failure,0,Failure with `tutorial-rcanvas-df105-py` is timeout.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15868
https://github.com/root-project/root/pull/15868:0,deployability,Fail,Failure,0,Failure with `tutorial-rcanvas-df105-py` is timeout.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15868
https://github.com/root-project/root/pull/15868:0,performance,Failur,Failure,0,Failure with `tutorial-rcanvas-df105-py` is timeout.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15868
https://github.com/root-project/root/pull/15868:44,performance,time,timeout,44,Failure with `tutorial-rcanvas-df105-py` is timeout.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15868
https://github.com/root-project/root/pull/15868:0,reliability,Fail,Failure,0,Failure with `tutorial-rcanvas-df105-py` is timeout.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15868
https://github.com/root-project/root/pull/15868:23,reliability,rca,rcanvas-,23,Failure with `tutorial-rcanvas-df105-py` is timeout.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15868
https://github.com/root-project/root/pull/15868:44,safety,timeout,timeout,44,Failure with `tutorial-rcanvas-df105-py` is timeout.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15868
https://github.com/root-project/root/pull/15869:146,deployability,log,log,146,Mild note: I would recommend to include the type of text seen at https://github.com/root-project/root/pull/15869#issue-2357299403 into the commit log itself (At some later date if someone looks at this commit and try to understand why it is the way it is finding the explanation will require to do a search through the PR (based on the commit log title) to find this PR where as including it in the commit log would give 'immediately' the information :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:343,deployability,log,log,343,Mild note: I would recommend to include the type of text seen at https://github.com/root-project/root/pull/15869#issue-2357299403 into the commit log itself (At some later date if someone looks at this commit and try to understand why it is the way it is finding the explanation will require to do a search through the PR (based on the commit log title) to find this PR where as including it in the commit log would give 'immediately' the information :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:406,deployability,log,log,406,Mild note: I would recommend to include the type of text seen at https://github.com/root-project/root/pull/15869#issue-2357299403 into the commit log itself (At some later date if someone looks at this commit and try to understand why it is the way it is finding the explanation will require to do a search through the PR (based on the commit log title) to find this PR where as including it in the commit log would give 'immediately' the information :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:146,safety,log,log,146,Mild note: I would recommend to include the type of text seen at https://github.com/root-project/root/pull/15869#issue-2357299403 into the commit log itself (At some later date if someone looks at this commit and try to understand why it is the way it is finding the explanation will require to do a search through the PR (based on the commit log title) to find this PR where as including it in the commit log would give 'immediately' the information :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:343,safety,log,log,343,Mild note: I would recommend to include the type of text seen at https://github.com/root-project/root/pull/15869#issue-2357299403 into the commit log itself (At some later date if someone looks at this commit and try to understand why it is the way it is finding the explanation will require to do a search through the PR (based on the commit log title) to find this PR where as including it in the commit log would give 'immediately' the information :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:406,safety,log,log,406,Mild note: I would recommend to include the type of text seen at https://github.com/root-project/root/pull/15869#issue-2357299403 into the commit log itself (At some later date if someone looks at this commit and try to understand why it is the way it is finding the explanation will require to do a search through the PR (based on the commit log title) to find this PR where as including it in the commit log would give 'immediately' the information :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:146,security,log,log,146,Mild note: I would recommend to include the type of text seen at https://github.com/root-project/root/pull/15869#issue-2357299403 into the commit log itself (At some later date if someone looks at this commit and try to understand why it is the way it is finding the explanation will require to do a search through the PR (based on the commit log title) to find this PR where as including it in the commit log would give 'immediately' the information :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:343,security,log,log,343,Mild note: I would recommend to include the type of text seen at https://github.com/root-project/root/pull/15869#issue-2357299403 into the commit log itself (At some later date if someone looks at this commit and try to understand why it is the way it is finding the explanation will require to do a search through the PR (based on the commit log title) to find this PR where as including it in the commit log would give 'immediately' the information :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:406,security,log,log,406,Mild note: I would recommend to include the type of text seen at https://github.com/root-project/root/pull/15869#issue-2357299403 into the commit log itself (At some later date if someone looks at this commit and try to understand why it is the way it is finding the explanation will require to do a search through the PR (based on the commit log title) to find this PR where as including it in the commit log would give 'immediately' the information :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:146,testability,log,log,146,Mild note: I would recommend to include the type of text seen at https://github.com/root-project/root/pull/15869#issue-2357299403 into the commit log itself (At some later date if someone looks at this commit and try to understand why it is the way it is finding the explanation will require to do a search through the PR (based on the commit log title) to find this PR where as including it in the commit log would give 'immediately' the information :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:220,testability,understand,understand,220,Mild note: I would recommend to include the type of text seen at https://github.com/root-project/root/pull/15869#issue-2357299403 into the commit log itself (At some later date if someone looks at this commit and try to understand why it is the way it is finding the explanation will require to do a search through the PR (based on the commit log title) to find this PR where as including it in the commit log would give 'immediately' the information :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:343,testability,log,log,343,Mild note: I would recommend to include the type of text seen at https://github.com/root-project/root/pull/15869#issue-2357299403 into the commit log itself (At some later date if someone looks at this commit and try to understand why it is the way it is finding the explanation will require to do a search through the PR (based on the commit log title) to find this PR where as including it in the commit log would give 'immediately' the information :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15869:406,testability,log,log,406,Mild note: I would recommend to include the type of text seen at https://github.com/root-project/root/pull/15869#issue-2357299403 into the commit log itself (At some later date if someone looks at this commit and try to understand why it is the way it is finding the explanation will require to do a search through the PR (based on the commit log title) to find this PR where as including it in the commit log would give 'immediately' the information :),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15869
https://github.com/root-project/root/pull/15871:59,energy efficiency,Draw,Draw,59,I just looked at it. Indeed the histogram is there only to Draw the frame A deeper investigation is needed ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15871
https://github.com/root-project/root/pull/15871:206,availability,error,error,206,"This broke the tests:. ```. 729: Processing /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C... 729: In file included from input_line_10:1:. 729: /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C:39:43: error: use of undeclared identifier 'scat'. 729: TPaletteAxis *palette = (TPaletteAxis*)scat->GetGraph()->GetListOfFunctions()->FindObject(""palette"");. 729: ^. ```. Tutorials are executed as part of the CI and therefore should *never* be merged with `[skip-ci]`! The simple fix is in https://github.com/root-project/root/pull/15923.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15871
https://github.com/root-project/root/pull/15871:206,performance,error,error,206,"This broke the tests:. ```. 729: Processing /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C... 729: In file included from input_line_10:1:. 729: /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C:39:43: error: use of undeclared identifier 'scat'. 729: TPaletteAxis *palette = (TPaletteAxis*)scat->GetGraph()->GetListOfFunctions()->FindObject(""palette"");. 729: ^. ```. Tutorials are executed as part of the CI and therefore should *never* be merged with `[skip-ci]`! The simple fix is in https://github.com/root-project/root/pull/15923.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15871
https://github.com/root-project/root/pull/15871:15,safety,test,tests,15,"This broke the tests:. ```. 729: Processing /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C... 729: In file included from input_line_10:1:. 729: /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C:39:43: error: use of undeclared identifier 'scat'. 729: TPaletteAxis *palette = (TPaletteAxis*)scat->GetGraph()->GetListOfFunctions()->FindObject(""palette"");. 729: ^. ```. Tutorials are executed as part of the CI and therefore should *never* be merged with `[skip-ci]`! The simple fix is in https://github.com/root-project/root/pull/15923.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15871
https://github.com/root-project/root/pull/15871:206,safety,error,error,206,"This broke the tests:. ```. 729: Processing /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C... 729: In file included from input_line_10:1:. 729: /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C:39:43: error: use of undeclared identifier 'scat'. 729: TPaletteAxis *palette = (TPaletteAxis*)scat->GetGraph()->GetListOfFunctions()->FindObject(""palette"");. 729: ^. ```. Tutorials are executed as part of the CI and therefore should *never* be merged with `[skip-ci]`! The simple fix is in https://github.com/root-project/root/pull/15923.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15871
https://github.com/root-project/root/pull/15871:231,security,ident,identifier,231,"This broke the tests:. ```. 729: Processing /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C... 729: In file included from input_line_10:1:. 729: /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C:39:43: error: use of undeclared identifier 'scat'. 729: TPaletteAxis *palette = (TPaletteAxis*)scat->GetGraph()->GetListOfFunctions()->FindObject(""palette"");. 729: ^. ```. Tutorials are executed as part of the CI and therefore should *never* be merged with `[skip-ci]`! The simple fix is in https://github.com/root-project/root/pull/15923.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15871
https://github.com/root-project/root/pull/15871:15,testability,test,tests,15,"This broke the tests:. ```. 729: Processing /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C... 729: In file included from input_line_10:1:. 729: /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C:39:43: error: use of undeclared identifier 'scat'. 729: TPaletteAxis *palette = (TPaletteAxis*)scat->GetGraph()->GetListOfFunctions()->FindObject(""palette"");. 729: ^. ```. Tutorials are executed as part of the CI and therefore should *never* be merged with `[skip-ci]`! The simple fix is in https://github.com/root-project/root/pull/15923.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15871
https://github.com/root-project/root/pull/15871:473,testability,simpl,simple,473,"This broke the tests:. ```. 729: Processing /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C... 729: In file included from input_line_10:1:. 729: /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C:39:43: error: use of undeclared identifier 'scat'. 729: TPaletteAxis *palette = (TPaletteAxis*)scat->GetGraph()->GetListOfFunctions()->FindObject(""palette"");. 729: ^. ```. Tutorials are executed as part of the CI and therefore should *never* be merged with `[skip-ci]`! The simple fix is in https://github.com/root-project/root/pull/15923.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15871
https://github.com/root-project/root/pull/15871:206,usability,error,error,206,"This broke the tests:. ```. 729: Processing /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C... 729: In file included from input_line_10:1:. 729: /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C:39:43: error: use of undeclared identifier 'scat'. 729: TPaletteAxis *palette = (TPaletteAxis*)scat->GetGraph()->GetListOfFunctions()->FindObject(""palette"");. 729: ^. ```. Tutorials are executed as part of the CI and therefore should *never* be merged with `[skip-ci]`! The simple fix is in https://github.com/root-project/root/pull/15923.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15871
https://github.com/root-project/root/pull/15871:473,usability,simpl,simple,473,"This broke the tests:. ```. 729: Processing /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C... 729: In file included from input_line_10:1:. 729: /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C:39:43: error: use of undeclared identifier 'scat'. 729: TPaletteAxis *palette = (TPaletteAxis*)scat->GetGraph()->GetListOfFunctions()->FindObject(""palette"");. 729: ^. ```. Tutorials are executed as part of the CI and therefore should *never* be merged with `[skip-ci]`! The simple fix is in https://github.com/root-project/root/pull/15923.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15871
https://github.com/root-project/root/issues/15872:347,integrability,pub,public,347,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:71,interoperability,bind,bindings,71,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:123,interoperability,bind,bindings,123,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:217,interoperability,bind,bindings,217,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:274,interoperability,bind,bindings,274,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:71,modifiability,bind,bindings,71,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:123,modifiability,bind,bindings,123,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:217,modifiability,bind,bindings,217,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:274,modifiability,bind,bindings,274,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:742,reliability,doe,doesn,742,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:401,safety,compl,complex,401,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:455,safety,compl,complex,455,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:511,safety,compl,complex,511,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:401,security,compl,complex,401,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:455,security,compl,complex,455,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:511,security,compl,complex,511,"FWIW it's really only the `Long64_t` converter:. ```diff. diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. index 1083c92452..6ba86a5d24 100644. --- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. +++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx. @@ -3470,6 +3470,7 @@ public:. gf[""const "" CCOMPLEX_D ""&""] = gf[""const std::complex<double>&""];. gf[CCOMPLEX_F "" ptr""] = gf[""std::complex<float> ptr""];. gf[CCOMPLEX_D "" ptr""] = gf[""std::complex<double> ptr""];. + gf[""Long64_t""] = gf[""long long""];. // factories for special cases. gf[""TString""] = (cf_t)+[](cdims_t) { return new TStringConverter{}; };. ```. ... fixes the problem. Which is weird because the reproducer doesn't use that type and `gf` / `gConvFactories` is only used for lookup, but not registered anywhere.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:63,deployability,automat,automatically,63,"After investigation, it turns out that the `long long` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:106,deployability,stack,stacktrace,106,"After investigation, it turns out that the `long long` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:244,energy efficiency,cool,cool,244,"After investigation, it turns out that the `long long` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:332,energy efficiency,core,core,332,"After investigation, it turns out that the `long long` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:453,energy efficiency,cool,cool,453,"After investigation, it turns out that the `long long` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:642,energy efficiency,core,core,642,"After investigation, it turns out that the `long long` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:756,energy efficiency,cool,cool,756,"After investigation, it turns out that the `long long` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:899,energy efficiency,core,core,899,"After investigation, it turns out that the `long long` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:1051,energy efficiency,cool,cool,1051,"` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gd",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:1113,energy efficiency,core,core,1113,"e follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""L",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:1219,energy efficiency,cool,cool,1219,"0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:1424,energy efficiency,cool,cool,1424,"name=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::Creat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:2242,energy efficiency,cool,cool,2242,"ol::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...) at /home/vpadulan/Programs/cppyyproject/CPyCppyy/src/Converters.cxx:3112. 3112	 if (resolvedType != fullType) {. Value returned is $40 = ""const long long"". ```. And the input type `Bad_t` is properly converted to the typedef `long long`. This then appears to be a bug in ROOT meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:2368,energy efficiency,cool,cool,2368,"ol::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...) at /home/vpadulan/Programs/cppyyproject/CPyCppyy/src/Converters.cxx:3112. 3112	 if (resolvedType != fullType) {. Value returned is $40 = ""const long long"". ```. And the input type `Bad_t` is properly converted to the typedef `long long`. This then appears to be a bug in ROOT meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:2454,energy efficiency,cool,cool,2454,"ol::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...) at /home/vpadulan/Programs/cppyyproject/CPyCppyy/src/Converters.cxx:3112. 3112	 if (resolvedType != fullType) {. Value returned is $40 = ""const long long"". ```. And the input type `Bad_t` is properly converted to the typedef `long long`. This then appears to be a bug in ROOT meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:1281,interoperability,bind,bindings,1281,"at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:1496,interoperability,bind,bindings,1496,"t_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...) at /home/vpadulan/Prog",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:1694,interoperability,bind,bindings,1694,"84be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...) at /home/vpadulan/Programs/cppyyproject/CPyCppyy/src/Converters.cxx:3112. 3112	 if (resolvedType != fullType) {. Value returned is $40 = ""const long long"". ```. And the input type `Bad_t` is properly converted to the typ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:1872,interoperability,bind,bindings,1872,"ol::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...) at /home/vpadulan/Programs/cppyyproject/CPyCppyy/src/Converters.cxx:3112. 3112	 if (resolvedType != fullType) {. Value returned is $40 = ""const long long"". ```. And the input type `Bad_t` is properly converted to the typedef `long long`. This then appears to be a bug in ROOT meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:1932,interoperability,Specif,Specifically,1932,"ol::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...) at /home/vpadulan/Programs/cppyyproject/CPyCppyy/src/Converters.cxx:3112. 3112	 if (resolvedType != fullType) {. Value returned is $40 = ""const long long"". ```. And the input type `Bad_t` is properly converted to the typedef `long long`. This then appears to be a bug in ROOT meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:1281,modifiability,bind,bindings,1281,"at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:1496,modifiability,bind,bindings,1496,"t_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...) at /home/vpadulan/Prog",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:1694,modifiability,bind,bindings,1694,"84be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...) at /home/vpadulan/Programs/cppyyproject/CPyCppyy/src/Converters.cxx:3112. 3112	 if (resolvedType != fullType) {. Value returned is $40 = ""const long long"". ```. And the input type `Bad_t` is properly converted to the typ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:1872,modifiability,bind,bindings,1872,"ol::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...) at /home/vpadulan/Programs/cppyyproject/CPyCppyy/src/Converters.cxx:3112. 3112	 if (resolvedType != fullType) {. Value returned is $40 = ""const long long"". ```. And the input type `Bad_t` is properly converted to the typedef `long long`. This then appears to be a bug in ROOT meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:2647,safety,input,input,2647,"ol::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...) at /home/vpadulan/Programs/cppyyproject/CPyCppyy/src/Converters.cxx:3112. 3112	 if (resolvedType != fullType) {. Value returned is $40 = ""const long long"". ```. And the input type `Bad_t` is properly converted to the typedef `long long`. This then appears to be a bug in ROOT meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:551,security,modif,modified,551,"After investigation, it turns out that the `long long` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:806,security,modif,modified,806,"After investigation, it turns out that the `long long` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:2014,security,polic,policy,2014,"ol::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...) at /home/vpadulan/Programs/cppyyproject/CPyCppyy/src/Converters.cxx:3112. 3112	 if (resolvedType != fullType) {. Value returned is $40 = ""const long long"". ```. And the input type `Bad_t` is properly converted to the typedef `long long`. This then appears to be a bug in ROOT meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:63,testability,automat,automatically,63,"After investigation, it turns out that the `long long` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:467,usability,cursor,cursor,467,"After investigation, it turns out that the `long long` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:778,usability,cursor,cursor,778,"After investigation, it turns out that the `long long` type is automatically converted to `Long64_t`. The stacktrace follows. ```. #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x5555560e2b70, tname=""cool::Bad_t"", result="""", dropstd=false). at /home/vpadulan/Programs/rootproject/rootsrc/core/clingutils/src/TClingUtils.cxx:607. #1 0x00007fffe984a3f6 in ResolveTypedefProcessType (tname=0x5555593a7a40 ""const cool::Bad_t"", cursor=17, constprefix=true, start_of_type=6, end_of_type=0, . mod_start_of_type=0, modified=@0x7fffffffc45b: false, result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1477. #2 0x00007fffe984be6f in ResolveTypedefImpl (tname=0x5555593a7a40 ""const cool::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:2647,usability,input,input,2647,"ol::Bad_t"", len=17, cursor=@0x7fffffffc45c: 17, modified=@0x7fffffffc45b: false, . result="""") at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1741. #3 0x00007fffe984c37d in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) (tname=0x5555593a7a40 ""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/core/foundation/src/TClassEdit.cxx:1775. #4 0x00007fffe9c7a37e in Cppyy::ResolveName (cppitem_name=""const cool::Bad_t""). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:461. #5 0x00007fffda525a40 in CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:3111. #6 0x00007fffda56f992 in CPyCppyy::CPPDataMember::Set (this=0x7fffda0ef870, scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:363. #7 0x00007fffda5907a2 in CPyCppyy::CPPDataMember_New (scope=8, idata=0). at /home/vpadulan/Programs/rootproject/rootsrc/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.h:63. ```. Specifically in `getAsStringInternal`. ```. 644	 dest.getAsStringInternal(result, policy);. (gdb) p result. $15 = """". (gdb) n. 646	 unsigned long offset = 0;. (gdb) p result. $16 = ""Long64_t"". ```. None of this happens in upstream cppyy where we see. ```. Breakpoint 3, Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. 435	{. (gdb) finish. Run till exit from #0 Cppyy::ResolveName (cppitem_name=""const cool::Bad_t"") at src/clingwrapper.cxx:435. CPyCppyy::CreateConverter (fullType=""const cool::Bad_t"", dims=...) at /home/vpadulan/Programs/cppyyproject/CPyCppyy/src/Converters.cxx:3112. 3112	 if (resolvedType != fullType) {. Value returned is $40 = ""const long long"". ```. And the input type `Bad_t` is properly converted to the typedef `long long`. This then appears to be a bug in ROOT meta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:42,deployability,automat,automatically,42,> it turns out that the long long type is automatically converted to Long64_t. This is intentional.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/issues/15872:42,testability,automat,automatically,42,> it turns out that the long long type is automatically converted to Long64_t. This is intentional.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15872
https://github.com/root-project/root/pull/15873:42,integrability,rout,route,42,Closing because we decided to not go that route.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15873
https://github.com/root-project/root/issues/15874:84,deployability,depend,depends,84,"Note: `THnSparseT<TArrayL>` was removed because its underlying type (`long`)'s size depends on the platforms (32 vs 64 bits). However, it would have been much to either leave it as is or mark it as deprecated. We need to fix this and make sure older files can be read. In the long term, you should consider moving to the newer `THnSparseT<TArrayL64>` which guarantees the 64 bits on all platforms (we should also make sure that we update our code to that `THnSparseT<TArrayL>` can be read into a `THnSparseT<TArrayL64>` (by adding the relevant renaming rule if need be).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:431,deployability,updat,update,431,"Note: `THnSparseT<TArrayL>` was removed because its underlying type (`long`)'s size depends on the platforms (32 vs 64 bits). However, it would have been much to either leave it as is or mark it as deprecated. We need to fix this and make sure older files can be read. In the long term, you should consider moving to the newer `THnSparseT<TArrayL64>` which guarantees the 64 bits on all platforms (we should also make sure that we update our code to that `THnSparseT<TArrayL>` can be read into a `THnSparseT<TArrayL64>` (by adding the relevant renaming rule if need be).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:84,integrability,depend,depends,84,"Note: `THnSparseT<TArrayL>` was removed because its underlying type (`long`)'s size depends on the platforms (32 vs 64 bits). However, it would have been much to either leave it as is or mark it as deprecated. We need to fix this and make sure older files can be read. In the long term, you should consider moving to the newer `THnSparseT<TArrayL64>` which guarantees the 64 bits on all platforms (we should also make sure that we update our code to that `THnSparseT<TArrayL>` can be read into a `THnSparseT<TArrayL64>` (by adding the relevant renaming rule if need be).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:99,interoperability,platform,platforms,99,"Note: `THnSparseT<TArrayL>` was removed because its underlying type (`long`)'s size depends on the platforms (32 vs 64 bits). However, it would have been much to either leave it as is or mark it as deprecated. We need to fix this and make sure older files can be read. In the long term, you should consider moving to the newer `THnSparseT<TArrayL64>` which guarantees the 64 bits on all platforms (we should also make sure that we update our code to that `THnSparseT<TArrayL>` can be read into a `THnSparseT<TArrayL64>` (by adding the relevant renaming rule if need be).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:387,interoperability,platform,platforms,387,"Note: `THnSparseT<TArrayL>` was removed because its underlying type (`long`)'s size depends on the platforms (32 vs 64 bits). However, it would have been much to either leave it as is or mark it as deprecated. We need to fix this and make sure older files can be read. In the long term, you should consider moving to the newer `THnSparseT<TArrayL64>` which guarantees the 64 bits on all platforms (we should also make sure that we update our code to that `THnSparseT<TArrayL>` can be read into a `THnSparseT<TArrayL64>` (by adding the relevant renaming rule if need be).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:84,modifiability,depend,depends,84,"Note: `THnSparseT<TArrayL>` was removed because its underlying type (`long`)'s size depends on the platforms (32 vs 64 bits). However, it would have been much to either leave it as is or mark it as deprecated. We need to fix this and make sure older files can be read. In the long term, you should consider moving to the newer `THnSparseT<TArrayL64>` which guarantees the 64 bits on all platforms (we should also make sure that we update our code to that `THnSparseT<TArrayL>` can be read into a `THnSparseT<TArrayL64>` (by adding the relevant renaming rule if need be).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:84,safety,depend,depends,84,"Note: `THnSparseT<TArrayL>` was removed because its underlying type (`long`)'s size depends on the platforms (32 vs 64 bits). However, it would have been much to either leave it as is or mark it as deprecated. We need to fix this and make sure older files can be read. In the long term, you should consider moving to the newer `THnSparseT<TArrayL64>` which guarantees the 64 bits on all platforms (we should also make sure that we update our code to that `THnSparseT<TArrayL>` can be read into a `THnSparseT<TArrayL64>` (by adding the relevant renaming rule if need be).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:431,safety,updat,update,431,"Note: `THnSparseT<TArrayL>` was removed because its underlying type (`long`)'s size depends on the platforms (32 vs 64 bits). However, it would have been much to either leave it as is or mark it as deprecated. We need to fix this and make sure older files can be read. In the long term, you should consider moving to the newer `THnSparseT<TArrayL64>` which guarantees the 64 bits on all platforms (we should also make sure that we update our code to that `THnSparseT<TArrayL>` can be read into a `THnSparseT<TArrayL64>` (by adding the relevant renaming rule if need be).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:431,security,updat,update,431,"Note: `THnSparseT<TArrayL>` was removed because its underlying type (`long`)'s size depends on the platforms (32 vs 64 bits). However, it would have been much to either leave it as is or mark it as deprecated. We need to fix this and make sure older files can be read. In the long term, you should consider moving to the newer `THnSparseT<TArrayL64>` which guarantees the 64 bits on all platforms (we should also make sure that we update our code to that `THnSparseT<TArrayL>` can be read into a `THnSparseT<TArrayL64>` (by adding the relevant renaming rule if need be).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:84,testability,depend,depends,84,"Note: `THnSparseT<TArrayL>` was removed because its underlying type (`long`)'s size depends on the platforms (32 vs 64 bits). However, it would have been much to either leave it as is or mark it as deprecated. We need to fix this and make sure older files can be read. In the long term, you should consider moving to the newer `THnSparseT<TArrayL64>` which guarantees the 64 bits on all platforms (we should also make sure that we update our code to that `THnSparseT<TArrayL>` can be read into a `THnSparseT<TArrayL64>` (by adding the relevant renaming rule if need be).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:49,performance,time,times,49,"Yep, I know. I warned about this problem up to 3 times in that PR, insisting that it had nothing to do with the new feature that I wanted to add:. https://github.com/root-project/root/pull/8546#issuecomment-1279199373. https://github.com/root-project/root/pull/8546#issuecomment-1320906798. https://github.com/root-project/root/pull/8546#issuecomment-1952708524. After 3y, I was forced to give in :s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:94,interoperability,compatib,compatibility,94,"I also missed it at the time. Sorry. . To avoid this, we should also add test of the backward compatibility (especially the reading of older file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:24,performance,time,time,24,"I also missed it at the time. Sorry. . To avoid this, we should also add test of the backward compatibility (especially the reading of older file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:42,safety,avoid,avoid,42,"I also missed it at the time. Sorry. . To avoid this, we should also add test of the backward compatibility (especially the reading of older file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:73,safety,test,test,73,"I also missed it at the time. Sorry. . To avoid this, we should also add test of the backward compatibility (especially the reading of older file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:73,testability,test,test,73,"I also missed it at the time. Sorry. . To avoid this, we should also add test of the backward compatibility (especially the reading of older file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/issues/15874:129,interoperability,convers,conversion,129,"It's enough to add back the dictionary for `THnSparse<TArrayL>` to read back the histogram. Now I'm also working on a trasparent conversion from `THnSparseL` written as `THnSparse<TArrayL>` to `THnSparseL` read as `THnSparse<TArrayL64>`, let's see if I can make that work.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15874
https://github.com/root-project/root/pull/15875:63,availability,failur,failures,63,"All checks passed on all platforms, so the problem with the CI failures in #15616 on some platforms is really on the RooFit side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15875
https://github.com/root-project/root/pull/15875:63,deployability,fail,failures,63,"All checks passed on all platforms, so the problem with the CI failures in #15616 on some platforms is really on the RooFit side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15875
https://github.com/root-project/root/pull/15875:25,interoperability,platform,platforms,25,"All checks passed on all platforms, so the problem with the CI failures in #15616 on some platforms is really on the RooFit side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15875
https://github.com/root-project/root/pull/15875:90,interoperability,platform,platforms,90,"All checks passed on all platforms, so the problem with the CI failures in #15616 on some platforms is really on the RooFit side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15875
https://github.com/root-project/root/pull/15875:63,performance,failur,failures,63,"All checks passed on all platforms, so the problem with the CI failures in #15616 on some platforms is really on the RooFit side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15875
https://github.com/root-project/root/pull/15875:63,reliability,fail,failures,63,"All checks passed on all platforms, so the problem with the CI failures in #15616 on some platforms is really on the RooFit side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15875
https://github.com/root-project/root/pull/15876:31,safety,review,review,31,I will wait until @pcanal will review the PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15876
https://github.com/root-project/root/pull/15876:31,testability,review,review,31,I will wait until @pcanal will review the PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15876
https://github.com/root-project/root/issues/15877:118,performance,cach,cached,118,The output is as intended but the problem is that `TStreamerInfo::GetDataMemberOffset` is returning the offset of the cached member rather than the write (or repeat) member (i.e. the real live member).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15877
https://github.com/root-project/root/pull/15878:201,availability,sli,slightly,201,"@pcanal: We start to need to rebase this. Also, it would be useful to have it merged to see the true file size in TTree/RNTuple comparisons, e.g. for CHEP, since this will make files with RNTuple data slightly larger. I'm going to merge now but of course I'll still incorporate comments from you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15878
https://github.com/root-project/root/pull/15878:201,reliability,sli,slightly,201,"@pcanal: We start to need to rebase this. Also, it would be useful to have it merged to see the true file size in TTree/RNTuple comparisons, e.g. for CHEP, since this will make files with RNTuple data slightly larger. I'm going to merge now but of course I'll still incorporate comments from you.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15878
https://github.com/root-project/root/pull/15880:16,interoperability,compatib,compatibility,16,"Added backwards-compatibility test in roottest, will wait for the CI to run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:30,safety,test,test,30,"Added backwards-compatibility test in roottest, will wait for the CI to run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:30,testability,test,test,30,"Added backwards-compatibility test in roottest, will wait for the CI to run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:92,deployability,patch,patch,92,Maybe we can proceed with the merge and backport to 6.32? This would prepare us to the next patch release...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:98,deployability,releas,release,98,Maybe we can proceed with the merge and backport to 6.32? This would prepare us to the next patch release...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:92,safety,patch,patch,92,Maybe we can proceed with the merge and backport to 6.32? This would prepare us to the next patch release...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:92,security,patch,patch,92,Maybe we can proceed with the merge and backport to 6.32? This would prepare us to the next patch release...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:0,availability,Failur,Failures,0,"Failures are unrelated, merging this PR due to its relevance for the upcoming patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:0,deployability,Fail,Failures,0,"Failures are unrelated, merging this PR due to its relevance for the upcoming patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:78,deployability,patch,patch,78,"Failures are unrelated, merging this PR due to its relevance for the upcoming patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:84,deployability,releas,release,84,"Failures are unrelated, merging this PR due to its relevance for the upcoming patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:0,performance,Failur,Failures,0,"Failures are unrelated, merging this PR due to its relevance for the upcoming patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:0,reliability,Fail,Failures,0,"Failures are unrelated, merging this PR due to its relevance for the upcoming patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:78,safety,patch,patch,78,"Failures are unrelated, merging this PR due to its relevance for the upcoming patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/pull/15880:78,security,patch,patch,78,"Failures are unrelated, merging this PR due to its relevance for the upcoming patch release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15880
https://github.com/root-project/root/issues/15883:126,integrability,sub,submit,126,"Hi @Zehvogel , thanks for the suggestion. I assigned this to @couet . Would you be willing to give this improvement a try and submit a PR? We'd help you in the process...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15883
https://github.com/root-project/root/issues/15883:144,usability,help,help,144,"Hi @Zehvogel , thanks for the suggestion. I assigned this to @couet . Would you be willing to give this improvement a try and submit a PR? We'd help you in the process...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15883
https://github.com/root-project/root/issues/15887:159,deployability,version,version,159,". Your macro generates three .C scripts: plot1.C, plot2.C, and plot3.C. I ran each of them separately, and they all executed successfully with the ROOT master version installed on my Mac. I recently made some fixes in that area, so it's possible that these changes have resolved your issue as well. To confirm, could you please send one of your non-working plot[1,2,3].C files? This way, I can compare it with the corresponding file I just generated on my Mac.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:167,deployability,instal,installed,167,". Your macro generates three .C scripts: plot1.C, plot2.C, and plot3.C. I ran each of them separately, and they all executed successfully with the ROOT master version installed on my Mac. I recently made some fixes in that area, so it's possible that these changes have resolved your issue as well. To confirm, could you please send one of your non-working plot[1,2,3].C files? This way, I can compare it with the corresponding file I just generated on my Mac.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:159,integrability,version,version,159,". Your macro generates three .C scripts: plot1.C, plot2.C, and plot3.C. I ran each of them separately, and they all executed successfully with the ROOT master version installed on my Mac. I recently made some fixes in that area, so it's possible that these changes have resolved your issue as well. To confirm, could you please send one of your non-working plot[1,2,3].C files? This way, I can compare it with the corresponding file I just generated on my Mac.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:159,modifiability,version,version,159,". Your macro generates three .C scripts: plot1.C, plot2.C, and plot3.C. I ran each of them separately, and they all executed successfully with the ROOT master version installed on my Mac. I recently made some fixes in that area, so it's possible that these changes have resolved your issue as well. To confirm, could you please send one of your non-working plot[1,2,3].C files? This way, I can compare it with the corresponding file I just generated on my Mac.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:302,usability,confirm,confirm,302,". Your macro generates three .C scripts: plot1.C, plot2.C, and plot3.C. I ran each of them separately, and they all executed successfully with the ROOT master version installed on my Mac. I recently made some fixes in that area, so it's possible that these changes have resolved your issue as well. To confirm, could you please send one of your non-working plot[1,2,3].C files? This way, I can compare it with the corresponding file I just generated on my Mac.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:74,usability,user,user-attachments,74,"Sure, here's the plot1.C macro I obtain: [plot1.C.txt](https://github.com/user-attachments/files/15913609/plot1.C.txt). Please note I've added `.txt` to the file name because github won't let me upload .c files ¯\\_(ツ)_/¯.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:58,deployability,version,version,58,Indeed we clarified with @dpiparo . I am using the master version in which the problem is fixed. The variable name I get is `Double_t pdf_NormoBxcB_fx1[114] ` ... so the brackets have been replaced. I will backport the fix to 6.32.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:58,integrability,version,version,58,Indeed we clarified with @dpiparo . I am using the master version in which the problem is fixed. The variable name I get is `Double_t pdf_NormoBxcB_fx1[114] ` ... so the brackets have been replaced. I will backport the fix to 6.32.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:58,modifiability,version,version,58,Indeed we clarified with @dpiparo . I am using the master version in which the problem is fixed. The variable name I get is `Double_t pdf_NormoBxcB_fx1[114] ` ... so the brackets have been replaced. I will backport the fix to 6.32.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15887:101,modifiability,variab,variable,101,Indeed we clarified with @dpiparo . I am using the master version in which the problem is fixed. The variable name I get is `Double_t pdf_NormoBxcB_fx1[114] ` ... so the brackets have been replaced. I will backport the fix to 6.32.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15887
https://github.com/root-project/root/issues/15888:48,deployability,fail,failed,48,"I can see that also with LLVM18. ```. Assertion failed: (VD.isLocalVarDecl() && ""Should not see file-scope variables inside a function!""), function EmitDecl, file CGDecl.cpp, line 161.```. @devajithvs ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15888
https://github.com/root-project/root/issues/15888:107,modifiability,variab,variables,107,"I can see that also with LLVM18. ```. Assertion failed: (VD.isLocalVarDecl() && ""Should not see file-scope variables inside a function!""), function EmitDecl, file CGDecl.cpp, line 161.```. @devajithvs ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15888
https://github.com/root-project/root/issues/15888:48,reliability,fail,failed,48,"I can see that also with LLVM18. ```. Assertion failed: (VD.isLocalVarDecl() && ""Should not see file-scope variables inside a function!""), function EmitDecl, file CGDecl.cpp, line 161.```. @devajithvs ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15888
https://github.com/root-project/root/issues/15888:38,testability,Assert,Assertion,38,"I can see that also with LLVM18. ```. Assertion failed: (VD.isLocalVarDecl() && ""Should not see file-scope variables inside a function!""), function EmitDecl, file CGDecl.cpp, line 161.```. @devajithvs ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15888
https://github.com/root-project/root/pull/15890:27,availability,down,downsides,27,"> Do you see any potential downsides of returning strings by const reference? Dangling references? Issues should we need to turn it back to an `std::string` at a later point? Returning `const` references here should be fine, I cannot think of a situation where a `std::string` outlives the `RField` or `RNTupleMetrics` and is not copied explicitly anyway, e.g. storing it by value in another struct / class. also @enirolf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15890
https://github.com/root-project/root/pull/15891:198,deployability,stack,stacks,198,"Good move. The CI is quite demanding these days. If the change works there AND in the Conda CI, the coverage should be rather good. Clearly, we should add a note in the RN to inform owners of large stacks, e.g. LHC experiments, of this change in case something behaves differently in that context.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:100,testability,coverag,coverage,100,"Good move. The CI is quite demanding these days. If the change works there AND in the Conda CI, the coverage should be rather good. Clearly, we should add a note in the RN to inform owners of large stacks, e.g. LHC experiments, of this change in case something behaves differently in that context.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:289,testability,context,context,289,"Good move. The CI is quite demanding these days. If the change works there AND in the Conda CI, the coverage should be rather good. Clearly, we should add a note in the RN to inform owners of large stacks, e.g. LHC experiments, of this change in case something behaves differently in that context.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:132,usability,Clear,Clearly,132,"Good move. The CI is quite demanding these days. If the change works there AND in the Conda CI, the coverage should be rather good. Clearly, we should add a note in the RN to inform owners of large stacks, e.g. LHC experiments, of this change in case something behaves differently in that context.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:534,availability,Error,Error,534,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:704,availability,error,error,704,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:564,deployability,Fail,Failed,564,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:711,deployability,Fail,Failed,711,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:949,deployability,automat,automatically,949,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:1169,deployability,manag,manage,1169,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:184,energy efficiency,current,current,184,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:351,energy efficiency,load,loadLibrary,351,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:574,energy efficiency,load,load,574,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:1169,energy efficiency,manag,manage,1169,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:963,integrability,inject,injected,963,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:1208,modifiability,pac,packaging,1208,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:351,performance,load,loadLibrary,351,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:534,performance,Error,Error,534,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:574,performance,load,load,574,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:704,performance,error,error,704,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:564,reliability,Fail,Failed,564,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:711,reliability,Fail,Failed,711,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:1013,reliability,doe,doesn,1013,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:534,safety,Error,Error,534,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:704,safety,error,error,704,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:1169,safety,manag,manage,1169,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:684,security,soc,socling,684,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:696,security,session,session,696,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:963,security,inject,injected,963,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:85,testability,context,context,85,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:949,testability,automat,automatically,949,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:160,usability,clear,clear,160,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:374,usability,User,Users,374,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:534,usability,Error,Error,534,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:588,usability,User,Users,588,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:704,usability,error,error,704,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```. root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'. Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }. ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:118,deployability,API,API,118,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:339,deployability,API,API,339,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:416,deployability,API,API,416,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:12,energy efficiency,sustainab,sustainable,12,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:118,integrability,API,API,118,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:339,integrability,API,API,339,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:416,integrability,API,API,416,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:118,interoperability,API,API,118,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:339,interoperability,API,API,339,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:416,interoperability,API,API,416,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:165,performance,time,time,165,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:367,performance,time,time,367,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:188,safety,compl,completely,188,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:375,safety,compl,complete,375,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:188,security,compl,completely,188,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:375,security,compl,complete,375,"I think the sustainable fix is to get rid of TPython all together, since the provided functionality of the `CPyCppyy` API *should* be the same. In fact, there was a time where TPython was completely gone from the codebase until Enric brought it back with 2934be5fb3007, because apparently there are still come problems with the `CPyCppyy` API. Maybe it is now a good time to complete the migration to the `CPyCppyy` API?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:45,deployability,API,API,45,"FYI, I have opened some PRs for the CPyCppyy API to make it fit for replacing TPython:. * https://github.com/wlav/CPyCppyy/pull/30. * https://github.com/wlav/CPyCppyy/pull/31",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:45,integrability,API,API,45,"FYI, I have opened some PRs for the CPyCppyy API to make it fit for replacing TPython:. * https://github.com/wlav/CPyCppyy/pull/30. * https://github.com/wlav/CPyCppyy/pull/31",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:45,interoperability,API,API,45,"FYI, I have opened some PRs for the CPyCppyy API to make it fit for replacing TPython:. * https://github.com/wlav/CPyCppyy/pull/30. * https://github.com/wlav/CPyCppyy/pull/31",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15891:47,usability,close,closed,47,Thank you @guitargeek I believe this PR can be closed now!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15891
https://github.com/root-project/root/pull/15893:280,reliability,doe,does,280,"When I naively set `SetLowBottomMargin(gStyle->GetPadBottomMargin())` and `SetUpTopMargin(gStyle->GetPadTopMargin())` they end up being different than for a simple histogram, i.e. axis labels that should fit disappear. The below example also has `SetSeparationMargin(0)` but that does not change the outer margins. ![image](https://github.com/root-project/root/assets/12029880/e0917420-0de3-4723-8ab8-531a4c6ee48f). That is jsroot plot though, on the ""normal"" one the font size for the ratio plot is bigger and even more disappears at the bottom. :(. ![image](https://github.com/root-project/root/assets/12029880/47b9ecd1-b1d5-415a-be88-d99a03a97624). The left/right margins where easy to change and the most annoying ones visually imo, so that is what I did.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15893
https://github.com/root-project/root/pull/15893:157,testability,simpl,simple,157,"When I naively set `SetLowBottomMargin(gStyle->GetPadBottomMargin())` and `SetUpTopMargin(gStyle->GetPadTopMargin())` they end up being different than for a simple histogram, i.e. axis labels that should fit disappear. The below example also has `SetSeparationMargin(0)` but that does not change the outer margins. ![image](https://github.com/root-project/root/assets/12029880/e0917420-0de3-4723-8ab8-531a4c6ee48f). That is jsroot plot though, on the ""normal"" one the font size for the ratio plot is bigger and even more disappears at the bottom. :(. ![image](https://github.com/root-project/root/assets/12029880/47b9ecd1-b1d5-415a-be88-d99a03a97624). The left/right margins where easy to change and the most annoying ones visually imo, so that is what I did.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15893
https://github.com/root-project/root/pull/15893:157,usability,simpl,simple,157,"When I naively set `SetLowBottomMargin(gStyle->GetPadBottomMargin())` and `SetUpTopMargin(gStyle->GetPadTopMargin())` they end up being different than for a simple histogram, i.e. axis labels that should fit disappear. The below example also has `SetSeparationMargin(0)` but that does not change the outer margins. ![image](https://github.com/root-project/root/assets/12029880/e0917420-0de3-4723-8ab8-531a4c6ee48f). That is jsroot plot though, on the ""normal"" one the font size for the ratio plot is bigger and even more disappears at the bottom. :(. ![image](https://github.com/root-project/root/assets/12029880/47b9ecd1-b1d5-415a-be88-d99a03a97624). The left/right margins where easy to change and the most annoying ones visually imo, so that is what I did.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15893
https://github.com/root-project/root/pull/15893:723,usability,visual,visually,723,"When I naively set `SetLowBottomMargin(gStyle->GetPadBottomMargin())` and `SetUpTopMargin(gStyle->GetPadTopMargin())` they end up being different than for a simple histogram, i.e. axis labels that should fit disappear. The below example also has `SetSeparationMargin(0)` but that does not change the outer margins. ![image](https://github.com/root-project/root/assets/12029880/e0917420-0de3-4723-8ab8-531a4c6ee48f). That is jsroot plot though, on the ""normal"" one the font size for the ratio plot is bigger and even more disappears at the bottom. :(. ![image](https://github.com/root-project/root/assets/12029880/47b9ecd1-b1d5-415a-be88-d99a03a97624). The left/right margins where easy to change and the most annoying ones visually imo, so that is what I did.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15893
https://github.com/root-project/root/pull/15893:28,modifiability,paramet,parameter,28,". Okay then, a newer TStyle parameter would be required. Let's keep it that way. If the defaults are reasonable, then it is fine. Anyway, that can be changed when needed by the class setters.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15893
https://github.com/root-project/root/pull/15893:116,energy efficiency,load,loading,116,I would not use `gStyle` as initializer in header files. In some special cases header files may be accessed without loading appropriate library - and then gStyle can be also not initialized. . I would prefer to move such members initialization into `TRatioPlot` constructor.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15893
https://github.com/root-project/root/pull/15893:116,performance,load,loading,116,I would not use `gStyle` as initializer in header files. In some special cases header files may be accessed without loading appropriate library - and then gStyle can be also not initialized. . I would prefer to move such members initialization into `TRatioPlot` constructor.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15893
https://github.com/root-project/root/pull/15893:99,security,access,accessed,99,I would not use `gStyle` as initializer in header files. In some special cases header files may be accessed without loading appropriate library - and then gStyle can be also not initialized. . I would prefer to move such members initialization into `TRatioPlot` constructor.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15893
https://github.com/root-project/root/pull/15893:201,usability,prefer,prefer,201,I would not use `gStyle` as initializer in header files. In some special cases header files may be accessed without loading appropriate library - and then gStyle can be also not initialized. . I would prefer to move such members initialization into `TRatioPlot` constructor.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15893
https://github.com/root-project/root/pull/15895:152,modifiability,exten,extending,152,"Thanks a lot for these changes. Let's see it working, then we can perhaps discuss whether this is an option to add to the Snapshot options, rather than extending the signature of Snapshot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15895
https://github.com/root-project/root/pull/15895:166,security,sign,signature,166,"Thanks a lot for these changes. Let's see it working, then we can perhaps discuss whether this is an option to add to the Snapshot options, rather than extending the signature of Snapshot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15895
https://github.com/root-project/root/pull/15895:26,deployability,updat,updated,26,"Thanks for the comment, I updated the code to use the Snapshot options, the issue I saw was related to Define() and not Snapshot()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15895
https://github.com/root-project/root/pull/15895:26,safety,updat,updated,26,"Thanks for the comment, I updated the code to use the Snapshot options, the issue I saw was related to Define() and not Snapshot()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15895
https://github.com/root-project/root/pull/15895:26,security,updat,updated,26,"Thanks for the comment, I updated the code to use the Snapshot options, the issue I saw was related to Define() and not Snapshot()",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15895
https://github.com/root-project/root/issues/15896:111,integrability,Pub,Public,111,Working on it. Can you confirm that any of those is now properly signed? https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win32.vc17.debug.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win32.vc17.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win64.vc17.debug.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win64.vc17.exe.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:192,integrability,Pub,Public,192,Working on it. Can you confirm that any of those is now properly signed? https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win32.vc17.debug.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win32.vc17.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win64.vc17.debug.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win64.vc17.exe.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:267,integrability,Pub,Public,267,Working on it. Can you confirm that any of those is now properly signed? https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win32.vc17.debug.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win32.vc17.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win64.vc17.debug.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win64.vc17.exe.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:348,integrability,Pub,Public,348,Working on it. Can you confirm that any of those is now properly signed? https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win32.vc17.debug.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win32.vc17.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win64.vc17.debug.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win64.vc17.exe.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:65,security,sign,signed,65,Working on it. Can you confirm that any of those is now properly signed? https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win32.vc17.debug.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win32.vc17.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win64.vc17.debug.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win64.vc17.exe.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:23,usability,confirm,confirm,23,Working on it. Can you confirm that any of those is now properly signed? https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win32.vc17.debug.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win32.vc17.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win64.vc17.debug.exe. https://bellenot.web.cern.ch/bellenot/Public/root_v6.32.02.win64.vc17.exe.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:560,deployability,manag,manage,560,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:560,energy efficiency,manag,manage,560,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:560,safety,manag,manage,560,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:36,security,sign,signed,36,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:184,security,certif,certificate,184,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:204,security,sign,sign,204,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:229,security,trust,trusted,229,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:242,security,auth,authority,242,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:361,security,sign,signing,361,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:369,security,certif,certificates,369,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:421,security,certif,certificate,421,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:433,security,auth,authority,433,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:547,security,sign,signing-cert-manage,547,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:587,security,sign,signing-certificate,587,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:481,usability,learn,learn,481,@bellenot : The new executables are signed. . ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4). But they still present an issue. The certificate used to sign was not issued by a trusted root authority. . ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147). Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:33,security,certif,certificate,33,"OK, thanks for the feedback. The certificate used to sign the binaries is the official CERN one. I'll check with IT but I doubt they will purchase any Windows approved certificate... Isn't the CERN certificate good enough for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:53,security,sign,sign,53,"OK, thanks for the feedback. The certificate used to sign the binaries is the official CERN one. I'll check with IT but I doubt they will purchase any Windows approved certificate... Isn't the CERN certificate good enough for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:168,security,certif,certificate,168,"OK, thanks for the feedback. The certificate used to sign the binaries is the official CERN one. I'll check with IT but I doubt they will purchase any Windows approved certificate... Isn't the CERN certificate good enough for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:198,security,certif,certificate,198,"OK, thanks for the feedback. The certificate used to sign the binaries is the official CERN one. I'll check with IT but I doubt they will purchase any Windows approved certificate... Isn't the CERN certificate good enough for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:19,usability,feedback,feedback,19,"OK, thanks for the feedback. The certificate used to sign the binaries is the official CERN one. I'll check with IT but I doubt they will purchase any Windows approved certificate... Isn't the CERN certificate good enough for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:45,security,certif,certificates,45,Maybe this helps: https://ca.cern.ch/cafiles/certificates/windows.aspx?redir=0&ca=grid,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:11,usability,help,helps,11,Maybe this helps: https://ca.cern.ch/cafiles/certificates/windows.aspx?redir=0&ca=grid,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:40,security,sign,signing,40,"Nope, that's for the grid, not for code signing. See https://ca.cern.ch/ca/certificates/CodeSigning.aspx.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:75,security,certif,certificates,75,"Nope, that's for the grid, not for code signing. See https://ca.cern.ch/ca/certificates/CodeSigning.aspx.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:188,deployability,automat,automatically,188,@bellenot: It's not a question of whether or not it's good for me. It's a question of whether or not Windows approves it. Since cert can't be traced back to a trusted source. Windows will automatically flag it as potentially hazardous. Here's a screenshot of the window if I attempt to execute one of the executables: . ![image](https://github.com/root-project/root/assets/73365079/abc742fd-dd28-4e5b-b195-f95784d13e04).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:225,safety,hazard,hazardous,225,@bellenot: It's not a question of whether or not it's good for me. It's a question of whether or not Windows approves it. Since cert can't be traced back to a trusted source. Windows will automatically flag it as potentially hazardous. Here's a screenshot of the window if I attempt to execute one of the executables: . ![image](https://github.com/root-project/root/assets/73365079/abc742fd-dd28-4e5b-b195-f95784d13e04).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:159,security,trust,trusted,159,@bellenot: It's not a question of whether or not it's good for me. It's a question of whether or not Windows approves it. Since cert can't be traced back to a trusted source. Windows will automatically flag it as potentially hazardous. Here's a screenshot of the window if I attempt to execute one of the executables: . ![image](https://github.com/root-project/root/assets/73365079/abc742fd-dd28-4e5b-b195-f95784d13e04).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:142,testability,trace,traced,142,@bellenot: It's not a question of whether or not it's good for me. It's a question of whether or not Windows approves it. Since cert can't be traced back to a trusted source. Windows will automatically flag it as potentially hazardous. Here's a screenshot of the window if I attempt to execute one of the executables: . ![image](https://github.com/root-project/root/assets/73365079/abc742fd-dd28-4e5b-b195-f95784d13e04).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:188,testability,automat,automatically,188,@bellenot: It's not a question of whether or not it's good for me. It's a question of whether or not Windows approves it. Since cert can't be traced back to a trusted source. Windows will automatically flag it as potentially hazardous. Here's a screenshot of the window if I attempt to execute one of the executables: . ![image](https://github.com/root-project/root/assets/73365079/abc742fd-dd28-4e5b-b195-f95784d13e04).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:37,deployability,instal,installation,37,"OK, fine, but that doesn't block the installation. I'll cross-check, but I'm afraid it will be the maximum we can do for the time being...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:125,performance,time,time,125,"OK, fine, but that doesn't block the installation. I'll cross-check, but I'm afraid it will be the maximum we can do for the time being...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:19,reliability,doe,doesn,19,"OK, fine, but that doesn't block the installation. I'll cross-check, but I'm afraid it will be the maximum we can do for the time being...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:33,deployability,instal,installing,33,It actually does prevent us from installing on some systems since the cert cannot be trusted. We have no way to verify that the installers haven't been modified or corrupted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:128,deployability,instal,installers,128,It actually does prevent us from installing on some systems since the cert cannot be trusted. We have no way to verify that the installers haven't been modified or corrupted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:12,reliability,doe,does,12,It actually does prevent us from installing on some systems since the cert cannot be trusted. We have no way to verify that the installers haven't been modified or corrupted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:17,safety,prevent,prevent,17,It actually does prevent us from installing on some systems since the cert cannot be trusted. We have no way to verify that the installers haven't been modified or corrupted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:17,security,preven,prevent,17,It actually does prevent us from installing on some systems since the cert cannot be trusted. We have no way to verify that the installers haven't been modified or corrupted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:85,security,trust,trusted,85,It actually does prevent us from installing on some systems since the cert cannot be trusted. We have no way to verify that the installers haven't been modified or corrupted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:152,security,modif,modified,152,It actually does prevent us from installing on some systems since the cert cannot be trusted. We have no way to verify that the installers haven't been modified or corrupted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:112,testability,verif,verify,112,It actually does prevent us from installing on some systems since the cert cannot be trusted. We have no way to verify that the installers haven't been modified or corrupted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:16,deployability,updat,update,16,@bellenot : Any update from the official channel about obtaining a cert from a trusted authority?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:16,safety,updat,update,16,@bellenot : Any update from the official channel about obtaining a cert from a trusted authority?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:16,security,updat,update,16,@bellenot : Any update from the official channel about obtaining a cert from a trusted authority?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:79,security,trust,trusted,79,@bellenot : Any update from the official channel about obtaining a cert from a trusted authority?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:87,security,auth,authority,87,@bellenot : Any update from the official channel about obtaining a cert from a trusted authority?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:18,deployability,updat,update,18,> @bellenot : Any update from the official channel about obtaining a cert from a trusted authority? No news yet,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:18,safety,updat,update,18,> @bellenot : Any update from the official channel about obtaining a cert from a trusted authority? No news yet,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:18,security,updat,update,18,> @bellenot : Any update from the official channel about obtaining a cert from a trusted authority? No news yet,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:81,security,trust,trusted,81,> @bellenot : Any update from the official channel about obtaining a cert from a trusted authority? No news yet,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/issues/15896:89,security,auth,authority,89,> @bellenot : Any update from the official channel about obtaining a cert from a trusted authority? No news yet,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/15896
https://github.com/root-project/root/pull/15897:70,performance,content,content,70,Are we by chance comparing sizes of C macros? should we compare their content?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15897
https://github.com/root-project/root/pull/15897:10,deployability,contain,contains,10,comparing contains was more complex. I went to the simplest way for this simple test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15897
https://github.com/root-project/root/pull/15897:28,safety,compl,complex,28,comparing contains was more complex. I went to the simplest way for this simple test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15897
https://github.com/root-project/root/pull/15897:80,safety,test,test,80,comparing contains was more complex. I went to the simplest way for this simple test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15897
https://github.com/root-project/root/pull/15897:28,security,compl,complex,28,comparing contains was more complex. I went to the simplest way for this simple test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15897
https://github.com/root-project/root/pull/15897:51,testability,simpl,simplest,51,comparing contains was more complex. I went to the simplest way for this simple test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15897
https://github.com/root-project/root/pull/15897:73,testability,simpl,simple,73,comparing contains was more complex. I went to the simplest way for this simple test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15897
https://github.com/root-project/root/pull/15897:80,testability,test,test,80,comparing contains was more complex. I went to the simplest way for this simple test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15897
https://github.com/root-project/root/pull/15897:51,usability,simpl,simplest,51,comparing contains was more complex. I went to the simplest way for this simple test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15897
https://github.com/root-project/root/pull/15897:73,usability,simpl,simple,73,comparing contains was more complex. I went to the simplest way for this simple test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15897
https://github.com/root-project/root/pull/15900:72,deployability,fail,fail,72,"@petrozarytskyi, can you help out with the Clad issue here? We probably fail to find the propagator for __builtin_pow. cc: @vaithak.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:72,reliability,fail,fail,72,"@petrozarytskyi, can you help out with the Clad issue here? We probably fail to find the propagator for __builtin_pow. cc: @vaithak.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:25,usability,help,help,25,"@petrozarytskyi, can you help out with the Clad issue here? We probably fail to find the propagator for __builtin_pow. cc: @vaithak.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:188,availability,failur,failure,188,"It seems the `UNREACHABLE` is connected to the issue regarding `__builtin_pow`, at least that is the builtin function that Clad's generated code tries to cast into a function pointer. The failure of `roottest-root-io-compression-make` was because I was building without `builtin_zstd` and the compressed size was different than expected. From that point of view, the build fixes are complete. Note that the backport still needs to be synchronized to https://github.com/root-project/llvm-project/ before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:188,deployability,fail,failure,188,"It seems the `UNREACHABLE` is connected to the issue regarding `__builtin_pow`, at least that is the builtin function that Clad's generated code tries to cast into a function pointer. The failure of `roottest-root-io-compression-make` was because I was building without `builtin_zstd` and the compressed size was different than expected. From that point of view, the build fixes are complete. Note that the backport still needs to be synchronized to https://github.com/root-project/llvm-project/ before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:253,deployability,build,building,253,"It seems the `UNREACHABLE` is connected to the issue regarding `__builtin_pow`, at least that is the builtin function that Clad's generated code tries to cast into a function pointer. The failure of `roottest-root-io-compression-make` was because I was building without `builtin_zstd` and the compressed size was different than expected. From that point of view, the build fixes are complete. Note that the backport still needs to be synchronized to https://github.com/root-project/llvm-project/ before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:367,deployability,build,build,367,"It seems the `UNREACHABLE` is connected to the issue regarding `__builtin_pow`, at least that is the builtin function that Clad's generated code tries to cast into a function pointer. The failure of `roottest-root-io-compression-make` was because I was building without `builtin_zstd` and the compressed size was different than expected. From that point of view, the build fixes are complete. Note that the backport still needs to be synchronized to https://github.com/root-project/llvm-project/ before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:188,performance,failur,failure,188,"It seems the `UNREACHABLE` is connected to the issue regarding `__builtin_pow`, at least that is the builtin function that Clad's generated code tries to cast into a function pointer. The failure of `roottest-root-io-compression-make` was because I was building without `builtin_zstd` and the compressed size was different than expected. From that point of view, the build fixes are complete. Note that the backport still needs to be synchronized to https://github.com/root-project/llvm-project/ before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:434,performance,synch,synchronized,434,"It seems the `UNREACHABLE` is connected to the issue regarding `__builtin_pow`, at least that is the builtin function that Clad's generated code tries to cast into a function pointer. The failure of `roottest-root-io-compression-make` was because I was building without `builtin_zstd` and the compressed size was different than expected. From that point of view, the build fixes are complete. Note that the backport still needs to be synchronized to https://github.com/root-project/llvm-project/ before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:188,reliability,fail,failure,188,"It seems the `UNREACHABLE` is connected to the issue regarding `__builtin_pow`, at least that is the builtin function that Clad's generated code tries to cast into a function pointer. The failure of `roottest-root-io-compression-make` was because I was building without `builtin_zstd` and the compressed size was different than expected. From that point of view, the build fixes are complete. Note that the backport still needs to be synchronized to https://github.com/root-project/llvm-project/ before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:383,safety,compl,complete,383,"It seems the `UNREACHABLE` is connected to the issue regarding `__builtin_pow`, at least that is the builtin function that Clad's generated code tries to cast into a function pointer. The failure of `roottest-root-io-compression-make` was because I was building without `builtin_zstd` and the compressed size was different than expected. From that point of view, the build fixes are complete. Note that the backport still needs to be synchronized to https://github.com/root-project/llvm-project/ before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:383,security,compl,complete,383,"It seems the `UNREACHABLE` is connected to the issue regarding `__builtin_pow`, at least that is the builtin function that Clad's generated code tries to cast into a function pointer. The failure of `roottest-root-io-compression-make` was because I was building without `builtin_zstd` and the compressed size was different than expected. From that point of view, the build fixes are complete. Note that the backport still needs to be synchronized to https://github.com/root-project/llvm-project/ before merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:4,availability,failur,failures,4,The failures are unrelated and most likely due to a glitch in the EOS based file server.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:4,deployability,fail,failures,4,The failures are unrelated and most likely due to a glitch in the EOS based file server.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:4,performance,failur,failures,4,The failures are unrelated and most likely due to a glitch in the EOS based file server.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:4,reliability,fail,failures,4,The failures are unrelated and most likely due to a glitch in the EOS based file server.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:235,deployability,build,builds,235,"I propose to:. 1. Disable CLAD on macbeta in master and merge this PR. 2. Port this PR to 6.32, disable CLAD on macbeta and merge the PR. 3. If the work is little, backport to 6.28 and 6.30 and disable clad. Otherwise, disable macbeta builds on 6.28 and 6.30 . OK with everybody @hahnjo @vgvassilev ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
https://github.com/root-project/root/pull/15900:82,availability,down,down,82,"Irrespective of the plan above or any modification to it, I believe we should sit down and understand how to deploy an automated way to build the module map. For example, internal headers will always be changed and it will be harder and harder to keep present versions of the sdk working and fix new ones.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/15900
