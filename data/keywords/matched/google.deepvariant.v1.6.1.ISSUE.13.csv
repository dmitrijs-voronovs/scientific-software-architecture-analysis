id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/google/deepvariant/issues/465:803,integrability,buffer,buffer,803,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:300,modifiability,interm,intermediate,300,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:635,modifiability,Interm,Intermediate,635,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:0,performance,parallel,parallel,0,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:62,performance,error,error,62,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:145,performance,error,error,145,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:207,performance,error,error,207,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:760,performance,time,time,760,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:775,performance,parallel,parallel,775,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1242,performance,parallel,parallel,1242,"7696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1727,performance,time,time,1727,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:2101,performance,time,time,2101,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:14,reliability,fail,failed,14,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:23,reliability,Doe,Does,23,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1261,reliability,fail,failed,1261,"nt.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_out",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1921,reliability,checkpoint,checkpoint,1921,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:62,safety,error,error,62,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:145,safety,error,error,145,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:207,safety,error,error,207,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:444,safety,log,logs,444,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:460,safety,log,logs,460,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:591,safety,log,logs,591,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:926,safety,input,input,926,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1060,safety,log,logs,1060,"error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.15",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1218,safety,log,logs,1218,"02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/outpu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1237,safety,log,log,1237,"29297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_resu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1383,safety,input,input,1383,"97437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1513,safety,log,logs,1513,"ant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1997,safety,log,logs,1997,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:2016,safety,log,log,2016,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:2473,safety,log,logs,2473,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:2499,safety,log,log,2499,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:444,security,log,logs,444,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:460,security,log,logs,460,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:591,security,log,logs,591,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1060,security,log,logs,1060,"error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.15",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1218,security,log,logs,1218,"02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/outpu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1237,security,log,log,1237,"29297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_resu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1513,security,log,logs,1513,"ant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1938,security,model,models,1938,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1949,security,model,model,1949,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1997,security,log,logs,1997,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:2016,security,log,log,2016,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:2473,security,log,logs,2473,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:2499,security,log,log,2499,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:444,testability,log,logs,444,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:460,testability,log,logs,460,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:591,testability,log,logs,591,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1060,testability,log,logs,1060,"error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.15",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1218,testability,log,logs,1218,"02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/outpu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1237,testability,log,log,1237,"29297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_resu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1513,testability,log,logs,1513,"ant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1997,testability,log,logs,1997,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:2016,testability,log,log,2016,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:2473,testability,log,logs,2473,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:2499,testability,log,log,2499,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:62,usability,error,error,62,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:145,usability,error,error,145,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:207,usability,error,error,207,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:743,usability,command,command,743,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:926,usability,input,input,926,"parallel: job failed:; Does anyone know what caused the below error? I use deepvariant image on singularity and running it on a cluster but this error happens on many machines. I don't know what causes this error. I0624 02:14:00.095050 47429297437696 run_deepvariant.py:313] Creating a directory for intermediate results in /output/intermediate_results_dir. I0624 02:14:01.826225 47429297437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/log",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1383,usability,input,input,1383,"97437696 run_deepvariant.py:405] Creating a directory for logs in /output/logs. I0624 02:14:01.954994 47429297437696 run_deepvariant.py:227] Creating a make_examples runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1663,usability,user,user,1663,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:1710,usability,command,command,1710,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:2037,usability,user,user,2037,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:2084,usability,command,command,2084,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/465:2521,usability,user,user,2521,"les runtime by region directory in /output/logs/make_examples_runtime_by_region. ***** Intermediate results will be written to /output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --reads ""/input/S-001737188.markdup.bam"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --runtime_by_region ""/output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv"" --gvcf ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --task {} ) 2>&1 | tee /output/logs/make_examples.log. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /ref/GRCh38_full_analysis_set_plus_decoy_hla.fa --reads /input/S-001737188.markdup.bam --examples /output/intermediate_results_dir/make_examples.tfrecord@1.gz --runtime_by_region /output/logs/make_examples_runtime_by_region/make_examples_runtime@1.tsv --gvcf /output/intermediate_results_dir/gvcf.tfrecord@1.gz --task 0. real	14m5.230s. user	0m1.869s. sys	0m3.689s. ***** Running the command:*****. ( time /opt/deepvariant/bin/call_variants --outfile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --examples ""/output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --checkpoint ""/opt/models/wgs/model.ckpt"" --use_openvino ) 2>&1 | tee /output/logs/call_variants.log. real	6m35.370s. user	0m1.385s. sys	0m1.152s. ***** Running the command:*****. ( time /opt/deepvariant/bin/postprocess_variants --ref ""/ref/GRCh38_full_analysis_set_plus_decoy_hla.fa"" --infile ""/output/intermediate_results_dir/call_variants_output.tfrecord.gz"" --outfile ""/output/S-001737188.vcf.gz"" --nonvariant_site_tfrecord_path ""/output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --gvcf_outfile ""/output/S-001737188.g.vcf.gz"" ) 2>&1 | tee /output/logs/postprocess_variants.log. real	10m14.442s. user	0m1.472s. sys	0m1.164s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/465
https://github.com/google/deepvariant/issues/466:298,performance,time,time,298,"Calling Germline variants in Tumor samples.; Hi everyone,. I wanted to ask if I could use DeepVariant with **Tumor Illumina samples** to accurately detect **Germline** variants? Can it accurately distinguish them from the Somatic ones? I am interested in Germline variants only. Thank you for your time,. Konstantinos Kyriakidis",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/466
https://github.com/google/deepvariant/issues/466:148,safety,detect,detect,148,"Calling Germline variants in Tumor samples.; Hi everyone,. I wanted to ask if I could use DeepVariant with **Tumor Illumina samples** to accurately detect **Germline** variants? Can it accurately distinguish them from the Somatic ones? I am interested in Germline variants only. Thank you for your time,. Konstantinos Kyriakidis",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/466
https://github.com/google/deepvariant/issues/466:148,security,detect,detect,148,"Calling Germline variants in Tumor samples.; Hi everyone,. I wanted to ask if I could use DeepVariant with **Tumor Illumina samples** to accurately detect **Germline** variants? Can it accurately distinguish them from the Somatic ones? I am interested in Germline variants only. Thank you for your time,. Konstantinos Kyriakidis",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/466
https://github.com/google/deepvariant/pull/468:23,security,modif,modification,23,add mobile view; Quick modification to make the site a little more mobile-friendly and add footer links. ![image](https://user-images.githubusercontent.com/1536935/123845511-45c9e580-d8e2-11eb-9c85-edcef5da58e9.png).,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/468
https://github.com/google/deepvariant/pull/468:122,usability,user,user-images,122,add mobile view; Quick modification to make the site a little more mobile-friendly and add footer links. ![image](https://user-images.githubusercontent.com/1536935/123845511-45c9e580-d8e2-11eb-9c85-edcef5da58e9.png).,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/468
https://github.com/google/deepvariant/issues/469:156,availability,error,error,156,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:760,availability,error,error,760,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2666,availability,servic,service,2666,"l.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/clien",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:42,deployability,fail,fails,42,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:934,deployability,modul,module,934,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2666,deployability,servic,service,2666,"l.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/clien",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2834,deployability,depend,dependency,2834,"(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapic",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2859,deployability,API,API,2859,"ib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2904,deployability,depend,dependency,2904,"tribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import go",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2929,deployability,API,API,2929,"er/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2950,deployability,instal,install,2950,"lver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Me",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3344,deployability,modul,module,3344,"dpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/p",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3428,deployability,modul,module,3428,"/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3819,deployability,patch,patching,3819,"ng runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3875,deployability,patch,patch,3875,"imeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/d",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4067,deployability,modul,module,4067,"api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.pat",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4196,deployability,modul,module,4196,"3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/d",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4488,deployability,loader,loader,4488,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4580,deployability,modul,module,4580,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4777,deployability,patch,patch,4777,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4807,deployability,patch,patch,4807,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4850,deployability,VERSION,VERSION,4850,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4892,deployability,VERSION,VERSION,4892,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4928,deployability,instal,install,4928,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4938,deployability,upgrad,upgrade,4938,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4972,deployability,instal,install,4972,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4982,deployability,upgrad,upgrade,4982,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5067,deployability,patch,patch,5067,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5096,deployability,patch,patch,5096,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5180,deployability,patch,patch,5180,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:38,energy efficiency,gpu,gpu,38,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:148,energy efficiency,gpu,gpu,148,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:305,energy efficiency,gpu,gpu,305,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:737,energy efficiency,model,model,737,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2958,energy efficiency,cloud,cloud-tpu-client,2958,"ne 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to a",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2998,energy efficiency,cloud,cloud-tpu-client,2998,"r(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py whic",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4488,energy efficiency,load,loader,4488,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4902,energy efficiency,gpu,gpu,4902,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5008,energy efficiency,cloud,cloud-tpu-client,5008,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2666,integrability,servic,service,2666,"l.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/clien",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2834,integrability,depend,dependency,2834,"(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapic",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2859,integrability,API,API,2859,"ib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2904,integrability,depend,dependency,2904,"tribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import go",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2929,integrability,API,API,2929,"er/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3150,integrability,discover,discovery,3150,"uster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.Si",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3596,integrability,discover,discovery,3596,"d_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only wo",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3710,integrability,configur,configuring,3710,"b/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `cl",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3845,integrability,discover,discovery,3845,"e Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4692,integrability,discover,discovery,4692,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4797,integrability,discover,discovery,4797,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4850,integrability,VERSION,VERSION,4850,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4892,integrability,VERSION,VERSION,4892,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5057,integrability,discover,discovery,5057,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5157,integrability,discover,discovery,5157,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5170,integrability,discover,discovery,5170,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:1030,interoperability,platform,platform,1030,"1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/py",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:1906,interoperability,distribut,distribute,1906,"ain.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime depende",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2074,interoperability,distribut,distribute,2074,", argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2252,interoperability,distribut,distribute,2252,"l.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficie",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2859,interoperability,API,API,2859,"ib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2929,interoperability,API,API,2929,"er/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3150,interoperability,discover,discovery,3150,"uster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.Si",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3596,interoperability,discover,discovery,3596,"d_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only wo",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3845,interoperability,discover,discovery,3845,"e Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4692,interoperability,discover,discovery,4692,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4797,interoperability,discover,discovery,4797,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5057,interoperability,discover,discovery,5057,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5157,interoperability,discover,discovery,5157,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5170,interoperability,discover,discovery,5170,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:934,modifiability,modul,module,934,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:1003,modifiability,pac,packages,1003,"image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:1879,modifiability,pac,packages,1879,"variant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeEr",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2047,modifiability,pac,packages,2047,"e 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The iss",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2225,modifiability,pac,packages,2225,"main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http:/",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2437,modifiability,pac,packages,2437,"ain.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with a",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2588,modifiability,pac,packages,2588,"in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2666,modifiability,servic,service,2666,"l.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/clien",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2733,modifiability,pac,packages,2733,"utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2834,modifiability,depend,dependency,2834,"(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapic",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2904,modifiability,depend,dependency,2904,"tribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import go",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3344,modifiability,modul,module,3344,"dpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/p",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3428,modifiability,modul,module,3428,"/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3640,modifiability,pac,packages,3640,"h_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change i",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3710,modifiability,configur,configuring,3710,"b/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `cl",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4067,modifiability,modul,module,4067,"api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.pat",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4196,modifiability,modul,module,4196,"3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/d",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4361,modifiability,pac,packages,4361,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4580,modifiability,modul,module,4580,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4850,modifiability,VERSION,VERSION,4850,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4892,modifiability,VERSION,VERSION,4892,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4938,modifiability,upgrad,upgrade,4938,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4982,modifiability,upgrad,upgrade,4982,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5132,modifiability,pac,packages,5132,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:38,performance,gpu,gpu,38,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:148,performance,gpu,gpu,148,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:156,performance,error,error,156,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:305,performance,gpu,gpu,305,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:760,performance,error,error,760,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4488,performance,load,loader,4488,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4902,performance,gpu,gpu,4902,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:42,reliability,fail,fails,42,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:156,safety,error,error,156,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:760,safety,error,error,760,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:934,safety,modul,module,934,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2834,safety,depend,dependency,2834,"(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapic",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2904,safety,depend,dependency,2904,"tribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import go",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3344,safety,modul,module,3344,"dpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/p",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3428,safety,modul,module,3428,"/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3731,safety,avoid,avoid,3731,"ackages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3819,safety,patch,patching,3819,"ng runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3875,safety,patch,patch,3875,"imeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/d",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3965,safety,avoid,avoid,3965,"client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4067,safety,modul,module,4067,"api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.pat",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4196,safety,modul,module,4196,"3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/d",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4580,safety,modul,module,4580,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4777,safety,patch,patch,4777,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4807,safety,patch,patch,4807,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5067,safety,patch,patch,5067,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5096,safety,patch,patch,5096,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5180,safety,patch,patch,5180,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:737,security,model,model,737,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3710,security,configur,configuring,3710,"b/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `cl",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3819,security,patch,patching,3819,"ng runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3875,security,patch,patch,3875,"imeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/d",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3957,security,hack,hack,3957,"loud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN pyth",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4777,security,patch,patch,4777,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4807,security,patch,patch,4807,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5067,security,patch,patch,5067,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5096,security,patch,patch,5096,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5180,security,patch,patch,5180,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:788,testability,Trace,Traceback,788,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2834,testability,depend,dependency,2834,"(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapic",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:2904,testability,depend,dependency,2904,"tribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self.master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 241, in master. cluster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import go",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4108,testability,Simpl,SimpleNamespace,4108,"ng imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4153,testability,Simpl,SimpleNamespace,4153," The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/disc",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:156,usability,error,error,156,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:217,usability,command,command,217,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:257,usability,USER,USER,257,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:271,usability,USER,USER,271,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:760,usability,error,error,760,"Docker image google/deepvariant:1.1.0-gpu fails to run with ""model_train --use_tpu""; When using the provided docker image, google/deepvariant:1.1.0-gpu, an error is produced if --use_tpu is used with model_train. The command:. ```. docker run \. -v /home/${USER}:/home/${USER} \. google/deepvariant:1.1.0-gpu \. /opt/deepvariant/bin/model_train \. --gcp_project="""" \. --tpu_name="""" \. --tpu_zone=""us-central1-a"" \. --use_tpu \. --dataset_config_pbtxt=""${OUTPUT_BUCKET}/training_set.dataset_config.pbtxt"" \. --train_dir=""${OUTPUT_BUCKET}/training-tpu/"" \. --model_name=""inception_v3"" \. --number_of_steps=50000 \. --save_interval_secs=300 \. --batch_size=32 \. --learning_rate=0.0005 \. --start_from_checkpoint=""${INPUT_BUCKET}/wgs_model/model.ckpt"" . ```. The error that prints is:. ```. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 303, in <module>. tf.compat.v1.app.run(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/platform/app.py"", line 40, in run. _run(main=main, argv=argv, flags_parser=_parse_flags_tolerate_undef). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 299, in run. _run_main(main, args). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/absl_py/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 291, in main. parse_and_run(). File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/model_train.py"", line 236, in parse_and_run. FLAGS.gcp_project) if FLAGS.use_tpu else ''. File ""/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_deepvariant/deepvariant/tf_utils.py"", line 391, in resolve_master. tpu=[tpu_name], zone=tpu_zone, project=gcp_project).get_master(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 257, in get_master. return self",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3150,usability,discov,discovery,3150,"uster_spec = self.cluster_spec(). File ""/usr/local/lib/python3.6/dist-packages/tensorflow/python/distribute/cluster_resolver/tpu/tpu_cluster_resolver.py"", line 311, in cluster_spec. network_endpoints = self._cloud_tpu_client.network_endpoints(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 320, in network_endpoints. response = self._fetch_cloud_tpu_metadata(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.Si",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3596,usability,discov,discovery,3596,"d_tpu_client/client.py"", line 234, in _fetch_cloud_tpu_metadata. service = self._tpu_service(). File ""/usr/local/lib/python3.6/dist-packages/cloud_tpu_client/client.py"", line 209, in _tpu_service. raise RuntimeError('Missing runtime dependency on the Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only wo",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:3845,usability,discov,discovery,3845,"e Google API client. '. RuntimeError: Missing runtime dependency on the Google API client. Run `pip install cloud-tpu-client` to fix. ```. However, cloud-tpu-client is not actually the problem. The issue is that `google.api_core.client_options` is not found when being imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4108,usability,Simpl,SimpleNamespace,4108,"ng imported from `googleapiclient.discovery`. The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4153,usability,Simpl,SimpleNamespace,4153," The issue appears to be the [python3.3 _ _ init _ _.py trap](http://python-notes.curiousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/disc",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4692,usability,discov,discovery,4692,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:4797,usability,discov,discovery,4797,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5057,usability,discov,discovery,5057,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5157,usability,discov,discovery,5157,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5170,usability,discov,discovery,5170,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/469:5235,usability,help,help,5235,"ousefficiency.org/en/latest/python_concepts/import_traps.html#the-init-py-trap) where one python module is blocking another from being found. In the python path there is a `google` module with an `__init__.py` found here, `/tmp/Bazel.runfiles_461ld2s6/runfiles/com_google_protobuf/python/google/__init__.py`, while running. That may be blocking the discovery of `/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py`. **Work Around**. I think configuring Bazel to avoid the issue is probably the right way to fix this, but I worked around the issue by patching `googleapiclient.discovery` with the following patch:. ```. 49c49,59. < import google.api_core.client_options. ---. > . > # Mega hack to avoid init.py trap of google/init.py which is somewhere on the path. > # Make a namespace to hold our module. > import types. > google = types.SimpleNamespace(). > google.api_core = types.SimpleNamespace(). > # Directly import our module into the namespace. > import importlib.util. > spec = importlib.util.spec_from_file_location(""google.api_core.client_options"", ""/usr/local/lib/python3.6/dist-packages/google/api_core/client_options.py""). > google.api_core.client_options = importlib.util.module_from_spec(spec). > spec.loader.exec_module(google.api_core.client_options). ```. This manually imports the required module, which only works because we know the path won't change in our docker image and we know `googleapiclient.discovery` only uses `client_options.py`. Finally, make a new docker image with this patch by calling it discovery.patch and using this Dockerfile:. ```. ARG VERSION=1.1.0. FROM google/deepvariant:""${VERSION}""-gpu. RUN python3.6 -m pip install --upgrade pip. RUN python3.6 -m pip install --upgrade --force-reinstall cloud-tpu-client. WORKDIR /opt/deepvariant. COPY discovery.patch /opt/deepvariant/. RUN patch /usr/local/lib/python3.6/dist-packages/googleapiclient/discovery.py discovery.patch. CMD [""/opt/deepvariant/bin/run_deepvariant"", ""--help""]. ```.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/469
https://github.com/google/deepvariant/issues/470:1203,availability,Operat,Operating,1203,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1573,availability,avail,available,1573,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1602,availability,Error,Error,1602,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1238,deployability,contain,container,1238,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1263,deployability,version,version,1263,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1281,deployability,Instal,Installation,1281,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1072,energy efficiency,frequenc,frequency,1072,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1263,integrability,version,version,1263,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1263,modifiability,version,version,1263,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1602,performance,Error,Error,1602,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:871,reliability,doe,does,871,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1573,reliability,availab,available,1573,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1634,reliability,Doe,Does,1634,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1573,safety,avail,available,1573,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1602,safety,Error,Error,1602,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1655,safety,test,test,1655,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1691,safety,test,test,1691,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1573,security,availab,available,1573,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1372,testability,instrument,instrument,1372,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1608,testability,trace,trace,1608,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1655,testability,test,test,1655,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1691,testability,test,test,1691,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1874,testability,context,context,1874,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:783,usability,support,supported,783,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1528,usability,Command,Command,1528,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/470:1602,usability,Error,Error,1602,"Unsupported allele call. ; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.1/docs/FAQ.md**:. **Describe the issue:**. I am debugging a set of false negative calls in a benchmarking set (NA12878, Agilent exome provided by a collaborator). . In the process, I came across a call that makes no sense to me and was wondering what a plausible explanation might be:. Final VCF:. `chr1 109161996 rs678238 A G 39 . AC=1;AF=0.5;AN=2;AQ=39;DP=218 GT:AD:DP:GQ:PL:RNC 0/1:0,218:218:15:39,0,14:. `. And the gVCF:. `chr1 109161996 . A G,<*> 39.6 PASS . GT:GQ:DP:AD:VAF:PL 0/1:15:218:0,218,0:1,0:39,0,14,990,990,990. `. The true gtenotype at this position should be G|G. . However, note that the genotype is shown as 0|1 - even tho the ref allele as a depth of 0. This is supported by a manual inspection of the alignment. There really isn't an A there and it does not seem to be a ""problematic"" locus with long runs of A or G. The reads align perfectly without any gaps. . Screenshot: https://www.dropbox.com/s/sp2n2gfy3li2rjl/dv_locus_error.JPG?dl=0 , Allele frequency as per alignment: G: 100%. . So how come Deepvariant calls it like that? It really makes no sense to me :(. **Setup**. - Operating system: Centos 7, Docker container. - DeepVariant version: 1.1.0. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) Exome (Agilent V7, genome-in-a-bott reference). **Steps to reproduce:**. - Command: Not possible without the raw data...available upong request. . - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? . No. . **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/470
https://github.com/google/deepvariant/issues/471:169,availability,error,error,169,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:189,availability,Operat,Operating,189,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:948,availability,Error,Error,948,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1754,availability,monitor,monitoring,1754,"000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exi",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:6,deployability,fail,failed,6,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:66,deployability,contain,contain,66,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:245,deployability,version,version,245,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:266,deployability,Instal,Installation,266,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1754,deployability,monitor,monitoring,1754,"000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exi",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1798,deployability,fail,failed,1798,"t.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1858,deployability,contain,contain,1858,"ntermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1960,deployability,fail,failed,1960,"f applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2545,deployability,modul,module,2545,"r/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start t",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1745,energy efficiency,core,core,1745,",000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_m",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1754,energy efficiency,monitor,monitoring,1754,"000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exi",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1928,energy efficiency,core,core,1928,"--num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:245,integrability,version,version,245,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1315,integrability,buffer,buffer,1315,"): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-1",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2841,integrability,sub,subprocess,2841,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2934,integrability,sub,subprocess,2934,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3015,integrability,sub,subprocess,3015,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3100,integrability,buffer,buffer,3100,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:512,interoperability,platform,platform,512,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:245,modifiability,version,version,245,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1061,modifiability,interm,intermediate,1061,"ontain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unitt",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1136,modifiability,Interm,Intermediate,1136," guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --exa",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2545,modifiability,modul,module,2545,"r/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start t",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2605,modifiability,pac,packages,2605,"ermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.c",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2705,modifiability,pac,packages,2705,"07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:169,performance,error,error,169,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:948,performance,Error,Error,948,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1272,performance,time,time,1272,"tion method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvc",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1287,performance,parallel,parallel,1287,"er, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz -",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1941,performance,parallel,parallel,1941," - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3057,performance,time,time,3057,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3072,performance,parallel,parallel,3072,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:6,reliability,fail,failed,6,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1754,reliability,monitor,monitoring,1754,"000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exi",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1798,reliability,fail,failed,1798,"t.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1960,reliability,fail,failed,1960,"f applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3526,reliability,Doe,Does,3526,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:169,safety,error,error,169,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:624,safety,test,testdata,624,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:684,safety,test,testdata,684,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:948,safety,Error,Error,948,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1391,safety,test,testdata,1391,"g special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:2",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1453,safety,test,testdata,1453," **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1754,safety,monitor,monitoring,1754,"000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exi",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2037,safety,test,testdata,2037,"ing a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessEr",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2097,safety,test,testdata,2097,"ut/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-b",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2545,safety,modul,module,2545,"r/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start t",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3176,safety,test,testdata,3176,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3238,safety,test,testdata,3238,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3547,safety,test,test,3547,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3583,safety,test,test,3583,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1907,security,sign,signal,1907,"mediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). F",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:358,testability,instrument,instrument,358,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:624,testability,test,testdata,624,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:649,testability,unit,unittest,649,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:684,testability,test,testdata,684,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:954,testability,trace,trace,954,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1391,testability,test,testdata,1391,"g special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:2",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1416,testability,unit,unittest,1416,"the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1453,testability,test,testdata,1453," **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1754,testability,monitor,monitoring,1754,"000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exi",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2037,testability,test,testdata,2037,"ing a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessEr",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2062,testability,unit,unittest,2062,"mediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2097,testability,test,testdata,2097,"ut/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-b",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2447,testability,Trace,Traceback,2447,"-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3176,testability,test,testdata,3176,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3201,testability,unit,unittest,3201,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3238,testability,test,testdata,3238,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3547,testability,test,test,3547,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3583,testability,test,test,3583,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3762,testability,context,context,3762,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:143,usability,guid,guidelines,143,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:169,usability,error,error,169,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:485,usability,Command,Command,485,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:948,usability,Error,Error,948,"Check failed: collection_function Requires collection_function to contain an implementation; **Describe the issue:**. I follow the quick start guidelines, and meet this error. **Setup**. - Operating system: MacBook Air (M1, 2020). - DeepVariant version: 19.03.14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:1255,usability,command,command,1255,".14. - Installation method (Docker, built from source, etc.): Docker . - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) quick start data . **Steps to reproduce:**. - Command: sudo docker run --platform linux/amd64 google/deepvariant /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads=/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --regions ""chr20:10,000,000-10,010,000"" --output_vcf=/quickstart-output/output.vcf.gz --output_gvcf=/quickstart-output/output.g.vcf.gz --intermediate_results_dir /quickstart-output/intermediate_results_dir --num_shards=1. - Error trace: (if applicable) I0712 04:14:17.889120 274906666752 run_deepvariant.py:313] Creating a directory for intermediate results in /quickstart-output/intermediate_results_dir. ***** Intermediate results will be written to /quickstart-output/intermediate_results_dir in docker. ****. ***** Running the command:*****. ( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2353,usability,user,user,2353,"s --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} ). 2021-07-12 04:14:21.223394: F tensorflow/core/lib/monitoring/collection_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfreco",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:2863,usability,command,command,2863,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3046,usability,Command,Command,3046,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/issues/471:3512,usability,statu,status,3512,"on_registry.cc:70] Check failed: collection_function Requires collection_function to contain an implementation. qemu: uncaught target signal 6 (Aborted) - core dumped. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /quickstart-testdata/ucsc.hg19.chr20.unittest.fasta --reads /quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam --examples /quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz --gvcf /quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz --regions chr20:10,000,000-10,010,000 --task 0. real	0m3.353s. user	0m3.542s. sys	0m0.718s. I0712 04:14:21.282448 274906666752 run_deepvariant.py:416] None. Traceback (most recent call last):. File ""/opt/deepvariant/bin/run_deepvariant.py"", line 421, in <module>. app.run(main). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 299, in run. _run_main(main, args). File ""/usr/local/lib/python3.6/dist-packages/absl/app.py"", line 250, in _run_main. sys.exit(main(argv)). File ""/opt/deepvariant/bin/run_deepvariant.py"", line 414, in main. subprocess.check_call(command, shell=True, executable='/bin/bash'). File ""/usr/lib/python3.6/subprocess.py"", line 311, in check_call. raise CalledProcessError(retcode, cmd). subprocess.CalledProcessError: Command '( time seq 0 0 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/quickstart-testdata/ucsc.hg19.chr20.unittest.fasta"" --reads ""/quickstart-testdata/NA12878_S1.chr20.10_10p1mb.bam"" --examples ""/quickstart-output/intermediate_results_dir/make_examples.tfrecord@1.gz"" --gvcf ""/quickstart-output/intermediate_results_dir/gvcf.tfrecord@1.gz"" --regions ""chr20:10,000,000-10,010,000"" --task {} )' returned non-zero exit status 250. **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? no. **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/471
https://github.com/google/deepvariant/pull/472:63,performance,time,time,63,Use OpenVINO from pip; We are not taking pull requests at this time.,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/472
https://github.com/google/deepvariant/pull/473:0,deployability,Updat,Update,0,"Update deepvariant-pacbio-model-case-study.md; We are not taking pull requests at this time. The text is from @williamrowell . This change is done by a team member directly on the r1.1 branch, and will be added internally for future relevant versions too.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/473
https://github.com/google/deepvariant/pull/473:242,deployability,version,versions,242,"Update deepvariant-pacbio-model-case-study.md; We are not taking pull requests at this time. The text is from @williamrowell . This change is done by a team member directly on the r1.1 branch, and will be added internally for future relevant versions too.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/473
https://github.com/google/deepvariant/pull/473:26,energy efficiency,model,model-case-study,26,"Update deepvariant-pacbio-model-case-study.md; We are not taking pull requests at this time. The text is from @williamrowell . This change is done by a team member directly on the r1.1 branch, and will be added internally for future relevant versions too.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/473
https://github.com/google/deepvariant/pull/473:242,integrability,version,versions,242,"Update deepvariant-pacbio-model-case-study.md; We are not taking pull requests at this time. The text is from @williamrowell . This change is done by a team member directly on the r1.1 branch, and will be added internally for future relevant versions too.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/473
https://github.com/google/deepvariant/pull/473:19,modifiability,pac,pacbio-model-case-study,19,"Update deepvariant-pacbio-model-case-study.md; We are not taking pull requests at this time. The text is from @williamrowell . This change is done by a team member directly on the r1.1 branch, and will be added internally for future relevant versions too.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/473
https://github.com/google/deepvariant/pull/473:242,modifiability,version,versions,242,"Update deepvariant-pacbio-model-case-study.md; We are not taking pull requests at this time. The text is from @williamrowell . This change is done by a team member directly on the r1.1 branch, and will be added internally for future relevant versions too.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/473
https://github.com/google/deepvariant/pull/473:87,performance,time,time,87,"Update deepvariant-pacbio-model-case-study.md; We are not taking pull requests at this time. The text is from @williamrowell . This change is done by a team member directly on the r1.1 branch, and will be added internally for future relevant versions too.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/473
https://github.com/google/deepvariant/pull/473:0,safety,Updat,Update,0,"Update deepvariant-pacbio-model-case-study.md; We are not taking pull requests at this time. The text is from @williamrowell . This change is done by a team member directly on the r1.1 branch, and will be added internally for future relevant versions too.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/473
https://github.com/google/deepvariant/pull/473:0,security,Updat,Update,0,"Update deepvariant-pacbio-model-case-study.md; We are not taking pull requests at this time. The text is from @williamrowell . This change is done by a team member directly on the r1.1 branch, and will be added internally for future relevant versions too.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/473
https://github.com/google/deepvariant/pull/473:26,security,model,model-case-study,26,"Update deepvariant-pacbio-model-case-study.md; We are not taking pull requests at this time. The text is from @williamrowell . This change is done by a team member directly on the r1.1 branch, and will be added internally for future relevant versions too.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/473
https://github.com/google/deepvariant/pull/473:152,security,team,team,152,"Update deepvariant-pacbio-model-case-study.md; We are not taking pull requests at this time. The text is from @williamrowell . This change is done by a team member directly on the r1.1 branch, and will be added internally for future relevant versions too.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/pull/473
https://github.com/google/deepvariant/issues/474:45,availability,cluster,cluster,45,"Unclear instructions to run deepvariant on a cluster; Hi there,. I've been trying to figure out how to actually run deepvariant in a cluster environment but thus far, the instructions seems a little cryptic to me. . Is there perhaps a step-by-step guide to running deepvariant on a cluster with a PBS scheduler for instance?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/474
https://github.com/google/deepvariant/issues/474:133,availability,cluster,cluster,133,"Unclear instructions to run deepvariant on a cluster; Hi there,. I've been trying to figure out how to actually run deepvariant in a cluster environment but thus far, the instructions seems a little cryptic to me. . Is there perhaps a step-by-step guide to running deepvariant on a cluster with a PBS scheduler for instance?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/474
https://github.com/google/deepvariant/issues/474:282,availability,cluster,cluster,282,"Unclear instructions to run deepvariant on a cluster; Hi there,. I've been trying to figure out how to actually run deepvariant in a cluster environment but thus far, the instructions seems a little cryptic to me. . Is there perhaps a step-by-step guide to running deepvariant on a cluster with a PBS scheduler for instance?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/474
https://github.com/google/deepvariant/issues/474:45,deployability,cluster,cluster,45,"Unclear instructions to run deepvariant on a cluster; Hi there,. I've been trying to figure out how to actually run deepvariant in a cluster environment but thus far, the instructions seems a little cryptic to me. . Is there perhaps a step-by-step guide to running deepvariant on a cluster with a PBS scheduler for instance?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/474
https://github.com/google/deepvariant/issues/474:133,deployability,cluster,cluster,133,"Unclear instructions to run deepvariant on a cluster; Hi there,. I've been trying to figure out how to actually run deepvariant in a cluster environment but thus far, the instructions seems a little cryptic to me. . Is there perhaps a step-by-step guide to running deepvariant on a cluster with a PBS scheduler for instance?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/474
https://github.com/google/deepvariant/issues/474:282,deployability,cluster,cluster,282,"Unclear instructions to run deepvariant on a cluster; Hi there,. I've been trying to figure out how to actually run deepvariant in a cluster environment but thus far, the instructions seems a little cryptic to me. . Is there perhaps a step-by-step guide to running deepvariant on a cluster with a PBS scheduler for instance?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/474
https://github.com/google/deepvariant/issues/474:301,energy efficiency,schedul,scheduler,301,"Unclear instructions to run deepvariant on a cluster; Hi there,. I've been trying to figure out how to actually run deepvariant in a cluster environment but thus far, the instructions seems a little cryptic to me. . Is there perhaps a step-by-step guide to running deepvariant on a cluster with a PBS scheduler for instance?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/474
https://github.com/google/deepvariant/issues/474:301,performance,schedul,scheduler,301,"Unclear instructions to run deepvariant on a cluster; Hi there,. I've been trying to figure out how to actually run deepvariant in a cluster environment but thus far, the instructions seems a little cryptic to me. . Is there perhaps a step-by-step guide to running deepvariant on a cluster with a PBS scheduler for instance?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/474
https://github.com/google/deepvariant/issues/474:248,usability,guid,guide,248,"Unclear instructions to run deepvariant on a cluster; Hi there,. I've been trying to figure out how to actually run deepvariant in a cluster environment but thus far, the instructions seems a little cryptic to me. . Is there perhaps a step-by-step guide to running deepvariant on a cluster with a PBS scheduler for instance?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/474
https://github.com/google/deepvariant/issues/475:24,deployability,integr,integration,24,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:187,deployability,pipelin,pipeline,187,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:840,deployability,configurat,configuration,840,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1035,deployability,configurat,configuration,1035,"epTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences be",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1939,deployability,releas,released,1939," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:652,energy efficiency,reduc,reduction,652,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1600,energy efficiency,model,models,1600," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1773,energy efficiency,model,models,1773," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:2069,energy efficiency,model,models,2069," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:2180,energy efficiency,model,model,2180," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:2205,energy efficiency,model,model,2205," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:2359,energy efficiency,Current,Current,2359," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:24,integrability,integr,integration,24,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:187,integrability,pipelin,pipeline,187,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:795,integrability,filter,filtering,795,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:840,integrability,configur,configuration,840,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1035,integrability,configur,configuration,1035,"epTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences be",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:24,interoperability,integr,integration,24,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:24,modifiability,integr,integration,24,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:840,modifiability,configur,configuration,840,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1035,modifiability,configur,configuration,1035,"epTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences be",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:24,reliability,integr,integration,24,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1688,safety,test,test,1688," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1832,safety,test,testing,1832," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:2586,safety,test,testdata,2586," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:2595,safety,input,input,2595," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:24,security,integr,integration,24,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:840,security,configur,configuration,840,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1035,security,configur,configuration,1035,"epTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences be",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1443,security,NIST,NIST,1443,"DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/H",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1600,security,model,models,1600," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1773,security,model,models,1773," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:2069,security,model,models,2069," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:2180,security,model,model,2180," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:2205,security,model,model,2205," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:24,testability,integr,integration,24,"Questions about GLnexus integration and DeepTrio training data for config evaluation; Hello,. We have found that a known de novo variant was missed when using DeepTrio and GLnexus in our pipeline (WGS, hg38). I know that a similar issue has already been raised and appreciate the interesting discussion on this (i.e. https://github.com/google/deepvariant/issues/440), but to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1365,testability,understand,understand,1365,"t to recap for others this was the result of two contributing factors:. 1. DeepTrio being less confident in the de novo call for the proband than when DeepVariant is run in singleton mode on the proband. In our case, comparing the output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current Dee",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1688,testability,test,test,1688," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1832,testability,test,testing,1832," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:1887,testability,understand,understand,1887," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:2586,testability,test,testdata,2586," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:2263,usability,user,user-images,2263," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/475:2595,usability,input,input,2595," output VCFs from these two different runs we saw a reduction in the GQ score assigned to the variant from 56 when using DeepVariant in singleton mode, to only 10 when using DeepTrio. 2. GLnexus filtering, according to the `DeepVariantWGS` configuration we were using, removing our variant of interest in the case of DeepTrio due to the low likelihood assigned to the call. To partly overcome this we are looking to switch the GLnexus configuration to `DeepVariant_unfiltered` as mentioned in https://github.com/google/deepvariant/issues/440. However we would like to further evaluate this change on a known truth set to determine the increase in false-positive calls (similar to [1] with DV-GLN-NOMOD vs DV-GLN-OPT, but for DeepTrio instead... because from what I understand that paper evaluated DeepVariant). I have seen that all three GIAB/NIST benchmark trios have been used as training data for DeepTrio so would like to ask:. 1. Were all chromosomes from these trios used to train the DeepTrio models? I believe the DeepVariant WGS training data excluded chr20-22, and the deeptrio test data uses HG001 Chr20 [2], so I assume chr20-22 were excluded from the Deeptrio models for each of the trios too and would be suitable for testing? Or any alternative suggestions for this? 2. I understand that the DeepTrio docs aren't officially released yet, but would it be possible please to provide an overview of the workings and differences between the Child and Parent models for DeepTrio? Is there a reason why the HG001/NA12891/NA12892 trios were used as training for the child model but not the parent model? <br>. Many thanks,. Macabe. <br>. ![image](https://user-images.githubusercontent.com/37773554/128098808-740a1ab0-a6af-452f-8bed-d1f4ba0ceb80.png). Current DeepTrio training info (likely typo for Ashkenazim trio, cf. HG002/HG00**3**/HG004). [1] https://academic.oup.com/bioinformatics/article/36/24/5582/6064144 . [2] https://github.com/google/deepvariant/tree/r1.2/deeptrio/testdata/input",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/475
https://github.com/google/deepvariant/issues/476:341,availability,error,error,341,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:766,availability,Operat,Operating,766,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:1040,availability,Error,Error,1040,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:0,deployability,Build,Building,0,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:20,deployability,fail,fails,20,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:29,deployability,Stage,Stage,29,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:36,deployability,Instal,Install,36,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:185,deployability,build,building,185,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:302,deployability,Stage,Stage,302,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:309,deployability,Instal,Install,309,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:350,deployability,Modul,ModuleNotFoundError,350,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:374,deployability,modul,module,374,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:412,deployability,build,build-prereq,412,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:451,deployability,Build,Build,451,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:513,deployability,instal,installs,513,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:534,deployability,depend,dependencies,534,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:623,deployability,build,build-prereq,623,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:703,deployability,build,building,703,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:812,deployability,version,version,812,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:828,deployability,Instal,Installation,828,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:534,integrability,depend,dependencies,534,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:812,integrability,version,version,812,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:350,modifiability,Modul,ModuleNotFoundError,350,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:374,modifiability,modul,module,374,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:534,modifiability,depend,dependencies,534,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:812,modifiability,version,version,812,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:341,performance,error,error,341,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:1040,performance,Error,Error,1040,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:20,reliability,fail,fails,20,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:1072,reliability,Doe,Does,1072,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:341,safety,error,error,341,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:350,safety,Modul,ModuleNotFoundError,350,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:374,safety,modul,module,374,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:534,safety,depend,dependencies,534,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:1040,safety,Error,Error,1040,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:1093,safety,test,test,1093,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:1129,safety,test,test,1129,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:534,testability,depend,dependencies,534,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:919,testability,instrument,instrument,919,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:1046,testability,trace,trace,1046,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:1093,testability,test,test,1093,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:1129,testability,test,test,1129,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:1304,testability,context,context,1304,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:341,usability,error,error,341,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:1028,usability,Command,Command,1028,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/476:1040,usability,Error,Error,1040,"Building DockerFile fails at Stage 'Install CLIF binary''; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I am building the deep variant Dockerfile (v1.2) off the Databricks Runtime base image (Ubuntu 18.04). Run into issues at Stage 'Install CLIF binary', I get the error,. `ModuleNotFoundError: No module named 'apt_pkg'`. I see in the build-prereq.sh script this comment,. `Build clif binary from scratch. Might not be ideal because it installs a. bunch of dependencies, but this works fine when we used this in a Dockerfile. because we don't do build-prereq.sh in the final image.`. Please advise how to get around this when building your own Docker Image. Cheers,. William. **Setup**. - Operating system: Ununtu 18.04. - DeepVariant version: 1.2. - Installation method (Docker, built from source, etc.): Docker. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/476
https://github.com/google/deepvariant/issues/477:32,availability,checkpoint,checkpoint,32,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:97,availability,checkpoint,checkpoint,97,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:184,availability,checkpoint,checkpoints,184,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:11,deployability,version,version,11,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:56,deployability,version,version,56,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:26,energy efficiency,model,model,26,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:173,energy efficiency,load,load,173,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:11,integrability,version,version,11,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:56,integrability,version,version,56,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:11,modifiability,version,version,11,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:56,modifiability,version,version,56,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:173,performance,load,load,173,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:32,reliability,checkpoint,checkpoint,32,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:97,reliability,checkpoint,checkpoint,97,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:184,reliability,checkpoint,checkpoints,184,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/477:26,security,model,model,26,"Tensorflow version of the model checkpoint; What is the version of tensorflow for generating the checkpoint files (`index`, `meta`, `data`)? And is there any way that I can load these checkpoints into a standalone tensorflow program and then dump it as a `.onnx` file?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/477
https://github.com/google/deepvariant/issues/478:761,availability,Operat,Operating,761,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:199,deployability,Version,Version,199,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:211,deployability,instal,installed,211,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:260,deployability,log,login,260,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:802,deployability,releas,release,802,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:827,deployability,version,version,827,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:843,deployability,Instal,Installation,843,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:1622,deployability,automat,automatically,1622,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:363,energy efficiency,current,current,363,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:199,integrability,Version,Version,199,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:827,integrability,version,version,827,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:199,modifiability,Version,Version,199,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:827,modifiability,version,version,827,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:1191,modifiability,variab,variable,1191,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:1352,reliability,Doe,Does,1352,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:7,safety,permiss,permission,7,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:260,safety,log,login,260,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:291,safety,test,test,291,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:440,safety,permiss,permission,440,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:532,safety,permiss,permission,532,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:892,safety,test,test,892,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:1373,safety,test,test,1373,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:1454,safety,Except,Except,1454,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:0,security,Access,Access,0,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:256,security,SSH,SSH,256,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:260,security,log,login,260,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:383,security,privil,privilege,383,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:416,security,access,access,416,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:1060,security,ident,identical,1060,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:260,testability,log,login,260,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:291,testability,test,test,291,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:622,testability,understand,understanding,622,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:892,testability,test,test,892,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:1373,testability,test,test,1373,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:1442,testability,context,context,1442,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:1622,testability,automat,automatically,1622,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:40,usability,user,user,40,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:313,usability,behavi,behavior,313,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:371,usability,user,user,371,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:724,usability,behavi,behavior,724,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:906,usability,command,command,906,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:1051,usability,Command,Command,1051,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/478:1270,usability,command,command,1270,"Access permission was nobody instead of user when `docker run` without sudo; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. yes. **Describe the issue:**. Version 1.2 installed via docker on a linux server (over SSH login), running the quickstart test run:. - Expected behavior: when running without sudo, process uses current user's name privilege. - What happened: file access denied if folder permission is 744. The run successfully returns if manually setting the relevant folders to permission 777, but output (vcf files and report) files were owned by nobody/nobody. . My understanding is that nobody is a special handle meant for OS housekeeping works. Is this an expected behavior? Is it docker? **Setup**. - Operating system: CentOS 7 (`cat /etc/os-release`). - DeepVariant version: 1.2. - Installation method: docker. - Type of data: The test data and command described in [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). **Steps to reproduce:**. - Command: identical to those of [quick-start](https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md). Environment variable setup lines were directly pasted into the shell, the 'run everything' command was pasted into a file `cmd.sh` which was then was ran with `. cmd.sh`. **Does the quick start test work on your system?**. Yes. Outputs are fine. **Any additional context:**. Except having to add `mkdir` and `chmod` lines to the script, I found the run successful. I can read/write to the files owned by nobody and the ownership will transfer automatically upon writing.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/478
https://github.com/google/deepvariant/issues/479:134,integrability,batch,batch,134,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:433,integrability,batch,batch,433,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:889,integrability,batch,batch,889,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:0,performance,Performance issu,Performance issues,0,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:81,performance,performance issu,performance issue,81,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:134,performance,batch,batch,134,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:433,performance,batch,batch,433,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:889,performance,batch,batch,889,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:1544,safety,input,input,1544,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:0,usability,Perform,Performance,0,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:81,usability,perform,performance,81,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:211,usability,efficien,efficient,211,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:246,usability,document,document,246,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:285,usability,guid,guide,285,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:340,usability,support,support,340,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/479:1544,usability,input,input,1544,"Performance issues in deepvariant/data_providers.py (by P3); Hello! I've found a performance issue in deepvariant/data_providers.py: `batch()` should be called before `map()`, which could make your program more efficient. Here is [the tensorflow document](https://tensorflow.google.cn/guide/data_performance?hl=zh_cn#vectorized_mapping) to support it. Detailed description is listed below:. - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size, drop_remainder=True)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L316) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L314). - deepvariant/data_providers.py: `dataset.batch(batch_size=batch_size)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L364) should be called before `dataset.map(map_func=self.parse_tfexample, num_parallel_calls=tf.data.AUTOTUNE)`[(here)](https://github.com/google/deepvariant/blob/1c1d220f36ac8b9018872adc3d9bcde8ae43d84a/deepvariant/data_providers.py#L362). Besides, you need to check the function called in `map()`(e.g., `self.parse_tfexample` called in `dataset.map()`) whether to be affected or not to make the changed code work properly. For example, if `self.parse_tfexample` needs data with shape (x, y, z) as its input before fix, it would require data with shape (batch_size, x, y, z). Looking forward to your reply. Btw, I am very glad to create a PR to fix it if you are too busy.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/479
https://github.com/google/deepvariant/issues/480:210,availability,Operat,Operating,210,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:460,availability,Error,Error,460,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:243,deployability,version,version,243,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:255,deployability,Instal,Installation,255,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:243,integrability,version,version,243,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:243,modifiability,version,version,243,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:460,performance,Error,Error,460,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:492,reliability,Doe,Does,492,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:12,safety,detect,detection,12,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:460,safety,Error,Error,460,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:513,safety,test,test,513,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:549,safety,test,test,549,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:752,safety,detect,detect,752,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:12,security,detect,detection,12,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:752,security,detect,detect,752,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:339,testability,instrument,instrument,339,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:466,testability,trace,trace,466,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:513,testability,test,test,513,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:549,testability,test,test,549,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:724,testability,context,context,724,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:143,usability,clear,clear,143,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:448,usability,Command,Command,448,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/480:460,usability,Error,Error,460,"multiallele detection; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. **Describe the issue:**. (A clear and concise description of what the issue is.). **Setup**. - Operating system:. - DeepVariant version:. - Installation method (Docker, built from source, etc.):. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?). **Steps to reproduce:**. - Command:. - Error trace: (if applicable). **Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? **Any additional context:**. can deepvariant detect multiallelic positions, for example, Ref is A, and Alt is C, G. And the GT is denoted as 1/2.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/480
https://github.com/google/deepvariant/issues/481:122,energy efficiency,Current,Currently,122,"Feature request: bam csi index support; I would like to use DeppVariant on organisms with chromosomes larger than 512Mbp. Currently, DeepVariant only supports `.bai` bam indexes.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/481
https://github.com/google/deepvariant/issues/481:31,usability,support,support,31,"Feature request: bam csi index support; I would like to use DeppVariant on organisms with chromosomes larger than 512Mbp. Currently, DeepVariant only supports `.bai` bam indexes.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/481
https://github.com/google/deepvariant/issues/481:150,usability,support,supports,150,"Feature request: bam csi index support; I would like to use DeppVariant on organisms with chromosomes larger than 512Mbp. Currently, DeepVariant only supports `.bai` bam indexes.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/481
https://github.com/google/deepvariant/issues/482:8,availability,error,error,8,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:41,availability,ERROR,ERROR,41,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:54,availability,error,error,54,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:107,availability,error,error,107,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:140,availability,ERROR,ERROR,140,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:153,availability,error,error,153,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:72,deployability,contain,container,72,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:171,deployability,contain,container,171,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:8,performance,error,error,8,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:41,performance,ERROR,ERROR,41,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:54,performance,error,error,54,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:107,performance,error,error,107,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:140,performance,ERROR,ERROR,140,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:153,performance,error,error,153,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:8,safety,error,error,8,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:41,safety,ERROR,ERROR,41,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:54,safety,error,error,54,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:107,safety,error,error,107,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:140,safety,ERROR,ERROR,140,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:153,safety,error,error,153,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:230,safety,input,input,230,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:239,safety,input,input,239,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:380,safety,input,input,380,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:403,safety,input,input,403,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:8,usability,error,error,8,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:41,usability,ERROR,ERROR,41,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:54,usability,error,error,54,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:107,usability,error,error,107,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:140,usability,ERROR,ERROR,140,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:153,usability,error,error,153,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:198,usability,Command,Command,198,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:230,usability,input,input,230,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:239,usability,input,input,239,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:380,usability,input,input,380,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/482:403,usability,input,input,403,"getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF; Getting error while running deepvariant: ERROR[12893] error waiting for container: unexpected EOF. Command: . docker run -v ""/home/input"":""/input"" -v ""/home/output/"":""/output"" gcr.io/deepvariant-docker/deepvariant:1.2.0 /opt/deepvariant/bin/run_deepvariant --model_type=WGS --ref=/input/hg19.fa --reads=/input/sorted_printReads_bwa.bam --output_vcf=/output/ERR194147_output.vcf.gz --num_shards=2 --intermediate_results_dir=/output/ --output_gvcf=/output/ERR194147_output.g.vcf.gz",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/482
https://github.com/google/deepvariant/issues/483:245,availability,error,error,245,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1546,availability,error,error,1546," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:2053,availability,error,error,2053," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:18,deployability,fail,failed,18,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:272,deployability,fail,failed,272,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:638,deployability,instal,installation,638,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1564,deployability,fail,fails,1564," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:2059,integrability,messag,message,2059," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:2059,interoperability,messag,message,2059," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:0,performance,Parallel,Parallel,0,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:245,performance,error,error,245,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:253,performance,parallel,parallel,253,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1546,performance,error,error,1546," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:2053,performance,error,error,2053," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:18,reliability,fail,failed,18,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:272,reliability,fail,failed,272,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1564,reliability,fail,fails,1564," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:2309,reliability,Doe,Does,2309," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:245,safety,error,error,245,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:390,safety,input,input,390,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:540,safety,input,input,540,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:707,safety,input,input,707,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:716,safety,input,input,716,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:964,safety,input,input,964,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1015,safety,input,input,1015,"failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3c",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1546,safety,error,error,1546," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1624,safety,input,input,1624," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1633,safety,input,input,1633," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1863,safety,input,input,1863," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:2002,safety,input,input,2002," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:2053,safety,error,error,2053," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:2330,safety,test,test,2330," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:2366,safety,test,test,2366," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1523,testability,understand,understand,1523," --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:2330,testability,test,test,2330," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:2366,testability,test,test,2366," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:173,usability,person,personal,173,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:245,usability,error,error,245,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:390,usability,input,input,390,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:540,usability,input,input,540,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:605,usability,command,command,605,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:707,usability,input,input,707,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:716,usability,input,input,716,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:964,usability,input,input,964,"Parallel this job failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1015,usability,input,input,1015,"failed; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: yes. **Describe the issue:**. I have tried to run in my personal computer the WES deepvariant case. However I get the following error:. parallel: This job failed:. /opt/deepvariant/bin/make_examples --mode calling --ref /reference/GRCh38_no_alt_analysis_set.fasta --reads /input/wes_deepvarfast_38.sorted.bam --examples /output/inter_res/make_examples.tfrecord@16.gz --gvcf /output/inter_res/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3c",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1504,usability,command,command,1504,"/gvcf.tfrecord@16.gz --regions /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using t",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1546,usability,error,error,1546," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1624,usability,input,input,1624," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1633,usability,input,input,1633," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:1863,usability,input,input,1863," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:2002,usability,input,input,2002," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/483:2053,usability,error,error,2053," /input/wes2_38_3col.sorted.bed --task 2. I have ran the following command with a successful docker installation:. 	BIN_VERSION=""1.2.0"". 	sudo docker run \. 	-v ""${PWD}/input"":""/input"" \. 	-v ""${PWD}/output"":""/output"" \. 	-v ""${PWD}/reference"":""/reference"" \. 	google/deepvariant:""${BIN_VERSION}"" \. 	/opt/deepvariant/bin/run_deepvariant \. 	--model_type WES \. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta \. 	--reads /input/wes_deepvarfast_38.sorted.bam \. 	--regions /input/wes2_38_3col.sorted.bed \. 	--output_vcf /output/output_38.vcf.gz \. 	--output_gvcf /output/output_38.g.vcf.gz \. 	--num_shards=8 \. 	--intermediate_results_dir /output/intermediate_results_dir. with bam and bed files I've created of my own sample (paired end sequencing result of a human genome). The alignment of the bam file was successful (used bwa and samtools) and created the bed file out of the bam file by bedtools. . I've further checked FAQ and tried to run the following command, to better understand what is the error or where it fails:. 	BIN_VERSION=""1.2.0"". 	sudo docker run. 	-v ""${PWD}/input"":""/input"". 	-v ""${PWD}/output"":""/output"". 	-v ""${PWD}/reference"":""/reference"". 	google/deepvariant:""${BIN_VERSION}"". 	/opt/deepvariant/bin/make_examples. 	--mode calling. 	--ref /reference/GRCh38_no_alt_analysis_set.fasta. 	--reads /input/wes_deepvarfast_38.sorted.bam. 	--examples ""/output/make_examples.tfrecord@1.gz"". 	--gvcf ""/output/gvcf.tfrecord@1.gz"". 	--regions ""/input/wes2_38_3col.sorted.bed"" \. However I get no error message, some lines of this kind are printed: ""Adding interval chr1:1523790-1523940 to intervaltree"" and than it finishes without creating any files. Any Idea of what happens and how can I make deepvariant work on my sample and create a vcf file? (**Does the quick start test work on your system?**. Please test with https://github.com/google/deepvariant/blob/r0.10/docs/deepvariant-quick-start.md. Is there any way to reproduce the issue by using the quick start? Yes it works).",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/483
https://github.com/google/deepvariant/issues/484:181,deployability,pipelin,pipeline,181,"Emit all sites in final VCF; Hi! Is there a way to emit all sites in given regions (using a bed file) in the final VCF even if they are the same as reference? I want to use it in a pipeline in which any position not in the input VCF is assumed to be a ""no call"". Missing positions will not be interpreted as reference.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/484
https://github.com/google/deepvariant/issues/484:181,integrability,pipelin,pipeline,181,"Emit all sites in final VCF; Hi! Is there a way to emit all sites in given regions (using a bed file) in the final VCF even if they are the same as reference? I want to use it in a pipeline in which any position not in the input VCF is assumed to be a ""no call"". Missing positions will not be interpreted as reference.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/484
https://github.com/google/deepvariant/issues/484:223,safety,input,input,223,"Emit all sites in final VCF; Hi! Is there a way to emit all sites in given regions (using a bed file) in the final VCF even if they are the same as reference? I want to use it in a pipeline in which any position not in the input VCF is assumed to be a ""no call"". Missing positions will not be interpreted as reference.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/484
https://github.com/google/deepvariant/issues/484:223,usability,input,input,223,"Emit all sites in final VCF; Hi! Is there a way to emit all sites in given regions (using a bed file) in the final VCF even if they are the same as reference? I want to use it in a pipeline in which any position not in the input VCF is assumed to be a ""no call"". Missing positions will not be interpreted as reference.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/484
https://github.com/google/deepvariant/issues/485:791,availability,Operat,Operating,791,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:1094,availability,Error,Error,1094,"t/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, i",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:21,deployability,fail,failed,21,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:421,deployability,log,log,421,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:647,deployability,log,log,647,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:694,deployability,log,log,694,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:772,deployability,log,log,772,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:838,deployability,version,version,838,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:860,deployability,Instal,Installation,860,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:1836,deployability,modul,module,1836,"ersion: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main. header=header). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 595, in write_variants_to_vcf. for variant in variant_generator:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 91, in maybe_resolve_conflicting_variants. for overlapping_candidates in _group_overlapping_variants(sorted_variants):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 110, in _group_overlapping_variants. for variant in sorted_variants:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 631, in _transform_call_variants_output_to",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:838,integrability,version,version,838,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:1922,interoperability,platform,platform,1922,"m source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main. header=header). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 595, in write_variants_to_vcf. for variant in variant_generator:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 91, in maybe_resolve_conflicting_variants. for overlapping_candidates in _group_overlapping_variants(sorted_variants):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 110, in _group_overlapping_variants. for variant in sorted_variants:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 631, in _transform_call_variants_output_to_variants. outputs, multi_allelic_qual_filter). File ""/tmp/Bazel.runfiles_4jh3iyl1/runf",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:222,modifiability,exten,extending,222,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:838,modifiability,version,version,838,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:1836,modifiability,modul,module,1836,"ersion: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main. header=header). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 595, in write_variants_to_vcf. for variant in variant_generator:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 91, in maybe_resolve_conflicting_variants. for overlapping_candidates in _group_overlapping_variants(sorted_variants):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 110, in _group_overlapping_variants. for variant in sorted_variants:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 631, in _transform_call_variants_output_to",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:1895,modifiability,pac,packages,1895," source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main. header=header). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 595, in write_variants_to_vcf. for variant in variant_generator:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 91, in maybe_resolve_conflicting_variants. for overlapping_candidates in _group_overlapping_variants(sorted_variants):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 110, in _group_overlapping_variants. for variant in sorted_variants:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 631, in _transform_call_variants_output_to_variants. outputs, multi_allelic_qual_filter). File ""/tmp/B",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:1094,performance,Error,Error,1094,"t/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, i",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:21,reliability,fail,failed,21,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:3161,reliability,Doe,Does,3161,"nd from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main. header=header). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 595, in write_variants_to_vcf. for variant in variant_generator:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 91, in maybe_resolve_conflicting_variants. for overlapping_candidates in _group_overlapping_variants(sorted_variants):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 110, in _group_overlapping_variants. for variant in sorted_variants:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 631, in _transform_call_variants_output_to_variants. outputs, multi_allelic_qual_filter). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 559, in merge_predictions. raise ValueError('`call_variants_outputs` did not pass sanity check.'). ValueError: `call_variants_outputs` did not pass sanity check. **Does the quick start test work on your system?**. YES.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:421,safety,log,log,421,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:647,safety,log,log,647,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:694,safety,log,log,694,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:772,safety,log,log,772,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:1094,safety,Error,Error,1094,"t/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, i",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:1836,safety,modul,module,1836,"ersion: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main. header=header). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 595, in write_variants_to_vcf. for variant in variant_generator:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 91, in maybe_resolve_conflicting_variants. for overlapping_candidates in _group_overlapping_variants(sorted_variants):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 110, in _group_overlapping_variants. for variant in sorted_variants:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 631, in _transform_call_variants_output_to",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:3079,safety,sanit,sanity,3079,"nd from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main. header=header). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 595, in write_variants_to_vcf. for variant in variant_generator:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 91, in maybe_resolve_conflicting_variants. for overlapping_candidates in _group_overlapping_variants(sorted_variants):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 110, in _group_overlapping_variants. for variant in sorted_variants:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 631, in _transform_call_variants_output_to_variants. outputs, multi_allelic_qual_filter). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 559, in merge_predictions. raise ValueError('`call_variants_outputs` did not pass sanity check.'). ValueError: `call_variants_outputs` did not pass sanity check. **Does the quick start test work on your system?**. YES.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:3145,safety,sanit,sanity,3145,"nd from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main. header=header). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 595, in write_variants_to_vcf. for variant in variant_generator:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 91, in maybe_resolve_conflicting_variants. for overlapping_candidates in _group_overlapping_variants(sorted_variants):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 110, in _group_overlapping_variants. for variant in sorted_variants:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 631, in _transform_call_variants_output_to_variants. outputs, multi_allelic_qual_filter). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 559, in merge_predictions. raise ValueError('`call_variants_outputs` did not pass sanity check.'). ValueError: `call_variants_outputs` did not pass sanity check. **Does the quick start test work on your system?**. YES.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:3182,safety,test,test,3182,"nd from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main. header=header). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 595, in write_variants_to_vcf. for variant in variant_generator:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 91, in maybe_resolve_conflicting_variants. for overlapping_candidates in _group_overlapping_variants(sorted_variants):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 110, in _group_overlapping_variants. for variant in sorted_variants:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 631, in _transform_call_variants_output_to_variants. outputs, multi_allelic_qual_filter). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 559, in merge_predictions. raise ValueError('`call_variants_outputs` did not pass sanity check.'). ValueError: `call_variants_outputs` did not pass sanity check. **Does the quick start test work on your system?**. YES.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:421,security,log,log,421,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:647,security,log,log,647,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:694,security,log,log,694,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:772,security,log,log,772,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:3079,security,sanit,sanity,3079,"nd from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main. header=header). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 595, in write_variants_to_vcf. for variant in variant_generator:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 91, in maybe_resolve_conflicting_variants. for overlapping_candidates in _group_overlapping_variants(sorted_variants):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 110, in _group_overlapping_variants. for variant in sorted_variants:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 631, in _transform_call_variants_output_to_variants. outputs, multi_allelic_qual_filter). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 559, in merge_predictions. raise ValueError('`call_variants_outputs` did not pass sanity check.'). ValueError: `call_variants_outputs` did not pass sanity check. **Does the quick start test work on your system?**. YES.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:3145,security,sanit,sanity,3145,"nd from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main. header=header). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 595, in write_variants_to_vcf. for variant in variant_generator:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 91, in maybe_resolve_conflicting_variants. for overlapping_candidates in _group_overlapping_variants(sorted_variants):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 110, in _group_overlapping_variants. for variant in sorted_variants:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 631, in _transform_call_variants_output_to_variants. outputs, multi_allelic_qual_filter). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 559, in merge_predictions. raise ValueError('`call_variants_outputs` did not pass sanity check.'). ValueError: `call_variants_outputs` did not pass sanity check. **Does the quick start test work on your system?**. YES.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:421,testability,log,log,421,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:647,testability,log,log,647,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:694,testability,log,log,694,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:772,testability,log,log,772,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:966,testability,instrument,instrument,966,"postprocess variants failed !!!; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.ru",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:1100,testability,trace,trace,1100,"/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:1681,testability,Trace,Traceback,1681,"ariants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main. header=header). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 595, in write_variants_to_vcf. for variant in variant_generator:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 91, in maybe_resolve_conflicting_variants. for overlapping_candidates in _group_overlapping_variants(sorted_variants):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 110, in _group_overlapping_variants. for variant in sorted_variants:.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:3182,testability,test,test,3182,"nd from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, in main. header=header). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 595, in write_variants_to_vcf. for variant in variant_generator:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 91, in maybe_resolve_conflicting_variants. for overlapping_candidates in _group_overlapping_variants(sorted_variants):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/haplotypes.py"", line 110, in _group_overlapping_variants. for variant in sorted_variants:. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 631, in _transform_call_variants_output_to_variants. outputs, multi_allelic_qual_filter). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 559, in merge_predictions. raise ValueError('`call_variants_outputs` did not pass sanity check.'). ValueError: `call_variants_outputs` did not pass sanity check. **Does the quick start test work on your system?**. YES.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:1082,usability,Command,Command,1082,"/deepvariant/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/485:1094,usability,Error,Error,1094,"t/blob/r1.2/docs/FAQ.md**: **YES**. **Describe the issue:**. Manually selected regions (a single region is formed by a locus extending 500 bp to both sides) were used in my project to make examples, and it was also succeed in calling variants. However, when I running postprocess_variants, something went wrong. I check the log, and I guess it was related to the wrong ""call_variant_outputs"". So I printed one ""call_variant_outputs"" out of the whole tfrecord, and found out there are several repeated variant in one call. Where did I go wrong? **The log file is attached.**. [postprocess_variants.log](https://github.com/google/deepvariant/files/7149887/postprocess_variants.log). **Setup**. - Operating system: ubuntu **16**. - DeepVariant version: **0.7.0**. - Installation method (Docker, built from source, etc.): **built from source**. - Type of data: (sequencing instrument, reference genome, anything special that is unlike the case studies?) **NO**. **Steps to reproduce:**. - Command:. - Error trace: (if applicable). > W0912 23:51:01.891268 140429229119232 postprocess_variants.py:331] Alt allele indices found from call_variants_outputs for variant reference_bases: ""C"". alternate_bases: ""A"". calls {. info {. key: ""AD"". value {. values {. int_value: 17. }. values {. int_value: 4. }. }. }. info {. key: ""DP"". value {. values {. int_value: 21. }. }. }. info {. key: ""VAF"". value {. values {. number_value: 0.190476190476. }. }. }. genotype: -1. genotype: -1. call_set_name: ""XY406-1"". }. end: 10147. reference_name: ""1"". start: 10146. is [[0], [0], [0]], which is invalid. Traceback (most recent call last):. File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 874, in <module>. tf.app.run(). File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/platform/app.py"", line 125, in run. _sys.exit(main(argv)). File ""/tmp/Bazel.runfiles_4jh3iyl1/runfiles/com_google_deepvariant/deepvariant/postprocess_variants.py"", line 851, i",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/485
https://github.com/google/deepvariant/issues/486:238,availability,down,downstream,238,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:345,availability,fault,faulty,345,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:537,deployability,contain,containing,537,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:1170,deployability,manag,manage,1170,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:1373,deployability,releas,release,1373,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:1462,deployability,releas,release,1462,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:345,energy efficiency,fault,faulty,345,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:1029,energy efficiency,current,current,1029,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:1170,energy efficiency,manag,manage,1170,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:814,integrability,sub,substitution,814,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:1265,integrability,topic,topic,1265,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:1660,modifiability,paramet,parameter,1660,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:345,performance,fault,faulty,345,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:345,reliability,fault,faulty,345,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:345,safety,fault,faulty,345,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:1170,safety,manag,manage,1170,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:1498,safety,test,tested,1498,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:352,security,assess,assessments,352,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:848,security,ident,identified,848,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:1329,security,ident,identified,1329,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:928,testability,plan,plans,928,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:1131,testability,understand,understand,1131,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:1498,testability,test,tested,1498,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:0,usability,Support,Support,0,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:877,usability,stop,stopgain,877,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/486:937,usability,support,support,937,"Support for Multi-nucleotide Variant (MNV) Calling; Hello,. We noticed that adjacent variants of the same haplotype (i.e. MNVs) are being called as separate variants in the DeepVariant and DeepTrio outputs with VCF and gVCF files. During downstream processing these MNVs are then treated as two individual SNVs at two different loci, leading to faulty assessments. . For example two variants for a site of interest (reference TCG -> Serine) were separated between two lines in the DeepVariant/DeepTrio output VCF and then categorised as containing a nonsynonymous (T**G**G -> Tryptophan) and synonymous mutation (TC**A** -> Serine). Whereas the correct and desired way to handle this, at least for us but I imagine others too, would seem to be to recognise both mutations on a single line in the VCF as a combined substitution, which could then be identified as resulting in a stopgain (T**GA** -> Nonsense mutation). Are there plans to support these MNV calls in the DeepVariant/DeepTrio outputs? Or alternatively are there any current post-processing approaches that you may be using and can recommend to handle these cases? Can understand these may be challenging to manage in some aspects but could be important to flag given some recent literature around this topic. For reference this was using hg38 with WGS. We initially identified this using the original DeepTrio release (docker image deeptrio:1.0.1rc), but then also using the most recent DeepVariant release (via docker, v1.2). We also tested this to see whether the change to the unfiltered GLnexus config could be contributing to this for processing of DeepTrio gVCFs due to the joint genotyping parameter, but reverting back to the WGS config did not result in a merged MNV in this instance. . Many thanks,. Macabe.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/486
https://github.com/google/deepvariant/issues/487:635,availability,down,downstream,635,"output left aligned variant representation for indels; Hello,. I want to suggest here to left-aligne indel in the DeepVariant output VCF / gVCF to avoid the issue described below. I'm running DeepVariant v1.1.0 on a set of samples sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:741,availability,down,downstream,741,"output left aligned variant representation for indels; Hello,. I want to suggest here to left-aligne indel in the DeepVariant output VCF / gVCF to avoid the issue described below. I'm running DeepVariant v1.1.0 on a set of samples sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:1786,availability,down,downstream,1786," sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my dataset), but it affects lot of the multi-allelic ones. If indels were leftaligned before output, this would solve the issue I think and likely many multi-allelic will become single-allele. Any plan for this in the future? Thanks!",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:688,deployability,contain,contain,688,"output left aligned variant representation for indels; Hello,. I want to suggest here to left-aligne indel in the DeepVariant output VCF / gVCF to avoid the issue described below. I'm running DeepVariant v1.1.0 on a set of samples sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:899,deployability,version,versions,899,"output left aligned variant representation for indels; Hello,. I want to suggest here to left-aligne indel in the DeepVariant output VCF / gVCF to avoid the issue described below. I'm running DeepVariant v1.1.0 on a set of samples sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:1902,deployability,artifact,artifacts,1902," sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my dataset), but it affects lot of the multi-allelic ones. If indels were leftaligned before output, this would solve the issue I think and likely many multi-allelic will become single-allele. Any plan for this in the future? Thanks!",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:899,integrability,version,versions,899,"output left aligned variant representation for indels; Hello,. I want to suggest here to left-aligne indel in the DeepVariant output VCF / gVCF to avoid the issue described below. I'm running DeepVariant v1.1.0 on a set of samples sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:899,modifiability,version,versions,899,"output left aligned variant representation for indels; Hello,. I want to suggest here to left-aligne indel in the DeepVariant output VCF / gVCF to avoid the issue described below. I'm running DeepVariant v1.1.0 on a set of samples sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:407,reliability,pra,practices,407,"output left aligned variant representation for indels; Hello,. I want to suggest here to left-aligne indel in the DeepVariant output VCF / gVCF to avoid the issue described below. I'm running DeepVariant v1.1.0 on a set of samples sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:1925,reliability,doe,does,1925," sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my dataset), but it affects lot of the multi-allelic ones. If indels were leftaligned before output, this would solve the issue I think and likely many multi-allelic will become single-allele. Any plan for this in the future? Thanks!",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:147,safety,avoid,avoid,147,"output left aligned variant representation for indels; Hello,. I want to suggest here to left-aligne indel in the DeepVariant output VCF / gVCF to avoid the issue described below. I'm running DeepVariant v1.1.0 on a set of samples sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:1510,security,ident,identical,1510," sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my dataset), but it affects lot of the multi-allelic ones. If indels were leftaligned before output, this would solve the issue I think and likely many multi-allelic will become single-allele. Any plan for this in the future? Thanks!",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:2194,testability,plan,plan,2194," sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my dataset), but it affects lot of the multi-allelic ones. If indels were leftaligned before output, this would solve the issue I think and likely many multi-allelic will become single-allele. Any plan for this in the future? Thanks!",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:282,usability,workflow,workflow,282,"output left aligned variant representation for indels; Hello,. I want to suggest here to left-aligne indel in the DeepVariant output VCF / gVCF to avoid the issue described below. I'm running DeepVariant v1.1.0 on a set of samples sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:1324,usability,user,user-images,1324," sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my dataset), but it affects lot of the multi-allelic ones. If indels were leftaligned before output, this would solve the issue I think and likely many multi-allelic will become single-allele. Any plan for this in the future? Thanks!",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/487:1560,usability,behavi,behavior,1560," sequenced with Illumina 2x150 paired-end reads. My workflow right now includes calling variant using DV and then merge individual gVCFs using GLnexus as described in your best-practices for multi-sample VCF. Inspecting the resulting cohort VCF I've noticed that the representation of indels in repetitive / homopolymer regions is not normalized to the leftmost position and this generates odd situations downstream. Essentially, the multi-sample VCF, would contain 2 different variants that, when left-aligned downstream using for example bcftools norm, become the same locus generating duplicated vars with different genotypes. I didn't notice this issue with recent versions of GATK so I suppose they left-align indels in the output VCF. See the example below:. These are 2 indel variants in my multi-sample VCF:. ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259623 chr3_105259623_A_ATA A ATA. ```. As you can see in the screenshot, the actual locus is a repetitive region with TA repeats, so the exact location of a TA insertion in the stretch can not be known. ![image](https://user-images.githubusercontent.com/51458073/134807481-94191333-32bc-4249-ac11-b265711e435e.png). When I apply bcftools norm, it changes the second one to the leftmost position, making it identical to the first one (which is the expected behavior). So in the end I have 2 duplicated vars in my VCF, each with different genotypes: . ```. chr3 105259621 chr3_105259621_T_TTA T TTA. chr3 105259621 chr3_105259623_A_ATA T TTA. ```. This situation creates troubles for downstream analysis and segregation, even if probably most of these variants can be discarded since they are likely artifacts. The problem does not affect many single allele variants (just 51 out of 24054518 in my dataset), but it affects lot of the multi-allelic ones. If indels were leftaligned before output, this would solve the issue I think and likely many multi-allelic will become single-allele. Any plan for this in the future? Thanks!",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/487
https://github.com/google/deepvariant/issues/488:942,availability,error,error,942,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1373,availability,operat,operations,1373,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1427,availability,operat,operations,1427,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:473,deployability,log,log,473,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:878,deployability,version,version,878,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:2050,deployability,version,version,2050,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:2217,deployability,version,version,2217,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:208,energy efficiency,model,model-case-study,208,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:832,energy efficiency,model,model,832,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1105,energy efficiency,model,model,1105,"DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatsh",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1186,energy efficiency,core,core,1186,"/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ig",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1252,energy efficiency,optim,optimized,1252,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1332,energy efficiency,CPU,CPU,1332,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1536,energy efficiency,core,core,1536,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1739,energy efficiency,core,core,1739,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1785,energy efficiency,CPU,CPU,1785,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1789,energy efficiency,Frequenc,Frequency,1789,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1860,energy efficiency,model,model,1860,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1936,energy efficiency,estimat,estimator,1936,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1981,energy efficiency,model,model,1981,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:511,integrability,messag,message,511,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:878,integrability,version,version,878,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:2050,integrability,version,version,2050,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:2149,integrability,messag,message,2149,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:2217,integrability,version,version,2217,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:42,interoperability,standard,standard,42,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:75,interoperability,standard,standard,75,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:511,interoperability,messag,message,511,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:747,interoperability,standard,standard,747,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:780,interoperability,standard,standard,780,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:981,interoperability,mismatch,mismatched,981,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1191,interoperability,platform,platform,1191,"riant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1744,interoperability,platform,platform,1744,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:2149,interoperability,messag,message,2149,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:201,modifiability,pac,pacbio-model-case-study,201,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:863,modifiability,paramet,parameters,863,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:878,modifiability,version,version,878,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1134,modifiability,paramet,parameter,1134,"ps://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does th",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:2050,modifiability,version,version,2050,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:2217,modifiability,version,version,2217,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:942,performance,error,error,942,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1252,performance,optimiz,optimized,1252,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1286,performance,Network,Network,1286,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1332,performance,CPU,CPU,1332,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1352,performance,perform,performance-critical,1352,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1636,performance,Tune,Tune,1636,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1685,performance,perform,performance,1685,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1785,performance,CPU,CPU,1785,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:2132,reliability,Doe,Does,2132,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:18,safety,input,input,18,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:390,safety,input,input,390,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:473,safety,log,log,473,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:615,safety,input,input,615,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:723,safety,input,input,723,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:942,safety,error,error,942,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:208,security,model,model-case-study,208,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:473,security,log,log,473,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:832,security,model,model,832,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1105,security,model,model,1105,"DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatsh",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1286,security,Network,Network,1286,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1860,security,model,model,1860,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1981,security,model,model,1981,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:473,testability,log,log,473,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:18,usability,input,input,18,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:390,usability,input,input,390,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:615,usability,input,input,615,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:723,usability,input,input,723,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:942,usability,error,error,942,"The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). ; . I ran DeepVariant twice based on ""https://github.com/google/deepvariant/blob/r1.1/docs/deepvariant-pacbio-model-case-study.md"". . deepvariant1- whatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /T",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1352,usability,perform,performance-critical,1352,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/488:1685,usability,perform,performance,1685,"hatshap phase- whatshap haplotag-deepvariant2. Now I also want to use DeepTrio.I used the haplotagged.bam(generated from whatshap haplotag) as input bam.When I ran DeepTrio,the output.vcf.gz was generated normally.However,the log file showed the following warning message:. ------------------------. I0926 14:26:35.659228 47028170803008 call_variants.py:336] Shape of input examples: [140, 221, 9]. W0926 14:26:35.665323 47028170803008 call_variants.py:353] The height of the input image is not 100 (standard in DeepVariant) or 300 (standard in DeepTrio). Please double-check that the model is trained with the same parameters and version of DeepVariant as you generated the examples with. An **error** will not appear when these are mismatched because of how InceptionV3 works. Note that if you set --pileup_image_height in DeepVariant, then you must use a model trained with that same parameter. 2021-09-26 14:26:35.668419: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations: AVX2 AVX512F FMA. To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags. 2021-09-26 14:26:35.669638: I tensorflow/core/common_runtime/process_util.cc:146] Creating new thread pool with default inter op setting: 2. Tune using inter_op_parallelism_threads for best performance. 2021-09-26 14:26:35.671197: I tensorflow/core/platform/profile_utils/cpu_utils.cc:114] CPU Frequency: 2600000000 Hz. WARNING:tensorflow:Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. W0926 14:26:35.690017 47028170803008 estimator.py:1846] Using temporary folder as model directory: /TMP_DIR/tmpbptqemkc. ------------------------. The version I used:. DeepVariant 1.1.0. glnexus v1.3.1. whatshap 1.0. DeepTrio 1.2.0. Does the warning message affect the results or can be ignored? Should I use a higher version of DeepVariant(1.2.0)?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/488
https://github.com/google/deepvariant/issues/489:60,availability,error,error,60,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:340,availability,state,state,340,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2361,availability,error,error,2361,"10132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[================================================================================================================================================",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2434,availability,error,error,2434,"s: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5958,availability,state,state,5958,.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but i,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6163,availability,state,state,6163,rity/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++202,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7438,availability,error,error,7438,"ormation may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llv",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9268,availability,avail,available,9268,"Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9791,availability,avail,available,9791,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9,deployability,instal,installation,9,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:111,deployability,build,build,111,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:161,deployability,instal,install,161,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:304,deployability,Build,Building,304,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:313,deployability,depend,dependency,313,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:394,deployability,version,version,394,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:455,deployability,instal,installed,455,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:758,deployability,depend,dependencies,758,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:784,deployability,Depend,Depends,784,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:878,deployability,instal,installed,878,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:889,deployability,Depend,Depends,889,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:931,deployability,instal,installable,931,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:944,deployability,Depend,Depends,944,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1006,deployability,instal,installed,1006,"stallation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1017,deployability,Depend,Depends,1017," not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1142,deployability,instal,installed,1142,[91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installe,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1153,deployability,Depend,Depends,1153,get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1276,deployability,instal,installed,1276,ading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [9,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1287,deployability,Depend,Depends,1287,age lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unabl,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1402,deployability,instal,installed,1402,"2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fres",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1431,deployability,Depend,Depends,1431,"ckages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same e",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1546,deployability,instal,installed,1546,"e unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb h",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1557,deployability,Depend,Depends,1557,". distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1682,deployability,instal,installed,1682," may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1705,deployability,Depend,Depends,1705,"he situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1747,deployability,instal,installable,1747,"nmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1760,deployability,Depend,Depends,1760,"encies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1822,deployability,instal,installed,1822,"1010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1847,deployability,Depend,Depends,1847," but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(ls",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1889,deployability,instal,installable,1889,"s: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1902,deployability,Depend,Depends,1902,"1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https:",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2012,deployability,instal,installed,2012,"Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::56",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2023,deployability,Depend,Depends,2023,"ibclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connect",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2139,deployability,instal,installed,2139,"stalled. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2150,deployability,Depend,Depends,2150,"epends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 31",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2267,deployability,instal,installed,2267," be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2381,deployability,instal,install,2381," not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[=====================================================================================================================================================================",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2595,deployability,toolchain,toolchain,2595,"~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2638,deployability,updat,update,2638,"11010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRel",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2652,deployability,instal,install,2652,"but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2837,deployability,toolchain,toolchain,2837,"ev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/ope",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:3779,deployability,updat,updates,3779,"ory ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4347,deployability,updat,updates,4347,=================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main a,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4439,deployability,updat,updates,4439,21-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. r,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4530,deployability,updat,updates,4530,ad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubunt,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4620,deployability,updat,updates,4620,untu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5245,deployability,toolchain,toolchain-bionic-,5245,u bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you hav,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5325,deployability,toolchain,toolchain-bionic-,5325,buntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribut,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5489,deployability,updat,update,5489,tp://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The fo,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5670,deployability,updat,updates,5670,rchive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5862,deployability,toolchain,toolchain-bionic-,5862,m/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libcl,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5924,deployability,Build,Building,5924,B]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bff,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5933,deployability,depend,dependency,5933, http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6004,deployability,upgrad,upgraded,6004,ckages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-1,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6030,deployability,upgrad,upgradable,6030,tp://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6080,deployability,instal,install,6080,ain amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~202110101321,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6129,deployability,Build,Building,6129,ity.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depend,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6138,deployability,depend,dependency,6138,.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclan,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6217,deployability,instal,installed,6217,t.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6520,deployability,depend,dependencies,6520,"om/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6546,deployability,Depend,Depends,6546,"se. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6640,deployability,instal,installed,6640,"ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning:",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6651,deployability,Depend,Depends,6651,"/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6693,deployability,instal,installable,6693,"://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6706,deployability,Depend,Depends,6706,"ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6773,deployability,instal,installed,6773,"ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.l",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6784,deployability,Depend,Depends,6784,"/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|1",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6846,deployability,instal,installed,6846,"ionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting re",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6857,deployability,Depend,Depends,6857,"-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6982,deployability,instal,installed,6982," packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 M",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6993,deployability,Depend,Depends,6993,"can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - wri",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7116,deployability,instal,installed,7116,". Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7127,deployability,Depend,Depends,7127,"ilding dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-tool",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7242,deployability,instal,installed,7242,"you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7303,deployability,instal,installed,7303,"ng the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7407,deployability,build,build,7407," of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8127,deployability,toolchain,toolchain-focal-,8127," libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8254,deployability,updat,updates,8254,"mends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. #",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8443,deployability,toolchain,toolchain-focal-,8443,"sh. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolc",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8520,deployability,toolchain,toolchain-focal-,8520,"--2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bioni",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8639,deployability,updat,update,8639,"ng: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8664,deployability,instal,install,8664,"not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8934,deployability,build,build-prereq,8934," ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://a",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9123,deployability,version,version,9123,"toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-sr",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9177,deployability,updat,update,9177,".com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9316,deployability,toolchain,toolchain-bionic,9316,"rts InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9380,deployability,toolchain,toolchain-bionic,9380,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9446,deployability,toolchain,toolchain-bionic-,9446,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9513,deployability,toolchain,toolchain-bionic-,9513,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9582,deployability,toolchain,toolchain-bionic-,9582,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9649,deployability,toolchain,toolchain-bionic-,9649,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9700,deployability,updat,update,9700,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9838,deployability,toolchain,toolchain-focal,9838,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9900,deployability,toolchain,toolchain-focal,9900,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9964,deployability,toolchain,toolchain-focal-,9964,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:10029,deployability,toolchain,toolchain-focal-,10029,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:10096,deployability,toolchain,toolchain-focal-,10096,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:10161,deployability,toolchain,toolchain-focal-,10161,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:10197,deployability,toolchain,toolchain-bionic-,10197,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:313,integrability,depend,dependency,313,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:340,integrability,state,state,340,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:394,integrability,version,version,394,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:758,integrability,depend,dependencies,758,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:784,integrability,Depend,Depends,784,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:889,integrability,Depend,Depends,889,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:944,integrability,Depend,Depends,944,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1017,integrability,Depend,Depends,1017," not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1153,integrability,Depend,Depends,1153,get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1287,integrability,Depend,Depends,1287,age lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unabl,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1431,integrability,Depend,Depends,1431,"ckages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same e",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1557,integrability,Depend,Depends,1557,". distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1705,integrability,Depend,Depends,1705,"he situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1760,integrability,Depend,Depends,1760,"encies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1847,integrability,Depend,Depends,1847," but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(ls",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1902,integrability,Depend,Depends,1902,"1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https:",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2023,integrability,Depend,Depends,2023,"ibclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connect",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2150,integrability,Depend,Depends,2150,"epends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 31",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2534,integrability,repositor,repository,2534," to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.ne",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2776,integrability,repositor,repository,2776,">= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-up",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5933,integrability,depend,dependency,5933, http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5958,integrability,state,state,5958,.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but i,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6138,integrability,depend,dependency,6138,.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclan,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6163,integrability,state,state,6163,rity/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++202,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6520,integrability,depend,dependencies,6520,"om/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6546,integrability,Depend,Depends,6546,"se. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6651,integrability,Depend,Depends,6651,"/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6706,integrability,Depend,Depends,6706,"ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6784,integrability,Depend,Depends,6784,"/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|1",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6857,integrability,Depend,Depends,6857,"-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6993,integrability,Depend,Depends,6993,"can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - wri",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7127,integrability,Depend,Depends,7127,"ilding dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-tool",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8079,integrability,repositor,repository,8079,"51.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9123,integrability,version,version,9123,"toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-sr",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:563,interoperability,distribut,distribution,563,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2534,interoperability,repositor,repository,2534," to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.ne",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2776,interoperability,repositor,repository,2776,">= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-up",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6325,interoperability,distribut,distribution,6325,ain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to corr,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8079,interoperability,repositor,repository,8079,"51.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:287,modifiability,pac,package,287,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:313,modifiability,depend,dependency,313,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:394,modifiability,version,version,394,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:433,modifiability,pac,packages,433,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:595,modifiability,pac,packages,595,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:738,modifiability,pac,packages,738,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:758,modifiability,depend,dependencies,758,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:784,modifiability,Depend,Depends,784,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:889,modifiability,Depend,Depends,889,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:944,modifiability,Depend,Depends,944,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1017,modifiability,Depend,Depends,1017," not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1153,modifiability,Depend,Depends,1153,get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1287,modifiability,Depend,Depends,1287,age lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unabl,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1431,modifiability,Depend,Depends,1431,"ckages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same e",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1557,modifiability,Depend,Depends,1557,". distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1705,modifiability,Depend,Depends,1705,"he situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1760,modifiability,Depend,Depends,1760,"encies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1847,modifiability,Depend,Depends,1847," but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(ls",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1902,modifiability,Depend,Depends,1902,"1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https:",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2023,modifiability,Depend,Depends,2023,"ibclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connect",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2150,modifiability,Depend,Depends,2150,"epends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 31",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2335,modifiability,pac,packages,2335,"fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[=======================================================================================================================",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:3878,modifiability,Pac,Packages,3878,"-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bi",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4032,modifiability,Pac,Packages,4032,"t.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 htt",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4115,modifiability,Pac,Packages,4115,ting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:2,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4196,modifiability,Pac,Packages,4196,o: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4280,modifiability,Pac,Packages,4280,====================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B].,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4372,modifiability,Pac,Packages,4372,========================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. F,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4464,modifiability,Pac,Packages,4464,B/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4553,modifiability,Pac,Packages,4553,untu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4639,modifiability,Pac,Packages,4639,se [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archiv,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4727,modifiability,Pac,Packages,4727,. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bio,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4819,modifiability,Pac,Packages,4819,a.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4913,modifiability,Pac,Packages,4913,e.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists...,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5006,modifiability,Pac,Packages,5006,ntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgrad,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5094,modifiability,Pac,Packages,5094,multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5186,modifiability,Pac,Packages,5186,amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5356,modifiability,Pac,Packages,5356,verse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required pac,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5419,modifiability,pac,package,5419,m/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming.,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5901,modifiability,pac,package,5901,d amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5933,modifiability,depend,dependency,5933, http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5988,modifiability,pac,packages,5988,tiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed.,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6004,modifiability,upgrad,upgraded,6004,ckages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-1,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6030,modifiability,upgrad,upgradable,6030,tp://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6106,modifiability,pac,package,6106,B]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6138,modifiability,depend,dependency,6138,.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclan,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6195,modifiability,pac,packages,6195,1 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~2,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6357,modifiability,pac,packages,6357,"ges [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held br",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6500,modifiability,pac,packages,6500,"ttp://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gp",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6520,modifiability,depend,dependencies,6520,"om/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6546,modifiability,Depend,Depends,6546,"se. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6651,modifiability,Depend,Depends,6651,"/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6706,modifiability,Depend,Depends,6706,"ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6784,modifiability,Depend,Depends,6784,"/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|1",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6857,modifiability,Depend,Depends,6857,"-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6993,modifiability,Depend,Depends,6993,"can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - wri",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7127,modifiability,Depend,Depends,7127,"ilding dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-tool",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7366,modifiability,pac,packages,7366," not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.co",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8550,modifiability,Pac,Packages,8550,"tps://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http:",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8612,modifiability,pac,package,8612,"rg (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8852,modifiability,pac,packages,8852,"e... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal ma",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9123,modifiability,version,version,9123,"toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-sr",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:60,performance,error,error,60,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2361,performance,error,error,2361,"10132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[================================================================================================================================================",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2434,performance,error,error,2434,"s: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7438,performance,error,error,7438,"ormation may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llv",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9268,reliability,availab,available,9268,"Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9791,reliability,availab,available,9791,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:60,safety,error,error,60,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:313,safety,depend,dependency,313,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:758,safety,depend,dependencies,758,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:784,safety,Depend,Depends,784,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:889,safety,Depend,Depends,889,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:944,safety,Depend,Depends,944,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1017,safety,Depend,Depends,1017," not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1153,safety,Depend,Depends,1153,get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1287,safety,Depend,Depends,1287,age lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unabl,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1431,safety,Depend,Depends,1431,"ckages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same e",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1557,safety,Depend,Depends,1557,". distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1705,safety,Depend,Depends,1705,"he situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1760,safety,Depend,Depends,1760,"encies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1847,safety,Depend,Depends,1847," but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(ls",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1902,safety,Depend,Depends,1902,"1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https:",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2023,safety,Depend,Depends,2023,"ibclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connect",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2150,safety,Depend,Depends,2150,"epends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 31",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2361,safety,error,error,2361,"10132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[================================================================================================================================================",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2434,safety,error,error,2434,"s: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2638,safety,updat,update,2638,"11010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRel",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:3779,safety,updat,updates,3779,"ory ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4347,safety,updat,updates,4347,=================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main a,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4439,safety,updat,updates,4439,21-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. r,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4530,safety,updat,updates,4530,ad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubunt,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4620,safety,updat,updates,4620,untu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5489,safety,updat,update,5489,tp://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The fo,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5670,safety,updat,updates,5670,rchive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5933,safety,depend,dependency,5933, http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6138,safety,depend,dependency,6138,.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclan,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6520,safety,depend,dependencies,6520,"om/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6546,safety,Depend,Depends,6546,"se. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6651,safety,Depend,Depends,6651,"/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6706,safety,Depend,Depends,6706,"ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6784,safety,Depend,Depends,6784,"/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|1",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6857,safety,Depend,Depends,6857,"-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6993,safety,Depend,Depends,6993,"can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - wri",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7127,safety,Depend,Depends,7127,"ilding dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-tool",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7438,safety,error,error,7438,"ormation may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llv",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8254,safety,updat,updates,8254,"mends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. #",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8639,safety,updat,update,8639,"ng: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9177,safety,updat,update,9177,".com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9268,safety,avail,available,9268,"Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9700,safety,updat,update,9700,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9791,safety,avail,available,9791,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:153,security,apt,apt-get,153,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2469,security,apt,apt,2469,"1010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2506,security,apt,apt-key,2506,"132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2530,security,apt,apt-repository,2530,"ng to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2557,security,apt,apt,2557,"pends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubun",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2634,security,apt,apt,2634,"1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2638,security,updat,update,2638,"11010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRel",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2648,security,apt,apt,2648,"51.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2709,security,apt,apt,2709,"s: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2746,security,apt,apt-key,2746,"tallable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://arch",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2772,security,apt,apt-repository,2772," (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2799,security,apt,apt,2799,"untu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2908,security,apt,apt,2908," llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http:/",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2954,security,apt,apt,2954,"ffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports In",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2968,security,apt,apt,2968,"211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:3034,security,apt,apt,3034,"-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Pack",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:3048,security,apt,apt,3048,":11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:3669,security,secur,security,3669,"t@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:3703,security,secur,security,3703,"//apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-b",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:3779,security,updat,updates,3779,"ory ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4347,security,updat,updates,4347,=================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main a,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4439,security,updat,updates,4439,21-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. r,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4530,security,updat,updates,4530,ad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubunt,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4620,security,updat,updates,4620,untu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4853,security,secur,security,4853,tu bionic/main amd64 Packages [19.3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4887,security,secur,security,4887,3 kB]. Get:7 http://archive.ubuntu.com/ubuntu bionic-backports InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4946,security,secur,security,4946,rts InRelease [74.6 kB]. Get:8 http://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:4980,security,secur,security,4980,p://archive.ubuntu.com/ubuntu bionic/main amd64 Packages [1344 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done.,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5040,security,secur,security,5040,44 kB]. Get:9 http://archive.ubuntu.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5074,security,secur,security,5074,u.com/ubuntu bionic/multiverse amd64 Packages [186 kB]. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# ap,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5128,security,secur,security,5128,. Get:10 http://archive.ubuntu.com/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Bui,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5162,security,secur,security,5162,/ubuntu bionic/universe amd64 Packages [11.3 MB]. Get:11 http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading sta,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5220,security,apt,apt,5220, http://archive.ubuntu.com/ubuntu bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be insta,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5300,security,apt,apt,5300,t:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you a,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5485,security,apt,apt,5485,14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. T,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5489,security,updat,update,5489,tp://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The fo,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5670,security,updat,updates,5670,rchive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5769,security,secur,security,5769,tu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5803,security,secur,security,5803,verse amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>=,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5837,security,apt,apt,5837,Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6019,security,apt,apt,6019,kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tool,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6076,security,apt,apt,6076,rity/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~202110,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7475,security,apt,apt,7475,"uation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7513,security,apt,apt-key,7513,"et dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal ll",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7560,security,apt,apt,7560,"g-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [90",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7606,security,apt,apt,7606,"ffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Read",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7620,security,apt,apt,7620,"s not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package li",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7646,security,apt,apt-key,7646," Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7759,security,apt,apt,7759,"going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev pyt",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7773,security,apt,apt,7773,"stalled. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev pytho",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8075,security,apt,apt-repository,8075,"2151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this li",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8102,security,apt,apt,8102,"going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8254,security,updat,updates,8254,"mends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. #",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8352,security,secur,security,8352,"ld broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://ap",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8385,security,secur,security,8385,"at, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8419,security,apt,apt,8419,"ker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://a",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8496,security,apt,apt,8496,"hot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.or",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8631,security,apt,apt-get,8631,". Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8639,security,updat,update,8639,"ng: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8656,security,apt,apt-get,8656," should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-b",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9094,security,apt,apt,9094,"ttp://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9177,security,updat,update,9177,".com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9268,security,availab,available,9268,"Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubu",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9290,security,apt,apt,9290,"e.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/4136",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9354,security,apt,apt,9354,"rity.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any he",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9420,security,apt,apt,9420,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9487,security,apt,apt,9487,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9556,security,apt,apt,9556,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9623,security,apt,apt,9623,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9700,security,updat,update,9700,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9791,security,availab,available,9791,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9813,security,apt,apt,9813,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9875,security,apt,apt,9875,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9939,security,apt,apt,9939,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:10004,security,apt,apt,10004,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:10071,security,apt,apt,10071,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:10136,security,apt,apt,10136,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:313,testability,depend,dependency,313,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:758,testability,depend,dependencies,758,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:784,testability,Depend,Depends,784,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:889,testability,Depend,Depends,889,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:944,testability,Depend,Depends,944,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1017,testability,Depend,Depends,1017," not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1153,testability,Depend,Depends,1153,get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1287,testability,Depend,Depends,1287,age lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unabl,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1431,testability,Depend,Depends,1431,"ckages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same e",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1557,testability,Depend,Depends,1557,". distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1705,testability,Depend,Depends,1705,"he situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1760,testability,Depend,Depends,1760,"encies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1847,testability,Depend,Depends,1847," but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(ls",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1902,testability,Depend,Depends,1902,"1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https:",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2023,testability,Depend,Depends,2023,"ibclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connect",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2150,testability,Depend,Depends,2150,"epends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 31",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5933,testability,depend,dependency,5933, http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6138,testability,depend,dependency,6138,.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclan,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6520,testability,depend,dependencies,6520,"om/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6546,testability,Depend,Depends,6546,"se. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6651,testability,Depend,Depends,6651,"/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key o",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6706,testability,Depend,Depends,6706,"ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6784,testability,Depend,Depends,6784,"/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|1",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6857,testability,Depend,Depends,6857,"-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6993,testability,Depend,Depends,6993,"can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - wri",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7127,testability,Depend,Depends,7127,"ilding dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-tool",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:60,usability,error,error,60,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:692,usability,help,help,692,"Clang 11 installation not working; Hello. We encountered an error when rebuild our docker image, and it didn't build despite no changes. ```bash. [91m+ apt-get install -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:1177,usability,tool,tools,1177, libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev zlib1g-dev. [0mReading package lists... Building dependency tree... Reading state information... zlib1g-dev is already the newest version (1:1.2.11.dfsg-0ubuntu2). Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:1,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2040,usability,tool,tools,2040,"1-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2361,usability,error,error,2361,"10132151.4) but it is not going to be installed. libclang-11-dev : Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[================================================================================================================================================",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2434,usability,error,error,2434,"s: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2595,usability,tool,toolchain,2595,"~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. libllvm11 : Depends: libgcc-s1 (>= 3.3) but it is not installable. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. llvm-11-dev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:2837,usability,tool,toolchain,2837,"ev : Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: llvm-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang-cpp11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. [91mE: Unable to correct problems, you have held broken packages. ```. After that error I've tried to install `clang-11` on fresh `ubuntu-18` but got same error:. ```bash. wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". apt update && apt install clang-11. root@4f3323c7fe90:/# wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \. > add-apt-repository ""deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-11 main"". --2021-10-11 18:34:18-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. - 100%[====================================================================================================================================================================================================>] 3.07K --.-KB/s in 0s. 2021-10-11 18:34:23 (51.5 MB/s) - written to stdout [3145/3145]. OK. Get:2 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease [20.8 kB]. Get:3 http://archive.ubuntu.com/ubuntu bionic InRelease [242 kB]. Get:4 http://security.ubuntu.com/ubuntu bionic-security InRelease [88.7 kB]. Get:5 http://archive.ubuntu.com/ubuntu bionic-updates InRelease [88.7 kB]. Get:6 http://ppa.launchpad.net/ope",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5245,usability,tool,toolchain-bionic-,5245,u bionic/restricted amd64 Packages [13.5 kB]. Get:12 http://archive.ubuntu.com/ubuntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you hav,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5325,usability,tool,toolchain-bionic-,5325,buntu bionic-updates/multiverse amd64 Packages [34.4 kB]. Get:13 http://archive.ubuntu.com/ubuntu bionic-updates/restricted amd64 Packages [638 kB]. Get:14 http://archive.ubuntu.com/ubuntu bionic-updates/universe amd64 Packages [2210 kB]. Get:15 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 Packages [2801 kB]. Get:16 http://archive.ubuntu.com/ubuntu bionic-backports/main amd64 Packages [11.3 kB]. Get:17 http://archive.ubuntu.com/ubuntu bionic-backports/universe amd64 Packages [11.4 kB]. Get:18 http://security.ubuntu.com/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribut,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:5862,usability,tool,toolchain-bionic-,5862,m/ubuntu bionic-security/restricted amd64 Packages [606 kB]. Get:19 http://security.ubuntu.com/ubuntu bionic-security/multiverse amd64 Packages [26.7 kB]. Get:20 http://security.ubuntu.com/ubuntu bionic-security/main amd64 Packages [2365 kB]. Get:21 http://security.ubuntu.com/ubuntu bionic-security/universe amd64 Packages [1431 kB]. Get:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease [5527 B]. Get:22 https://apt.llvm.org/bionic llvm-toolchain-bionic-11/main amd64 Packages [8985 B]. Fetched 23.6 MB in 10s (2248 kB/s). Reading package lists... Done. root@4f3323c7fe90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libcl,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:6454,usability,help,help,6454,"e90:/#. root@4f3323c7fe90:/# apt update. Hit:2 http://archive.ubuntu.com/ubuntu bionic InRelease. Hit:3 http://ppa.launchpad.net/openjdk-r/ppa/ubuntu bionic InRelease. Hit:4 http://archive.ubuntu.com/ubuntu bionic-updates InRelease. Hit:5 http://archive.ubuntu.com/ubuntu bionic-backports InRelease. Hit:6 http://security.ubuntu.com/ubuntu bionic-security InRelease. Hit:1 https://apt.llvm.org/bionic llvm-toolchain-bionic-11 InRelease. Reading package lists... Done. Building dependency tree. Reading state information... Done. 53 packages can be upgraded. Run 'apt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. +",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7017,usability,tool,tools,7017,"pt list --upgradable' to see them. root@4f3323c7fe90:/# apt install clang-11. Reading package lists... Done. Building dependency tree. Reading state information... Done. Some packages could not be installed. This may mean that you have. requested an impossible situation or if you are using the unstable. distribution that some required packages have not yet been created. or been moved out of Incoming. The following information may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/31",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:7438,usability,error,error,7438,"ormation may help to resolve the situation:. The following packages have unmet dependencies:. clang-11 : Depends: libclang-cpp11 (>= 1:11.1.0~++20211010011718+1fdec59bffc1) but it is not going to be installed. Depends: libgcc-s1 (>= 3.0) but it is not installable. Depends: libllvm11 (>= 1:9~svn298832-1~) but it is not going to be installed. Depends: libstdc++6 (>= 11) but 8.4.0-1ubuntu1~18.04 is to be installed. Depends: libclang-common-11-dev (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: llvm-11-linker-tools (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Depends: libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llv",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8127,usability,tool,toolchain-focal-,8127," libclang1-11 (= 1:11.1.0~++20211010011718+1fdec59bffc1-1~exp1~20211010132151.4) but it is not going to be installed. Recommends: llvm-11-dev but it is not going to be installed. E: Unable to correct problems, you have held broken packages. ```. After that, I've tried to build your docker image - same error:. ```bash. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8443,usability,tool,toolchain-focal-,8443,"sh. + wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key. + apt-key add -. --2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolc",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8520,usability,tool,toolchain-focal-,8520,"--2021-10-11 15:29:09-- https://apt.llvm.org/llvm-snapshot.gpg.key. Resolving apt.llvm.org (apt.llvm.org)... Warning: apt-key output should not be parsed (stdout is not a terminal). 151.101.114.49, 2a04:4e42:1b::561. Connecting to apt.llvm.org (apt.llvm.org)|151.101.114.49|:443... connected. HTTP request sent, awaiting response... 200 OK. Length: 3145 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bioni",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8878,usability,user,user,8878,"5 (3.1K) [application/octet-stream]. Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.l",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:8912,usability,command,command,8912," Saving to: 'STDOUT'. 0K ... 100% 37.6M=0s. 2021-10-11 15:29:12 (37.6 MB/s) - written to stdout [3145/3145]. OK. ++ lsb_release -sc. ++ lsb_release -sc. + add-apt-repository 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'. Hit:2 http://archive.ubuntu.com/ubuntu focal InRelease. Hit:3 http://archive.ubuntu.com/ubuntu focal-updates InRelease. Hit:4 http://archive.ubuntu.com/ubuntu focal-backports InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9316,usability,tool,toolchain-bionic,9316,"rts InRelease. Hit:5 http://security.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9380,usability,tool,toolchain-bionic,9380,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9446,usability,tool,toolchain-bionic-,9446,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9513,usability,tool,toolchain-bionic-,9513,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9582,usability,tool,toolchain-bionic-,9582,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9649,usability,tool,toolchain-bionic-,9649,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9838,usability,tool,toolchain-focal,9838,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9900,usability,tool,toolchain-focal,9900,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:9964,usability,tool,toolchain-focal-,9964,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:10029,usability,tool,toolchain-focal-,10029,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:10096,usability,tool,toolchain-focal-,10096,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:10161,usability,tool,toolchain-focal-,10161,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:10197,usability,tool,toolchain-bionic-,10197,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:10254,usability,user,user-images,10254,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/489:10354,usability,help,help,10354,"y.ubuntu.com/ubuntu focal-security InRelease. Get:1 https://apt.llvm.org/focal llvm-toolchain-focal-11 InRelease [5526 B]. Get:6 https://apt.llvm.org/focal llvm-toolchain-focal-11/main amd64 Packages [9008 B]. Fetched 14.5 kB in 13s (1133 B/s). Reading package lists... + apt-get update -qq -y. + apt-get install -qq -y clang-11 libclang-11-dev libgoogle-glog-dev libgtest-dev libllvm11 llvm-11-dev python3-dev python3-pyparsing zlib1g-dev. E: Unable to correct problems, you have held broken packages. real 0m54.858s. user 0m12.058s. sys 0m4.272s. The command '/bin/sh -c ./build-prereq.sh && PATH=""${HOME}/bin:${PATH}"" ./build_release_binaries.sh # PATH for bazel' returned a non-zero code: 100. ```. According to this link: https://apt.llvm.org/ only 12 and 13 version are mensioned. ```. Bionic LTS (18.04) - Last update : Mon, 11 Oct 2021 13:24:17 UTC / Revision: 20211011091508+7ae8f392a161. # i386 not available. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main. # 12. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main. # 13. deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-13 main. Focal (20.04) LTS - Last update : Sun, 10 Oct 2021 23:59:52 UTC / Revision: 20211010053033+67964fc4b241. # i386 not available. deb http://apt.llvm.org/focal/ llvm-toolchain-focal main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal main. # 12. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-12 main. # 13. deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main. ```. `llvm-toolchain-bionic-11` was changed today. ![image](https://user-images.githubusercontent.com/41360525/136817825-71faa887-08bb-49e7-9126-036e6412d90d.png). Any help?",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/489
https://github.com/google/deepvariant/issues/490:195,deployability,pipelin,pipeline,195,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:779,deployability,MODUL,MODULE,779,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:1034,deployability,fail,fail,1034,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:964,energy efficiency,alloc,allocate,964,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:195,integrability,pipelin,pipeline,195,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:877,integrability,messag,messages,877,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:877,interoperability,messag,messages,877,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:95,modifiability,Pac,PacBio,95,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:434,modifiability,PAC,PACBIO,434,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:779,modifiability,MODUL,MODULE,779,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:1173,modifiability,Pac,PacBio,1173,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:1042,performance,memor,memory,1042,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:1094,performance,memor,memory,1094,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:907,reliability,doe,does,907,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:1034,reliability,fail,fail,1034,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:779,safety,MODUL,MODULE,779,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:123,testability,coverag,coverage,123,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:1189,testability,coverag,coverage,1189,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:1042,usability,memor,memory,1042,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:1094,usability,memor,memory,1094,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/490:1226,usability,help,help,1226,"READ TAG: n_elements is zero; Hi,. I am trying to run DeepVariant 1.2.0 on a few human samples PacBio HiFi data (about 30x coverage per sample). I first ran my samples through the [PEPPER-Margin pipeline r0.4](https://github.com/kishwarshafin/pepper) to get a haplotagged BAM file. Then I ran DeepVariant as follows:. ```. singularity exec -B ${SOME_PATHS} deepvariant_1.2.0.sif bash /opt/deepvariant/bin/run_deepvariant --model_type PACBIO --ref ${PATH_TO_REF} --reads MARGIN_PHASED.PEPPER_SNP_MARGIN.happlotagged.bam --output_vcf sample.vcf.gz --output_gvcf sample.g.vcf.gz --num_shards 24 --make_examples_extra_args=""realign_reads=false,min_mapping_quality=5"" --sample_name MYSAMPLE --use-hp-information;. ```. I have two problems:. 1. Right from the beginning (`CALL VARIANT MODULE SELECTED`), for each interval processed. I get thousands of `READ TAG: n_elements is zero` messages in the console. What does it mean and is it a problem or just a warning? 2. I allocate 200GB of RAM for per job and they all seem to systematically fail on memory. I do not recall DeepVariant using that much memory in the past but I might be wrong. Is 200GB too light for a human genome PacBio Hifi 30x coverage dataset? Thank you for your help,. Guillaume",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/490
https://github.com/google/deepvariant/issues/491:226,availability,error,error,226,"Empirical formula predicting disk space usage?; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. Yes. **Describe the issue:**. When running WDL workflows backed with PAPI, I get PAPI error 10, which indicates the disk is full. **Setup**. - Operating system: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - DeepVariant version: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - Installation method (Docker, built from source, etc.): Docker. - Type of data: ONT, GRCh38, process by chromosome. **Steps to reproduce:**. ```. # This is the command from Pepper, but judged from the log, the command failed during the DV stage. run_pepper_margin_deepvariant \. call_variant \. -b ~{bam} \. -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:283,availability,Operat,Operating,283,"Empirical formula predicting disk space usage?; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. Yes. **Describe the issue:**. When running WDL workflows backed with PAPI, I get PAPI error 10, which indicates the disk is full. **Setup**. - Operating system: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - DeepVariant version: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - Installation method (Docker, built from source, etc.): Docker. - Type of data: ONT, GRCh38, process by chromosome. **Steps to reproduce:**. ```. # This is the command from Pepper, but judged from the log, the command failed during the DV stage. run_pepper_margin_deepvariant \. call_variant \. -b ~{bam} \. -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:5682,availability,echo,echo,5682,"SHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: PROCESSING CONTIG: chr10. [11-03-2021 13:53:46] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 345013. [11-03-2021 13:53:53] INFO: PROCESSING CONTIG: chr14. [11-03-2021 13:54:02] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 3092. [11-03-2021 13:54:02] TOTAL ELAPSED TIME FOR VARIANT CALLING: 13 Min 21 Sec. real	13m23.051s. user	579m29.953s. sys	11m32.825s. [11-03-2021 13:54:03] INFO: [3/9] RUNNING THE FOLLOWING COMMAND. -------. mv /cromwell_root/pepper_output/pepper_snp/*.vcf /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf; . bgzip /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf; . tabix -p vcf /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; . rm -rf /cromwell_root/pepper_output/pepper_snp/; . echo ""CONTIGS FOUND IN PEPPER SNP VCF:""; . zcat /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz | grep -v '#' | cut -f1 | uniq. -------. CONTIGS FOUND IN PEPPER SNP VCF:. chr10. chr14. [11-03-2021 13:54:07] INFO: [4/9] RUNNING THE FOLLOWING COMMAND. -------. time margin phase /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz /opt/margin_dir/params/misc/allParams.ont_haplotag.json -t 64 -V -o /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN 2>&1 | tee /cromwell_root/pepper_output/logs/2_margin_haplotag.log;. mv /cromwell_root/pepper_output/*.bam /cromwell_root/pepper",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:21459,availability,echo,echo,21459," INFO: PROCESSING HAPLOTAG: 0. [11-03-2021 14:32:24] INFO: PROCESSING CONTIG: chr10. [11-03-2021 14:39:30] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 378085 TOTAL TIME SPENT: 7 Min 6 Sec. [11-03-2021 14:39:37] INFO: PROCESSING CONTIG: chr14. [11-03-2021 14:39:48] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 2550 TOTAL TIME SPENT: 0 Min 11 Sec. [11-03-2021 14:39:49] TOTAL ELAPSED TIME FOR VARIANT CALLING: 26 Min 43 Sec. real	26m44.555s. user	1220m53.668s. sys	15m35.409s. [11-03-2021 14:39:49] INFO: [6/9] RUNNING THE FOLLOWING COMMAND. -------. mv /cromwell_root/pepper_output/pepper_hp/*.vcf /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf; . bgzip /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf; . tabix -p vcf /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz; . rm -rf /cromwell_root/pepper_output/pepper_hp/. -------. [11-03-2021 14:39:53] INFO: [7/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output/dv_intermediate_outputs/; . echo ""STARTING DEEPVARIANT""; . time /opt/deepvariant/bin/run_deepvariant --model_type=WGS --customized_model=/opt/dv_models/ont_1121_none/model.ckpt-30200 --ref=/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa --reads=/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam --output_vcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.vcf.gz --output_gvcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.g.vcf.gz --sample_name=""6061-SL-0029"" --intermediate_results_dir=/cromwell_root/pepper_output/dv_intermediate_outputs/ --num_shards=64 --make_examples_extra_args=""alt_aligned_pileup=none,realign_reads=false,min_mapping_quality=1,min_base_quality=1,sort_by_haplotypes=true,parse_sam_aux_fields=true,add_hp_channel=false,variant_caller=vcf_candidate_importer,proposed_variants=/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --postprocess_variants_ext",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:35966,availability,error,error,35966,"3 14:53:07.275555 139714691082048 make_examples_core.py:163] Task 53/64: 2400 candidates (2566 examples) [15.76s elapsed]. I1103 14:53:07.719906 140657934407488 make_examples_core.py:163] Task 27/64: 2739 candidates (3035 examples) [5.45s elapsed]. I1103 14:53:07.775277 140126785840960 make_examples_core.py:163] Task 16/64: 2308 candidates (2374 examples) [2.44s elapsed]. I1103 14:53:08.681667 139823122659136 make_examples_core.py:163] Task 45/64: 2652 candidates (2750 examples) [5.88s elapsed]. I1103 14:53:08.499621 140345388750656 make_examples_core.py:163] Task 50/64: 2517 candidates (2651 examples) [4.04s elapsed]. I1103 14:53:08.077846 139826026686272 make_examples_core.py:163] Task 55/64: 2412 candidates (2556 examples) [8.96s elapsed]. I1103 14:53:08.165700 140447748351808 make_examples_core.py:163] Task 29/64: 2805 candidates (2883 examples) [2.81s elapsed]. I1103 14:53:08.086294 140152994068288 make_examples_core.py:163] Task 4/64: 2265 candidates (2381 examples) [3.39s elapsed]. I1103 14:53:08.115124 140349764978496 make_examples_core.py:163] Task 58/64: 2401 candidates (2511 examples) [13.20s elapsed]. I1103 14:53:07.834557 140529397729088 make_examples_core.py:163] Task 44/64: 2614 candidates (2702 examples) [1.68s elapsed]. I1103 14:53:08.208366 140388734826304 make_examples_core.py:163] Task 13/64: 2206 candidates (2302 examples) [8.06s elapsed]. # the program died here. ```. For one failed task, the input BAM size is 19GB, and allocated disk size is 300GB. **Does the quick start test work on your system?**. Some inputs finish, while others fail using the exact same workflow (PAPI error 10), so it's unlikely to be a coding issue. **Any additional context:**. We have successful runs with inputs of similar sizes that failed with PAPI 10. So I'm wondering if there's an empirical formula for predicting disk space usage. Additionally, is there a way to make DV less verbose? The log file goes to hundreds of MB, which makes debugging less easy. Thanks! Steve.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:396,deployability,version,version,396,"Empirical formula predicting disk space usage?; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. Yes. **Describe the issue:**. When running WDL workflows backed with PAPI, I get PAPI error 10, which indicates the disk is full. **Setup**. - Operating system: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - DeepVariant version: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - Installation method (Docker, built from source, etc.): Docker. - Type of data: ONT, GRCh38, process by chromosome. **Steps to reproduce:**. ```. # This is the command from Pepper, but judged from the log, the command failed during the DV stage. run_pepper_margin_deepvariant \. call_variant \. -b ~{bam} \. -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:488,deployability,Instal,Installation,488,"Empirical formula predicting disk space usage?; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. Yes. **Describe the issue:**. When running WDL workflows backed with PAPI, I get PAPI error 10, which indicates the disk is full. **Setup**. - Operating system: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - DeepVariant version: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - Installation method (Docker, built from source, etc.): Docker. - Type of data: ONT, GRCh38, process by chromosome. **Steps to reproduce:**. ```. # This is the command from Pepper, but judged from the log, the command failed during the DV stage. run_pepper_margin_deepvariant \. call_variant \. -b ~{bam} \. -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:688,deployability,log,log,688,"Empirical formula predicting disk space usage?; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. Yes. **Describe the issue:**. When running WDL workflows backed with PAPI, I get PAPI error 10, which indicates the disk is full. **Setup**. - Operating system: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - DeepVariant version: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - Installation method (Docker, built from source, etc.): Docker. - Type of data: ONT, GRCh38, process by chromosome. **Steps to reproduce:**. ```. # This is the command from Pepper, but judged from the log, the command failed during the DV stage. run_pepper_margin_deepvariant \. call_variant \. -b ~{bam} \. -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:705,deployability,fail,failed,705,"Empirical formula predicting disk space usage?; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. Yes. **Describe the issue:**. When running WDL workflows backed with PAPI, I get PAPI error 10, which indicates the disk is full. **Setup**. - Operating system: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - DeepVariant version: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - Installation method (Docker, built from source, etc.): Docker. - Type of data: ONT, GRCh38, process by chromosome. **Steps to reproduce:**. ```. # This is the command from Pepper, but judged from the log, the command failed during the DV stage. run_pepper_margin_deepvariant \. call_variant \. -b ~{bam} \. -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:726,deployability,stage,stage,726,"Empirical formula predicting disk space usage?; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. Yes. **Describe the issue:**. When running WDL workflows backed with PAPI, I get PAPI error 10, which indicates the disk is full. **Setup**. - Operating system: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - DeepVariant version: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - Installation method (Docker, built from source, etc.): Docker. - Type of data: ONT, GRCh38, process by chromosome. **Steps to reproduce:**. ```. # This is the command from Pepper, but judged from the log, the command failed during the DV stage. run_pepper_margin_deepvariant \. call_variant \. -b ~{bam} \. -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:951,deployability,log,log,951,"Empirical formula predicting disk space usage?; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. Yes. **Describe the issue:**. When running WDL workflows backed with PAPI, I get PAPI error 10, which indicates the disk is full. **Setup**. - Operating system: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - DeepVariant version: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - Installation method (Docker, built from source, etc.): Docker. - Type of data: ONT, GRCh38, process by chromosome. **Steps to reproduce:**. ```. # This is the command from Pepper, but judged from the log, the command failed during the DV stage. run_pepper_margin_deepvariant \. call_variant \. -b ~{bam} \. -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:1367,deployability,resourc,resources,1367,":r0.4.1`. - DeepVariant version: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - Installation method (Docker, built from source, etc.): Docker. - Type of data: ONT, GRCh38, process by chromosome. **Steps to reproduce:**. ```. # This is the command from Pepper, but judged from the log, the command failed during the DV stage. run_pepper_margin_deepvariant \. call_variant \. -b ~{bam} \. -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_an",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:1621,deployability,MODUL,MODULE,1621,"**. ```. # This is the command from Pepper, but judged from the log, the command failed during the DV stage. run_pepper_margin_deepvariant \. call_variant \. -b ~{bam} \. -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_SNP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_snp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/1_pepper_snp.log. -------. [11-03-2021 13:40:41] INFO: CALL ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:1791,deployability,log,logs,1791,". -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_SNP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_snp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/1_pepper_snp.log. -------. [11-03-2021 13:40:41] INFO: CALL VARIANT MODULE SELECTED. [11-03-2021 13:40:41] INFO: ONT PROFILE SET FOR VARIANT CALLING. [11-03-2021 13:40:41] INFO: RUN-ID: 11032021_134041. [11-03-2021 13:40:41] INFO",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:2305,deployability,resourc,resources,2305,"14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_SNP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_snp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/1_pepper_snp.log. -------. [11-03-2021 13:40:41] INFO: CALL VARIANT MODULE SELECTED. [11-03-2021 13:40:41] INFO: ONT PROFILE SET FOR VARIANT CALLING. [11-03-2021 13:40:41] INFO: RUN-ID: 11032021_134041. [11-03-2021 13:40:41] INFO: IMAGE OUTPUT: /cromwell_root/pepper_output/pepper_snp/images_11032021_134041/. [11-03-2021 13:40:41] STEP 1: GENERATING IMAGES. [11-03-2021 13:40:41] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 13:40:41] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INT",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:2559,deployability,log,logs,2559,"d_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_SNP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_snp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/1_pepper_snp.log. -------. [11-03-2021 13:40:41] INFO: CALL VARIANT MODULE SELECTED. [11-03-2021 13:40:41] INFO: ONT PROFILE SET FOR VARIANT CALLING. [11-03-2021 13:40:41] INFO: RUN-ID: 11032021_134041. [11-03-2021 13:40:41] INFO: IMAGE OUTPUT: /cromwell_root/pepper_output/pepper_snp/images_11032021_134041/. [11-03-2021 13:40:41] STEP 1: GENERATING IMAGES. [11-03-2021 13:40:41] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 13:40:41] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 13:40:41] INFO: 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:2577,deployability,log,log,2577,"1-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_SNP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_snp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/1_pepper_snp.log. -------. [11-03-2021 13:40:41] INFO: CALL VARIANT MODULE SELECTED. [11-03-2021 13:40:41] INFO: ONT PROFILE SET FOR VARIANT CALLING. [11-03-2021 13:40:41] INFO: RUN-ID: 11032021_134041. [11-03-2021 13:40:41] INFO: IMAGE OUTPUT: /cromwell_root/pepper_output/pepper_snp/images_11032021_134041/. [11-03-2021 13:40:41] STEP 1: GENERATING IMAGES. [11-03-2021 13:40:41] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 13:40:41] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 13:40:41] INFO: 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:4",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:2632,deployability,MODUL,MODULE,2632,"D. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_SNP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_snp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/1_pepper_snp.log. -------. [11-03-2021 13:40:41] INFO: CALL VARIANT MODULE SELECTED. [11-03-2021 13:40:41] INFO: ONT PROFILE SET FOR VARIANT CALLING. [11-03-2021 13:40:41] INFO: RUN-ID: 11032021_134041. [11-03-2021 13:40:41] INFO: IMAGE OUTPUT: /cromwell_root/pepper_output/pepper_snp/images_11032021_134041/. [11-03-2021 13:40:41] STEP 1: GENERATING IMAGES. [11-03-2021 13:40:41] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 13:40:41] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 13:40:41] INFO: 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25]",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:6293,deployability,resourc,resources,6293,"579m29.953s. sys	11m32.825s. [11-03-2021 13:54:03] INFO: [3/9] RUNNING THE FOLLOWING COMMAND. -------. mv /cromwell_root/pepper_output/pepper_snp/*.vcf /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf; . bgzip /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf; . tabix -p vcf /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; . rm -rf /cromwell_root/pepper_output/pepper_snp/; . echo ""CONTIGS FOUND IN PEPPER SNP VCF:""; . zcat /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz | grep -v '#' | cut -f1 | uniq. -------. CONTIGS FOUND IN PEPPER SNP VCF:. chr10. chr14. [11-03-2021 13:54:07] INFO: [4/9] RUNNING THE FOLLOWING COMMAND. -------. time margin phase /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz /opt/margin_dir/params/misc/allParams.ont_haplotag.json -t 64 -V -o /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN 2>&1 | tee /cromwell_root/pepper_output/logs/2_margin_haplotag.log;. mv /cromwell_root/pepper_output/*.bam /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam; . samtools index -@64 /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam. -------. Running OpenMP with 64 threads. > Parsing model parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:6596,deployability,log,logs,6596,"utput/PEPPER_SNP_OUPUT.vcf.gz; . rm -rf /cromwell_root/pepper_output/pepper_snp/; . echo ""CONTIGS FOUND IN PEPPER SNP VCF:""; . zcat /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz | grep -v '#' | cut -f1 | uniq. -------. CONTIGS FOUND IN PEPPER SNP VCF:. chr10. chr14. [11-03-2021 13:54:07] INFO: [4/9] RUNNING THE FOLLOWING COMMAND. -------. time margin phase /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz /opt/margin_dir/params/misc/allParams.ont_haplotag.json -t 64 -V -o /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN 2>&1 | tee /cromwell_root/pepper_output/logs/2_margin_haplotag.log;. mv /cromwell_root/pepper_output/*.bam /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam; . samtools index -@64 /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam. -------. Running OpenMP with 64 threads. > Parsing model parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:6619,deployability,log,log,6619,"vcf.gz; . rm -rf /cromwell_root/pepper_output/pepper_snp/; . echo ""CONTIGS FOUND IN PEPPER SNP VCF:""; . zcat /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz | grep -v '#' | cut -f1 | uniq. -------. CONTIGS FOUND IN PEPPER SNP VCF:. chr10. chr14. [11-03-2021 13:54:07] INFO: [4/9] RUNNING THE FOLLOWING COMMAND. -------. time margin phase /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz /opt/margin_dir/params/misc/allParams.ont_haplotag.json -t 64 -V -o /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN 2>&1 | tee /cromwell_root/pepper_output/logs/2_margin_haplotag.log;. mv /cromwell_root/pepper_output/*.bam /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam; . samtools index -@64 /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam. -------. Running OpenMP with 64 threads. > Parsing model parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time re",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:9525,deployability,resourc,resources,9525," time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] INFO: [5/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_hp call_variant -b /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_HP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_hp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/3_pepper_hp.log. -------. [11-03-2021 14:13:05] INFO: CALL VARIANT MODULE SELECTED. [11-03-2021 14:13:05] INFO: ONT VARIANT CALLING PROFILE SET. [11-03-2021 14:13:05] INFO: RUN-ID: 11032021_141305. [11-03-2021 14:13:05] INFO: IMAGE OUTPUT: /cromwell_root/pepper_output/pepper_hp/images_11032021_141305/. [11-03-2021 14:13:05] STEP 1: GENERATING IMAGES:. [11-03-2021 14:13:05] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 14:13:05] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895 TOTAL BASES: 3094460376. [11-03-2021 14:13:05] STARTING THRE",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:9777,deployability,log,logs,9777,"lete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] INFO: [5/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_hp call_variant -b /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_HP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_hp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/3_pepper_hp.log. -------. [11-03-2021 14:13:05] INFO: CALL VARIANT MODULE SELECTED. [11-03-2021 14:13:05] INFO: ONT VARIANT CALLING PROFILE SET. [11-03-2021 14:13:05] INFO: RUN-ID: 11032021_141305. [11-03-2021 14:13:05] INFO: IMAGE OUTPUT: /cromwell_root/pepper_output/pepper_hp/images_11032021_141305/. [11-03-2021 14:13:05] STEP 1: GENERATING IMAGES:. [11-03-2021 14:13:05] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 14:13:05] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895 TOTAL BASES: 3094460376. [11-03-2021 14:13:05] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 14:13:05] INFO: [THREAD 00] 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. [11-03-2021 14:13:06] INFO: [THREAD 00] 20/483 COMPLETE (4%) [ELAPSED TIME: 0 Min 0 Sec]. [11-03-2021 14:13:06] INFO: [THREAD 00] 30/4",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:9794,deployability,log,log,9794," Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] INFO: [5/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_hp call_variant -b /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_HP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_hp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/3_pepper_hp.log. -------. [11-03-2021 14:13:05] INFO: CALL VARIANT MODULE SELECTED. [11-03-2021 14:13:05] INFO: ONT VARIANT CALLING PROFILE SET. [11-03-2021 14:13:05] INFO: RUN-ID: 11032021_141305. [11-03-2021 14:13:05] INFO: IMAGE OUTPUT: /cromwell_root/pepper_output/pepper_hp/images_11032021_141305/. [11-03-2021 14:13:05] STEP 1: GENERATING IMAGES:. [11-03-2021 14:13:05] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 14:13:05] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895 TOTAL BASES: 3094460376. [11-03-2021 14:13:05] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 14:13:05] INFO: [THREAD 00] 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. [11-03-2021 14:13:06] INFO: [THREAD 00] 20/483 COMPLETE (4%) [ELAPSED TIME: 0 Min 0 Sec]. [11-03-2021 14:13:06] INFO: [THREAD 00] 30/483 COMPLETE (6%) ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:9849,deployability,MODUL,MODULE,9849,"ing results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] INFO: [5/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_hp call_variant -b /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_HP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_hp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/3_pepper_hp.log. -------. [11-03-2021 14:13:05] INFO: CALL VARIANT MODULE SELECTED. [11-03-2021 14:13:05] INFO: ONT VARIANT CALLING PROFILE SET. [11-03-2021 14:13:05] INFO: RUN-ID: 11032021_141305. [11-03-2021 14:13:05] INFO: IMAGE OUTPUT: /cromwell_root/pepper_output/pepper_hp/images_11032021_141305/. [11-03-2021 14:13:05] STEP 1: GENERATING IMAGES:. [11-03-2021 14:13:05] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 14:13:05] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895 TOTAL BASES: 3094460376. [11-03-2021 14:13:05] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 14:13:05] INFO: [THREAD 00] 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. [11-03-2021 14:13:06] INFO: [THREAD 00] 20/483 COMPLETE (4%) [ELAPSED TIME: 0 Min 0 Sec]. [11-03-2021 14:13:06] INFO: [THREAD 00] 30/483 COMPLETE (6%) [ELAPSED TIME: 0 Min 0 Sec]. [11-03-2021 14:13:06] INFO:",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:21665,deployability,resourc,resources,21665,"2021 14:39:37] INFO: PROCESSING CONTIG: chr14. [11-03-2021 14:39:48] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 2550 TOTAL TIME SPENT: 0 Min 11 Sec. [11-03-2021 14:39:49] TOTAL ELAPSED TIME FOR VARIANT CALLING: 26 Min 43 Sec. real	26m44.555s. user	1220m53.668s. sys	15m35.409s. [11-03-2021 14:39:49] INFO: [6/9] RUNNING THE FOLLOWING COMMAND. -------. mv /cromwell_root/pepper_output/pepper_hp/*.vcf /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf; . bgzip /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf; . tabix -p vcf /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz; . rm -rf /cromwell_root/pepper_output/pepper_hp/. -------. [11-03-2021 14:39:53] INFO: [7/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output/dv_intermediate_outputs/; . echo ""STARTING DEEPVARIANT""; . time /opt/deepvariant/bin/run_deepvariant --model_type=WGS --customized_model=/opt/dv_models/ont_1121_none/model.ckpt-30200 --ref=/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa --reads=/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam --output_vcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.vcf.gz --output_gvcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.g.vcf.gz --sample_name=""6061-SL-0029"" --intermediate_results_dir=/cromwell_root/pepper_output/dv_intermediate_outputs/ --num_shards=64 --make_examples_extra_args=""alt_aligned_pileup=none,realign_reads=false,min_mapping_quality=1,min_base_quality=1,sort_by_haplotypes=true,parse_sam_aux_fields=true,add_hp_channel=false,variant_caller=vcf_candidate_importer,proposed_variants=/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --postprocess_variants_extra_args=""use_multiallelic_model=True"" 2>&1 | tee /cromwell_root/pepper_output/logs/4_DeepVariant.log. -------. STARTING DEEPVARIANT. I1103 14:39:53.527210 140335058065216 run_deepvariant.py:317] Re-using the d",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:22539,deployability,log,logs,22539,"ype=WGS --customized_model=/opt/dv_models/ont_1121_none/model.ckpt-30200 --ref=/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa --reads=/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam --output_vcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.vcf.gz --output_gvcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.g.vcf.gz --sample_name=""6061-SL-0029"" --intermediate_results_dir=/cromwell_root/pepper_output/dv_intermediate_outputs/ --num_shards=64 --make_examples_extra_args=""alt_aligned_pileup=none,realign_reads=false,min_mapping_quality=1,min_base_quality=1,sort_by_haplotypes=true,parse_sam_aux_fields=true,add_hp_channel=false,variant_caller=vcf_candidate_importer,proposed_variants=/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --postprocess_variants_extra_args=""use_multiallelic_model=True"" 2>&1 | tee /cromwell_root/pepper_output/logs/4_DeepVariant.log. -------. STARTING DEEPVARIANT. I1103 14:39:53.527210 140335058065216 run_deepvariant.py:317] Re-using the directory for intermediate results in /cromwell_root/pepper_output/dv_intermediate_outputs/. I1103 14:39:53.527496 140335058065216 run_deepvariant.py:327] You set --customized_model. Instead of using the default model for WGS, `call_variants` step will load /opt/dv_models/ont_1121_none/model.ckpt-30200 instead. ***** Intermediate results will be written to /cromwell_root/pepper_output/dv_intermediate_outputs/ in docker. ****. ***** Running the command:*****. ( time seq 0 63 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa"" --reads ""/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam"" --examples ""/cromwell_root/pepper_output/dv_intermediate_outputs/make_examples.tfreco",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:22558,deployability,log,log,22558,"d_model=/opt/dv_models/ont_1121_none/model.ckpt-30200 --ref=/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa --reads=/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam --output_vcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.vcf.gz --output_gvcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.g.vcf.gz --sample_name=""6061-SL-0029"" --intermediate_results_dir=/cromwell_root/pepper_output/dv_intermediate_outputs/ --num_shards=64 --make_examples_extra_args=""alt_aligned_pileup=none,realign_reads=false,min_mapping_quality=1,min_base_quality=1,sort_by_haplotypes=true,parse_sam_aux_fields=true,add_hp_channel=false,variant_caller=vcf_candidate_importer,proposed_variants=/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --postprocess_variants_extra_args=""use_multiallelic_model=True"" 2>&1 | tee /cromwell_root/pepper_output/logs/4_DeepVariant.log. -------. STARTING DEEPVARIANT. I1103 14:39:53.527210 140335058065216 run_deepvariant.py:317] Re-using the directory for intermediate results in /cromwell_root/pepper_output/dv_intermediate_outputs/. I1103 14:39:53.527496 140335058065216 run_deepvariant.py:327] You set --customized_model. Instead of using the default model for WGS, `call_variants` step will load /opt/dv_models/ont_1121_none/model.ckpt-30200 instead. ***** Intermediate results will be written to /cromwell_root/pepper_output/dv_intermediate_outputs/ in docker. ****. ***** Running the command:*****. ( time seq 0 63 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa"" --reads ""/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam"" --examples ""/cromwell_root/pepper_output/dv_intermediate_outputs/make_examples.tfrecord@64.gz"" --noadd_h",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:23287,deployability,resourc,resources,23287,"_fields=true,add_hp_channel=false,variant_caller=vcf_candidate_importer,proposed_variants=/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --postprocess_variants_extra_args=""use_multiallelic_model=True"" 2>&1 | tee /cromwell_root/pepper_output/logs/4_DeepVariant.log. -------. STARTING DEEPVARIANT. I1103 14:39:53.527210 140335058065216 run_deepvariant.py:317] Re-using the directory for intermediate results in /cromwell_root/pepper_output/dv_intermediate_outputs/. I1103 14:39:53.527496 140335058065216 run_deepvariant.py:327] You set --customized_model. Instead of using the default model for WGS, `call_variants` step will load /opt/dv_models/ont_1121_none/model.ckpt-30200 instead. ***** Intermediate results will be written to /cromwell_root/pepper_output/dv_intermediate_outputs/ in docker. ****. ***** Running the command:*****. ( time seq 0 63 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa"" --reads ""/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam"" --examples ""/cromwell_root/pepper_output/dv_intermediate_outputs/make_examples.tfrecord@64.gz"" --noadd_hp_channel --alt_aligned_pileup ""none"" --gvcf ""/cromwell_root/pepper_output/dv_intermediate_outputs/gvcf.tfrecord@64.gz"" --min_base_quality ""1"" --min_mapping_quality ""1"" --parse_sam_aux_fields --proposed_variants ""/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --norealign_reads --sample_name ""6061-SL-0029"" --sort_by_haplotypes --variant_caller ""vcf_candidate_importer"" --task {} ). 2021-11-03 14:39:57.038890: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038671: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039009: I tensorflow/stream_e",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:35765,deployability,fail,failed,35765,"3 14:53:07.275555 139714691082048 make_examples_core.py:163] Task 53/64: 2400 candidates (2566 examples) [15.76s elapsed]. I1103 14:53:07.719906 140657934407488 make_examples_core.py:163] Task 27/64: 2739 candidates (3035 examples) [5.45s elapsed]. I1103 14:53:07.775277 140126785840960 make_examples_core.py:163] Task 16/64: 2308 candidates (2374 examples) [2.44s elapsed]. I1103 14:53:08.681667 139823122659136 make_examples_core.py:163] Task 45/64: 2652 candidates (2750 examples) [5.88s elapsed]. I1103 14:53:08.499621 140345388750656 make_examples_core.py:163] Task 50/64: 2517 candidates (2651 examples) [4.04s elapsed]. I1103 14:53:08.077846 139826026686272 make_examples_core.py:163] Task 55/64: 2412 candidates (2556 examples) [8.96s elapsed]. I1103 14:53:08.165700 140447748351808 make_examples_core.py:163] Task 29/64: 2805 candidates (2883 examples) [2.81s elapsed]. I1103 14:53:08.086294 140152994068288 make_examples_core.py:163] Task 4/64: 2265 candidates (2381 examples) [3.39s elapsed]. I1103 14:53:08.115124 140349764978496 make_examples_core.py:163] Task 58/64: 2401 candidates (2511 examples) [13.20s elapsed]. I1103 14:53:07.834557 140529397729088 make_examples_core.py:163] Task 44/64: 2614 candidates (2702 examples) [1.68s elapsed]. I1103 14:53:08.208366 140388734826304 make_examples_core.py:163] Task 13/64: 2206 candidates (2302 examples) [8.06s elapsed]. # the program died here. ```. For one failed task, the input BAM size is 19GB, and allocated disk size is 300GB. **Does the quick start test work on your system?**. Some inputs finish, while others fail using the exact same workflow (PAPI error 10), so it's unlikely to be a coding issue. **Any additional context:**. We have successful runs with inputs of similar sizes that failed with PAPI 10. So I'm wondering if there's an empirical formula for predicting disk space usage. Additionally, is there a way to make DV less verbose? The log file goes to hundreds of MB, which makes debugging less easy. Thanks! Steve.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:35925,deployability,fail,fail,35925,"3 14:53:07.275555 139714691082048 make_examples_core.py:163] Task 53/64: 2400 candidates (2566 examples) [15.76s elapsed]. I1103 14:53:07.719906 140657934407488 make_examples_core.py:163] Task 27/64: 2739 candidates (3035 examples) [5.45s elapsed]. I1103 14:53:07.775277 140126785840960 make_examples_core.py:163] Task 16/64: 2308 candidates (2374 examples) [2.44s elapsed]. I1103 14:53:08.681667 139823122659136 make_examples_core.py:163] Task 45/64: 2652 candidates (2750 examples) [5.88s elapsed]. I1103 14:53:08.499621 140345388750656 make_examples_core.py:163] Task 50/64: 2517 candidates (2651 examples) [4.04s elapsed]. I1103 14:53:08.077846 139826026686272 make_examples_core.py:163] Task 55/64: 2412 candidates (2556 examples) [8.96s elapsed]. I1103 14:53:08.165700 140447748351808 make_examples_core.py:163] Task 29/64: 2805 candidates (2883 examples) [2.81s elapsed]. I1103 14:53:08.086294 140152994068288 make_examples_core.py:163] Task 4/64: 2265 candidates (2381 examples) [3.39s elapsed]. I1103 14:53:08.115124 140349764978496 make_examples_core.py:163] Task 58/64: 2401 candidates (2511 examples) [13.20s elapsed]. I1103 14:53:07.834557 140529397729088 make_examples_core.py:163] Task 44/64: 2614 candidates (2702 examples) [1.68s elapsed]. I1103 14:53:08.208366 140388734826304 make_examples_core.py:163] Task 13/64: 2206 candidates (2302 examples) [8.06s elapsed]. # the program died here. ```. For one failed task, the input BAM size is 19GB, and allocated disk size is 300GB. **Does the quick start test work on your system?**. Some inputs finish, while others fail using the exact same workflow (PAPI error 10), so it's unlikely to be a coding issue. **Any additional context:**. We have successful runs with inputs of similar sizes that failed with PAPI 10. So I'm wondering if there's an empirical formula for predicting disk space usage. Additionally, is there a way to make DV less verbose? The log file goes to hundreds of MB, which makes debugging less easy. Thanks! Steve.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:36103,deployability,fail,failed,36103,"3 14:53:07.275555 139714691082048 make_examples_core.py:163] Task 53/64: 2400 candidates (2566 examples) [15.76s elapsed]. I1103 14:53:07.719906 140657934407488 make_examples_core.py:163] Task 27/64: 2739 candidates (3035 examples) [5.45s elapsed]. I1103 14:53:07.775277 140126785840960 make_examples_core.py:163] Task 16/64: 2308 candidates (2374 examples) [2.44s elapsed]. I1103 14:53:08.681667 139823122659136 make_examples_core.py:163] Task 45/64: 2652 candidates (2750 examples) [5.88s elapsed]. I1103 14:53:08.499621 140345388750656 make_examples_core.py:163] Task 50/64: 2517 candidates (2651 examples) [4.04s elapsed]. I1103 14:53:08.077846 139826026686272 make_examples_core.py:163] Task 55/64: 2412 candidates (2556 examples) [8.96s elapsed]. I1103 14:53:08.165700 140447748351808 make_examples_core.py:163] Task 29/64: 2805 candidates (2883 examples) [2.81s elapsed]. I1103 14:53:08.086294 140152994068288 make_examples_core.py:163] Task 4/64: 2265 candidates (2381 examples) [3.39s elapsed]. I1103 14:53:08.115124 140349764978496 make_examples_core.py:163] Task 58/64: 2401 candidates (2511 examples) [13.20s elapsed]. I1103 14:53:07.834557 140529397729088 make_examples_core.py:163] Task 44/64: 2614 candidates (2702 examples) [1.68s elapsed]. I1103 14:53:08.208366 140388734826304 make_examples_core.py:163] Task 13/64: 2206 candidates (2302 examples) [8.06s elapsed]. # the program died here. ```. For one failed task, the input BAM size is 19GB, and allocated disk size is 300GB. **Does the quick start test work on your system?**. Some inputs finish, while others fail using the exact same workflow (PAPI error 10), so it's unlikely to be a coding issue. **Any additional context:**. We have successful runs with inputs of similar sizes that failed with PAPI 10. So I'm wondering if there's an empirical formula for predicting disk space usage. Additionally, is there a way to make DV less verbose? The log file goes to hundreds of MB, which makes debugging less easy. Thanks! Steve.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:36264,deployability,log,log,36264,"3 14:53:07.275555 139714691082048 make_examples_core.py:163] Task 53/64: 2400 candidates (2566 examples) [15.76s elapsed]. I1103 14:53:07.719906 140657934407488 make_examples_core.py:163] Task 27/64: 2739 candidates (3035 examples) [5.45s elapsed]. I1103 14:53:07.775277 140126785840960 make_examples_core.py:163] Task 16/64: 2308 candidates (2374 examples) [2.44s elapsed]. I1103 14:53:08.681667 139823122659136 make_examples_core.py:163] Task 45/64: 2652 candidates (2750 examples) [5.88s elapsed]. I1103 14:53:08.499621 140345388750656 make_examples_core.py:163] Task 50/64: 2517 candidates (2651 examples) [4.04s elapsed]. I1103 14:53:08.077846 139826026686272 make_examples_core.py:163] Task 55/64: 2412 candidates (2556 examples) [8.96s elapsed]. I1103 14:53:08.165700 140447748351808 make_examples_core.py:163] Task 29/64: 2805 candidates (2883 examples) [2.81s elapsed]. I1103 14:53:08.086294 140152994068288 make_examples_core.py:163] Task 4/64: 2265 candidates (2381 examples) [3.39s elapsed]. I1103 14:53:08.115124 140349764978496 make_examples_core.py:163] Task 58/64: 2401 candidates (2511 examples) [13.20s elapsed]. I1103 14:53:07.834557 140529397729088 make_examples_core.py:163] Task 44/64: 2614 candidates (2702 examples) [1.68s elapsed]. I1103 14:53:08.208366 140388734826304 make_examples_core.py:163] Task 13/64: 2206 candidates (2302 examples) [8.06s elapsed]. # the program died here. ```. For one failed task, the input BAM size is 19GB, and allocated disk size is 300GB. **Does the quick start test work on your system?**. Some inputs finish, while others fail using the exact same workflow (PAPI error 10), so it's unlikely to be a coding issue. **Any additional context:**. We have successful runs with inputs of similar sizes that failed with PAPI 10. So I'm wondering if there's an empirical formula for predicting disk space usage. Additionally, is there a way to make DV less verbose? The log file goes to hundreds of MB, which makes debugging less easy. Thanks! Steve.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:18,energy efficiency,predict,predicting,18,"Empirical formula predicting disk space usage?; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. Yes. **Describe the issue:**. When running WDL workflows backed with PAPI, I get PAPI error 10, which indicates the disk is full. **Setup**. - Operating system: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - DeepVariant version: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - Installation method (Docker, built from source, etc.): Docker. - Type of data: ONT, GRCh38, process by chromosome. **Steps to reproduce:**. ```. # This is the command from Pepper, but judged from the log, the command failed during the DV stage. run_pepper_margin_deepvariant \. call_variant \. -b ~{bam} \. -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:1367,energy efficiency,resourc,resources,1367,":r0.4.1`. - DeepVariant version: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - Installation method (Docker, built from source, etc.): Docker. - Type of data: ONT, GRCh38, process by chromosome. **Steps to reproduce:**. ```. # This is the command from Pepper, but judged from the log, the command failed during the DV stage. run_pepper_margin_deepvariant \. call_variant \. -b ~{bam} \. -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_an",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:2305,energy efficiency,resourc,resources,2305,"14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_SNP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_snp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/1_pepper_snp.log. -------. [11-03-2021 13:40:41] INFO: CALL VARIANT MODULE SELECTED. [11-03-2021 13:40:41] INFO: ONT PROFILE SET FOR VARIANT CALLING. [11-03-2021 13:40:41] INFO: RUN-ID: 11032021_134041. [11-03-2021 13:40:41] INFO: IMAGE OUTPUT: /cromwell_root/pepper_output/pepper_snp/images_11032021_134041/. [11-03-2021 13:40:41] STEP 1: GENERATING IMAGES. [11-03-2021 13:40:41] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 13:40:41] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INT",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:2681,energy efficiency,PROFIL,PROFILE,2681,"OLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_SNP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_snp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/1_pepper_snp.log. -------. [11-03-2021 13:40:41] INFO: CALL VARIANT MODULE SELECTED. [11-03-2021 13:40:41] INFO: ONT PROFILE SET FOR VARIANT CALLING. [11-03-2021 13:40:41] INFO: RUN-ID: 11032021_134041. [11-03-2021 13:40:41] INFO: IMAGE OUTPUT: /cromwell_root/pepper_output/pepper_snp/images_11032021_134041/. [11-03-2021 13:40:41] STEP 1: GENERATING IMAGES. [11-03-2021 13:40:41] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 13:40:41] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 13:40:41] INFO: 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:3817,energy efficiency,PREDICT,PREDICTION,3817,"t/pepper_output/pepper_snp/images_11032021_134041/. [11-03-2021 13:40:41] STEP 1: GENERATING IMAGES. [11-03-2021 13:40:41] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 13:40:41] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 13:40:41] INFO: 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CAND",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:3946,energy efficiency,CPU,CPU,3946,"O: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 13:40:41] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 13:40:41] INFO: 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: P",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:4083,energy efficiency,MODEL,MODEL,4083,"14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 13:40:41] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 13:40:41] INFO: 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: PROCESSING CONTIG: chr10. [11-03-2021 13:53:46] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 345013. [11-03-2021 13:53:53] INFO",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:4089,energy efficiency,LOAD,LOADING,4089,"hr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 13:40:41] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 13:40:41] INFO: 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: PROCESSING CONTIG: chr10. [11-03-2021 13:53:46] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 345013. [11-03-2021 13:53:53] INFO: PROCE",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:4573,energy efficiency,PREDICT,PREDICTION,4573,"49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: PROCESSING CONTIG: chr10. [11-03-2021 13:53:46] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 345013. [11-03-2021 13:53:53] INFO: PROCESSING CONTIG: chr14. [11-03-2021 13:54:02] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 3092. [11-03-2021 13:54:02] TOTAL ELAPSED TIME FOR VARIANT CALLING: 13 Min 21 Sec. real	13m23.051s. user	579m29.953s. sys	11m32.825s. [11-03-2021 13:54:03] INFO: [3/9] RUNNING THE FOLLOWING COMMAND. -------. mv /cromwell_root/pepper_output/pepper_snp/*.vcf /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf; . bgzip /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf; . tabix -p vcf /cr",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:4669,energy efficiency,PREDICT,PREDICTION,4669," 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: PROCESSING CONTIG: chr10. [11-03-2021 13:53:46] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 345013. [11-03-2021 13:53:53] INFO: PROCESSING CONTIG: chr14. [11-03-2021 13:54:02] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 3092. [11-03-2021 13:54:02] TOTAL ELAPSED TIME FOR VARIANT CALLING: 13 Min 21 Sec. real	13m23.051s. user	579m29.953s. sys	11m32.825s. [11-03-2021 13:54:03] INFO: [3/9] RUNNING THE FOLLOWING COMMAND. -------. mv /cromwell_root/pepper_output/pepper_snp/*.vcf /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf; . bgzip /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf; . tabix -p vcf /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; . rm -rf /cromwell_root/pepper_output/pepper_",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:4858,energy efficiency,PREDICT,PREDICTION,4858,"t/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: PROCESSING CONTIG: chr10. [11-03-2021 13:53:46] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 345013. [11-03-2021 13:53:53] INFO: PROCESSING CONTIG: chr14. [11-03-2021 13:54:02] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 3092. [11-03-2021 13:54:02] TOTAL ELAPSED TIME FOR VARIANT CALLING: 13 Min 21 Sec. real	13m23.051s. user	579m29.953s. sys	11m32.825s. [11-03-2021 13:54:03] INFO: [3/9] RUNNING THE FOLLOWING COMMAND. -------. mv /cromwell_root/pepper_output/pepper_snp/*.vcf /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf; . bgzip /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf; . tabix -p vcf /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; . rm -rf /cromwell_root/pepper_output/pepper_snp/; . echo ""CONTIGS FOUND IN PEPPER SNP VCF:""; . zcat /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz | grep -v '#' | cut -f1 | uniq. -------. CONTIGS FOUND IN PEPPER SNP VCF:. chr10",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:6293,energy efficiency,resourc,resources,6293,"579m29.953s. sys	11m32.825s. [11-03-2021 13:54:03] INFO: [3/9] RUNNING THE FOLLOWING COMMAND. -------. mv /cromwell_root/pepper_output/pepper_snp/*.vcf /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf; . bgzip /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf; . tabix -p vcf /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; . rm -rf /cromwell_root/pepper_output/pepper_snp/; . echo ""CONTIGS FOUND IN PEPPER SNP VCF:""; . zcat /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz | grep -v '#' | cut -f1 | uniq. -------. CONTIGS FOUND IN PEPPER SNP VCF:. chr10. chr14. [11-03-2021 13:54:07] INFO: [4/9] RUNNING THE FOLLOWING COMMAND. -------. time margin phase /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz /opt/margin_dir/params/misc/allParams.ont_haplotag.json -t 64 -V -o /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN 2>&1 | tee /cromwell_root/pepper_output/logs/2_margin_haplotag.log;. mv /cromwell_root/pepper_output/*.bam /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam; . samtools index -@64 /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam. -------. Running OpenMP with 64 threads. > Parsing model parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:6892,energy efficiency,model,model,6892,"NFO: [4/9] RUNNING THE FOLLOWING COMMAND. -------. time margin phase /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz /opt/margin_dir/params/misc/allParams.ont_haplotag.json -t 64 -V -o /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN 2>&1 | tee /cromwell_root/pepper_output/logs/2_margin_haplotag.log;. mv /cromwell_root/pepper_output/*.bam /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam; . samtools index -@64 /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam. -------. Running OpenMP with 64 threads. > Parsing model parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimat",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:7308,energy efficiency,estimat,estimated,7308,"/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz /opt/margin_dir/params/misc/allParams.ont_haplotag.json -t 64 -V -o /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN 2>&1 | tee /cromwell_root/pepper_output/logs/2_margin_haplotag.log;. mv /cromwell_root/pepper_output/*.bam /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam; . samtools index -@64 /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam. -------. Running OpenMP with 64 threads. > Parsing model parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:7393,energy efficiency,Estimat,Estimated,7393,"tput/PEPPER_SNP_OUPUT.vcf.gz /opt/margin_dir/params/misc/allParams.ont_haplotag.json -t 64 -V -o /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN 2>&1 | tee /cromwell_root/pepper_output/logs/2_margin_haplotag.log;. mv /cromwell_root/pepper_output/*.bam /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam; . samtools index -@64 /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam. -------. Running OpenMP with 64 threads. > Parsing model parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:7463,energy efficiency,Estimat,Estimated,7463,"_haplotag.json -t 64 -V -o /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN 2>&1 | tee /cromwell_root/pepper_output/logs/2_margin_haplotag.log;. mv /cromwell_root/pepper_output/*.bam /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam; . samtools index -@64 /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam. -------. Running OpenMP with 64 threads. > Parsing model parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time r",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:7533,energy efficiency,Estimat,Estimated,7533,"PEPPER_SNP_MARGIN 2>&1 | tee /cromwell_root/pepper_output/logs/2_margin_haplotag.log;. mv /cromwell_root/pepper_output/*.bam /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam; . samtools index -@64 /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam. -------. Running OpenMP with 64 threads. > Parsing model parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time re",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:7604,energy efficiency,Estimat,Estimated,7604,"_haplotag.log;. mv /cromwell_root/pepper_output/*.bam /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam; . samtools index -@64 /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam. -------. Running OpenMP with 64 threads. > Parsing model parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time rema",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:7675,energy efficiency,Estimat,Estimated,7675,"pper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam; . samtools index -@64 /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam. -------. Running OpenMP with 64 threads. > Parsing model parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remain",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:7746,energy efficiency,Estimat,Estimated,7746," index -@64 /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam. -------. Running OpenMP with 64 threads. > Parsing model parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remainin",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:7817,energy efficiency,Estimat,Estimated,7817,"N.haplotagged.bam. -------. Running OpenMP with 64 threads. > Parsing model parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining:",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:7888,energy efficiency,Estimat,Estimated,7888,"odel parameters from file: /opt/margin_dir/params/misc/allParams.ont_haplotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging t",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:7959,energy efficiency,Estimat,Estimated,7959,"plotag.json. > Parsed 346237 HET VCF entries from /cromwell_root/pepper_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:8029,energy efficiency,Estimat,Estimated,8029,"r_output/PEPPER_SNP_OUPUT.vcf.gz; skipped 0 for region, 0 for not being PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Fi",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:8100,energy efficiency,Estimat,Estimated,8100," PASS, 115453 for being homozygous, 0 for being INDEL. > Set up bam chunker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.9",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:8171,energy efficiency,Estimat,Estimated,8171,"nker in 20s with chunk size 100000 and overlap 10000 (for region=chr10,chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:8242,energy efficiency,Estimat,Estimated,8242,"chr14), resulting in 1342 total chunks. > Ordering chunks by estimated depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:8313,energy efficiency,Estimat,Estimated,8313,"depth. > Setup complete, beginning run. > Polishing 3% complete (46/1342). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] I",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:8384,energy efficiency,Estimat,Estimated,8384,"2). Estimated time remaining: unknown. > Polishing 5% complete (80/1342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] INFO: [5/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_hp call_",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:8452,energy efficiency,Estimat,Estimated,8452,"342). Estimated time remaining: 3m 10s. > Polishing 9% complete (131/1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] INFO: [5/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_hp call_variant -b /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MAR",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:8521,energy efficiency,Estimat,Estimated,8521,"1342). Estimated time remaining: 2m 51s. > Polishing 14% complete (191/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] INFO: [5/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_hp call_variant -b /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam -f /cromwell_root/broad-dsde-methods-long-reads/r",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:8590,energy efficiency,Estimat,Estimated,8590,"1/1342). Estimated time remaining: 2m 39s. > Polishing 17% complete (233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] INFO: [5/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_hp call_variant -b /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analy",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:8659,energy efficiency,Estimat,Estimated,8659,"233/1342). Estimated time remaining: 2m 36s. > Polishing 19% complete (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] INFO: [5/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_hp call_variant -b /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_HP_R941_ONT_V4.pkl -o /",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:8728,energy efficiency,Estimat,Estimated,8728," (259/1342). Estimated time remaining: 2m 33s. > Polishing 25% complete (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] INFO: [5/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_hp call_variant -b /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_HP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_hp/ -s 6061-SL-0029 -w 4 -bs 64 --",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:8797,energy efficiency,Estimat,Estimated,8797,"te (338/1342). Estimated time remaining: 2m 24s. > Polishing 31% complete (418/1342). Estimated time remaining: 2m 15s. > Polishing 36% complete (487/1342). Estimated time remaining: 2m 2s. > Polishing 40% complete (547/1342). Estimated time remaining: 1m 57s. > Polishing 45% complete (605/1342). Estimated time remaining: 1m 45s. > Polishing 48% complete (650/1342). Estimated time remaining: 1m 39s. > Polishing 54% complete (725/1342). Estimated time remaining: 1m 27s. > Polishing 60% complete (812/1342). Estimated time remaining: 1m 16s. > Polishing 68% complete (913/1342). Estimated time remaining: 59s. > Polishing 73% complete (984/1342). Estimated time remaining: 50s. > Polishing 75% complete (1015/1342). Estimated time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] INFO: [5/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_hp call_variant -b /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_HP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_hp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/3_pepper_hp.log. ---",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:9525,energy efficiency,resourc,resources,9525," time remaining: 47s. > Polishing 77% complete (1036/1342). Estimated time remaining: 43s. > Polishing 78% complete (1058/1342). Estimated time remaining: 41s. > Polishing 84% complete (1138/1342). Estimated time remaining: 30s. > Polishing 92% complete (1235/1342). Estimated time remaining: 14s. > Starting merge. > Merging results from 1342 chunks. > Merging took 7s. > Merge cleanup took 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] INFO: [5/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_hp call_variant -b /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_HP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_hp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/3_pepper_hp.log. -------. [11-03-2021 14:13:05] INFO: CALL VARIANT MODULE SELECTED. [11-03-2021 14:13:05] INFO: ONT VARIANT CALLING PROFILE SET. [11-03-2021 14:13:05] INFO: RUN-ID: 11032021_141305. [11-03-2021 14:13:05] INFO: IMAGE OUTPUT: /cromwell_root/pepper_output/pepper_hp/images_11032021_141305/. [11-03-2021 14:13:05] STEP 1: GENERATING IMAGES:. [11-03-2021 14:13:05] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 14:13:05] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895 TOTAL BASES: 3094460376. [11-03-2021 14:13:05] STARTING THRE",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:9914,energy efficiency,PROFIL,PROFILE,9914,"ook 0s. Separated reads with divisions: H1 475116, H2 453908, and H0 159194. > Wrote haplotyped bams in 1m 43s. > Finished phasing in 18m 46s. real	18m47.373s. user	245m51.236s. sys	2m8.903s. mv: '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' and '/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam' are the same file. [11-03-2021 14:13:04] INFO: [5/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_hp call_variant -b /cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -m /opt/pepper_models/PEPPER_HP_R941_ONT_V4.pkl -o /cromwell_root/pepper_output/pepper_hp/ -s 6061-SL-0029 -w 4 -bs 64 --ont 2>&1 | tee /cromwell_root/pepper_output/logs/3_pepper_hp.log. -------. [11-03-2021 14:13:05] INFO: CALL VARIANT MODULE SELECTED. [11-03-2021 14:13:05] INFO: ONT VARIANT CALLING PROFILE SET. [11-03-2021 14:13:05] INFO: RUN-ID: 11032021_141305. [11-03-2021 14:13:05] INFO: IMAGE OUTPUT: /cromwell_root/pepper_output/pepper_hp/images_11032021_141305/. [11-03-2021 14:13:05] STEP 1: GENERATING IMAGES:. [11-03-2021 14:13:05] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 14:13:05] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895 TOTAL BASES: 3094460376. [11-03-2021 14:13:05] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 14:13:05] INFO: [THREAD 00] 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. [11-03-2021 14:13:06] INFO: [THREAD 00] 20/483 COMPLETE (4%) [ELAPSED TIME: 0 Min 0 Sec]. [11-03-2021 14:13:06] INFO: [THREAD 00] 30/483 COMPLETE (6%) [ELAPSED TIME: 0 Min 0 Sec]. [11-03-2021 14:13:06] INFO: [THREAD 00] 40/483 COMPLETE (8%) [ELAPSED TIME: 0 Min 0 Sec]. [11",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15330,energy efficiency,CPU,CPU,15330,1 14:17:10] INFO: [THREAD 00] 420/483 COMPLETE (86%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:10] INFO: [THREAD 00] 430/483 COMPLETE (89%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 440/483 COMPLETE (91%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 450/483 COMPLETE (93%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 460/483 COMPLETE (95%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 470/483 COMPLETE (97%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 480/483 COMPLETE (99%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THRE,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15467,energy efficiency,MODEL,MODEL,15467, (89%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 440/483 COMPLETE (91%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 450/483 COMPLETE (93%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 460/483 COMPLETE (95%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 470/483 COMPLETE (97%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 480/483 COMPLETE (99%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SU,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15473,energy efficiency,LOAD,LOADING,15473,[ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 440/483 COMPLETE (91%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 450/483 COMPLETE (93%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 460/483 COMPLETE (95%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 470/483 COMPLETE (97%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 480/483 COMPLETE (99%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFU,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:20109,energy efficiency,PREDICT,PREDICTION,20109,"1:55] INFO: THREAD 50 FINISHED SUCCESSFULLY. [11-03-2021 14:31:57] INFO: THREAD 25 FINISHED SUCCESSFULLY. [11-03-2021 14:31:58] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:32:00] INFO: THREAD 52 FINISHED SUCCESSFULLY. [11-03-2021 14:32:00] INFO: THREAD 32 FINISHED SUCCESSFULLY. [11-03-2021 14:32:01] INFO: THREAD 23 FINISHED SUCCESSFULLY. [11-03-2021 14:32:03] INFO: THREAD 30 FINISHED SUCCESSFULLY. [11-03-2021 14:32:03] INFO: THREAD 43 FINISHED SUCCESSFULLY. [11-03-2021 14:32:03] INFO: THREAD 11 FINISHED SUCCESSFULLY. [11-03-2021 14:32:04] INFO: THREAD 1 FINISHED SUCCESSFULLY. [11-03-2021 14:32:07] INFO: THREAD 13 FINISHED SUCCESSFULLY. [11-03-2021 14:32:07] INFO: THREAD 59 FINISHED SUCCESSFULLY. [11-03-2021 14:32:12] INFO: THREAD 57 FINISHED SUCCESSFULLY. [11-03-2021 14:32:20] INFO: THREAD 47 FINISHED SUCCESSFULLY. [11-03-2021 14:32:23] INFO: THREAD 27 FINISHED SUCCESSFULLY. [11-03-2021 14:32:23] INFO: THREAD 29 FINISHED SUCCESSFULLY. [11-03-2021 14:32:23] INFO: FINISHED PREDICTION. [11-03-2021 14:32:23] INFO: ELAPSED TIME: 14 Min 14 Sec. [11-03-2021 14:32:23] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 14:32:23] TOTAL ELAPSED TIME FOR INFERENCE: 14 Min 14 Sec. [11-03-2021 14:32:23] STEP 3.1: CALLING VARIANTS. [11-03-2021 14:32:23] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/. [11-03-2021 14:32:23] INFO: PROCESSING HAPLOTAG: 0. [11-03-2021 14:32:24] INFO: PROCESSING CONTIG: chr10. [11-03-2021 14:39:30] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 378085 TOTAL TIME SPENT: 7 Min 6 Sec. [11-03-2021 14:39:37] INFO: PROCESSING CONTIG: chr14. [11-03-2021 14:39:48] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 2550 TOTAL TIME SPENT: 0 Min 11 Sec. [11-03-2021 14:39:49] TOTAL ELAPSED TIME FOR VARIANT CALLING: 26 Min 43 Sec. real	26m44.555s. user	1220m53.668s. sys	15m35.409s. [11-03-2021 14:39:49] INFO: [6/9] RUNNING THE FOLLOWING COMMAND. -------. mv /cromwell_root/pepper_output/pepper_hp/*.vcf /cromwell_root/pepper_output/P",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:20206,energy efficiency,PREDICT,PREDICTION,20206,"SSFULLY. [11-03-2021 14:31:58] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:32:00] INFO: THREAD 52 FINISHED SUCCESSFULLY. [11-03-2021 14:32:00] INFO: THREAD 32 FINISHED SUCCESSFULLY. [11-03-2021 14:32:01] INFO: THREAD 23 FINISHED SUCCESSFULLY. [11-03-2021 14:32:03] INFO: THREAD 30 FINISHED SUCCESSFULLY. [11-03-2021 14:32:03] INFO: THREAD 43 FINISHED SUCCESSFULLY. [11-03-2021 14:32:03] INFO: THREAD 11 FINISHED SUCCESSFULLY. [11-03-2021 14:32:04] INFO: THREAD 1 FINISHED SUCCESSFULLY. [11-03-2021 14:32:07] INFO: THREAD 13 FINISHED SUCCESSFULLY. [11-03-2021 14:32:07] INFO: THREAD 59 FINISHED SUCCESSFULLY. [11-03-2021 14:32:12] INFO: THREAD 57 FINISHED SUCCESSFULLY. [11-03-2021 14:32:20] INFO: THREAD 47 FINISHED SUCCESSFULLY. [11-03-2021 14:32:23] INFO: THREAD 27 FINISHED SUCCESSFULLY. [11-03-2021 14:32:23] INFO: THREAD 29 FINISHED SUCCESSFULLY. [11-03-2021 14:32:23] INFO: FINISHED PREDICTION. [11-03-2021 14:32:23] INFO: ELAPSED TIME: 14 Min 14 Sec. [11-03-2021 14:32:23] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 14:32:23] TOTAL ELAPSED TIME FOR INFERENCE: 14 Min 14 Sec. [11-03-2021 14:32:23] STEP 3.1: CALLING VARIANTS. [11-03-2021 14:32:23] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/. [11-03-2021 14:32:23] INFO: PROCESSING HAPLOTAG: 0. [11-03-2021 14:32:24] INFO: PROCESSING CONTIG: chr10. [11-03-2021 14:39:30] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 378085 TOTAL TIME SPENT: 7 Min 6 Sec. [11-03-2021 14:39:37] INFO: PROCESSING CONTIG: chr14. [11-03-2021 14:39:48] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 2550 TOTAL TIME SPENT: 0 Min 11 Sec. [11-03-2021 14:39:49] TOTAL ELAPSED TIME FOR VARIANT CALLING: 26 Min 43 Sec. real	26m44.555s. user	1220m53.668s. sys	15m35.409s. [11-03-2021 14:39:49] INFO: [6/9] RUNNING THE FOLLOWING COMMAND. -------. mv /cromwell_root/pepper_output/pepper_hp/*.vcf /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf; . bgzip /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf; . tabix -p vcf /cro",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:21597,energy efficiency,model,model,21597," TOTAL CANDIDATES FOUND: 378085 TOTAL TIME SPENT: 7 Min 6 Sec. [11-03-2021 14:39:37] INFO: PROCESSING CONTIG: chr14. [11-03-2021 14:39:48] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 2550 TOTAL TIME SPENT: 0 Min 11 Sec. [11-03-2021 14:39:49] TOTAL ELAPSED TIME FOR VARIANT CALLING: 26 Min 43 Sec. real	26m44.555s. user	1220m53.668s. sys	15m35.409s. [11-03-2021 14:39:49] INFO: [6/9] RUNNING THE FOLLOWING COMMAND. -------. mv /cromwell_root/pepper_output/pepper_hp/*.vcf /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf; . bgzip /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf; . tabix -p vcf /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz; . rm -rf /cromwell_root/pepper_output/pepper_hp/. -------. [11-03-2021 14:39:53] INFO: [7/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output/dv_intermediate_outputs/; . echo ""STARTING DEEPVARIANT""; . time /opt/deepvariant/bin/run_deepvariant --model_type=WGS --customized_model=/opt/dv_models/ont_1121_none/model.ckpt-30200 --ref=/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa --reads=/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam --output_vcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.vcf.gz --output_gvcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.g.vcf.gz --sample_name=""6061-SL-0029"" --intermediate_results_dir=/cromwell_root/pepper_output/dv_intermediate_outputs/ --num_shards=64 --make_examples_extra_args=""alt_aligned_pileup=none,realign_reads=false,min_mapping_quality=1,min_base_quality=1,sort_by_haplotypes=true,parse_sam_aux_fields=true,add_hp_channel=false,variant_caller=vcf_candidate_importer,proposed_variants=/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --postprocess_variants_extra_args=""use_multiallelic_model=True"" 2>&1 | tee /cromwell_root/pepper_output/logs/4_DeepVariant.log. -------. STARTING DEEPVARIANT. I1103 ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:21665,energy efficiency,resourc,resources,21665,"2021 14:39:37] INFO: PROCESSING CONTIG: chr14. [11-03-2021 14:39:48] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 2550 TOTAL TIME SPENT: 0 Min 11 Sec. [11-03-2021 14:39:49] TOTAL ELAPSED TIME FOR VARIANT CALLING: 26 Min 43 Sec. real	26m44.555s. user	1220m53.668s. sys	15m35.409s. [11-03-2021 14:39:49] INFO: [6/9] RUNNING THE FOLLOWING COMMAND. -------. mv /cromwell_root/pepper_output/pepper_hp/*.vcf /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf; . bgzip /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf; . tabix -p vcf /cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz; . rm -rf /cromwell_root/pepper_output/pepper_hp/. -------. [11-03-2021 14:39:53] INFO: [7/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output/dv_intermediate_outputs/; . echo ""STARTING DEEPVARIANT""; . time /opt/deepvariant/bin/run_deepvariant --model_type=WGS --customized_model=/opt/dv_models/ont_1121_none/model.ckpt-30200 --ref=/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa --reads=/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam --output_vcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.vcf.gz --output_gvcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.g.vcf.gz --sample_name=""6061-SL-0029"" --intermediate_results_dir=/cromwell_root/pepper_output/dv_intermediate_outputs/ --num_shards=64 --make_examples_extra_args=""alt_aligned_pileup=none,realign_reads=false,min_mapping_quality=1,min_base_quality=1,sort_by_haplotypes=true,parse_sam_aux_fields=true,add_hp_channel=false,variant_caller=vcf_candidate_importer,proposed_variants=/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --postprocess_variants_extra_args=""use_multiallelic_model=True"" 2>&1 | tee /cromwell_root/pepper_output/logs/4_DeepVariant.log. -------. STARTING DEEPVARIANT. I1103 14:39:53.527210 140335058065216 run_deepvariant.py:317] Re-using the d",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:22881,energy efficiency,model,model,22881,"ONT.10_14-p.deepvariant_pepper.vcf.gz --output_gvcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.g.vcf.gz --sample_name=""6061-SL-0029"" --intermediate_results_dir=/cromwell_root/pepper_output/dv_intermediate_outputs/ --num_shards=64 --make_examples_extra_args=""alt_aligned_pileup=none,realign_reads=false,min_mapping_quality=1,min_base_quality=1,sort_by_haplotypes=true,parse_sam_aux_fields=true,add_hp_channel=false,variant_caller=vcf_candidate_importer,proposed_variants=/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --postprocess_variants_extra_args=""use_multiallelic_model=True"" 2>&1 | tee /cromwell_root/pepper_output/logs/4_DeepVariant.log. -------. STARTING DEEPVARIANT. I1103 14:39:53.527210 140335058065216 run_deepvariant.py:317] Re-using the directory for intermediate results in /cromwell_root/pepper_output/dv_intermediate_outputs/. I1103 14:39:53.527496 140335058065216 run_deepvariant.py:327] You set --customized_model. Instead of using the default model for WGS, `call_variants` step will load /opt/dv_models/ont_1121_none/model.ckpt-30200 instead. ***** Intermediate results will be written to /cromwell_root/pepper_output/dv_intermediate_outputs/ in docker. ****. ***** Running the command:*****. ( time seq 0 63 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa"" --reads ""/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam"" --examples ""/cromwell_root/pepper_output/dv_intermediate_outputs/make_examples.tfrecord@64.gz"" --noadd_hp_channel --alt_aligned_pileup ""none"" --gvcf ""/cromwell_root/pepper_output/dv_intermediate_outputs/gvcf.tfrecord@64.gz"" --min_base_quality ""1"" --min_mapping_quality ""1"" --parse_sam_aux_fields --proposed_variants ""/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --norealign_reads --sample_name ""6061-SL-0029"" --sort_by_h",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:22922,energy efficiency,load,load,22922,"output_gvcf=/cromwell_root/pepper_output/T708322218_ONT.10_14-p.deepvariant_pepper.g.vcf.gz --sample_name=""6061-SL-0029"" --intermediate_results_dir=/cromwell_root/pepper_output/dv_intermediate_outputs/ --num_shards=64 --make_examples_extra_args=""alt_aligned_pileup=none,realign_reads=false,min_mapping_quality=1,min_base_quality=1,sort_by_haplotypes=true,parse_sam_aux_fields=true,add_hp_channel=false,variant_caller=vcf_candidate_importer,proposed_variants=/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --postprocess_variants_extra_args=""use_multiallelic_model=True"" 2>&1 | tee /cromwell_root/pepper_output/logs/4_DeepVariant.log. -------. STARTING DEEPVARIANT. I1103 14:39:53.527210 140335058065216 run_deepvariant.py:317] Re-using the directory for intermediate results in /cromwell_root/pepper_output/dv_intermediate_outputs/. I1103 14:39:53.527496 140335058065216 run_deepvariant.py:327] You set --customized_model. Instead of using the default model for WGS, `call_variants` step will load /opt/dv_models/ont_1121_none/model.ckpt-30200 instead. ***** Intermediate results will be written to /cromwell_root/pepper_output/dv_intermediate_outputs/ in docker. ****. ***** Running the command:*****. ( time seq 0 63 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa"" --reads ""/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam"" --examples ""/cromwell_root/pepper_output/dv_intermediate_outputs/make_examples.tfrecord@64.gz"" --noadd_hp_channel --alt_aligned_pileup ""none"" --gvcf ""/cromwell_root/pepper_output/dv_intermediate_outputs/gvcf.tfrecord@64.gz"" --min_base_quality ""1"" --min_mapping_quality ""1"" --parse_sam_aux_fields --proposed_variants ""/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --norealign_reads --sample_name ""6061-SL-0029"" --sort_by_haplotypes --variant_caller ""vcf_candidat",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:22956,energy efficiency,model,model,22956,"utput/T708322218_ONT.10_14-p.deepvariant_pepper.g.vcf.gz --sample_name=""6061-SL-0029"" --intermediate_results_dir=/cromwell_root/pepper_output/dv_intermediate_outputs/ --num_shards=64 --make_examples_extra_args=""alt_aligned_pileup=none,realign_reads=false,min_mapping_quality=1,min_base_quality=1,sort_by_haplotypes=true,parse_sam_aux_fields=true,add_hp_channel=false,variant_caller=vcf_candidate_importer,proposed_variants=/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --postprocess_variants_extra_args=""use_multiallelic_model=True"" 2>&1 | tee /cromwell_root/pepper_output/logs/4_DeepVariant.log. -------. STARTING DEEPVARIANT. I1103 14:39:53.527210 140335058065216 run_deepvariant.py:317] Re-using the directory for intermediate results in /cromwell_root/pepper_output/dv_intermediate_outputs/. I1103 14:39:53.527496 140335058065216 run_deepvariant.py:327] You set --customized_model. Instead of using the default model for WGS, `call_variants` step will load /opt/dv_models/ont_1121_none/model.ckpt-30200 instead. ***** Intermediate results will be written to /cromwell_root/pepper_output/dv_intermediate_outputs/ in docker. ****. ***** Running the command:*****. ( time seq 0 63 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa"" --reads ""/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam"" --examples ""/cromwell_root/pepper_output/dv_intermediate_outputs/make_examples.tfrecord@64.gz"" --noadd_hp_channel --alt_aligned_pileup ""none"" --gvcf ""/cromwell_root/pepper_output/dv_intermediate_outputs/gvcf.tfrecord@64.gz"" --min_base_quality ""1"" --min_mapping_quality ""1"" --parse_sam_aux_fields --proposed_variants ""/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --norealign_reads --sample_name ""6061-SL-0029"" --sort_by_haplotypes --variant_caller ""vcf_candidate_importer"" --task {} ). 2021-11-03",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:23287,energy efficiency,resourc,resources,23287,"_fields=true,add_hp_channel=false,variant_caller=vcf_candidate_importer,proposed_variants=/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --postprocess_variants_extra_args=""use_multiallelic_model=True"" 2>&1 | tee /cromwell_root/pepper_output/logs/4_DeepVariant.log. -------. STARTING DEEPVARIANT. I1103 14:39:53.527210 140335058065216 run_deepvariant.py:317] Re-using the directory for intermediate results in /cromwell_root/pepper_output/dv_intermediate_outputs/. I1103 14:39:53.527496 140335058065216 run_deepvariant.py:327] You set --customized_model. Instead of using the default model for WGS, `call_variants` step will load /opt/dv_models/ont_1121_none/model.ckpt-30200 instead. ***** Intermediate results will be written to /cromwell_root/pepper_output/dv_intermediate_outputs/ in docker. ****. ***** Running the command:*****. ( time seq 0 63 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa"" --reads ""/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam"" --examples ""/cromwell_root/pepper_output/dv_intermediate_outputs/make_examples.tfrecord@64.gz"" --noadd_hp_channel --alt_aligned_pileup ""none"" --gvcf ""/cromwell_root/pepper_output/dv_intermediate_outputs/gvcf.tfrecord@64.gz"" --min_base_quality ""1"" --min_mapping_quality ""1"" --parse_sam_aux_fields --proposed_variants ""/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --norealign_reads --sample_name ""6061-SL-0029"" --sort_by_haplotypes --variant_caller ""vcf_candidate_importer"" --task {} ). 2021-11-03 14:39:57.038890: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038671: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039009: I tensorflow/stream_e",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:35810,energy efficiency,alloc,allocated,35810,"3 14:53:07.275555 139714691082048 make_examples_core.py:163] Task 53/64: 2400 candidates (2566 examples) [15.76s elapsed]. I1103 14:53:07.719906 140657934407488 make_examples_core.py:163] Task 27/64: 2739 candidates (3035 examples) [5.45s elapsed]. I1103 14:53:07.775277 140126785840960 make_examples_core.py:163] Task 16/64: 2308 candidates (2374 examples) [2.44s elapsed]. I1103 14:53:08.681667 139823122659136 make_examples_core.py:163] Task 45/64: 2652 candidates (2750 examples) [5.88s elapsed]. I1103 14:53:08.499621 140345388750656 make_examples_core.py:163] Task 50/64: 2517 candidates (2651 examples) [4.04s elapsed]. I1103 14:53:08.077846 139826026686272 make_examples_core.py:163] Task 55/64: 2412 candidates (2556 examples) [8.96s elapsed]. I1103 14:53:08.165700 140447748351808 make_examples_core.py:163] Task 29/64: 2805 candidates (2883 examples) [2.81s elapsed]. I1103 14:53:08.086294 140152994068288 make_examples_core.py:163] Task 4/64: 2265 candidates (2381 examples) [3.39s elapsed]. I1103 14:53:08.115124 140349764978496 make_examples_core.py:163] Task 58/64: 2401 candidates (2511 examples) [13.20s elapsed]. I1103 14:53:07.834557 140529397729088 make_examples_core.py:163] Task 44/64: 2614 candidates (2702 examples) [1.68s elapsed]. I1103 14:53:08.208366 140388734826304 make_examples_core.py:163] Task 13/64: 2206 candidates (2302 examples) [8.06s elapsed]. # the program died here. ```. For one failed task, the input BAM size is 19GB, and allocated disk size is 300GB. **Does the quick start test work on your system?**. Some inputs finish, while others fail using the exact same workflow (PAPI error 10), so it's unlikely to be a coding issue. **Any additional context:**. We have successful runs with inputs of similar sizes that failed with PAPI 10. So I'm wondering if there's an empirical formula for predicting disk space usage. Additionally, is there a way to make DV less verbose? The log file goes to hundreds of MB, which makes debugging less easy. Thanks! Steve.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:36177,energy efficiency,predict,predicting,36177,"3 14:53:07.275555 139714691082048 make_examples_core.py:163] Task 53/64: 2400 candidates (2566 examples) [15.76s elapsed]. I1103 14:53:07.719906 140657934407488 make_examples_core.py:163] Task 27/64: 2739 candidates (3035 examples) [5.45s elapsed]. I1103 14:53:07.775277 140126785840960 make_examples_core.py:163] Task 16/64: 2308 candidates (2374 examples) [2.44s elapsed]. I1103 14:53:08.681667 139823122659136 make_examples_core.py:163] Task 45/64: 2652 candidates (2750 examples) [5.88s elapsed]. I1103 14:53:08.499621 140345388750656 make_examples_core.py:163] Task 50/64: 2517 candidates (2651 examples) [4.04s elapsed]. I1103 14:53:08.077846 139826026686272 make_examples_core.py:163] Task 55/64: 2412 candidates (2556 examples) [8.96s elapsed]. I1103 14:53:08.165700 140447748351808 make_examples_core.py:163] Task 29/64: 2805 candidates (2883 examples) [2.81s elapsed]. I1103 14:53:08.086294 140152994068288 make_examples_core.py:163] Task 4/64: 2265 candidates (2381 examples) [3.39s elapsed]. I1103 14:53:08.115124 140349764978496 make_examples_core.py:163] Task 58/64: 2401 candidates (2511 examples) [13.20s elapsed]. I1103 14:53:07.834557 140529397729088 make_examples_core.py:163] Task 44/64: 2614 candidates (2702 examples) [1.68s elapsed]. I1103 14:53:08.208366 140388734826304 make_examples_core.py:163] Task 13/64: 2206 candidates (2302 examples) [8.06s elapsed]. # the program died here. ```. For one failed task, the input BAM size is 19GB, and allocated disk size is 300GB. **Does the quick start test work on your system?**. Some inputs finish, while others fail using the exact same workflow (PAPI error 10), so it's unlikely to be a coding issue. **Any additional context:**. We have successful runs with inputs of similar sizes that failed with PAPI 10. So I'm wondering if there's an empirical formula for predicting disk space usage. Additionally, is there a way to make DV less verbose? The log file goes to hundreds of MB, which makes debugging less easy. Thanks! Steve.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:396,integrability,version,version,396,"Empirical formula predicting disk space usage?; **Have you checked the FAQ? https://github.com/google/deepvariant/blob/r1.2/docs/FAQ.md**:. Yes. **Describe the issue:**. When running WDL workflows backed with PAPI, I get PAPI error 10, which indicates the disk is full. **Setup**. - Operating system: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - DeepVariant version: Docker image coming with DV-Margin-Pepper: `kishwars/pepper_deepvariant:r0.4.1`. - Installation method (Docker, built from source, etc.): Docker. - Type of data: ONT, GRCh38, process by chromosome. **Steps to reproduce:**. ```. # This is the command from Pepper, but judged from the log, the command failed during the DV stage. run_pepper_margin_deepvariant \. call_variant \. -b ~{bam} \. -f ~{ref_fasta} \. -t ""${num_core}"" \. -s ""${SM}"" \. -o ""~{output_root}"" \. -p ""~{prefix}"" \. --gvcf \. --phased_output \. --ont. ```. Relevant part of the log file (which is over 200MB):. ```. run_pepper_margin_deepvariant call_variant -b /cromwell_root/fc-1aea7e86-3760-4d8f-9f98-d199e815e8e2/7a319de0-a99a-4429-84a6-20c8f2b9373f/ONTWholeGenome/977d19ea-5082-4605-8595-803df94ec9dc/call-CallVariants/CallVariants/2ab0b7ef-d657-4d70-9d3c-3b9b74720a00/call-size_balanced_scatter/shard-2/cacheCopy/T708322218_ONT.10_14-p.bam -f /cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa -t 64 -s 6061-SL-0029 -o /cromwell_root/pepper_output -p T708322218_ONT.10_14-p.deepvariant_pepper --gvcf --phased_output --ont. [11-03-2021 13:40:40] INFO: VARIANT CALLING MODULE SELECTED. [11-03-2021 13:40:40] INFO: [1/9] RUNNING THE FOLLOWING COMMAND. -------. mkdir -p /cromwell_root/pepper_output; . mkdir -p /cromwell_root/pepper_output/logs; . mkdir -p /cromwell_root/pepper_output/intermediate_files;. -------. [11-03-2021 13:40:40] INFO: [2/9] RUNNING THE FOLLOWING COMMAND. -------. time pepper_snp call_variant -b /cromwell_root/fc-1aea7e86-",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:4134,integrability,BATCH,BATCHES,4134,"hr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 13:40:41] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 13:40:41] INFO: 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: PROCESSING CONTIG: chr10. [11-03-2021 13:53:46] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 345013. [11-03-2021 13:53:53] INFO: PROCESSING CONTIG: chr14. [11-03-2021 13:54:02] IN",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:4186,integrability,BATCH,BATCHES,4186,"1-03-2021 13:40:41] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 13:40:41] INFO: 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: PROCESSING CONTIG: chr10. [11-03-2021 13:53:46] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 345013. [11-03-2021 13:53:53] INFO: PROCESSING CONTIG: chr14. [11-03-2021 13:54:02] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUN",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:4239,integrability,BATCH,BATCHES,4239,"ERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 13:40:41] INFO: 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: PROCESSING CONTIG: chr10. [11-03-2021 13:53:46] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 345013. [11-03-2021 13:53:53] INFO: PROCESSING CONTIG: chr14. [11-03-2021 13:54:02] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 3092. [11-03-2021 13:54:02] TOTAL ELAPSED TIME FOR",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:4292,integrability,BATCH,BATCHES,4292," 0 FOR 483 INTERVALS. [11-03-2021 13:40:41] INFO: 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: PROCESSING CONTIG: chr10. [11-03-2021 13:53:46] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 345013. [11-03-2021 13:53:53] INFO: PROCESSING CONTIG: chr14. [11-03-2021 13:54:02] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 3092. [11-03-2021 13:54:02] TOTAL ELAPSED TIME FOR VARIANT CALLING: 13 Min 21 Sec. real	13m23.051s. use",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:4345,integrability,BATCH,BATCHES,4345,"483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: PROCESSING CONTIG: chr10. [11-03-2021 13:53:46] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 345013. [11-03-2021 13:53:53] INFO: PROCESSING CONTIG: chr14. [11-03-2021 13:54:02] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 3092. [11-03-2021 13:54:02] TOTAL ELAPSED TIME FOR VARIANT CALLING: 13 Min 21 Sec. real	13m23.051s. user	579m29.953s. sys	11m32.825s. [11-03-2021 13:54:03] ",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:4398,integrability,BATCH,BATCHES,4398,"1-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: PROCESSING CONTIG: chr10. [11-03-2021 13:53:46] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 345013. [11-03-2021 13:53:53] INFO: PROCESSING CONTIG: chr14. [11-03-2021 13:54:02] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 3092. [11-03-2021 13:54:02] TOTAL ELAPSED TIME FOR VARIANT CALLING: 13 Min 21 Sec. real	13m23.051s. user	579m29.953s. sys	11m32.825s. [11-03-2021 13:54:03] INFO: [3/9] RUNNING THE FOLLOWING COMMAND. -------. m",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:4451,integrability,BATCH,BATCHES,4451,"PSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44] INFO: PROCESSING CONTIG: chr10. [11-03-2021 13:53:46] INFO: FINISHED PROCESSING chr10, TOTAL CANDIDATES FOUND: 345013. [11-03-2021 13:53:53] INFO: PROCESSING CONTIG: chr14. [11-03-2021 13:54:02] INFO: FINISHED PROCESSING chr14, TOTAL CANDIDATES FOUND: 3092. [11-03-2021 13:54:02] TOTAL ELAPSED TIME FOR VARIANT CALLING: 13 Min 21 Sec. real	13m23.051s. user	579m29.953s. sys	11m32.825s. [11-03-2021 13:54:03] INFO: [3/9] RUNNING THE FOLLOWING COMMAND. -------. mv /cromwell_root/pepper_output/pepper_snp/*.vcf /crom",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15518,integrability,BATCH,BATCHES,15518,7:11] INFO: [THREAD 00] 440/483 COMPLETE (91%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 450/483 COMPLETE (93%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 460/483 COMPLETE (95%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 470/483 COMPLETE (97%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 480/483 COMPLETE (99%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFULLY. [11-03-2021 14:31:24] INFO: THREAD 21 FI,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15570,integrability,BATCH,BATCHES,15570,SED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 450/483 COMPLETE (93%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 460/483 COMPLETE (95%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 470/483 COMPLETE (97%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 480/483 COMPLETE (99%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFULLY. [11-03-2021 14:31:24] INFO: THREAD 21 FINISHED SUCCESSFULLY. [11-03-2021 14:31:25] INFO: THR,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15623,integrability,BATCH,BATCHES,15623,THREAD 00] 450/483 COMPLETE (93%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 460/483 COMPLETE (95%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 470/483 COMPLETE (97%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 480/483 COMPLETE (99%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFULLY. [11-03-2021 14:31:24] INFO: THREAD 21 FINISHED SUCCESSFULLY. [11-03-2021 14:31:25] INFO: THREAD 61 FINISHED SUCCESSFULLY. [11-03-2021 14:31:26] I,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15676,integrability,BATCH,BATCHES,15676,n 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 460/483 COMPLETE (95%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 470/483 COMPLETE (97%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 480/483 COMPLETE (99%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFULLY. [11-03-2021 14:31:24] INFO: THREAD 21 FINISHED SUCCESSFULLY. [11-03-2021 14:31:25] INFO: THREAD 61 FINISHED SUCCESSFULLY. [11-03-2021 14:31:26] INFO: THREAD 42 FINISHED SUCCESSFULLY. [11-03-2021 14:,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15729,integrability,BATCH,BATCHES,15729,/483 COMPLETE (95%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 470/483 COMPLETE (97%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 480/483 COMPLETE (99%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFULLY. [11-03-2021 14:31:24] INFO: THREAD 21 FINISHED SUCCESSFULLY. [11-03-2021 14:31:25] INFO: THREAD 61 FINISHED SUCCESSFULLY. [11-03-2021 14:31:26] INFO: THREAD 42 FINISHED SUCCESSFULLY. [11-03-2021 14:31:29] INFO: THREAD 62 FINISHED SUCCESSFULLY. [11-03-,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15782,integrability,BATCH,BATCHES,15782,03-2021 14:17:11] INFO: [THREAD 00] 470/483 COMPLETE (97%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 480/483 COMPLETE (99%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFULLY. [11-03-2021 14:31:24] INFO: THREAD 21 FINISHED SUCCESSFULLY. [11-03-2021 14:31:25] INFO: THREAD 61 FINISHED SUCCESSFULLY. [11-03-2021 14:31:26] INFO: THREAD 42 FINISHED SUCCESSFULLY. [11-03-2021 14:31:29] INFO: THREAD 62 FINISHED SUCCESSFULLY. [11-03-2021 14:31:31] INFO: THREAD 40 FINISHED SUCCESSFULLY.,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15835,integrability,BATCH,BATCHES,15835,(97%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 480/483 COMPLETE (99%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFULLY. [11-03-2021 14:31:24] INFO: THREAD 21 FINISHED SUCCESSFULLY. [11-03-2021 14:31:25] INFO: THREAD 61 FINISHED SUCCESSFULLY. [11-03-2021 14:31:26] INFO: THREAD 42 FINISHED SUCCESSFULLY. [11-03-2021 14:31:29] INFO: THREAD 62 FINISHED SUCCESSFULLY. [11-03-2021 14:31:31] INFO: THREAD 40 FINISHED SUCCESSFULLY. [11-03-2021 14:31:32] INFO: THREAD 14 FINISHED SUCCE,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15888,integrability,BATCH,BATCHES,15888,11] INFO: [THREAD 00] 480/483 COMPLETE (99%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFULLY. [11-03-2021 14:31:24] INFO: THREAD 21 FINISHED SUCCESSFULLY. [11-03-2021 14:31:25] INFO: THREAD 61 FINISHED SUCCESSFULLY. [11-03-2021 14:31:26] INFO: THREAD 42 FINISHED SUCCESSFULLY. [11-03-2021 14:31:29] INFO: THREAD 62 FINISHED SUCCESSFULLY. [11-03-2021 14:31:31] INFO: THREAD 40 FINISHED SUCCESSFULLY. [11-03-2021 14:31:32] INFO: THREAD 14 FINISHED SUCCESSFULLY. [11-03-2021 14:31:38] INFO: THREAD 39 FINISH,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15941,integrability,BATCH,BATCHES,15941, TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFULLY. [11-03-2021 14:31:24] INFO: THREAD 21 FINISHED SUCCESSFULLY. [11-03-2021 14:31:25] INFO: THREAD 61 FINISHED SUCCESSFULLY. [11-03-2021 14:31:26] INFO: THREAD 42 FINISHED SUCCESSFULLY. [11-03-2021 14:31:29] INFO: THREAD 62 FINISHED SUCCESSFULLY. [11-03-2021 14:31:31] INFO: THREAD 40 FINISHED SUCCESSFULLY. [11-03-2021 14:31:32] INFO: THREAD 14 FINISHED SUCCESSFULLY. [11-03-2021 14:31:38] INFO: THREAD 39 FINISHED SUCCESSFULLY. [11-03-2021 14:31:39] INFO: THREAD 3,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15994,integrability,BATCH,BATCHES,15994,AD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFULLY. [11-03-2021 14:31:24] INFO: THREAD 21 FINISHED SUCCESSFULLY. [11-03-2021 14:31:25] INFO: THREAD 61 FINISHED SUCCESSFULLY. [11-03-2021 14:31:26] INFO: THREAD 42 FINISHED SUCCESSFULLY. [11-03-2021 14:31:29] INFO: THREAD 62 FINISHED SUCCESSFULLY. [11-03-2021 14:31:31] INFO: THREAD 40 FINISHED SUCCESSFULLY. [11-03-2021 14:31:32] INFO: THREAD 14 FINISHED SUCCESSFULLY. [11-03-2021 14:31:38] INFO: THREAD 39 FINISHED SUCCESSFULLY. [11-03-2021 14:31:39] INFO: THREAD 36 FINISHED SUCCESSFULLY. [11-03-2021 14:31:39] INFO: ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:16047,integrability,BATCH,BATCHES,16047,O: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFULLY. [11-03-2021 14:31:24] INFO: THREAD 21 FINISHED SUCCESSFULLY. [11-03-2021 14:31:25] INFO: THREAD 61 FINISHED SUCCESSFULLY. [11-03-2021 14:31:26] INFO: THREAD 42 FINISHED SUCCESSFULLY. [11-03-2021 14:31:29] INFO: THREAD 62 FINISHED SUCCESSFULLY. [11-03-2021 14:31:31] INFO: THREAD 40 FINISHED SUCCESSFULLY. [11-03-2021 14:31:32] INFO: THREAD 14 FINISHED SUCCESSFULLY. [11-03-2021 14:31:38] INFO: THREAD 39 FINISHED SUCCESSFULLY. [11-03-2021 14:31:39] INFO: THREAD 36 FINISHED SUCCESSFULLY. [11-03-2021 14:31:39] INFO: THREAD 44 FINISHED SUCCESSFULLY. [11-03-2021 14:31:39,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:16100,integrability,BATCH,BATCHES,16100,NFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFULLY. [11-03-2021 14:31:24] INFO: THREAD 21 FINISHED SUCCESSFULLY. [11-03-2021 14:31:25] INFO: THREAD 61 FINISHED SUCCESSFULLY. [11-03-2021 14:31:26] INFO: THREAD 42 FINISHED SUCCESSFULLY. [11-03-2021 14:31:29] INFO: THREAD 62 FINISHED SUCCESSFULLY. [11-03-2021 14:31:31] INFO: THREAD 40 FINISHED SUCCESSFULLY. [11-03-2021 14:31:32] INFO: THREAD 14 FINISHED SUCCESSFULLY. [11-03-2021 14:31:38] INFO: THREAD 39 FINISHED SUCCESSFULLY. [11-03-2021 14:31:39] INFO: THREAD 36 FINISHED SUCCESSFULLY. [11-03-2021 14:31:39] INFO: THREAD 44 FINISHED SUCCESSFULLY. [11-03-2021 14:31:39] INFO: THREAD 31 FINISHED SUCCESSFULLY. [11-03-2021 ,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:16153,integrability,BATCH,BATCHES,16153, STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] INFO: THREAD 38 FINISHED SUCCESSFULLY. [11-03-2021 14:31:19] INFO: THREAD 3 FINISHED SUCCESSFULLY. [11-03-2021 14:31:22] INFO: THREAD 15 FINISHED SUCCESSFULLY. [11-03-2021 14:31:24] INFO: THREAD 21 FINISHED SUCCESSFULLY. [11-03-2021 14:31:25] INFO: THREAD 61 FINISHED SUCCESSFULLY. [11-03-2021 14:31:26] INFO: THREAD 42 FINISHED SUCCESSFULLY. [11-03-2021 14:31:29] INFO: THREAD 62 FINISHED SUCCESSFULLY. [11-03-2021 14:31:31] INFO: THREAD 40 FINISHED SUCCESSFULLY. [11-03-2021 14:31:32] INFO: THREAD 14 FINISHED SUCCESSFULLY. [11-03-2021 14:31:38] INFO: THREAD 39 FINISHED SUCCESSFULLY. [11-03-2021 14:31:39] INFO: THREAD 36 FINISHED SUCCESSFULLY. [11-03-2021 14:31:39] INFO: THREAD 44 FINISHED SUCCESSFULLY. [11-03-2021 14:31:39] INFO: THREAD 31 FINISHED SUCCESSFULLY. [11-03-2021 14:31:39] INFO: THREAD 55 FINISHED SUCCESSFULLY. [11-,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:23178,integrability,buffer,buffer,23178,"_pileup=none,realign_reads=false,min_mapping_quality=1,min_base_quality=1,sort_by_haplotypes=true,parse_sam_aux_fields=true,add_hp_channel=false,variant_caller=vcf_candidate_importer,proposed_variants=/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --postprocess_variants_extra_args=""use_multiallelic_model=True"" 2>&1 | tee /cromwell_root/pepper_output/logs/4_DeepVariant.log. -------. STARTING DEEPVARIANT. I1103 14:39:53.527210 140335058065216 run_deepvariant.py:317] Re-using the directory for intermediate results in /cromwell_root/pepper_output/dv_intermediate_outputs/. I1103 14:39:53.527496 140335058065216 run_deepvariant.py:327] You set --customized_model. Instead of using the default model for WGS, `call_variants` step will load /opt/dv_models/ont_1121_none/model.ckpt-30200 instead. ***** Intermediate results will be written to /cromwell_root/pepper_output/dv_intermediate_outputs/ in docker. ****. ***** Running the command:*****. ( time seq 0 63 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa"" --reads ""/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam"" --examples ""/cromwell_root/pepper_output/dv_intermediate_outputs/make_examples.tfrecord@64.gz"" --noadd_hp_channel --alt_aligned_pileup ""none"" --gvcf ""/cromwell_root/pepper_output/dv_intermediate_outputs/gvcf.tfrecord@64.gz"" --min_base_quality ""1"" --min_mapping_quality ""1"" --parse_sam_aux_fields --proposed_variants ""/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --norealign_reads --sample_name ""6061-SL-0029"" --sort_by_haplotypes --variant_caller ""vcf_candidate_importer"" --task {} ). 2021-11-03 14:39:57.038890: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038671: I tensorflow/stream_executor/platform/default/dso_loader.",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:3934,interoperability,DISTRIBUT,DISTRIBUTED,3934,":41] INFO: COMMON CONTIGS FOUND: ['chr1', 'chr2', 'chr3', 'chr4', 'chr5', 'chr6', 'chr7', 'chr8', 'chr9', 'chr10', 'chr11', 'chr12', 'chr13', 'chr14', 'chr15', 'chr16', 'chr17', 'chr18', 'chr19', 'chr20', 'chr21', 'chr22', 'chrM', 'chrX', 'chrY']. [11-03-2021 13:40:41] INFO: TOTAL CONTIGS: 25 TOTAL INTERVALS: 30895. [11-03-2021 13:40:41] STARTING THREAD: 0 FOR 483 INTERVALS. [11-03-2021 13:40:41] INFO: 10/483 COMPLETE (2%) [ELAPSED TIME: 0 Min 0 Sec]. ... [11-03-2021 13:42:49] INFO: 470/483 COMPLETE (97%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] INFO: 480/483 COMPLETE (99%) [ELAPSED TIME: 2 Min 8 Sec]. [11-03-2021 13:42:49] THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:44:25] FINISHED IMAGE GENERATION. [11-03-2021 13:44:25] TOTAL ELAPSED TIME FOR IMAGE GENERATION: 3 Min 44 Sec. [11-03-2021 13:44:25] STEP 2: RUNNING INFERENCE. [11-03-2021 13:44:25] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/predictions_11032021_134041/. [11-03-2021 13:44:25] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 13:44:25] INFO: TOTAL CALLERS: 64. [11-03-2021 13:44:25] INFO: THREADS PER CALLER: 1. [11-03-2021 13:44:25] INFO: MODEL LOADING TO ONNX. [11-03-2021 13:45:22] INFO: BATCHES PROCESSED 5/35. [11-03-2021 13:46:21] INFO: BATCHES PROCESSED 10/35. [11-03-2021 13:47:17] INFO: BATCHES PROCESSED 15/35. [11-03-2021 13:48:11] INFO: BATCHES PROCESSED 20/35. [11-03-2021 13:49:06] INFO: BATCHES PROCESSED 25/35. [11-03-2021 13:49:59] INFO: BATCHES PROCESSED 30/35. [11-03-2021 13:50:39] INFO: BATCHES PROCESSED 35/35. [11-03-2021 13:50:39] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 13:50:44] INFO: FINISHED PREDICTION. [11-03-2021 13:50:44] INFO: ELAPSED TIME: 6 Min 18 Sec. [11-03-2021 13:50:44] INFO: PREDICTION FINISHED SUCCESSFULLY. . [11-03-2021 13:50:44] TOTAL ELAPSED TIME FOR INFERENCE: 6 Min 18 Sec. [11-03-2021 13:50:44] STEP 3: RUNNING FIND CANDIDATES. [11-03-2021 13:50:44] INFO: PREDICTION OUTPUT: /cromwell_root/pepper_output/pepper_snp/. [11-03-2021 13:50:44]",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:15318,interoperability,DISTRIBUT,DISTRIBUTED,15318,1-03-2021 14:17:10] INFO: [THREAD 00] 420/483 COMPLETE (86%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:10] INFO: [THREAD 00] 430/483 COMPLETE (89%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 440/483 COMPLETE (91%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 450/483 COMPLETE (93%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 460/483 COMPLETE (95%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 470/483 COMPLETE (97%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: [THREAD 00] 480/483 COMPLETE (99%) [ELAPSED TIME: 4 Min 5 Sec]. [11-03-2021 14:17:11] INFO: THREAD 0 FINISHED SUCCESSFULLY. [11-03-2021 14:18:09] INFO: FINISHED IMAGE GENERATION. [11-03-2021 14:18:09] INFO: ELAPSED TIME: 5 Min 4 Sec. [11-03-2021 14:18:09] STEP 2: RUNNING INFERENCE. [11-03-2021 14:18:09] INFO: OUTPUT: /cromwell_root/pepper_output/pepper_hp/predictions_11032021_141305/. [11-03-2021 14:18:09] INFO: DISTRIBUTED CPU SETUP. [11-03-2021 14:18:09] INFO: TOTAL CALLERS: 64. [11-03-2021 14:18:09] INFO: THREADS PER CALLER: 1. [11-03-2021 14:18:09] INFO: MODEL LOADING TO ONNX. [11-03-2021 14:19:18] INFO: BATCHES PROCESSED 5/66. [11-03-2021 14:20:22] INFO: BATCHES PROCESSED 10/66. [11-03-2021 14:21:25] INFO: BATCHES PROCESSED 15/66. [11-03-2021 14:22:29] INFO: BATCHES PROCESSED 20/66. [11-03-2021 14:23:34] INFO: BATCHES PROCESSED 25/66. [11-03-2021 14:24:40] INFO: BATCHES PROCESSED 30/66. [11-03-2021 14:25:45] INFO: BATCHES PROCESSED 35/66. [11-03-2021 14:26:47] INFO: BATCHES PROCESSED 40/66. [11-03-2021 14:27:51] INFO: BATCHES PROCESSED 45/66. [11-03-2021 14:28:56] INFO: BATCHES PROCESSED 50/66. [11-03-2021 14:29:59] INFO: BATCHES PROCESSED 55/66. [11-03-2021 14:31:03] INFO: BATCHES PROCESSED 60/66. [11-03-2021 14:31:57] INFO: BATCHES PROCESSED 65/66. [11-03-2021 14:31:05] INFO: THREAD 46 FINISHED SUCCESSFULLY. [11-03-2021 14:31:07] INFO: THREAD 19 FINISHED SUCCESSFULLY. [11-03-2021 14:31:09] IN,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:24006,interoperability,platform,platform,24006,"ill be written to /cromwell_root/pepper_output/dv_intermediate_outputs/ in docker. ****. ***** Running the command:*****. ( time seq 0 63 | parallel -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa"" --reads ""/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam"" --examples ""/cromwell_root/pepper_output/dv_intermediate_outputs/make_examples.tfrecord@64.gz"" --noadd_hp_channel --alt_aligned_pileup ""none"" --gvcf ""/cromwell_root/pepper_output/dv_intermediate_outputs/gvcf.tfrecord@64.gz"" --min_base_quality ""1"" --min_mapping_quality ""1"" --parse_sam_aux_fields --proposed_variants ""/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --norealign_reads --sample_name ""6061-SL-0029"" --sort_by_haplotypes --variant_caller ""vcf_candidate_importer"" --task {} ). 2021-11-03 14:39:57.038890: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038671: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039009: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039125: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039103: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039171: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038585: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I te",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:24153,interoperability,platform,platform,24153,"l -q --halt 2 --line-buffer /opt/deepvariant/bin/make_examples --mode calling --ref ""/cromwell_root/broad-dsde-methods-long-reads/resources/references/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa"" --reads ""/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam"" --examples ""/cromwell_root/pepper_output/dv_intermediate_outputs/make_examples.tfrecord@64.gz"" --noadd_hp_channel --alt_aligned_pileup ""none"" --gvcf ""/cromwell_root/pepper_output/dv_intermediate_outputs/gvcf.tfrecord@64.gz"" --min_base_quality ""1"" --min_mapping_quality ""1"" --parse_sam_aux_fields --proposed_variants ""/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --norealign_reads --sample_name ""6061-SL-0029"" --sort_by_haplotypes --variant_caller ""vcf_candidate_importer"" --task {} ). 2021-11-03 14:39:57.038890: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038671: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039009: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039125: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039103: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039171: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038585: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I te",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:24300,interoperability,platform,platform,24300,"ces/grch38_noalt/GCA_000001405.15_GRCh38_no_alt_analysis_set.fa"" --reads ""/cromwell_root/pepper_output/MARGIN_PHASED.PEPPER_SNP_MARGIN.haplotagged.bam"" --examples ""/cromwell_root/pepper_output/dv_intermediate_outputs/make_examples.tfrecord@64.gz"" --noadd_hp_channel --alt_aligned_pileup ""none"" --gvcf ""/cromwell_root/pepper_output/dv_intermediate_outputs/gvcf.tfrecord@64.gz"" --min_base_quality ""1"" --min_mapping_quality ""1"" --parse_sam_aux_fields --proposed_variants ""/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --norealign_reads --sample_name ""6061-SL-0029"" --sort_by_haplotypes --variant_caller ""vcf_candidate_importer"" --task {} ). 2021-11-03 14:39:57.038890: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038671: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039009: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039125: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039103: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039171: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038585: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I te",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:24447,interoperability,platform,platform,24447,"bam"" --examples ""/cromwell_root/pepper_output/dv_intermediate_outputs/make_examples.tfrecord@64.gz"" --noadd_hp_channel --alt_aligned_pileup ""none"" --gvcf ""/cromwell_root/pepper_output/dv_intermediate_outputs/gvcf.tfrecord@64.gz"" --min_base_quality ""1"" --min_mapping_quality ""1"" --parse_sam_aux_fields --proposed_variants ""/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --norealign_reads --sample_name ""6061-SL-0029"" --sort_by_haplotypes --variant_caller ""vcf_candidate_importer"" --task {} ). 2021-11-03 14:39:57.038890: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038671: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039009: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039125: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039103: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039171: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038585: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I te",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:24594,interoperability,platform,platform,24594,"--gvcf ""/cromwell_root/pepper_output/dv_intermediate_outputs/gvcf.tfrecord@64.gz"" --min_base_quality ""1"" --min_mapping_quality ""1"" --parse_sam_aux_fields --proposed_variants ""/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --norealign_reads --sample_name ""6061-SL-0029"" --sort_by_haplotypes --variant_caller ""vcf_candidate_importer"" --task {} ). 2021-11-03 14:39:57.038890: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038671: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039009: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039125: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039103: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039171: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038585: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I te",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:24741,interoperability,platform,platform,24741,"fields --proposed_variants ""/cromwell_root/pepper_output/PEPPER_HP_OUPUT.vcf.gz"" --norealign_reads --sample_name ""6061-SL-0029"" --sort_by_haplotypes --variant_caller ""vcf_candidate_importer"" --task {} ). 2021-11-03 14:39:57.038890: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038671: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039009: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039125: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039103: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039171: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038585: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I te",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:24888,interoperability,platform,platform,24888,"s --variant_caller ""vcf_candidate_importer"" --task {} ). 2021-11-03 14:39:57.038890: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038671: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039009: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039125: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039103: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039171: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038585: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I te",MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:25035,interoperability,platform,platform,25035,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038671: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039009: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039125: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039103: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039171: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038585: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:25182,interoperability,platform,platform,25182,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039009: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039125: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039103: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039171: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038585: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:25329,interoperability,platform,platform,25329,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039125: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039103: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039171: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038585: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:25476,interoperability,platform,platform,25476,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039103: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039171: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038585: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:25623,interoperability,platform,platform,25623,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039171: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038585: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:25770,interoperability,platform,platform,25770,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038585: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:25917,interoperability,platform,platform,25917,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:26064,interoperability,platform,platform,26064,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038973: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:26211,interoperability,platform,platform,26211,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039149: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:26358,interoperability,platform,platform,26358,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039139: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:26505,interoperability,platform,platform,26505,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039161: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:26652,interoperability,platform,platform,26652,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038504: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:26799,interoperability,platform,platform,26799,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:26946,interoperability,platform,platform,26946,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038426: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:27093,interoperability,platform,platform,27093,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038418: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:27240,interoperability,platform,platform,27240,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038521: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:27387,interoperability,platform,platform,27387,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:27534,interoperability,platform,platform,27534,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039029: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:27681,interoperability,platform,platform,27681,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:27828,interoperability,platform,platform,27828,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038864: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038989: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:27975,interoperability,platform,platform,27975,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038422: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038989: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:28122,interoperability,platform,platform,28122,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039193: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038989: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:28269,interoperability,platform,platform,28269,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039132: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038989: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038440: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:28416,interoperability,platform,platform,28416,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038424: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038989: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038440: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039229: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:28563,interoperability,platform,platform,28563,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039212: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038989: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038440: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039229: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039085: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:28710,interoperability,platform,platform,28710,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039124: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038989: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038440: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039229: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039085: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039110: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:28857,interoperability,platform,platform,28857,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039190: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038989: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038440: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039229: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039085: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039110: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039153: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:29004,interoperability,platform,platform,29004,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039079: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038989: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038440: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039229: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039085: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039110: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039153: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038776: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:29151,interoperability,platform,platform,29151,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039113: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038989: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038440: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039229: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039085: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039110: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039153: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038776: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039068: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:29298,interoperability,platform,platform,29298,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039104: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038989: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038440: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039229: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039085: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039110: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039153: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038776: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039068: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038662: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:29445,interoperability,platform,platform,29445,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038431: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038989: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038440: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039229: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039085: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039110: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039153: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038776: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039068: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038662: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039145: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
https://github.com/google/deepvariant/issues/491:29592,interoperability,platform,platform,29592,] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038896: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038989: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039093: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039179: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038440: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039229: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039085: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039110: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039153: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038776: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039068: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.038662: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039145: I tensorflow/stream_executor/platform/default/dso_loader.cc:48] Successfully opened dynamic library libcudart.so.10.1. 2021-11-03 14:39:57.039180: I te,MatchSource.ISSUE,google,deepvariant,v1.6.1,,https://github.com/google/deepvariant/issues/491
