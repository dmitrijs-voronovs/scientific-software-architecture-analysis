id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/3641:364,interoperability,API,API,364,"[VecOps] Use better solution to pick up M_PI on windows; Many thanks to @bellenot ! Let's check whether the PR builds are happy with this. Remaining issue with this: Is it ok to include `math.h` or `cmath` (or even both?) based on the platform? Could this interfere with picking up the overloads for the fast math functions since `math.h` and `cmath` define their API in different namespaces? @lmoneta You have insights into this? The PR works but still, I feel a little uncomfortable since I do not fully understand the impact of the different includes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3641
https://github.com/root-project/root/pull/3641:506,testability,understand,understand,506,"[VecOps] Use better solution to pick up M_PI on windows; Many thanks to @bellenot ! Let's check whether the PR builds are happy with this. Remaining issue with this: Is it ok to include `math.h` or `cmath` (or even both?) based on the platform? Could this interfere with picking up the overloads for the fast math functions since `math.h` and `cmath` define their API in different namespaces? @lmoneta You have insights into this? The PR works but still, I feel a little uncomfortable since I do not fully understand the impact of the different includes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3641
https://github.com/root-project/root/pull/3642:40,integrability,interfac,interfaces,40,[DF][ROOT-10063] Unify internal jitting interfaces;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3642
https://github.com/root-project/root/pull/3642:40,interoperability,interfac,interfaces,40,[DF][ROOT-10063] Unify internal jitting interfaces;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3642
https://github.com/root-project/root/pull/3642:40,modifiability,interfac,interfaces,40,[DF][ROOT-10063] Unify internal jitting interfaces;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3642
https://github.com/root-project/root/pull/3643:59,deployability,fail,fails,59,[DictGen][ROOT-10015] Remove remnants when dict generation fails;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3643
https://github.com/root-project/root/pull/3643:59,reliability,fail,fails,59,[DictGen][ROOT-10015] Remove remnants when dict generation fails;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3643
https://github.com/root-project/root/pull/3644:27,integrability,interfac,interface,27,Add README for the bulk IO interface.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3644
https://github.com/root-project/root/pull/3644:27,interoperability,interfac,interface,27,Add README for the bulk IO interface.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3644
https://github.com/root-project/root/pull/3644:27,modifiability,interfac,interface,27,Add README for the bulk IO interface.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3644
https://github.com/root-project/root/pull/3645:59,deployability,fail,fails,59,[DictGen][ROOT-10015] Remove remnants when dict generation fails;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3645
https://github.com/root-project/root/pull/3645:59,reliability,fail,fails,59,[DictGen][ROOT-10015] Remove remnants when dict generation fails;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3645
https://github.com/root-project/root/pull/3646:70,usability,clarit,clarity,70,[VecOps] Rename InvariantMass(8 RVecs) util into InvariantMasses; for clarity and to allow to instantiate the functions easily and use them in fully compiled data frames.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3646
https://github.com/root-project/root/pull/3648:268,availability,operat,operations,268,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:111,deployability,modul,module,111,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:219,deployability,depend,depending,219,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:313,deployability,Updat,Update,313,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:54,energy efficiency,draw,drawing,54,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:187,energy efficiency,load,loading,187,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:219,integrability,depend,depending,219,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:23,modifiability,Deco,Decouple,23,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:111,modifiability,modul,module,111,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:219,modifiability,depend,depending,219,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:187,performance,load,loading,187,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:111,safety,modul,module,111,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:219,safety,depend,depending,219,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:313,safety,Updat,Update,313,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:313,security,Updat,Update,313,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:219,testability,depend,depending,219,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:162,usability,Support,Support,162,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3648:241,usability,Support,Support,241,"Web geometry viewer; * Decouple browsing and geometry drawing functionality. * Try to provide generic browsing module (server and client), using ui5 TreeTable. * Support partial and full loading of browsing structures (depending on size). * Support online and offline operations (later used for web snapshots). * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3648
https://github.com/root-project/root/pull/3652:17,deployability,version,version,17,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:43,deployability,releas,release,43,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:144,deployability,depend,dependent,144,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:969,deployability,Releas,ReleaseNotes,969,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:17,integrability,version,version,17,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:144,integrability,depend,dependent,144,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:134,interoperability,specif,specify,134,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:487,interoperability,specif,specified,487,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:616,interoperability,specif,specified,616,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:17,modifiability,version,version,17,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:116,modifiability,Exten,Extend,116,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:144,modifiability,depend,dependent,144,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:154,modifiability,variab,variables,154,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:439,modifiability,paramet,parameter,439,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:144,safety,depend,dependent,144,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:144,testability,depend,dependent,144,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3652:747,usability,Support,Support,747,"[clad] Bump clad version to v0.5.; The new release includes some improvements in both Forward and. Reverse mode:. * Extend the way to specify a dependent variables. Consider function, `double f(double x, double y, double z) {...}`, `clad::differentiate(f, ""z"")` is equivalent to `clad::differentiate(f, 2)`. `clad::gradient(f, ""x, y"")` differentiates with respect to `x` and `y` but not `z`. The gradient results are stored in a `_result` parameter in the same order as `x` and `y` were specified. Namely, the result of `x` is stored in `_result[0]` and the result of `y` in `_result[1]`. If we invert the arguments specified in the string to `clad::gradient(f, ""y, x"")` the results will be stored inversely. * Enable recursive differentiation. * Support single- and multi-dimensional arrays -- works for arrays with constant size like `double A[] = {1, 2, 3};`, `double A[3];` or `double A[1][2][3][4];`. See more at: https://github.com/vgvassilev/clad/blob/v0.5/docs/ReleaseNotes.md. Kudos go to @efremale!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3652
https://github.com/root-project/root/pull/3653:23,usability,help,helper,23,[VecOps] Add Construct helper;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3653
https://github.com/root-project/root/pull/3654:1,energy efficiency,Core,Core,1,[Core][ROOT-4578] Do not accept non integer class ids in ClassDef macros;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3654
https://github.com/root-project/root/pull/3655:33,deployability,build,build,33,"[IO][ROOT-8425] Fix streamerinfo build check for string; since it is a special class: we are not interested in the actual. layout, it is opaque for the ROOT IO being it part of the STL.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3655
https://github.com/root-project/root/pull/3656:58,deployability,fail,fail,58,[Doc] Veto df102 if xrootd is not found and marks as will fail for exp PyROOT;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3656
https://github.com/root-project/root/pull/3656:58,reliability,fail,fail,58,[Doc] Veto df102 if xrootd is not found and marks as will fail for exp PyROOT;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3656
https://github.com/root-project/root/pull/3657:293,deployability,updat,updated,293,"[RF] RooDataSet could silently ignore weights.; When a RooDataSet is constructed without a weight variable, weights are ignored when events. are added to the dataset. Now, there will be a clear warning notifying the user that an event. weight is being ignored. The documentation has also been updated. See also:. https://root-forum.cern.ch/t/fit-to-a-weighted-unbinned-data-set/33495",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3657
https://github.com/root-project/root/pull/3657:133,integrability,event,events,133,"[RF] RooDataSet could silently ignore weights.; When a RooDataSet is constructed without a weight variable, weights are ignored when events. are added to the dataset. Now, there will be a clear warning notifying the user that an event. weight is being ignored. The documentation has also been updated. See also:. https://root-forum.cern.ch/t/fit-to-a-weighted-unbinned-data-set/33495",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3657
https://github.com/root-project/root/pull/3657:229,integrability,event,event,229,"[RF] RooDataSet could silently ignore weights.; When a RooDataSet is constructed without a weight variable, weights are ignored when events. are added to the dataset. Now, there will be a clear warning notifying the user that an event. weight is being ignored. The documentation has also been updated. See also:. https://root-forum.cern.ch/t/fit-to-a-weighted-unbinned-data-set/33495",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3657
https://github.com/root-project/root/pull/3657:98,modifiability,variab,variable,98,"[RF] RooDataSet could silently ignore weights.; When a RooDataSet is constructed without a weight variable, weights are ignored when events. are added to the dataset. Now, there will be a clear warning notifying the user that an event. weight is being ignored. The documentation has also been updated. See also:. https://root-forum.cern.ch/t/fit-to-a-weighted-unbinned-data-set/33495",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3657
https://github.com/root-project/root/pull/3657:293,safety,updat,updated,293,"[RF] RooDataSet could silently ignore weights.; When a RooDataSet is constructed without a weight variable, weights are ignored when events. are added to the dataset. Now, there will be a clear warning notifying the user that an event. weight is being ignored. The documentation has also been updated. See also:. https://root-forum.cern.ch/t/fit-to-a-weighted-unbinned-data-set/33495",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3657
https://github.com/root-project/root/pull/3657:293,security,updat,updated,293,"[RF] RooDataSet could silently ignore weights.; When a RooDataSet is constructed without a weight variable, weights are ignored when events. are added to the dataset. Now, there will be a clear warning notifying the user that an event. weight is being ignored. The documentation has also been updated. See also:. https://root-forum.cern.ch/t/fit-to-a-weighted-unbinned-data-set/33495",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3657
https://github.com/root-project/root/pull/3657:188,usability,clear,clear,188,"[RF] RooDataSet could silently ignore weights.; When a RooDataSet is constructed without a weight variable, weights are ignored when events. are added to the dataset. Now, there will be a clear warning notifying the user that an event. weight is being ignored. The documentation has also been updated. See also:. https://root-forum.cern.ch/t/fit-to-a-weighted-unbinned-data-set/33495",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3657
https://github.com/root-project/root/pull/3657:216,usability,user,user,216,"[RF] RooDataSet could silently ignore weights.; When a RooDataSet is constructed without a weight variable, weights are ignored when events. are added to the dataset. Now, there will be a clear warning notifying the user that an event. weight is being ignored. The documentation has also been updated. See also:. https://root-forum.cern.ch/t/fit-to-a-weighted-unbinned-data-set/33495",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3657
https://github.com/root-project/root/pull/3657:265,usability,document,documentation,265,"[RF] RooDataSet could silently ignore weights.; When a RooDataSet is constructed without a weight variable, weights are ignored when events. are added to the dataset. Now, there will be a clear warning notifying the user that an event. weight is being ignored. The documentation has also been updated. See also:. https://root-forum.cern.ch/t/fit-to-a-weighted-unbinned-data-set/33495",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3657
https://github.com/root-project/root/pull/3658:19,performance,memor,memory,19,[cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3658
https://github.com/root-project/root/pull/3658:26,performance,cach,cache,26,[cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3658
https://github.com/root-project/root/pull/3658:64,safety,prevent,prevents,64,[cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3658
https://github.com/root-project/root/pull/3658:64,security,preven,prevents,64,[cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3658
https://github.com/root-project/root/pull/3658:174,security,access,accesses,174,[cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3658
https://github.com/root-project/root/pull/3658:19,usability,memor,memory,19,[cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3658
https://github.com/root-project/root/pull/3659:90,deployability,version,version,90,"[foundation] libC++ does not set __cpp_lib_not_fn:; Instead, test for libC++ and language version. This fixes MacOS builds with >=C++14 and tests enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3659
https://github.com/root-project/root/pull/3659:116,deployability,build,builds,116,"[foundation] libC++ does not set __cpp_lib_not_fn:; Instead, test for libC++ and language version. This fixes MacOS builds with >=C++14 and tests enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3659
https://github.com/root-project/root/pull/3659:90,integrability,version,version,90,"[foundation] libC++ does not set __cpp_lib_not_fn:; Instead, test for libC++ and language version. This fixes MacOS builds with >=C++14 and tests enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3659
https://github.com/root-project/root/pull/3659:90,modifiability,version,version,90,"[foundation] libC++ does not set __cpp_lib_not_fn:; Instead, test for libC++ and language version. This fixes MacOS builds with >=C++14 and tests enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3659
https://github.com/root-project/root/pull/3659:20,reliability,doe,does,20,"[foundation] libC++ does not set __cpp_lib_not_fn:; Instead, test for libC++ and language version. This fixes MacOS builds with >=C++14 and tests enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3659
https://github.com/root-project/root/pull/3659:61,safety,test,test,61,"[foundation] libC++ does not set __cpp_lib_not_fn:; Instead, test for libC++ and language version. This fixes MacOS builds with >=C++14 and tests enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3659
https://github.com/root-project/root/pull/3659:140,safety,test,tests,140,"[foundation] libC++ does not set __cpp_lib_not_fn:; Instead, test for libC++ and language version. This fixes MacOS builds with >=C++14 and tests enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3659
https://github.com/root-project/root/pull/3659:61,testability,test,test,61,"[foundation] libC++ does not set __cpp_lib_not_fn:; Instead, test for libC++ and language version. This fixes MacOS builds with >=C++14 and tests enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3659
https://github.com/root-project/root/pull/3659:140,testability,test,tests,140,"[foundation] libC++ does not set __cpp_lib_not_fn:; Instead, test for libC++ and language version. This fixes MacOS builds with >=C++14 and tests enabled.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3659
https://github.com/root-project/root/pull/3660:28,energy efficiency,alloc,allocate,28,"[tutorials] No need to heap-allocate TRandom, TDatimes; thanks, Maarten!;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3660
https://github.com/root-project/root/pull/3661:13,safety,Isol,Isolate,13,[TTaskGroup] Isolate work with tbb::arena::isolate and not task_arena; otherwise there is a risk of overcommiting the machine with too many workers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3661
https://github.com/root-project/root/pull/3661:43,safety,isol,isolate,43,[TTaskGroup] Isolate work with tbb::arena::isolate and not task_arena; otherwise there is a risk of overcommiting the machine with too many workers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3661
https://github.com/root-project/root/pull/3661:92,safety,risk,risk,92,[TTaskGroup] Isolate work with tbb::arena::isolate and not task_arena; otherwise there is a risk of overcommiting the machine with too many workers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3661
https://github.com/root-project/root/pull/3661:13,security,Iso,Isolate,13,[TTaskGroup] Isolate work with tbb::arena::isolate and not task_arena; otherwise there is a risk of overcommiting the machine with too many workers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3661
https://github.com/root-project/root/pull/3661:43,security,iso,isolate,43,[TTaskGroup] Isolate work with tbb::arena::isolate and not task_arena; otherwise there is a risk of overcommiting the machine with too many workers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3661
https://github.com/root-project/root/pull/3661:92,security,risk,risk,92,[TTaskGroup] Isolate work with tbb::arena::isolate and not task_arena; otherwise there is a risk of overcommiting the machine with too many workers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3661
https://github.com/root-project/root/pull/3661:13,testability,Isol,Isolate,13,[TTaskGroup] Isolate work with tbb::arena::isolate and not task_arena; otherwise there is a risk of overcommiting the machine with too many workers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3661
https://github.com/root-project/root/pull/3661:43,testability,isol,isolate,43,[TTaskGroup] Isolate work with tbb::arena::isolate and not task_arena; otherwise there is a risk of overcommiting the machine with too many workers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3661
https://github.com/root-project/root/pull/3662:65,availability,sli,slightly,65,[RF][No CI] Update release notes.; The RooFit release notes were slightly outdated after the deprecation. macro R__SUGGEST_ALTERNATIVE had been merged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3662
https://github.com/root-project/root/pull/3662:12,deployability,Updat,Update,12,[RF][No CI] Update release notes.; The RooFit release notes were slightly outdated after the deprecation. macro R__SUGGEST_ALTERNATIVE had been merged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3662
https://github.com/root-project/root/pull/3662:19,deployability,releas,release,19,[RF][No CI] Update release notes.; The RooFit release notes were slightly outdated after the deprecation. macro R__SUGGEST_ALTERNATIVE had been merged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3662
https://github.com/root-project/root/pull/3662:46,deployability,releas,release,46,[RF][No CI] Update release notes.; The RooFit release notes were slightly outdated after the deprecation. macro R__SUGGEST_ALTERNATIVE had been merged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3662
https://github.com/root-project/root/pull/3662:65,reliability,sli,slightly,65,[RF][No CI] Update release notes.; The RooFit release notes were slightly outdated after the deprecation. macro R__SUGGEST_ALTERNATIVE had been merged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3662
https://github.com/root-project/root/pull/3662:12,safety,Updat,Update,12,[RF][No CI] Update release notes.; The RooFit release notes were slightly outdated after the deprecation. macro R__SUGGEST_ALTERNATIVE had been merged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3662
https://github.com/root-project/root/pull/3662:12,security,Updat,Update,12,[RF][No CI] Update release notes.; The RooFit release notes were slightly outdated after the deprecation. macro R__SUGGEST_ALTERNATIVE had been merged.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3662
https://github.com/root-project/root/pull/3663:4,interoperability,format,format,4,"Fix format warnings visible in BulkApiVarLength tests; Fixing warning visible on 32b: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 2 has type ‘std::size_t {aka unsigned int}’ [-Wformat=]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3663
https://github.com/root-project/root/pull/3663:95,interoperability,format,format,95,"Fix format warnings visible in BulkApiVarLength tests; Fixing warning visible on 32b: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 2 has type ‘std::size_t {aka unsigned int}’ [-Wformat=]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3663
https://github.com/root-project/root/pull/3663:48,safety,test,tests,48,"Fix format warnings visible in BulkApiVarLength tests; Fixing warning visible on 32b: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 2 has type ‘std::size_t {aka unsigned int}’ [-Wformat=]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3663
https://github.com/root-project/root/pull/3663:48,testability,test,tests,48,"Fix format warnings visible in BulkApiVarLength tests; Fixing warning visible on 32b: warning: format ‘%lu’ expects argument of type ‘long unsigned int’, but argument 2 has type ‘std::size_t {aka unsigned int}’ [-Wformat=]",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3663
https://github.com/root-project/root/pull/3664:13,deployability,Updat,Update,13,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:36,deployability,version,version,36,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:53,deployability,updat,updates,53,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:97,deployability,version,versions,97,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:184,deployability,updat,update,184,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:588,deployability,patch,patch,588,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:612,deployability,updat,updated,612,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:36,integrability,version,version,36,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:97,integrability,version,versions,97,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:314,interoperability,convers,conversion,314,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:36,modifiability,version,version,36,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:71,modifiability,pac,packages,71,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:97,modifiability,version,versions,97,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:13,safety,Updat,Update,13,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:53,safety,updat,updates,53,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:184,safety,updat,update,184,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:588,safety,patch,patch,588,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:612,safety,updat,updated,612,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:13,security,Updat,Update,13,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:53,security,updat,updates,53,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:184,security,updat,update,184,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:588,security,patch,patch,588,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:612,security,updat,updated,612,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:361,usability,support,support,361,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3664:530,usability,support,support,530,"[Exp PyROOT] Update Cppyy to newest version; This PR updates the Cppyy packages to the following versions:. - cppyy 1.4.7. - cppyy-backend 1.8.1 (clingwrapper). - CPyCppyy 1.7.1. This update brings several fixes/features, including:. - @bellenot 's fixes for Windows. - Fixes for overload resolution when implicit conversion can be applied. - Improved template support. - Fixes to remove compiler warnings. - and many more. After this PR is merged, another PR (https://github.com/root-project/root/pull/3640) will be necessary to support using declarations for methods. The corresponding patch in cppyy is being updated at the moment. Piggybacked with in this PR there is also a fix for getting using directives of namespaces when those namespaces are nested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3664
https://github.com/root-project/root/pull/3666:29,availability,slo,slow,29,"[cling] write() is extremely slow on 32bit VMs, disable ptr validity check;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3666
https://github.com/root-project/root/pull/3666:29,reliability,slo,slow,29,"[cling] write() is extremely slow on 32bit VMs, disable ptr validity check;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3666
https://github.com/root-project/root/pull/3666:60,safety,valid,validity,60,"[cling] write() is extremely slow on 32bit VMs, disable ptr validity check;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3666
https://github.com/root-project/root/pull/3667:20,deployability,Modul,Modules,20,Citing Cling and C++Modules; @Axel-Naumann maybe we should put the cling reference on the main ROOT readme page as well...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3667
https://github.com/root-project/root/pull/3667:20,modifiability,Modul,Modules,20,Citing Cling and C++Modules; @Axel-Naumann maybe we should put the cling reference on the main ROOT readme page as well...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3667
https://github.com/root-project/root/pull/3667:20,safety,Modul,Modules,20,Citing Cling and C++Modules; @Axel-Naumann maybe we should put the cling reference on the main ROOT readme page as well...,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3667
https://github.com/root-project/root/pull/3668:8,deployability,Updat,Update,8,[No CI] Update v618 I/O and TTree release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3668
https://github.com/root-project/root/pull/3668:34,deployability,releas,release,34,[No CI] Update v618 I/O and TTree release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3668
https://github.com/root-project/root/pull/3668:20,performance,I/O,I/O,20,[No CI] Update v618 I/O and TTree release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3668
https://github.com/root-project/root/pull/3668:8,safety,Updat,Update,8,[No CI] Update v618 I/O and TTree release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3668
https://github.com/root-project/root/pull/3668:8,security,Updat,Update,8,[No CI] Update v618 I/O and TTree release notes;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3668
https://github.com/root-project/root/pull/3669:825,deployability,instal,install,825,"[PyROOT exp] Introduce MakeNumpyDataFrame to read numpy arrays with RDF; This PR supersedes #3424. The reference counting is greatly improved and the data is kept alive until the datasource dies, which gets delete at the end of the lifetime of the computational graph. See here for the use-case:. ```python. import ROOT. import numpy. data = {. ""x"": numpy.array([1, 2, 3]),. ""y"": numpy.array([4, 5, 6]). }. df = ROOT.ROOT.RDF.MakeNumpyDataFrame(data). df = df.Define(""z"", ""x + y""). print(df.Mean(""z"").GetValue()) # Returns 7.0. ```. The feature plays well along with the `RDataFrame.AsNumpy` feature:. ```python. import ROOT. df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""(int)rdfentry_""). data = df.AsNumpy(). df2 = ROOT.ROOT.RDF.MakeNumpyDataFrame(data). df2.Snapshot(""tree"", ""file.root""). ```. TODO:. - [x] Figure out how to install the header needed for the `NumyDataSource`. - [x] How to call the header (current name `MakeNumpyDataFrame.hxx`)? We should put it in a scope.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3669
https://github.com/root-project/root/pull/3669:907,energy efficiency,current,current,907,"[PyROOT exp] Introduce MakeNumpyDataFrame to read numpy arrays with RDF; This PR supersedes #3424. The reference counting is greatly improved and the data is kept alive until the datasource dies, which gets delete at the end of the lifetime of the computational graph. See here for the use-case:. ```python. import ROOT. import numpy. data = {. ""x"": numpy.array([1, 2, 3]),. ""y"": numpy.array([4, 5, 6]). }. df = ROOT.ROOT.RDF.MakeNumpyDataFrame(data). df = df.Define(""z"", ""x + y""). print(df.Mean(""z"").GetValue()) # Returns 7.0. ```. The feature plays well along with the `RDataFrame.AsNumpy` feature:. ```python. import ROOT. df = ROOT.ROOT.RDataFrame(10).Define(""x"", ""(int)rdfentry_""). data = df.AsNumpy(). df2 = ROOT.ROOT.RDF.MakeNumpyDataFrame(data). df2.Snapshot(""tree"", ""file.root""). ```. TODO:. - [x] Figure out how to install the header needed for the `NumyDataSource`. - [x] How to call the header (current name `MakeNumpyDataFrame.hxx`)? We should put it in a scope.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3669
https://github.com/root-project/root/pull/3670:43,integrability,interfac,interface,43,"[PyROOT exp] Add 64bit long types to array interface; Add `long long` and `unsigned long long` to array interface. In PyROOT, these types are normalized to the ROOT types `Long64_t` and `ULong64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3670
https://github.com/root-project/root/pull/3670:104,integrability,interfac,interface,104,"[PyROOT exp] Add 64bit long types to array interface; Add `long long` and `unsigned long long` to array interface. In PyROOT, these types are normalized to the ROOT types `Long64_t` and `ULong64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3670
https://github.com/root-project/root/pull/3670:43,interoperability,interfac,interface,43,"[PyROOT exp] Add 64bit long types to array interface; Add `long long` and `unsigned long long` to array interface. In PyROOT, these types are normalized to the ROOT types `Long64_t` and `ULong64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3670
https://github.com/root-project/root/pull/3670:104,interoperability,interfac,interface,104,"[PyROOT exp] Add 64bit long types to array interface; Add `long long` and `unsigned long long` to array interface. In PyROOT, these types are normalized to the ROOT types `Long64_t` and `ULong64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3670
https://github.com/root-project/root/pull/3670:43,modifiability,interfac,interface,43,"[PyROOT exp] Add 64bit long types to array interface; Add `long long` and `unsigned long long` to array interface. In PyROOT, these types are normalized to the ROOT types `Long64_t` and `ULong64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3670
https://github.com/root-project/root/pull/3670:104,modifiability,interfac,interface,104,"[PyROOT exp] Add 64bit long types to array interface; Add `long long` and `unsigned long long` to array interface. In PyROOT, these types are normalized to the ROOT types `Long64_t` and `ULong64_t`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3670
https://github.com/root-project/root/pull/3671:247,security,Modif,Modified,247,"WebGui6: Support interactive changes on TWebCanvas; With the PR many interactive changes of objects in the browser immediately reflected on the server. Like zooming, change frame/title/statbox/zaxis position, changing line/fill/marker attributes. Modified canvas and primitives can be stored in ROOT file and used again with normal viewer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3671
https://github.com/root-project/root/pull/3671:9,usability,Support,Support,9,"WebGui6: Support interactive changes on TWebCanvas; With the PR many interactive changes of objects in the browser immediately reflected on the server. Like zooming, change frame/title/statbox/zaxis position, changing line/fill/marker attributes. Modified canvas and primitives can be stored in ROOT file and used again with normal viewer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3671
https://github.com/root-project/root/pull/3671:17,usability,interact,interactive,17,"WebGui6: Support interactive changes on TWebCanvas; With the PR many interactive changes of objects in the browser immediately reflected on the server. Like zooming, change frame/title/statbox/zaxis position, changing line/fill/marker attributes. Modified canvas and primitives can be stored in ROOT file and used again with normal viewer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3671
https://github.com/root-project/root/pull/3671:69,usability,interact,interactive,69,"WebGui6: Support interactive changes on TWebCanvas; With the PR many interactive changes of objects in the browser immediately reflected on the server. Like zooming, change frame/title/statbox/zaxis position, changing line/fill/marker attributes. Modified canvas and primitives can be stored in ROOT file and used again with normal viewer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3671
https://github.com/root-project/root/pull/3672:67,usability,prefer,preferred,67,"json: provide ToJSON method, returning std::unique_ptr<T>; This is preferred way, while correctly handles object ownership",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3672
https://github.com/root-project/root/pull/3673:28,deployability,version,version,28,[cling] Fix OSX where cmake version is '3.14.0-rc4';,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3673
https://github.com/root-project/root/pull/3673:28,integrability,version,version,28,[cling] Fix OSX where cmake version is '3.14.0-rc4';,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3673
https://github.com/root-project/root/pull/3673:28,modifiability,version,version,28,[cling] Fix OSX where cmake version is '3.14.0-rc4';,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3673
https://github.com/root-project/root/pull/3674:33,security,Sign,Signed-off-by,33,Add non-interactive mode to cpt; Signed-off-by: Vassil Vassilev <v.g.vassilev@gmail.com>,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3674
https://github.com/root-project/root/pull/3674:8,usability,interact,interactive,8,Add non-interactive mode to cpt; Signed-off-by: Vassil Vassilev <v.g.vassilev@gmail.com>,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3674
https://github.com/root-project/root/pull/3676:313,usability,Close,Close,313,"fix ROOT-10060. Invalid pointer to fMother in TPad; Attempt to fix https://sft.its.cern.ch/jira/browse/ROOT-10060. Before this fix ehe following macro crashed:. ```. {. auto c = new TCanvas(""canvas"", ""canvas""); // gPad=c;. auto p = new TPad(""pad"", ""pad"", .2, .05, .8, .35 ); // fMother = gPad = c;. delete c;. p->Close();. }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3676
https://github.com/root-project/root/pull/3678:23,availability,error,error,23,[NFC] Clarification of error message in case of root7 option; I also adjusted indentation in if-else statement.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3678
https://github.com/root-project/root/pull/3678:101,availability,state,statement,101,[NFC] Clarification of error message in case of root7 option; I also adjusted indentation in if-else statement.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3678
https://github.com/root-project/root/pull/3678:29,integrability,messag,message,29,[NFC] Clarification of error message in case of root7 option; I also adjusted indentation in if-else statement.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3678
https://github.com/root-project/root/pull/3678:101,integrability,state,statement,101,[NFC] Clarification of error message in case of root7 option; I also adjusted indentation in if-else statement.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3678
https://github.com/root-project/root/pull/3678:29,interoperability,messag,message,29,[NFC] Clarification of error message in case of root7 option; I also adjusted indentation in if-else statement.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3678
https://github.com/root-project/root/pull/3678:23,performance,error,error,23,[NFC] Clarification of error message in case of root7 option; I also adjusted indentation in if-else statement.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3678
https://github.com/root-project/root/pull/3678:23,safety,error,error,23,[NFC] Clarification of error message in case of root7 option; I also adjusted indentation in if-else statement.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3678
https://github.com/root-project/root/pull/3678:23,usability,error,error,23,[NFC] Clarification of error message in case of root7 option; I also adjusted indentation in if-else statement.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3678
https://github.com/root-project/root/pull/3679:23,integrability,messag,message,23,[IO] Fix formatting of message for 32 bits;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3679
https://github.com/root-project/root/pull/3679:9,interoperability,format,formatting,9,[IO] Fix formatting of message for 32 bits;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3679
https://github.com/root-project/root/pull/3679:23,interoperability,messag,message,23,[IO] Fix formatting of message for 32 bits;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3679
https://github.com/root-project/root/pull/3681:15,deployability,Integr,Integration,15,[skip ci][WIP] Integration of Zstd compression algorithm in ROOT; ZSTD github: https://github.com/facebook/zstd.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3681
https://github.com/root-project/root/pull/3681:15,integrability,Integr,Integration,15,[skip ci][WIP] Integration of Zstd compression algorithm in ROOT; ZSTD github: https://github.com/facebook/zstd.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3681
https://github.com/root-project/root/pull/3681:15,interoperability,Integr,Integration,15,[skip ci][WIP] Integration of Zstd compression algorithm in ROOT; ZSTD github: https://github.com/facebook/zstd.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3681
https://github.com/root-project/root/pull/3681:15,modifiability,Integr,Integration,15,[skip ci][WIP] Integration of Zstd compression algorithm in ROOT; ZSTD github: https://github.com/facebook/zstd.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3681
https://github.com/root-project/root/pull/3681:15,reliability,Integr,Integration,15,[skip ci][WIP] Integration of Zstd compression algorithm in ROOT; ZSTD github: https://github.com/facebook/zstd.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3681
https://github.com/root-project/root/pull/3681:15,security,Integr,Integration,15,[skip ci][WIP] Integration of Zstd compression algorithm in ROOT; ZSTD github: https://github.com/facebook/zstd.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3681
https://github.com/root-project/root/pull/3681:15,testability,Integr,Integration,15,[skip ci][WIP] Integration of Zstd compression algorithm in ROOT; ZSTD github: https://github.com/facebook/zstd.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3681
https://github.com/root-project/root/pull/3682:10,availability,error,error,10,json: fix error with converting std::unordered_map ;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3682
https://github.com/root-project/root/pull/3682:10,performance,error,error,10,json: fix error with converting std::unordered_map ;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3682
https://github.com/root-project/root/pull/3682:10,safety,error,error,10,json: fix error with converting std::unordered_map ;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3682
https://github.com/root-project/root/pull/3682:10,usability,error,error,10,json: fix error with converting std::unordered_map ;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3682
https://github.com/root-project/root/pull/3683:79,safety,test,test,79,"[RDF][ROOT-9674] Infer properly type of data members of split TClonesArrays; A test is still missing, I'll add it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3683
https://github.com/root-project/root/pull/3683:79,testability,test,test,79,"[RDF][ROOT-9674] Infer properly type of data members of split TClonesArrays; A test is still missing, I'll add it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3683
https://github.com/root-project/root/pull/3684:10,availability,error,error,10,json: fix error with converting std::unordered_map 6.16;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3684
https://github.com/root-project/root/pull/3684:10,performance,error,error,10,json: fix error with converting std::unordered_map 6.16;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3684
https://github.com/root-project/root/pull/3684:10,safety,error,error,10,json: fix error with converting std::unordered_map 6.16;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3684
https://github.com/root-project/root/pull/3684:10,usability,error,error,10,json: fix error with converting std::unordered_map 6.16;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3684
https://github.com/root-project/root/pull/3686:123,deployability,build,buildid,123,[PyROOT exp] Make DeclareCppCallable py3 compliant; This should fix the nightlies: http://cdash.cern.ch/viewBuildError.php?buildid=645212,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3686
https://github.com/root-project/root/pull/3686:41,integrability,complian,compliant,41,[PyROOT exp] Make DeclareCppCallable py3 compliant; This should fix the nightlies: http://cdash.cern.ch/viewBuildError.php?buildid=645212,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3686
https://github.com/root-project/root/pull/3686:41,safety,compl,compliant,41,[PyROOT exp] Make DeclareCppCallable py3 compliant; This should fix the nightlies: http://cdash.cern.ch/viewBuildError.php?buildid=645212,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3686
https://github.com/root-project/root/pull/3686:41,security,compl,compliant,41,[PyROOT exp] Make DeclareCppCallable py3 compliant; This should fix the nightlies: http://cdash.cern.ch/viewBuildError.php?buildid=645212,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3686
https://github.com/root-project/root/pull/3687:153,availability,redund,redundant,153,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:58,deployability,patch,patch,58,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:153,deployability,redundan,redundant,153,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:179,deployability,modul,modules,179,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:111,integrability,configur,configure,111,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:7,modifiability,Refact,Refactor,7,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:89,modifiability,reu,reusable,89,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:111,modifiability,configur,configure,111,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:179,modifiability,modul,modules,179,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:7,performance,Refactor,Refactor,7,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:153,reliability,redundan,redundant,153,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:58,safety,patch,patch,58,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:153,safety,redund,redundant,153,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:179,safety,modul,modules,179,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:58,security,patch,patch,58,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3687:111,security,configur,configure,111,[dict] Refactor the dictionary initialization. NFC.; This patch makes the implementation reusable and ready to configure it such. that we can remove the redundant information for modules.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3687
https://github.com/root-project/root/pull/3688:11,integrability,configur,configure,11,"WebUI: let configure JSON compression for transferred data; Very useful for debugging of dump data, . used in v7 canvas painter and geometry viewer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3688
https://github.com/root-project/root/pull/3688:11,modifiability,configur,configure,11,"WebUI: let configure JSON compression for transferred data; Very useful for debugging of dump data, . used in v7 canvas painter and geometry viewer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3688
https://github.com/root-project/root/pull/3688:11,security,configur,configure,11,"WebUI: let configure JSON compression for transferred data; Very useful for debugging of dump data, . used in v7 canvas painter and geometry viewer",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3688
https://github.com/root-project/root/pull/3689:43,energy efficiency,draw,drawing,43,Implement comparison and assignment for v7 drawing attributes.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3689
https://github.com/root-project/root/pull/3690:0,deployability,Updat,Updated,0,Updated documentation in vmc:; Moved README.md added with Multiple Engines development in README.multiple.md and added a new README.md (Md version of the Drupal VMC main page),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3690
https://github.com/root-project/root/pull/3690:139,deployability,version,version,139,Updated documentation in vmc:; Moved README.md added with Multiple Engines development in README.multiple.md and added a new README.md (Md version of the Drupal VMC main page),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3690
https://github.com/root-project/root/pull/3690:139,integrability,version,version,139,Updated documentation in vmc:; Moved README.md added with Multiple Engines development in README.multiple.md and added a new README.md (Md version of the Drupal VMC main page),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3690
https://github.com/root-project/root/pull/3690:139,modifiability,version,version,139,Updated documentation in vmc:; Moved README.md added with Multiple Engines development in README.multiple.md and added a new README.md (Md version of the Drupal VMC main page),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3690
https://github.com/root-project/root/pull/3690:0,safety,Updat,Updated,0,Updated documentation in vmc:; Moved README.md added with Multiple Engines development in README.multiple.md and added a new README.md (Md version of the Drupal VMC main page),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3690
https://github.com/root-project/root/pull/3690:0,security,Updat,Updated,0,Updated documentation in vmc:; Moved README.md added with Multiple Engines development in README.multiple.md and added a new README.md (Md version of the Drupal VMC main page),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3690
https://github.com/root-project/root/pull/3690:8,usability,document,documentation,8,Updated documentation in vmc:; Moved README.md added with Multiple Engines development in README.multiple.md and added a new README.md (Md version of the Drupal VMC main page),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3690
https://github.com/root-project/root/pull/3691:17,deployability,depend,dependencies,17,Removed circular dependencies in 'montecarlo':; Moved TPDGCode.h (used in 'pythia6' and 'pythia8') from 'vmc' to to 'eg'; this makes all other libraries in 'montecarlo' not dependent on 'vmc',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3691
https://github.com/root-project/root/pull/3691:173,deployability,depend,dependent,173,Removed circular dependencies in 'montecarlo':; Moved TPDGCode.h (used in 'pythia6' and 'pythia8') from 'vmc' to to 'eg'; this makes all other libraries in 'montecarlo' not dependent on 'vmc',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3691
https://github.com/root-project/root/pull/3691:17,integrability,depend,dependencies,17,Removed circular dependencies in 'montecarlo':; Moved TPDGCode.h (used in 'pythia6' and 'pythia8') from 'vmc' to to 'eg'; this makes all other libraries in 'montecarlo' not dependent on 'vmc',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3691
https://github.com/root-project/root/pull/3691:173,integrability,depend,dependent,173,Removed circular dependencies in 'montecarlo':; Moved TPDGCode.h (used in 'pythia6' and 'pythia8') from 'vmc' to to 'eg'; this makes all other libraries in 'montecarlo' not dependent on 'vmc',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3691
https://github.com/root-project/root/pull/3691:17,modifiability,depend,dependencies,17,Removed circular dependencies in 'montecarlo':; Moved TPDGCode.h (used in 'pythia6' and 'pythia8') from 'vmc' to to 'eg'; this makes all other libraries in 'montecarlo' not dependent on 'vmc',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3691
https://github.com/root-project/root/pull/3691:173,modifiability,depend,dependent,173,Removed circular dependencies in 'montecarlo':; Moved TPDGCode.h (used in 'pythia6' and 'pythia8') from 'vmc' to to 'eg'; this makes all other libraries in 'montecarlo' not dependent on 'vmc',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3691
https://github.com/root-project/root/pull/3691:17,safety,depend,dependencies,17,Removed circular dependencies in 'montecarlo':; Moved TPDGCode.h (used in 'pythia6' and 'pythia8') from 'vmc' to to 'eg'; this makes all other libraries in 'montecarlo' not dependent on 'vmc',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3691
https://github.com/root-project/root/pull/3691:173,safety,depend,dependent,173,Removed circular dependencies in 'montecarlo':; Moved TPDGCode.h (used in 'pythia6' and 'pythia8') from 'vmc' to to 'eg'; this makes all other libraries in 'montecarlo' not dependent on 'vmc',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3691
https://github.com/root-project/root/pull/3691:17,testability,depend,dependencies,17,Removed circular dependencies in 'montecarlo':; Moved TPDGCode.h (used in 'pythia6' and 'pythia8') from 'vmc' to to 'eg'; this makes all other libraries in 'montecarlo' not dependent on 'vmc',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3691
https://github.com/root-project/root/pull/3691:173,testability,depend,dependent,173,Removed circular dependencies in 'montecarlo':; Moved TPDGCode.h (used in 'pythia6' and 'pythia8') from 'vmc' to to 'eg'; this makes all other libraries in 'montecarlo' not dependent on 'vmc',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3691
https://github.com/root-project/root/pull/3692:38,deployability,compos,composite,38,"[treeplayer] TTreeReader was chopping composite names incorrectly:; This caused an infinite loop e.g. with a branch ""0.2.0.eventEnergy"" which was never getting shorter. See https://root-forum.cern.ch/t/ttreereader-hang-infinite-loop/33446",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3692
https://github.com/root-project/root/pull/3692:123,integrability,event,eventEnergy,123,"[treeplayer] TTreeReader was chopping composite names incorrectly:; This caused an infinite loop e.g. with a branch ""0.2.0.eventEnergy"" which was never getting shorter. See https://root-forum.cern.ch/t/ttreereader-hang-infinite-loop/33446",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3692
https://github.com/root-project/root/pull/3692:38,modifiability,compos,composite,38,"[treeplayer] TTreeReader was chopping composite names incorrectly:; This caused an infinite loop e.g. with a branch ""0.2.0.eventEnergy"" which was never getting shorter. See https://root-forum.cern.ch/t/ttreereader-hang-infinite-loop/33446",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3692
https://github.com/root-project/root/pull/3693:225,usability,behavi,behaviour,225,"In debug mode, print information about the CSV lines being read; In debug mode, print information about the CSV lines being read. This information is used by `roottest-root-dataframe-test_progressiveCSV` to check the correct behaviour of the progressive reading of the CSV data source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3693
https://github.com/root-project/root/pull/3693:242,usability,progress,progressive,242,"In debug mode, print information about the CSV lines being read; In debug mode, print information about the CSV lines being read. This information is used by `roottest-root-dataframe-test_progressiveCSV` to check the correct behaviour of the progressive reading of the CSV data source.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3693
https://github.com/root-project/root/pull/3694:456,interoperability,format,format,456,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3694:365,safety,test,test,365,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3694:394,safety,review,reviewing,394,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3694:279,security,modif,modification,279,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3694:5,testability,regress,regression,5,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3694:28,testability,simpl,simplification,28,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3694:71,testability,simpl,simplification,71,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3694:365,testability,test,test,365,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3694:394,testability,review,reviewing,394,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3694:515,testability,Simpl,Simplify,515,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3694:533,testability,regress,regression,533,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3694:28,usability,simpl,simplification,28,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3694:71,usability,simpl,simplification,71,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3694:515,usability,Simpl,Simplify,515,"TMVA regression output code simplification; Please have a look at this simplification commit. . I am not 100% happy with the new names I have introduced. A similiar commit should be made for Classification as well. The EvaluateAllMethods functions is still a monster. As for the modification in the AdaBoost: that is the only untested change in this commit (please test the change). For easier reviewing, I have separated this pull in 4 commits. The clang-format just changes whitespace. The main commit is ""[TMVA] Simplify code for regression summary"". Why this commit? ##############. Reason was the wrong order of results. There were not ordered by RMS. Looking at the code revealed the mess :-).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3694
https://github.com/root-project/root/pull/3695:39,deployability,modul,modulemap,39,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:75,deployability,patch,patch,75,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:100,deployability,modul,modulemap,100,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:24,energy efficiency,load,loading,24,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:90,energy efficiency,load,loads,90,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:160,energy efficiency,load,loaded,160,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:39,modifiability,modul,modulemap,39,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:100,modifiability,modul,modulemap,100,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:24,performance,load,loading,24,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:90,performance,load,loads,90,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:160,performance,load,loaded,160,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:39,safety,modul,modulemap,39,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:75,safety,patch,patch,75,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:100,safety,modul,modulemap,100,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:135,safety,detect,detected,135,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:75,security,patch,patch,75,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3695:135,security,detect,detected,135,[cxxmodules] Rework the loading of the modulemap in the working dir.; This patch actually loads the modulemap as previously it wrongly detected. it was already loaded.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3695
https://github.com/root-project/root/pull/3696:99,deployability,contain,contain,99,[TTreeReader][ROOT-10046] Treat ideantically TTree and TChain; when it comes to branch names which contain a dot.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3696
https://github.com/root-project/root/pull/3697:58,availability,error,error,58,[CmdLineUtils][ROOT-8527] Improve clarity of warnings and error messages;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3697
https://github.com/root-project/root/pull/3697:64,integrability,messag,messages,64,[CmdLineUtils][ROOT-8527] Improve clarity of warnings and error messages;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3697
https://github.com/root-project/root/pull/3697:64,interoperability,messag,messages,64,[CmdLineUtils][ROOT-8527] Improve clarity of warnings and error messages;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3697
https://github.com/root-project/root/pull/3697:58,performance,error,error,58,[CmdLineUtils][ROOT-8527] Improve clarity of warnings and error messages;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3697
https://github.com/root-project/root/pull/3697:58,safety,error,error,58,[CmdLineUtils][ROOT-8527] Improve clarity of warnings and error messages;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3697
https://github.com/root-project/root/pull/3697:34,usability,clarit,clarity,34,[CmdLineUtils][ROOT-8527] Improve clarity of warnings and error messages;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3697
https://github.com/root-project/root/pull/3697:58,usability,error,error,58,[CmdLineUtils][ROOT-8527] Improve clarity of warnings and error messages;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3697
https://github.com/root-project/root/pull/3698:1,energy efficiency,Core,Core,1,[Core][ROOT-10087] Backport make_unique for array types;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3698
https://github.com/root-project/root/pull/3699:101,deployability,fail,fail,101,[RDF][ROOT-9984] Throw early if file in chain does not exist; rather than waiting for the jitting to fail.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3699
https://github.com/root-project/root/pull/3699:46,reliability,doe,does,46,[RDF][ROOT-9984] Throw early if file in chain does not exist; rather than waiting for the jitting to fail.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3699
https://github.com/root-project/root/pull/3699:101,reliability,fail,fail,101,[RDF][ROOT-9984] Throw early if file in chain does not exist; rather than waiting for the jitting to fail.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3699
https://github.com/root-project/root/pull/3701:17,interoperability,convers,conversion,17,Json map->object conversion;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3701
https://github.com/root-project/root/pull/3702:257,availability,error,error,257,"v7attr: move line/box/marker/text attributes to gpadv7; Base classes for attributes defined in gpad, but also some classes like. RPad uses line or fill attributes. Later attributes can be extracted. into separate library. Should resolve circular dependency error, detected only on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:246,deployability,depend,dependency,246,"v7attr: move line/box/marker/text attributes to gpadv7; Base classes for attributes defined in gpad, but also some classes like. RPad uses line or fill attributes. Later attributes can be extracted. into separate library. Should resolve circular dependency error, detected only on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:246,integrability,depend,dependency,246,"v7attr: move line/box/marker/text attributes to gpadv7; Base classes for attributes defined in gpad, but also some classes like. RPad uses line or fill attributes. Later attributes can be extracted. into separate library. Should resolve circular dependency error, detected only on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:246,modifiability,depend,dependency,246,"v7attr: move line/box/marker/text attributes to gpadv7; Base classes for attributes defined in gpad, but also some classes like. RPad uses line or fill attributes. Later attributes can be extracted. into separate library. Should resolve circular dependency error, detected only on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:257,performance,error,error,257,"v7attr: move line/box/marker/text attributes to gpadv7; Base classes for attributes defined in gpad, but also some classes like. RPad uses line or fill attributes. Later attributes can be extracted. into separate library. Should resolve circular dependency error, detected only on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:246,safety,depend,dependency,246,"v7attr: move line/box/marker/text attributes to gpadv7; Base classes for attributes defined in gpad, but also some classes like. RPad uses line or fill attributes. Later attributes can be extracted. into separate library. Should resolve circular dependency error, detected only on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:257,safety,error,error,257,"v7attr: move line/box/marker/text attributes to gpadv7; Base classes for attributes defined in gpad, but also some classes like. RPad uses line or fill attributes. Later attributes can be extracted. into separate library. Should resolve circular dependency error, detected only on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:264,safety,detect,detected,264,"v7attr: move line/box/marker/text attributes to gpadv7; Base classes for attributes defined in gpad, but also some classes like. RPad uses line or fill attributes. Later attributes can be extracted. into separate library. Should resolve circular dependency error, detected only on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:264,security,detect,detected,264,"v7attr: move line/box/marker/text attributes to gpadv7; Base classes for attributes defined in gpad, but also some classes like. RPad uses line or fill attributes. Later attributes can be extracted. into separate library. Should resolve circular dependency error, detected only on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:246,testability,depend,dependency,246,"v7attr: move line/box/marker/text attributes to gpadv7; Base classes for attributes defined in gpad, but also some classes like. RPad uses line or fill attributes. Later attributes can be extracted. into separate library. Should resolve circular dependency error, detected only on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3702:257,usability,error,error,257,"v7attr: move line/box/marker/text attributes to gpadv7; Base classes for attributes defined in gpad, but also some classes like. RPad uses line or fill attributes. Later attributes can be extracted. into separate library. Should resolve circular dependency error, detected only on Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3702
https://github.com/root-project/root/pull/3703:291,availability,error,error,291,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:125,deployability,Build,Building,125,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:291,performance,error,error,291,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:86,safety,test,test-utils,86,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:160,safety,test,test,160,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:252,safety,test,test,252,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:291,safety,error,error,291,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:304,safety,test,test-util,304,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:360,safety,test,test-util,360,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:86,testability,test,test-utils,86,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:160,testability,test,test,160,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:252,testability,test,test,252,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:304,testability,test,test-util,304,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:360,testability,test,test-util,360,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:25,usability,support,support,25,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3703:291,usability,error,error,291,Fix enabled Apache Arrow support for ROOT; Latest binary of Apache Arrow actually has test-utils.h in arrow/compute/. [ 94%] Building CXX object tree/dataframe/test/CMakeFiles/dataframe_interface.dir/dataframe_interface.cxx.o. /.../root/tree/dataframe/test/datasource_arrow.cxx:14:10: fatal error: arrow/test-util.h: No such file or directory. #include <arrow/test-util.h>. ^~~~~~~~~~~~~~~~~~~. compilation terminated.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3703
https://github.com/root-project/root/pull/3704:85,deployability,infrastructur,infrastructure,85,"Temporary disable Bulk I/O tests on 32b machines; Problem is visible only on CERN VM infrastructure and currently is under investigation, for 32b Docker container tests are passing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3704
https://github.com/root-project/root/pull/3704:153,deployability,contain,container,153,"Temporary disable Bulk I/O tests on 32b machines; Problem is visible only on CERN VM infrastructure and currently is under investigation, for 32b Docker container tests are passing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3704
https://github.com/root-project/root/pull/3704:104,energy efficiency,current,currently,104,"Temporary disable Bulk I/O tests on 32b machines; Problem is visible only on CERN VM infrastructure and currently is under investigation, for 32b Docker container tests are passing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3704
https://github.com/root-project/root/pull/3704:23,performance,I/O,I/O,23,"Temporary disable Bulk I/O tests on 32b machines; Problem is visible only on CERN VM infrastructure and currently is under investigation, for 32b Docker container tests are passing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3704
https://github.com/root-project/root/pull/3704:27,safety,test,tests,27,"Temporary disable Bulk I/O tests on 32b machines; Problem is visible only on CERN VM infrastructure and currently is under investigation, for 32b Docker container tests are passing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3704
https://github.com/root-project/root/pull/3704:163,safety,test,tests,163,"Temporary disable Bulk I/O tests on 32b machines; Problem is visible only on CERN VM infrastructure and currently is under investigation, for 32b Docker container tests are passing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3704
https://github.com/root-project/root/pull/3704:27,testability,test,tests,27,"Temporary disable Bulk I/O tests on 32b machines; Problem is visible only on CERN VM infrastructure and currently is under investigation, for 32b Docker container tests are passing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3704
https://github.com/root-project/root/pull/3704:163,testability,test,tests,163,"Temporary disable Bulk I/O tests on 32b machines; Problem is visible only on CERN VM infrastructure and currently is under investigation, for 32b Docker container tests are passing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3704
https://github.com/root-project/root/pull/3707:735,deployability,API,API,735,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:735,integrability,API,API,735,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:955,integrability,messag,message,955,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:180,interoperability,format,format,180,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:282,interoperability,convers,conversions,282,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:371,interoperability,convers,conversions,371,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:735,interoperability,API,API,735,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:955,interoperability,messag,message,955,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:54,modifiability,maintain,maintainers,54,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:1145,modifiability,Variab,Variable,1145,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:519,performance,time,timestamp,519,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:115,reliability,doe,does,115,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:54,safety,maintain,maintainers,54,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:1236,security,modif,modified,1236,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:23,usability,support,support,23,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:124,usability,support,support,124,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:484,usability,support,support,484,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3707:1182,usability,support,supported,1182,"Add string and SQLite3 support to TTreeSQL; Dear ROOT maintainers, . The TTreeSQL class seems a bit broken. . - It does not support sqlite (which nowadays might be the most likely format someone might use a TTree for) because of the way it parses columns. . - Some of the data type conversions don't make sense to me (but maybe I misunderstand). In particular the string conversions don't seem like they'd work. . Here is a commit to address those issues. I wanted to also add proper support for database date/datetime/timestamp types (right now I turn them into a string) but I was not sure how to do that. I think what would work is to have an e.g. TDateSQL class that uses a TString for storage (since I believe that's what the SQL API right now would give us) that could then be transparently converted to TDatime or TTimeStamp as needed. This would be easy to implement, but I have not yet because there must be a better way... . Below is the commit message. There are also a few typo fixes that I included. . This commit has a few changes:. -Column names are now obtained from the Table metadata, ensuring that sqlite will work properly. -Variable length strings are properly supported (using TString). -The data type mapping was modified to make a bit more sense (in my opinion), but could still use some work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3707
https://github.com/root-project/root/pull/3708:31,security,Sign,Signed-off-by,31,Fix cpt.py a careless mistake; Signed-off-by: Vassil Vassilev <v.g.vassilev@gmail.com>,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3708
https://github.com/root-project/root/pull/3710:40,integrability,wrap,wrapper,40,[PyROOT exp] Acquire GIL in CppCallable wrapper code; @etejedor I keep this here until we know how to handle this correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3710
https://github.com/root-project/root/pull/3710:40,interoperability,wrapper,wrapper,40,[PyROOT exp] Acquire GIL in CppCallable wrapper code; @etejedor I keep this here until we know how to handle this correctly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3710
https://github.com/root-project/root/pull/3712:74,integrability,repositor,repository,74,[PyROOT exp] Fix GIL control; The fix is taken from the official CPyCppyy repository (commit 590cc73). Opened this PR in favor of #3710.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3712
https://github.com/root-project/root/pull/3712:74,interoperability,repositor,repository,74,[PyROOT exp] Fix GIL control; The fix is taken from the official CPyCppyy repository (commit 590cc73). Opened this PR in favor of #3710.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3712
https://github.com/root-project/root/pull/3712:21,security,control,control,21,[PyROOT exp] Fix GIL control; The fix is taken from the official CPyCppyy repository (commit 590cc73). Opened this PR in favor of #3710.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3712
https://github.com/root-project/root/pull/3712:21,testability,control,control,21,[PyROOT exp] Fix GIL control; The fix is taken from the official CPyCppyy repository (commit 590cc73). Opened this PR in favor of #3710.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3712
https://github.com/root-project/root/pull/3714:28,deployability,fail,fail,28,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:43,deployability,modul,module,43,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:62,deployability,modul,modules,62,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:36,energy efficiency,load,load,36,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:52,energy efficiency,Current,Currently,52,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:96,energy efficiency,load,loaded,96,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:43,modifiability,modul,module,43,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:62,modifiability,modul,modules,62,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:36,performance,load,load,36,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:96,performance,load,loaded,96,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:28,reliability,fail,fail,28,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:132,reliability,diagno,diagnostic,132,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:13,safety,Compl,Complain,13,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:43,safety,modul,module,43,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:62,safety,modul,modules,62,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:13,security,Compl,Complain,13,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3714:132,testability,diagno,diagnostic,132,"[cxxmodules] Complain if we fail to load a module.; Currently modules in ACLiC are not properly loaded, that's why we. suppress the diagnostic if the library was ACLiC-generated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3714
https://github.com/root-project/root/pull/3715:22,energy efficiency,Load,LoadPCM,22,[cxxmodules] Simplify LoadPCM;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3715
https://github.com/root-project/root/pull/3715:22,performance,Load,LoadPCM,22,[cxxmodules] Simplify LoadPCM;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3715
https://github.com/root-project/root/pull/3715:13,testability,Simpl,Simplify,13,[cxxmodules] Simplify LoadPCM;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3715
https://github.com/root-project/root/pull/3715:13,usability,Simpl,Simplify,13,[cxxmodules] Simplify LoadPCM;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3715
https://github.com/root-project/root/pull/3716:272,testability,context,context,272,[RDF] Add the `Stats` method to RInterface to get TStatistic instances; out of columns of a dataset. The implementation is trivial and relies on the already present `RInterface::Fill`. The `TStatistic::Merge` implementation needed to be changed to be well behaved in a MT context. Other changes are present in the PR to allow better handling of the filling of non-TH1 objects via the `RInterface::Fill` method.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3716
https://github.com/root-project/root/pull/3717:30,performance,memor,memory,30,[TFormula][ROOT-10089] Remove memory leak;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3717
https://github.com/root-project/root/pull/3717:30,usability,memor,memory,30,[TFormula][ROOT-10089] Remove memory leak;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3717
https://github.com/root-project/root/pull/3718:31,availability,state,state,31,[MathCore][ROOT-10059] Set/Get state of TRandom3;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3718:31,integrability,state,state,31,[MathCore][ROOT-10059] Set/Get state of TRandom3;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3718
https://github.com/root-project/root/pull/3721:70,energy efficiency,current,current,70,cmake: add webui option to 6-16 branch; This is partial backport from current ROOT master. By default webui is enabled when cxx14 or cxx17 is specified (as before). Can be disabled by providing -Dwebui=OFF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3721
https://github.com/root-project/root/pull/3721:142,interoperability,specif,specified,142,cmake: add webui option to 6-16 branch; This is partial backport from current ROOT master. By default webui is enabled when cxx14 or cxx17 is specified (as before). Can be disabled by providing -Dwebui=OFF,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3721
https://github.com/root-project/root/pull/3722:45,modifiability,variab,variable,45,[PyROOT exp] Fix warning (used uninitialized variable); Variables are detected as used initialized if initialization is done via. a call to the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3722
https://github.com/root-project/root/pull/3722:56,modifiability,Variab,Variables,56,[PyROOT exp] Fix warning (used uninitialized variable); Variables are detected as used initialized if initialization is done via. a call to the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3722
https://github.com/root-project/root/pull/3722:70,safety,detect,detected,70,[PyROOT exp] Fix warning (used uninitialized variable); Variables are detected as used initialized if initialization is done via. a call to the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3722
https://github.com/root-project/root/pull/3722:70,security,detect,detected,70,[PyROOT exp] Fix warning (used uninitialized variable); Variables are detected as used initialized if initialization is done via. a call to the interpreter.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3722
https://github.com/root-project/root/pull/3723:290,availability,operat,operation,290,"Fix copy constructor of RooFitResult; The `_statusHistory` member was not properly copied over before this. This. resulted in the `_statusHistory` not being persisted in a `RooWorkspace`, when a. `RooFitResult` was imported into it, since the original `RooFitResult` is cloned. during this operation. Consequently, it was not possible to store the status. history of a fit into a `RooWorkspace` and retrieve this information later on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3723
https://github.com/root-project/root/pull/3723:348,usability,statu,status,348,"Fix copy constructor of RooFitResult; The `_statusHistory` member was not properly copied over before this. This. resulted in the `_statusHistory` not being persisted in a `RooWorkspace`, when a. `RooFitResult` was imported into it, since the original `RooFitResult` is cloned. during this operation. Consequently, it was not possible to store the status. history of a fit into a `RooWorkspace` and retrieve this information later on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3723
https://github.com/root-project/root/pull/3725:43,safety,test,test-utils,43,Latest binary of Apache Arrow actually has test-utils.h in arrow/comp…; …ute/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3725
https://github.com/root-project/root/pull/3725:43,testability,test,test-utils,43,Latest binary of Apache Arrow actually has test-utils.h in arrow/comp…; …ute/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3725
https://github.com/root-project/root/pull/3726:34,performance,memor,memory,34,[6-14-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3726
https://github.com/root-project/root/pull/3726:41,performance,cach,cache,41,[6-14-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3726
https://github.com/root-project/root/pull/3726:79,safety,prevent,prevents,79,[6-14-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3726
https://github.com/root-project/root/pull/3726:79,security,preven,prevents,79,[6-14-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3726
https://github.com/root-project/root/pull/3726:189,security,access,accesses,189,[6-14-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3726
https://github.com/root-project/root/pull/3726:34,usability,memor,memory,34,[6-14-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3726
https://github.com/root-project/root/pull/3727:34,performance,memor,memory,34,[6-16-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3727
https://github.com/root-project/root/pull/3727:41,performance,cach,cache,41,[6-16-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3727
https://github.com/root-project/root/pull/3727:79,safety,prevent,prevents,79,[6-16-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3727
https://github.com/root-project/root/pull/3727:79,security,preven,prevents,79,[6-16-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3727
https://github.com/root-project/root/pull/3727:189,security,access,accesses,189,[6-16-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3727
https://github.com/root-project/root/pull/3727:34,usability,memor,memory,34,[6-16-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3727
https://github.com/root-project/root/pull/3728:34,performance,memor,memory,34,[6-12-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested in https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3728
https://github.com/root-project/root/pull/3728:41,performance,cach,cache,41,[6-12-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested in https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3728
https://github.com/root-project/root/pull/3728:79,safety,prevent,prevents,79,[6-12-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested in https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3728
https://github.com/root-project/root/pull/3728:79,security,preven,prevents,79,[6-12-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested in https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3728
https://github.com/root-project/root/pull/3728:189,security,access,accesses,189,[6-12-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested in https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3728
https://github.com/root-project/root/pull/3728:34,usability,memor,memory,34,[6-12-backport][cling] Resize the memory cache before entering the loop.; This prevents the vector to be reallocated if the size exceeds the capacity of. the vector causing invalid pointer accesses. Fixes ROOT-7749. Backport requested in https://sft.its.cern.ch/jira/browse/ROOT-10080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3728
https://github.com/root-project/root/pull/3730:5,deployability,build,building,5,"Make building of vmc optional:; this will allow to maintain a standalone version of VMC in parallel, which can be then tagged more frequently according to the needs of the VMC project",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:73,deployability,version,version,73,"Make building of vmc optional:; this will allow to maintain a standalone version of VMC in parallel, which can be then tagged more frequently according to the needs of the VMC project",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:73,integrability,version,version,73,"Make building of vmc optional:; this will allow to maintain a standalone version of VMC in parallel, which can be then tagged more frequently according to the needs of the VMC project",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:51,modifiability,maintain,maintain,51,"Make building of vmc optional:; this will allow to maintain a standalone version of VMC in parallel, which can be then tagged more frequently according to the needs of the VMC project",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:73,modifiability,version,version,73,"Make building of vmc optional:; this will allow to maintain a standalone version of VMC in parallel, which can be then tagged more frequently according to the needs of the VMC project",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:91,performance,parallel,parallel,91,"Make building of vmc optional:; this will allow to maintain a standalone version of VMC in parallel, which can be then tagged more frequently according to the needs of the VMC project",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3730:51,safety,maintain,maintain,51,"Make building of vmc optional:; this will allow to maintain a standalone version of VMC in parallel, which can be then tagged more frequently according to the needs of the VMC project",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3730
https://github.com/root-project/root/pull/3731:355,availability,error,error,355,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:304,deployability,configurat,configuration,304,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:515,deployability,configurat,configuration,515,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:673,deployability,log,logic,673,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:736,deployability,log,logic,736,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:715,energy efficiency,current,current,715,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:304,integrability,configur,configuration,304,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:361,integrability,messag,message,361,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:393,integrability,translat,translate,393,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:515,integrability,configur,configuration,515,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:845,integrability,batch,batch,845,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:877,integrability,configur,configured,877,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:958,integrability,event,events,958,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:980,integrability,batch,batch,980,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:361,interoperability,messag,message,361,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:393,interoperability,translat,translate,393,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:502,interoperability,specif,specifying,502,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:304,modifiability,configur,configuration,304,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:515,modifiability,configur,configuration,515,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:877,modifiability,configur,configured,877,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:355,performance,error,error,355,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:845,performance,batch,batch,845,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:980,performance,batch,batch,980,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:355,safety,error,error,355,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:673,safety,log,logic,673,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:736,safety,log,logic,736,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:304,security,configur,configuration,304,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:515,security,configur,configuration,515,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:673,security,log,logic,673,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:736,security,log,logic,736,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:877,security,configur,configured,877,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:673,testability,log,logic,673,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:736,testability,log,logic,736,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:900,testability,hook,hooks,900,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:144,usability,interact,interactive,144,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:178,usability,close,closely,178,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:228,usability,behavi,behaviour,228,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:355,usability,error,error,355,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:443,usability,custom,custom,443,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:494,usability,user,user,494,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:772,usability,interact,interactive,772,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3731:1085,usability,command,command,1085,"[Exp PyROOT] Create an RPyROOTApplication when importing ROOT; The `RPyROOTApplication` is a `TApplication` that sets up the nuts and bolts for interactive ROOT use from Python, closely following `TRint`. This PR adds the basic behaviour for `TApplication` implemented in C++, i.e. parsing of arguments, configuration of some ROOT globals and setup of an error message handler that is able to translate ROOT warnings into Python warnings. The custom parsing of arguments can be disabled by the user by specifying a configuration option after importing ROOT:. ```python. import ROOT. ROOT.PyConfig.IgnoreCommandLineOptions = True. ```. Moreover, this PR also brings in some logic that is located in `ROOT.py` in the current PyROOT. Such logic makes it possible to use ROOT interactive graphics from Python. The graphics are activated only if the batch mode is off, and they are configured by means of hooks: no thread is explicitly created to process the GUI events as before. The batch mode can be activated by doing:. ```python. import ROOT. ROOT.gROOT.SetBatch(True). ```. or in the command line:. ```bash. > python my_script.py -b. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3731
https://github.com/root-project/root/pull/3732:30,modifiability,variab,variable,30,Better way to silent 'unused' variable warning;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3732
https://github.com/root-project/root/pull/3733:50,availability,failur,failures,50,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:79,availability,Error,Error,79,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:50,deployability,fail,failures,50,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:137,deployability,modul,module,137,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:24,integrability,discover,discovery,24,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:34,integrability,rout,routine,34,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:24,interoperability,discover,discovery,24,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:137,modifiability,modul,module,137,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:50,performance,failur,failures,50,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:79,performance,Error,Error,79,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:50,reliability,fail,failures,50,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:69,safety,test,test,69,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:79,safety,Error,Error,79,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:137,safety,modul,module,137,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:69,testability,test,test,69,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:24,usability,discov,discovery,24,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3733:79,usability,Error,Error,79,Temporary revert of new discovery routine; Fixing failures in stress-test:. `. Error in <TCling::RegisterModule>: cannot find dictionary module libEvent_rdict.pcm. `,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3733
https://github.com/root-project/root/pull/3734:173,availability,failur,failures,173,"Revert ""Further simplify the code. We do not need to use complex disc…; …overy."". This reverts commit 77b8755f36e2313b757fed4068114c28caa16de1. Breaks windows, and has some failures in stress tests. Investigating.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3734
https://github.com/root-project/root/pull/3734:173,deployability,fail,failures,173,"Revert ""Further simplify the code. We do not need to use complex disc…; …overy."". This reverts commit 77b8755f36e2313b757fed4068114c28caa16de1. Breaks windows, and has some failures in stress tests. Investigating.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3734
https://github.com/root-project/root/pull/3734:173,performance,failur,failures,173,"Revert ""Further simplify the code. We do not need to use complex disc…; …overy."". This reverts commit 77b8755f36e2313b757fed4068114c28caa16de1. Breaks windows, and has some failures in stress tests. Investigating.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3734
https://github.com/root-project/root/pull/3734:173,reliability,fail,failures,173,"Revert ""Further simplify the code. We do not need to use complex disc…; …overy."". This reverts commit 77b8755f36e2313b757fed4068114c28caa16de1. Breaks windows, and has some failures in stress tests. Investigating.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3734
https://github.com/root-project/root/pull/3734:57,safety,compl,complex,57,"Revert ""Further simplify the code. We do not need to use complex disc…; …overy."". This reverts commit 77b8755f36e2313b757fed4068114c28caa16de1. Breaks windows, and has some failures in stress tests. Investigating.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3734
https://github.com/root-project/root/pull/3734:192,safety,test,tests,192,"Revert ""Further simplify the code. We do not need to use complex disc…; …overy."". This reverts commit 77b8755f36e2313b757fed4068114c28caa16de1. Breaks windows, and has some failures in stress tests. Investigating.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3734
https://github.com/root-project/root/pull/3734:57,security,compl,complex,57,"Revert ""Further simplify the code. We do not need to use complex disc…; …overy."". This reverts commit 77b8755f36e2313b757fed4068114c28caa16de1. Breaks windows, and has some failures in stress tests. Investigating.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3734
https://github.com/root-project/root/pull/3734:16,testability,simpl,simplify,16,"Revert ""Further simplify the code. We do not need to use complex disc…; …overy."". This reverts commit 77b8755f36e2313b757fed4068114c28caa16de1. Breaks windows, and has some failures in stress tests. Investigating.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3734
https://github.com/root-project/root/pull/3734:192,testability,test,tests,192,"Revert ""Further simplify the code. We do not need to use complex disc…; …overy."". This reverts commit 77b8755f36e2313b757fed4068114c28caa16de1. Breaks windows, and has some failures in stress tests. Investigating.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3734
https://github.com/root-project/root/pull/3734:16,usability,simpl,simplify,16,"Revert ""Further simplify the code. We do not need to use complex disc…; …overy."". This reverts commit 77b8755f36e2313b757fed4068114c28caa16de1. Breaks windows, and has some failures in stress tests. Investigating.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3734
https://github.com/root-project/root/pull/3735:168,performance,time,time,168,"Replace ""char *"" by ""TString"" in TObject::SaveAs(); Espcilly storing results of global `Form()` function is dangerous - this. temporary value can be overwritten at any time by other calls.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3735
https://github.com/root-project/root/pull/3736:13,interoperability,convers,conversion,13,"Use explicit conversion from TString -> const char* in TSystem; ```. if (GetLastErrorString() != """") ... ```. Such kind of comparison is really misleading. . Also direction usage of TString::Data() method probably is preferable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3736
https://github.com/root-project/root/pull/3736:217,usability,prefer,preferable,217,"Use explicit conversion from TString -> const char* in TSystem; ```. if (GetLastErrorString() != """") ... ```. Such kind of comparison is really misleading. . Also direction usage of TString::Data() method probably is preferable",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3736
https://github.com/root-project/root/pull/3738:58,deployability,updat,updated,58,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3738
https://github.com/root-project/root/pull/3738:132,deployability,contain,contain,132,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3738
https://github.com/root-project/root/pull/3738:221,deployability,updat,updated,221,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3738
https://github.com/root-project/root/pull/3738:97,integrability,event,events,97,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3738
https://github.com/root-project/root/pull/3738:204,integrability,event,event,204,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3738
https://github.com/root-project/root/pull/3738:40,modifiability,layer,layer,40,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3738
https://github.com/root-project/root/pull/3738:58,safety,updat,updated,58,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3738
https://github.com/root-project/root/pull/3738:221,safety,updat,updated,221,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3738
https://github.com/root-project/root/pull/3738:58,security,updat,updated,58,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3738
https://github.com/root-project/root/pull/3738:221,security,updat,updated,221,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3738
https://github.com/root-project/root/pull/3738:109,testability,simul,simultaneous,109,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3738
https://github.com/root-project/root/pull/3738:149,testability,simul,simultaneous,149,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3738
https://github.com/root-project/root/pull/3738:240,usability,usab,usable,240,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. further simultaneous PDFs, the category tags of each generated event have to be updated to yield a usable dataset.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3738
https://github.com/root-project/root/pull/3739:58,deployability,updat,updated,58,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. simultaneous PDFs as children, the category tags for the children have to. be updated before being written into a dataset. Otherwise, a dataset with. wrong category labels is obtained. (cherry picked from commit 0a107acffd708818361dfbfefc2369fa45e9306f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3739
https://github.com/root-project/root/pull/3739:132,deployability,contain,contain,132,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. simultaneous PDFs as children, the category tags for the children have to. be updated before being written into a dataset. Otherwise, a dataset with. wrong category labels is obtained. (cherry picked from commit 0a107acffd708818361dfbfefc2369fa45e9306f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3739
https://github.com/root-project/root/pull/3739:219,deployability,updat,updated,219,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. simultaneous PDFs as children, the category tags for the children have to. be updated before being written into a dataset. Otherwise, a dataset with. wrong category labels is obtained. (cherry picked from commit 0a107acffd708818361dfbfefc2369fa45e9306f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3739
https://github.com/root-project/root/pull/3739:97,integrability,event,events,97,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. simultaneous PDFs as children, the category tags for the children have to. be updated before being written into a dataset. Otherwise, a dataset with. wrong category labels is obtained. (cherry picked from commit 0a107acffd708818361dfbfefc2369fa45e9306f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3739
https://github.com/root-project/root/pull/3739:40,modifiability,layer,layer,40,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. simultaneous PDFs as children, the category tags for the children have to. be updated before being written into a dataset. Otherwise, a dataset with. wrong category labels is obtained. (cherry picked from commit 0a107acffd708818361dfbfefc2369fa45e9306f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3739
https://github.com/root-project/root/pull/3739:58,safety,updat,updated,58,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. simultaneous PDFs as children, the category tags for the children have to. be updated before being written into a dataset. Otherwise, a dataset with. wrong category labels is obtained. (cherry picked from commit 0a107acffd708818361dfbfefc2369fa45e9306f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3739
https://github.com/root-project/root/pull/3739:219,safety,updat,updated,219,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. simultaneous PDFs as children, the category tags for the children have to. be updated before being written into a dataset. Otherwise, a dataset with. wrong category labels is obtained. (cherry picked from commit 0a107acffd708818361dfbfefc2369fa45e9306f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3739
https://github.com/root-project/root/pull/3739:58,security,updat,updated,58,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. simultaneous PDFs as children, the category tags for the children have to. be updated before being written into a dataset. Otherwise, a dataset with. wrong category labels is obtained. (cherry picked from commit 0a107acffd708818361dfbfefc2369fa45e9306f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3739
https://github.com/root-project/root/pull/3739:219,security,updat,updated,219,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. simultaneous PDFs as children, the category tags for the children have to. be updated before being written into a dataset. Otherwise, a dataset with. wrong category labels is obtained. (cherry picked from commit 0a107acffd708818361dfbfefc2369fa45e9306f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3739
https://github.com/root-project/root/pull/3739:109,testability,simul,simultaneous,109,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. simultaneous PDFs as children, the category tags for the children have to. be updated before being written into a dataset. Otherwise, a dataset with. wrong category labels is obtained. (cherry picked from commit 0a107acffd708818361dfbfefc2369fa45e9306f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3739
https://github.com/root-project/root/pull/3739:141,testability,simul,simultaneous,141,"[RF] Make sure that categories in multi-layer SimPdfs get updated.; [ROOT-10093] When generating events with simultaneous PDFs that contain. simultaneous PDFs as children, the category tags for the children have to. be updated before being written into a dataset. Otherwise, a dataset with. wrong category labels is obtained. (cherry picked from commit 0a107acffd708818361dfbfefc2369fa45e9306f)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3739
https://github.com/root-project/root/pull/3740:57,usability,Minim,Minimization,57,Web fitpanel; - Color Picker for Advanced Options. - Set Minimization Options,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3740
https://github.com/root-project/root/pull/3742:189,deployability,updat,updated,189,"[RF] Deactivate mempool for RooSetProxy.; When the mempool for RooArgSet was modernised to prevent crashes during the teardown of. global statics, the macro name for RooSetProxy didn't get updated. Therefore, new-ed. RooSetProxys will also end up in the mempool, which was not intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3742
https://github.com/root-project/root/pull/3742:91,safety,prevent,prevent,91,"[RF] Deactivate mempool for RooSetProxy.; When the mempool for RooArgSet was modernised to prevent crashes during the teardown of. global statics, the macro name for RooSetProxy didn't get updated. Therefore, new-ed. RooSetProxys will also end up in the mempool, which was not intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3742
https://github.com/root-project/root/pull/3742:189,safety,updat,updated,189,"[RF] Deactivate mempool for RooSetProxy.; When the mempool for RooArgSet was modernised to prevent crashes during the teardown of. global statics, the macro name for RooSetProxy didn't get updated. Therefore, new-ed. RooSetProxys will also end up in the mempool, which was not intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3742
https://github.com/root-project/root/pull/3742:91,security,preven,prevent,91,"[RF] Deactivate mempool for RooSetProxy.; When the mempool for RooArgSet was modernised to prevent crashes during the teardown of. global statics, the macro name for RooSetProxy didn't get updated. Therefore, new-ed. RooSetProxys will also end up in the mempool, which was not intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3742
https://github.com/root-project/root/pull/3742:189,security,updat,updated,189,"[RF] Deactivate mempool for RooSetProxy.; When the mempool for RooArgSet was modernised to prevent crashes during the teardown of. global statics, the macro name for RooSetProxy didn't get updated. Therefore, new-ed. RooSetProxys will also end up in the mempool, which was not intended.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3742
https://github.com/root-project/root/pull/3743:66,safety,test,test,66,"[RDF] Make the Stats method templated (on top of #3741); increase test coverage accordingly and add 2 tutorials, one in C++ and one in Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3743
https://github.com/root-project/root/pull/3743:66,testability,test,test,66,"[RDF] Make the Stats method templated (on top of #3741); increase test coverage accordingly and add 2 tutorials, one in C++ and one in Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3743
https://github.com/root-project/root/pull/3743:71,testability,coverag,coverage,71,"[RDF] Make the Stats method templated (on top of #3741); increase test coverage accordingly and add 2 tutorials, one in C++ and one in Python.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3743
https://github.com/root-project/root/pull/3744:222,deployability,updat,update,222,"Keep read-only functionality in TWebCanvas for ROOT6; Now TWebCanvas only able to serve data for the web clients, but not allowed to change data in the TCanvas. This means:. - no new objects. - no context menu. - no range update. - no any attributes updates. - no any command execution. Full-functional implementation, based on TWebCanvas, will be maintained outside ROOT here:. https://github.com/linev/go4/tree/master/webgui6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:250,deployability,updat,updates,250,"Keep read-only functionality in TWebCanvas for ROOT6; Now TWebCanvas only able to serve data for the web clients, but not allowed to change data in the TCanvas. This means:. - no new objects. - no context menu. - no range update. - no any attributes updates. - no any command execution. Full-functional implementation, based on TWebCanvas, will be maintained outside ROOT here:. https://github.com/linev/go4/tree/master/webgui6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:348,modifiability,maintain,maintained,348,"Keep read-only functionality in TWebCanvas for ROOT6; Now TWebCanvas only able to serve data for the web clients, but not allowed to change data in the TCanvas. This means:. - no new objects. - no context menu. - no range update. - no any attributes updates. - no any command execution. Full-functional implementation, based on TWebCanvas, will be maintained outside ROOT here:. https://github.com/linev/go4/tree/master/webgui6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:222,safety,updat,update,222,"Keep read-only functionality in TWebCanvas for ROOT6; Now TWebCanvas only able to serve data for the web clients, but not allowed to change data in the TCanvas. This means:. - no new objects. - no context menu. - no range update. - no any attributes updates. - no any command execution. Full-functional implementation, based on TWebCanvas, will be maintained outside ROOT here:. https://github.com/linev/go4/tree/master/webgui6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:250,safety,updat,updates,250,"Keep read-only functionality in TWebCanvas for ROOT6; Now TWebCanvas only able to serve data for the web clients, but not allowed to change data in the TCanvas. This means:. - no new objects. - no context menu. - no range update. - no any attributes updates. - no any command execution. Full-functional implementation, based on TWebCanvas, will be maintained outside ROOT here:. https://github.com/linev/go4/tree/master/webgui6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:348,safety,maintain,maintained,348,"Keep read-only functionality in TWebCanvas for ROOT6; Now TWebCanvas only able to serve data for the web clients, but not allowed to change data in the TCanvas. This means:. - no new objects. - no context menu. - no range update. - no any attributes updates. - no any command execution. Full-functional implementation, based on TWebCanvas, will be maintained outside ROOT here:. https://github.com/linev/go4/tree/master/webgui6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:222,security,updat,update,222,"Keep read-only functionality in TWebCanvas for ROOT6; Now TWebCanvas only able to serve data for the web clients, but not allowed to change data in the TCanvas. This means:. - no new objects. - no context menu. - no range update. - no any attributes updates. - no any command execution. Full-functional implementation, based on TWebCanvas, will be maintained outside ROOT here:. https://github.com/linev/go4/tree/master/webgui6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:250,security,updat,updates,250,"Keep read-only functionality in TWebCanvas for ROOT6; Now TWebCanvas only able to serve data for the web clients, but not allowed to change data in the TCanvas. This means:. - no new objects. - no context menu. - no range update. - no any attributes updates. - no any command execution. Full-functional implementation, based on TWebCanvas, will be maintained outside ROOT here:. https://github.com/linev/go4/tree/master/webgui6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:197,testability,context,context,197,"Keep read-only functionality in TWebCanvas for ROOT6; Now TWebCanvas only able to serve data for the web clients, but not allowed to change data in the TCanvas. This means:. - no new objects. - no context menu. - no range update. - no any attributes updates. - no any command execution. Full-functional implementation, based on TWebCanvas, will be maintained outside ROOT here:. https://github.com/linev/go4/tree/master/webgui6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:205,usability,menu,menu,205,"Keep read-only functionality in TWebCanvas for ROOT6; Now TWebCanvas only able to serve data for the web clients, but not allowed to change data in the TCanvas. This means:. - no new objects. - no context menu. - no range update. - no any attributes updates. - no any command execution. Full-functional implementation, based on TWebCanvas, will be maintained outside ROOT here:. https://github.com/linev/go4/tree/master/webgui6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3744:268,usability,command,command,268,"Keep read-only functionality in TWebCanvas for ROOT6; Now TWebCanvas only able to serve data for the web clients, but not allowed to change data in the TCanvas. This means:. - no new objects. - no context menu. - no range update. - no any attributes updates. - no any command execution. Full-functional implementation, based on TWebCanvas, will be maintained outside ROOT here:. https://github.com/linev/go4/tree/master/webgui6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3744
https://github.com/root-project/root/pull/3745:140,integrability,messag,message,140,[RDF][ROOT-10092] Signal at runtime invalid types used to fill histogram; This can be done at compile time with a static_assert too but the message offered to the user is not as clear.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3745
https://github.com/root-project/root/pull/3745:140,interoperability,messag,message,140,[RDF][ROOT-10092] Signal at runtime invalid types used to fill histogram; This can be done at compile time with a static_assert too but the message offered to the user is not as clear.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3745
https://github.com/root-project/root/pull/3745:102,performance,time,time,102,[RDF][ROOT-10092] Signal at runtime invalid types used to fill histogram; This can be done at compile time with a static_assert too but the message offered to the user is not as clear.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3745
https://github.com/root-project/root/pull/3745:18,security,Sign,Signal,18,[RDF][ROOT-10092] Signal at runtime invalid types used to fill histogram; This can be done at compile time with a static_assert too but the message offered to the user is not as clear.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3745
https://github.com/root-project/root/pull/3745:163,usability,user,user,163,[RDF][ROOT-10092] Signal at runtime invalid types used to fill histogram; This can be done at compile time with a static_assert too but the message offered to the user is not as clear.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3745
https://github.com/root-project/root/pull/3745:178,usability,clear,clear,178,[RDF][ROOT-10092] Signal at runtime invalid types used to fill histogram; This can be done at compile time with a static_assert too but the message offered to the user is not as clear.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3745
https://github.com/root-project/root/pull/3746:74,availability,error,error,74,[IO][ROOT-10019] Prevent segfault if branch disappears from chain; Prompt error message and stop the event loop instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:80,integrability,messag,message,80,[IO][ROOT-10019] Prevent segfault if branch disappears from chain; Prompt error message and stop the event loop instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:101,integrability,event,event,101,[IO][ROOT-10019] Prevent segfault if branch disappears from chain; Prompt error message and stop the event loop instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:80,interoperability,messag,message,80,[IO][ROOT-10019] Prevent segfault if branch disappears from chain; Prompt error message and stop the event loop instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:74,performance,error,error,74,[IO][ROOT-10019] Prevent segfault if branch disappears from chain; Prompt error message and stop the event loop instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:17,safety,Prevent,Prevent,17,[IO][ROOT-10019] Prevent segfault if branch disappears from chain; Prompt error message and stop the event loop instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:74,safety,error,error,74,[IO][ROOT-10019] Prevent segfault if branch disappears from chain; Prompt error message and stop the event loop instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:17,security,Preven,Prevent,17,[IO][ROOT-10019] Prevent segfault if branch disappears from chain; Prompt error message and stop the event loop instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:74,usability,error,error,74,[IO][ROOT-10019] Prevent segfault if branch disappears from chain; Prompt error message and stop the event loop instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3746:92,usability,stop,stop,92,[IO][ROOT-10019] Prevent segfault if branch disappears from chain; Prompt error message and stop the event loop instead.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3746
https://github.com/root-project/root/pull/3747:424,availability,redund,redundant,424,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:194,deployability,depend,depends,194,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:424,deployability,redundan,redundant,424,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:16,energy efficiency,load,loadpcm,16,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:194,integrability,depend,depends,194,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:194,modifiability,depend,depends,194,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:16,performance,load,loadpcm,16,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:424,reliability,redundan,redundant,424,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:95,safety,test,test,95,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:194,safety,depend,depends,194,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:424,safety,redund,redundant,424,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:7,testability,simpl,simplify,7,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:95,testability,test,test,95,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:194,testability,depend,depends,194,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3747:7,usability,simpl,simplify,7,Reland simplify loadpcm; We implement a workaround for ctest. ROOT_ADD_TEST cmake macro adds a test executable by invoking CMAKE_COMMAND -DCMD=... This breaks our FindLibraryName function which depends on dladdr and the cmake executable confuses it. This branch is not taken outside of ctest where the code just works. This was broken before but worked because we scanned all possible dynamic paths for rdict files which is redundant.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3747
https://github.com/root-project/root/pull/3748:81,deployability,fail,failed,81,"[Core][ROOT-9959] Stop early manipulation of commandline args; if path expansion failed, otherwise ROOT applications inviked with. commandline arguments can badly crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3748
https://github.com/root-project/root/pull/3748:1,energy efficiency,Core,Core,1,"[Core][ROOT-9959] Stop early manipulation of commandline args; if path expansion failed, otherwise ROOT applications inviked with. commandline arguments can badly crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3748
https://github.com/root-project/root/pull/3748:81,reliability,fail,failed,81,"[Core][ROOT-9959] Stop early manipulation of commandline args; if path expansion failed, otherwise ROOT applications inviked with. commandline arguments can badly crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3748
https://github.com/root-project/root/pull/3748:18,usability,Stop,Stop,18,"[Core][ROOT-9959] Stop early manipulation of commandline args; if path expansion failed, otherwise ROOT applications inviked with. commandline arguments can badly crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3748
https://github.com/root-project/root/pull/3748:45,usability,command,commandline,45,"[Core][ROOT-9959] Stop early manipulation of commandline args; if path expansion failed, otherwise ROOT applications inviked with. commandline arguments can badly crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3748
https://github.com/root-project/root/pull/3748:131,usability,command,commandline,131,"[Core][ROOT-9959] Stop early manipulation of commandline args; if path expansion failed, otherwise ROOT applications inviked with. commandline arguments can badly crash.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3748
https://github.com/root-project/root/pull/3749:47,modifiability,inherit,inherited,47,[DF][ROOT-9736] Allow custom columns deal with inherited types;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3749:22,usability,custom,custom,22,[DF][ROOT-9736] Allow custom columns deal with inherited types;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3749
https://github.com/root-project/root/pull/3751:12,usability,statu,status,12,[6-14]Check status of CI;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3751
https://github.com/root-project/root/pull/3752:1,energy efficiency,Core,Core,1,[Core] Refine deprecation procedure and deprecate TStringLong;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3752
https://github.com/root-project/root/pull/3753:25,deployability,updat,update,25,JSROOT 5.7.0; Plus small update in ui5 code - use JSROOT inspector. Update 6.18 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3753
https://github.com/root-project/root/pull/3753:68,deployability,Updat,Update,68,JSROOT 5.7.0; Plus small update in ui5 code - use JSROOT inspector. Update 6.18 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3753
https://github.com/root-project/root/pull/3753:80,deployability,releas,release,80,JSROOT 5.7.0; Plus small update in ui5 code - use JSROOT inspector. Update 6.18 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3753
https://github.com/root-project/root/pull/3753:25,safety,updat,update,25,JSROOT 5.7.0; Plus small update in ui5 code - use JSROOT inspector. Update 6.18 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3753
https://github.com/root-project/root/pull/3753:68,safety,Updat,Update,68,JSROOT 5.7.0; Plus small update in ui5 code - use JSROOT inspector. Update 6.18 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3753
https://github.com/root-project/root/pull/3753:25,security,updat,update,25,JSROOT 5.7.0; Plus small update in ui5 code - use JSROOT inspector. Update 6.18 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3753
https://github.com/root-project/root/pull/3753:68,security,Updat,Update,68,JSROOT 5.7.0; Plus small update in ui5 code - use JSROOT inspector. Update 6.18 release notes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3753
https://github.com/root-project/root/pull/3754:0,usability,Support,Support,0,"Support for constant tag in GDML; Added support for material constant properties, including GDML persistence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3754
https://github.com/root-project/root/pull/3754:40,usability,support,support,40,"Support for constant tag in GDML; Added support for material constant properties, including GDML persistence.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3754
https://github.com/root-project/root/pull/3755:28,testability,context,context,28,"jsroot: better grouping for context menus; While context menu can be too long, group them by class names. Makes much easier task gor jquery-ui to render such menu in small web. pages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3755
https://github.com/root-project/root/pull/3755:49,testability,context,context,49,"jsroot: better grouping for context menus; While context menu can be too long, group them by class names. Makes much easier task gor jquery-ui to render such menu in small web. pages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3755
https://github.com/root-project/root/pull/3755:36,usability,menu,menus,36,"jsroot: better grouping for context menus; While context menu can be too long, group them by class names. Makes much easier task gor jquery-ui to render such menu in small web. pages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3755
https://github.com/root-project/root/pull/3755:57,usability,menu,menu,57,"jsroot: better grouping for context menus; While context menu can be too long, group them by class names. Makes much easier task gor jquery-ui to render such menu in small web. pages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3755
https://github.com/root-project/root/pull/3755:140,usability,ui,ui,140,"jsroot: better grouping for context menus; While context menu can be too long, group them by class names. Makes much easier task gor jquery-ui to render such menu in small web. pages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3755
https://github.com/root-project/root/pull/3755:158,usability,menu,menu,158,"jsroot: better grouping for context menus; While context menu can be too long, group them by class names. Makes much easier task gor jquery-ui to render such menu in small web. pages",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3755
https://github.com/root-project/root/pull/3756:17,modifiability,variab,variables,17,rbrowser: shadow variables warnings;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3756
https://github.com/root-project/root/pull/3757:56,deployability,depend,dependency,56,Reduce ExcludeModules: Removed RInterface; This reduces dependency on rootmap files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3757
https://github.com/root-project/root/pull/3757:0,energy efficiency,Reduc,Reduce,0,Reduce ExcludeModules: Removed RInterface; This reduces dependency on rootmap files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3757
https://github.com/root-project/root/pull/3757:48,energy efficiency,reduc,reduces,48,Reduce ExcludeModules: Removed RInterface; This reduces dependency on rootmap files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3757
https://github.com/root-project/root/pull/3757:56,integrability,depend,dependency,56,Reduce ExcludeModules: Removed RInterface; This reduces dependency on rootmap files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3757
https://github.com/root-project/root/pull/3757:56,modifiability,depend,dependency,56,Reduce ExcludeModules: Removed RInterface; This reduces dependency on rootmap files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3757
https://github.com/root-project/root/pull/3757:56,safety,depend,dependency,56,Reduce ExcludeModules: Removed RInterface; This reduces dependency on rootmap files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3757
https://github.com/root-project/root/pull/3757:56,testability,depend,dependency,56,Reduce ExcludeModules: Removed RInterface; This reduces dependency on rootmap files,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3757
https://github.com/root-project/root/pull/3759:264,energy efficiency,model,model,264,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:126,integrability,compon,components,126,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:195,integrability,compon,components,195,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:126,interoperability,compon,components,126,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:195,interoperability,compon,components,195,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:126,modifiability,compon,components,126,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:146,modifiability,maintain,maintained,146,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:188,modifiability,reu,reuses,188,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:195,modifiability,compon,components,195,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:211,performance,I/O,I/O,211,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:260,performance,I/O,I/O,260,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:146,safety,maintain,maintained,146,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:264,security,model,model,264,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:332,testability,Simpl,Simplify,332,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:287,usability,support,support,287,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3759:332,usability,Simpl,Simplify,332,"Unify BrowserModel for RBrowser and Geom viewer; Use exactly the same BrowserModel for implementing hierarchy browser in both components. Code is maintained with RBrowser, Geometry viewer reuses components. C++ I/O classes also moved to RBrowserItem.hxx, make I/O model more flexible to support fully different items in the future. Simplify data structures in RBrowser, first sorting approach is shown",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3759
https://github.com/root-project/root/pull/3760:26,safety,test,testing,26,Spurious change to enable testing jenkins; new branch to avoid warning about missing roottest PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:57,safety,avoid,avoid,57,Spurious change to enable testing jenkins; new branch to avoid warning about missing roottest PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3760:26,testability,test,testing,26,Spurious change to enable testing jenkins; new branch to avoid warning about missing roottest PR.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3760
https://github.com/root-project/root/pull/3761:31,integrability,sub,sub-object,31,Add support in TTreeReader for sub-object in TClonesArray.; See https://root-forum.cern.ch/t/trefarray-apears-empty-reading-via-makeclass/32903/5,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3761
https://github.com/root-project/root/pull/3761:4,usability,support,support,4,Add support in TTreeReader for sub-object in TClonesArray.; See https://root-forum.cern.ch/t/trefarray-apears-empty-reading-via-makeclass/32903/5,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3761
https://github.com/root-project/root/pull/3763:118,deployability,instal,installed,118,"Fix for ROOT-10030; This syncs `core/imt/CMakeLists.txt` with the `master` branch, which does not have the problem of installed ROOT pointing to the build directory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:149,deployability,build,build,149,"Fix for ROOT-10030; This syncs `core/imt/CMakeLists.txt` with the `master` branch, which does not have the problem of installed ROOT pointing to the build directory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:32,energy efficiency,core,core,32,"Fix for ROOT-10030; This syncs `core/imt/CMakeLists.txt` with the `master` branch, which does not have the problem of installed ROOT pointing to the build directory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3763:89,reliability,doe,does,89,"Fix for ROOT-10030; This syncs `core/imt/CMakeLists.txt` with the `master` branch, which does not have the problem of installed ROOT pointing to the build directory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3763
https://github.com/root-project/root/pull/3764:17,deployability,releas,release,17,"Changes for 6.18 release; I may update with more commits later, but feel free to review current changes. Fixes [ROOT-9086](https://sft.its.cern.ch/jira/browse/ROOT-9086).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3764
https://github.com/root-project/root/pull/3764:32,deployability,updat,update,32,"Changes for 6.18 release; I may update with more commits later, but feel free to review current changes. Fixes [ROOT-9086](https://sft.its.cern.ch/jira/browse/ROOT-9086).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3764
https://github.com/root-project/root/pull/3764:88,energy efficiency,current,current,88,"Changes for 6.18 release; I may update with more commits later, but feel free to review current changes. Fixes [ROOT-9086](https://sft.its.cern.ch/jira/browse/ROOT-9086).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3764
https://github.com/root-project/root/pull/3764:32,safety,updat,update,32,"Changes for 6.18 release; I may update with more commits later, but feel free to review current changes. Fixes [ROOT-9086](https://sft.its.cern.ch/jira/browse/ROOT-9086).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3764
https://github.com/root-project/root/pull/3764:81,safety,review,review,81,"Changes for 6.18 release; I may update with more commits later, but feel free to review current changes. Fixes [ROOT-9086](https://sft.its.cern.ch/jira/browse/ROOT-9086).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3764
https://github.com/root-project/root/pull/3764:32,security,updat,update,32,"Changes for 6.18 release; I may update with more commits later, but feel free to review current changes. Fixes [ROOT-9086](https://sft.its.cern.ch/jira/browse/ROOT-9086).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3764
https://github.com/root-project/root/pull/3764:81,testability,review,review,81,"Changes for 6.18 release; I may update with more commits later, but feel free to review current changes. Fixes [ROOT-9086](https://sft.its.cern.ch/jira/browse/ROOT-9086).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3764
https://github.com/root-project/root/pull/3765:96,availability,redund,redundant,96,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:492,availability,failur,failures,492,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:48,deployability,compos,composing,48,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:96,deployability,redundan,redundant,96,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:152,deployability,patch,patch,152,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:253,deployability,modul,modules,253,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:492,deployability,fail,failures,492,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:648,energy efficiency,optim,optimization,648,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:48,modifiability,compos,composing,48,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:253,modifiability,modul,modules,253,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:492,performance,failur,failures,492,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:636,performance,performance optim,performance optimization,636,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:96,reliability,redundan,redundant,96,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:439,reliability,doe,does,439,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:492,reliability,fail,failures,492,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:96,safety,redund,redundant,96,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:152,safety,patch,patch,152,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:253,safety,modul,modules,253,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:276,safety,avoid,avoids,276,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:152,security,patch,patch,152,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:616,testability,simpl,simplification,616,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:205,usability,behavi,behavior,205,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:616,usability,simpl,simplification,616,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3765:636,usability,perform,performance,636,"[RDF] Disable autoparsing during jitting.; When composing the expressions to jit autoparsing is redundant as we. know what and when to synthesize. This patch has two effects, first it limits the recursive behavior of. autoparse and autoload (useful for modules); and secondly avoids deep call. chains of virtual function calls. EDIT: Rationale -- I was working on a new, cxxmodules-based implementation of TCling::GetClassSharedLibs which does not rely on rootmap files. I had to debug a few failures in RDF and I noticed the recursive calls to autoparse and autoload always without success. I thought it might be a simplification (and performance optimization) if we disabled that part.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3765
https://github.com/root-project/root/pull/3769:125,deployability,log,logic,125,Add suspend autoload raii; Note the separate commits are intended to simplify bisecting if necessary as this is very fragile logic in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:125,safety,log,logic,125,Add suspend autoload raii; Note the separate commits are intended to simplify bisecting if necessary as this is very fragile logic in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:125,security,log,logic,125,Add suspend autoload raii; Note the separate commits are intended to simplify bisecting if necessary as this is very fragile logic in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:69,testability,simpl,simplify,69,Add suspend autoload raii; Note the separate commits are intended to simplify bisecting if necessary as this is very fragile logic in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:125,testability,log,logic,125,Add suspend autoload raii; Note the separate commits are intended to simplify bisecting if necessary as this is very fragile logic in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3769:69,usability,simpl,simplify,69,Add suspend autoload raii; Note the separate commits are intended to simplify bisecting if necessary as this is very fragile logic in ROOT.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3769
https://github.com/root-project/root/pull/3771:55,integrability,translat,translated,55,"eve7: server-side selection; Now all element selection translated to the server, where forwarded to all other clients. By this multiple views will see same selections. Provide new kind of Outline highlight - instead of changing color of the object material. Provide appropriate changes in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3771
https://github.com/root-project/root/pull/3771:55,interoperability,translat,translated,55,"eve7: server-side selection; Now all element selection translated to the server, where forwarded to all other clients. By this multiple views will see same selections. Provide new kind of Outline highlight - instead of changing color of the object material. Provide appropriate changes in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3771
https://github.com/root-project/root/pull/3772:189,availability,consist,consistent,189,"Introduce web fitpanel for ROOT6 histograms; There are some small issues, but basic fit functionality is working. One should revise way how model object exchanged with the client - not yet consistent. More commits will follow",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3772
https://github.com/root-project/root/pull/3772:140,energy efficiency,model,model,140,"Introduce web fitpanel for ROOT6 histograms; There are some small issues, but basic fit functionality is working. One should revise way how model object exchanged with the client - not yet consistent. More commits will follow",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3772
https://github.com/root-project/root/pull/3772:153,interoperability,exchang,exchanged,153,"Introduce web fitpanel for ROOT6 histograms; There are some small issues, but basic fit functionality is working. One should revise way how model object exchanged with the client - not yet consistent. More commits will follow",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3772
https://github.com/root-project/root/pull/3772:140,security,model,model,140,"Introduce web fitpanel for ROOT6 histograms; There are some small issues, but basic fit functionality is working. One should revise way how model object exchanged with the client - not yet consistent. More commits will follow",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3772
https://github.com/root-project/root/pull/3772:189,usability,consist,consistent,189,"Introduce web fitpanel for ROOT6 histograms; There are some small issues, but basic fit functionality is working. One should revise way how model object exchanged with the client - not yet consistent. More commits will follow",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3772
https://github.com/root-project/root/pull/3773:30,usability,document,documentation,30,"[TMVA] Add keras tutorials to documentation; They were missing a crucial comment header, making the documentation. generation system not pick them up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3773
https://github.com/root-project/root/pull/3773:100,usability,document,documentation,100,"[TMVA] Add keras tutorials to documentation; They were missing a crucial comment header, making the documentation. generation system not pick them up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3773
https://github.com/root-project/root/pull/3774:106,deployability,depend,depends,106,"Reduce calls to enable autoloading, reduce cxxmodules work at shutdown; This PR has misc improvements and depends on PR #3769.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:0,energy efficiency,Reduc,Reduce,0,"Reduce calls to enable autoloading, reduce cxxmodules work at shutdown; This PR has misc improvements and depends on PR #3769.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:36,energy efficiency,reduc,reduce,36,"Reduce calls to enable autoloading, reduce cxxmodules work at shutdown; This PR has misc improvements and depends on PR #3769.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:106,integrability,depend,depends,106,"Reduce calls to enable autoloading, reduce cxxmodules work at shutdown; This PR has misc improvements and depends on PR #3769.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:106,modifiability,depend,depends,106,"Reduce calls to enable autoloading, reduce cxxmodules work at shutdown; This PR has misc improvements and depends on PR #3769.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:106,safety,depend,depends,106,"Reduce calls to enable autoloading, reduce cxxmodules work at shutdown; This PR has misc improvements and depends on PR #3769.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3774:106,testability,depend,depends,106,"Reduce calls to enable autoloading, reduce cxxmodules work at shutdown; This PR has misc improvements and depends on PR #3769.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3774
https://github.com/root-project/root/pull/3775:642,deployability,continu,continues,642,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:237,energy efficiency,CPU,CPU,237,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:357,integrability,coupl,couple,357,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:498,interoperability,architectur,architecture,498,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:14,modifiability,scal,scalable,14,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:50,modifiability,scal,scalable,50,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:357,modifiability,coupl,couple,357,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:14,performance,scalab,scalable,14,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:50,performance,scalab,scalable,50,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:237,performance,CPU,CPU,237,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:630,safety,test,test,630,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:357,testability,coupl,couple,357,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:630,testability,test,test,630,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3775:470,usability,support,supported,470,"RooChebychev: scalable implementation; use a more scalable implementation for RooChebychev which allows use of. Chebychev polynomial of arbitrarily high orders; also the extra effort. for every new order used is constant, so the effort (CPU) for evaluating. a RooChebychev grows linearly with the highest order Chebychev order. used, and comes in at only a couple of FLOPS per order (getting the. value of the coefficients is likely much more expensive). FMA is used if supported by the underlying architecture/compiler,. otherwise the code falls back to normal floating point arithmetic. RooChebychev is used in the stressRooFit test, which continues to run just fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3775
https://github.com/root-project/root/pull/3776:81,deployability,patch,patch,81,"RooAbsAnaConvPdf: allow different time acceptance for different categories; This patch came from Sean Benson and Wouter Verkerke, and is needed. to allow LHCb's P2VV-style analyses to have different time acceptances. for different categories of events. All tests continue to pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:263,deployability,continu,continue,263,"RooAbsAnaConvPdf: allow different time acceptance for different categories; This patch came from Sean Benson and Wouter Verkerke, and is needed. to allow LHCb's P2VV-style analyses to have different time acceptances. for different categories of events. All tests continue to pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:245,integrability,event,events,245,"RooAbsAnaConvPdf: allow different time acceptance for different categories; This patch came from Sean Benson and Wouter Verkerke, and is needed. to allow LHCb's P2VV-style analyses to have different time acceptances. for different categories of events. All tests continue to pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:34,performance,time,time,34,"RooAbsAnaConvPdf: allow different time acceptance for different categories; This patch came from Sean Benson and Wouter Verkerke, and is needed. to allow LHCb's P2VV-style analyses to have different time acceptances. for different categories of events. All tests continue to pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:199,performance,time,time,199,"RooAbsAnaConvPdf: allow different time acceptance for different categories; This patch came from Sean Benson and Wouter Verkerke, and is needed. to allow LHCb's P2VV-style analyses to have different time acceptances. for different categories of events. All tests continue to pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:81,safety,patch,patch,81,"RooAbsAnaConvPdf: allow different time acceptance for different categories; This patch came from Sean Benson and Wouter Verkerke, and is needed. to allow LHCb's P2VV-style analyses to have different time acceptances. for different categories of events. All tests continue to pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:257,safety,test,tests,257,"RooAbsAnaConvPdf: allow different time acceptance for different categories; This patch came from Sean Benson and Wouter Verkerke, and is needed. to allow LHCb's P2VV-style analyses to have different time acceptances. for different categories of events. All tests continue to pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:81,security,patch,patch,81,"RooAbsAnaConvPdf: allow different time acceptance for different categories; This patch came from Sean Benson and Wouter Verkerke, and is needed. to allow LHCb's P2VV-style analyses to have different time acceptances. for different categories of events. All tests continue to pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3776:257,testability,test,tests,257,"RooAbsAnaConvPdf: allow different time acceptance for different categories; This patch came from Sean Benson and Wouter Verkerke, and is needed. to allow LHCb's P2VV-style analyses to have different time acceptances. for different categories of events. All tests continue to pass.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3776
https://github.com/root-project/root/pull/3778:35,energy efficiency,core,core,35,[Doc][Root-7664] Expose to doxygen core/dictgen;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3778
https://github.com/root-project/root/pull/3778:17,security,Expos,Expose,17,[Doc][Root-7664] Expose to doxygen core/dictgen;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3778
https://github.com/root-project/root/pull/3781:0,deployability,Patch,Patch,0,Patch from M.Frank for optical surface implementation and material properties; Protection in TGDMLWrite for optical surfaces for nodes not connected to the geometry hierarchy. Added few accessors for material properties,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3781
https://github.com/root-project/root/pull/3781:0,safety,Patch,Patch,0,Patch from M.Frank for optical surface implementation and material properties; Protection in TGDMLWrite for optical surfaces for nodes not connected to the geometry hierarchy. Added few accessors for material properties,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3781
https://github.com/root-project/root/pull/3781:0,security,Patch,Patch,0,Patch from M.Frank for optical surface implementation and material properties; Protection in TGDMLWrite for optical surfaces for nodes not connected to the geometry hierarchy. Added few accessors for material properties,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3781
https://github.com/root-project/root/pull/3781:186,security,access,accessors,186,Patch from M.Frank for optical surface implementation and material properties; Protection in TGDMLWrite for optical surfaces for nodes not connected to the geometry hierarchy. Added few accessors for material properties,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3781
https://github.com/root-project/root/pull/3782:51,energy efficiency,current,current,51,"cmake: rename webui -> webgui for v6.16; Sync with current master. . ""webui"" cmake option was not exists with v6.16.00 at all. Was introduce by request from @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3782
https://github.com/root-project/root/pull/3783:10,deployability,releas,release,10,[NFC] Add release notes; @etejedor Shall we add a PyROOT section to the release notes?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3783
https://github.com/root-project/root/pull/3783:72,deployability,releas,release,72,[NFC] Add release notes; @etejedor Shall we add a PyROOT section to the release notes?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3783
https://github.com/root-project/root/pull/3784:15,deployability,build,build,15,Fix cxxmodules build for Mac OS X;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3784
https://github.com/root-project/root/pull/3785:244,deployability,releas,released,244,"Fix text view's rendering on macOS (AppKit); Locking on a child view while inside the parent's -drawRect:. was always looking horrendously (alas, this is how ROOT text. rendering is implemented in TGTextView et al.). Finally,. with macOS 10.14 released, after all these years of horrors, it. stopped working at all. While it's still quite crappy that. TGTextView tries to render text in its child window - TGViewFrame. - it does not mean literally we physically have to do this. A. little cheat and we render in the correct view instead. This PR fixes ROOT-10052 and ROOT-9976",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3785
https://github.com/root-project/root/pull/3785:96,energy efficiency,draw,drawRect,96,"Fix text view's rendering on macOS (AppKit); Locking on a child view while inside the parent's -drawRect:. was always looking horrendously (alas, this is how ROOT text. rendering is implemented in TGTextView et al.). Finally,. with macOS 10.14 released, after all these years of horrors, it. stopped working at all. While it's still quite crappy that. TGTextView tries to render text in its child window - TGViewFrame. - it does not mean literally we physically have to do this. A. little cheat and we render in the correct view instead. This PR fixes ROOT-10052 and ROOT-9976",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3785
https://github.com/root-project/root/pull/3785:45,performance,Lock,Locking,45,"Fix text view's rendering on macOS (AppKit); Locking on a child view while inside the parent's -drawRect:. was always looking horrendously (alas, this is how ROOT text. rendering is implemented in TGTextView et al.). Finally,. with macOS 10.14 released, after all these years of horrors, it. stopped working at all. While it's still quite crappy that. TGTextView tries to render text in its child window - TGViewFrame. - it does not mean literally we physically have to do this. A. little cheat and we render in the correct view instead. This PR fixes ROOT-10052 and ROOT-9976",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3785
https://github.com/root-project/root/pull/3785:424,reliability,doe,does,424,"Fix text view's rendering on macOS (AppKit); Locking on a child view while inside the parent's -drawRect:. was always looking horrendously (alas, this is how ROOT text. rendering is implemented in TGTextView et al.). Finally,. with macOS 10.14 released, after all these years of horrors, it. stopped working at all. While it's still quite crappy that. TGTextView tries to render text in its child window - TGViewFrame. - it does not mean literally we physically have to do this. A. little cheat and we render in the correct view instead. This PR fixes ROOT-10052 and ROOT-9976",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3785
https://github.com/root-project/root/pull/3785:45,security,Lock,Locking,45,"Fix text view's rendering on macOS (AppKit); Locking on a child view while inside the parent's -drawRect:. was always looking horrendously (alas, this is how ROOT text. rendering is implemented in TGTextView et al.). Finally,. with macOS 10.14 released, after all these years of horrors, it. stopped working at all. While it's still quite crappy that. TGTextView tries to render text in its child window - TGViewFrame. - it does not mean literally we physically have to do this. A. little cheat and we render in the correct view instead. This PR fixes ROOT-10052 and ROOT-9976",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3785
https://github.com/root-project/root/pull/3785:292,usability,stop,stopped,292,"Fix text view's rendering on macOS (AppKit); Locking on a child view while inside the parent's -drawRect:. was always looking horrendously (alas, this is how ROOT text. rendering is implemented in TGTextView et al.). Finally,. with macOS 10.14 released, after all these years of horrors, it. stopped working at all. While it's still quite crappy that. TGTextView tries to render text in its child window - TGViewFrame. - it does not mean literally we physically have to do this. A. little cheat and we render in the correct view instead. This PR fixes ROOT-10052 and ROOT-9976",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3785
https://github.com/root-project/root/pull/3787:54,energy efficiency,draw,drawables,54,"[Exp PyROOT] Pythonisations to avoid double delete of drawables; This PR addresses the following issues:. https://sft.its.cern.ch/jira/browse/ROOT-10060. https://sft.its.cern.ch/jira/browse/ROOT-10095. https://sft.its.cern.ch/jira/browse/ROOT-10100. More precisely, it adds two pythonisations for classes whose ownership is transferred to the `TPad` where they are drawn. In those cases, we need to instruct PyROOT not to delete the C++ objects that were added to the list of primitives of a `TPad` with `kCanDelete` set.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3787
https://github.com/root-project/root/pull/3787:365,energy efficiency,draw,drawn,365,"[Exp PyROOT] Pythonisations to avoid double delete of drawables; This PR addresses the following issues:. https://sft.its.cern.ch/jira/browse/ROOT-10060. https://sft.its.cern.ch/jira/browse/ROOT-10095. https://sft.its.cern.ch/jira/browse/ROOT-10100. More precisely, it adds two pythonisations for classes whose ownership is transferred to the `TPad` where they are drawn. In those cases, we need to instruct PyROOT not to delete the C++ objects that were added to the list of primitives of a `TPad` with `kCanDelete` set.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3787
https://github.com/root-project/root/pull/3787:31,safety,avoid,avoid,31,"[Exp PyROOT] Pythonisations to avoid double delete of drawables; This PR addresses the following issues:. https://sft.its.cern.ch/jira/browse/ROOT-10060. https://sft.its.cern.ch/jira/browse/ROOT-10095. https://sft.its.cern.ch/jira/browse/ROOT-10100. More precisely, it adds two pythonisations for classes whose ownership is transferred to the `TPad` where they are drawn. In those cases, we need to instruct PyROOT not to delete the C++ objects that were added to the list of primitives of a `TPad` with `kCanDelete` set.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3787
https://github.com/root-project/root/pull/3788:41,availability,operat,operators,41,Fix RVec move constructor and assignment operators; Related JIRA issue: [ROOT-10079](https://sft.its.cern.ch/jira/browse/ROOT-10079).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3788
https://github.com/root-project/root/pull/3789:63,deployability,contain,contains,63,"[RDF][ROOT-9930] Make the RDF+TEntryList+MT case work; this PR contains a refactoring and a fix for the issue, which is a workaround for another bug which causes it and is unrelated (ROOT-10113) :). For now, the TTree case only is covered and the TChain one is still disabled, but it's good to start testing the code!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3789
https://github.com/root-project/root/pull/3789:74,modifiability,refact,refactoring,74,"[RDF][ROOT-9930] Make the RDF+TEntryList+MT case work; this PR contains a refactoring and a fix for the issue, which is a workaround for another bug which causes it and is unrelated (ROOT-10113) :). For now, the TTree case only is covered and the TChain one is still disabled, but it's good to start testing the code!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3789
https://github.com/root-project/root/pull/3789:74,performance,refactor,refactoring,74,"[RDF][ROOT-9930] Make the RDF+TEntryList+MT case work; this PR contains a refactoring and a fix for the issue, which is a workaround for another bug which causes it and is unrelated (ROOT-10113) :). For now, the TTree case only is covered and the TChain one is still disabled, but it's good to start testing the code!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3789
https://github.com/root-project/root/pull/3789:300,safety,test,testing,300,"[RDF][ROOT-9930] Make the RDF+TEntryList+MT case work; this PR contains a refactoring and a fix for the issue, which is a workaround for another bug which causes it and is unrelated (ROOT-10113) :). For now, the TTree case only is covered and the TChain one is still disabled, but it's good to start testing the code!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3789
https://github.com/root-project/root/pull/3789:300,testability,test,testing,300,"[RDF][ROOT-9930] Make the RDF+TEntryList+MT case work; this PR contains a refactoring and a fix for the issue, which is a workaround for another bug which causes it and is unrelated (ROOT-10113) :). For now, the TTree case only is covered and the TChain one is still disabled, but it's good to start testing the code!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3789
https://github.com/root-project/root/pull/3790:39,interoperability,format,formatting,39,[travis] Add instructions for applying formatting changes inline.; This avoids bloating the history with blank space commits.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3790
https://github.com/root-project/root/pull/3790:72,safety,avoid,avoids,72,[travis] Add instructions for applying formatting changes inline.; This avoids bloating the history with blank space commits.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3790
https://github.com/root-project/root/pull/3791:32,usability,navigat,navigation,32,Fix fot ROOT-9938. ; Bug fix in navigation of TGeoPgon when ray was hitting the Z axis.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3791
https://github.com/root-project/root/pull/3792:53,safety,review,review,53,"Add v6.18 contributors! [NFC][skip-ci]; Folks on the review list, please let me know possible corrections / omissions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3792
https://github.com/root-project/root/pull/3792:53,testability,review,review,53,"Add v6.18 contributors! [NFC][skip-ci]; Folks on the review list, please let me know possible corrections / omissions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3792
https://github.com/root-project/root/pull/3793:54,performance,memor,memory,54,"Suppress valgrind warning about fUniqueID unitialized memory used.; This is done by taking the check of fUniqueID and the assignment to fBuits. into a separate function and by including this function in the header. *but* marking it as ""noinline"" to prevent its inlining and preserve a. way to suppress the valgrind warning. Introducing the macro R__NEVER_INLINE which expands to. inline __attribute__((noinline))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3793
https://github.com/root-project/root/pull/3793:249,safety,prevent,prevent,249,"Suppress valgrind warning about fUniqueID unitialized memory used.; This is done by taking the check of fUniqueID and the assignment to fBuits. into a separate function and by including this function in the header. *but* marking it as ""noinline"" to prevent its inlining and preserve a. way to suppress the valgrind warning. Introducing the macro R__NEVER_INLINE which expands to. inline __attribute__((noinline))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3793
https://github.com/root-project/root/pull/3793:249,security,preven,prevent,249,"Suppress valgrind warning about fUniqueID unitialized memory used.; This is done by taking the check of fUniqueID and the assignment to fBuits. into a separate function and by including this function in the header. *but* marking it as ""noinline"" to prevent its inlining and preserve a. way to suppress the valgrind warning. Introducing the macro R__NEVER_INLINE which expands to. inline __attribute__((noinline))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3793
https://github.com/root-project/root/pull/3793:42,testability,unit,unitialized,42,"Suppress valgrind warning about fUniqueID unitialized memory used.; This is done by taking the check of fUniqueID and the assignment to fBuits. into a separate function and by including this function in the header. *but* marking it as ""noinline"" to prevent its inlining and preserve a. way to suppress the valgrind warning. Introducing the macro R__NEVER_INLINE which expands to. inline __attribute__((noinline))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3793
https://github.com/root-project/root/pull/3793:54,usability,memor,memory,54,"Suppress valgrind warning about fUniqueID unitialized memory used.; This is done by taking the check of fUniqueID and the assignment to fBuits. into a separate function and by including this function in the header. *but* marking it as ""noinline"" to prevent its inlining and preserve a. way to suppress the valgrind warning. Introducing the macro R__NEVER_INLINE which expands to. inline __attribute__((noinline))",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3793
https://github.com/root-project/root/pull/3795:68,safety,test,tested,68,"webgui: support Qt 5.6..5.11 with QWebEngine; Previous changes were tested with Qt 5.12, which is very new and very rare up to now. Plus there are new functions, which were not exists before",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3795
https://github.com/root-project/root/pull/3795:68,testability,test,tested,68,"webgui: support Qt 5.6..5.11 with QWebEngine; Previous changes were tested with Qt 5.12, which is very new and very rare up to now. Plus there are new functions, which were not exists before",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3795
https://github.com/root-project/root/pull/3795:8,usability,support,support,8,"webgui: support Qt 5.6..5.11 with QWebEngine; Previous changes were tested with Qt 5.12, which is very new and very rare up to now. Plus there are new functions, which were not exists before",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3795
https://github.com/root-project/root/pull/3796:99,integrability,transform,transform,99,[DF][ROOT-9559] Throw if processing of indexed friend trees is triggered; This should be enough to transform ROOT-9559 in a feature request.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3796
https://github.com/root-project/root/pull/3796:99,interoperability,transform,transform,99,[DF][ROOT-9559] Throw if processing of indexed friend trees is triggered; This should be enough to transform ROOT-9559 in a feature request.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3796
https://github.com/root-project/root/pull/3797:30,deployability,contain,contain,30,Properly handle TTree aliases contain just function calls.; See https://root-forum.cern.ch/t/ttree-setalias-with-tmath-min-tmath-max-issue/33881.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3797
https://github.com/root-project/root/pull/3798:38,deployability,Depend,Depends,38,Cxxmodules simplify lib registration; Depends on #3043,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3798
https://github.com/root-project/root/pull/3798:38,integrability,Depend,Depends,38,Cxxmodules simplify lib registration; Depends on #3043,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3798
https://github.com/root-project/root/pull/3798:24,interoperability,registr,registration,24,Cxxmodules simplify lib registration; Depends on #3043,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3798
https://github.com/root-project/root/pull/3798:38,modifiability,Depend,Depends,38,Cxxmodules simplify lib registration; Depends on #3043,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3798
https://github.com/root-project/root/pull/3798:38,safety,Depend,Depends,38,Cxxmodules simplify lib registration; Depends on #3043,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3798
https://github.com/root-project/root/pull/3798:11,testability,simpl,simplify,11,Cxxmodules simplify lib registration; Depends on #3043,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3798
https://github.com/root-project/root/pull/3798:38,testability,Depend,Depends,38,Cxxmodules simplify lib registration; Depends on #3043,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3798
https://github.com/root-project/root/pull/3798:11,usability,simpl,simplify,11,Cxxmodules simplify lib registration; Depends on #3043,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3798
https://github.com/root-project/root/pull/3799:10,safety,test,tests,10,[DF] Unit tests: use EXPECT_ANY_THROW where it makes sense; the code becomes more readable than before without loosing any functionality.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3799
https://github.com/root-project/root/pull/3799:5,testability,Unit,Unit,5,[DF] Unit tests: use EXPECT_ANY_THROW where it makes sense; the code becomes more readable than before without loosing any functionality.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3799
https://github.com/root-project/root/pull/3799:10,testability,test,tests,10,[DF] Unit tests: use EXPECT_ANY_THROW where it makes sense; the code becomes more readable than before without loosing any functionality.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3799
https://github.com/root-project/root/pull/3800:12,availability,error,error,12,Grammatical error fixes in ALittleC++.md;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3800
https://github.com/root-project/root/pull/3800:12,performance,error,error,12,Grammatical error fixes in ALittleC++.md;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3800
https://github.com/root-project/root/pull/3800:12,safety,error,error,12,Grammatical error fixes in ALittleC++.md;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3800
https://github.com/root-project/root/pull/3800:12,usability,error,error,12,Grammatical error fixes in ALittleC++.md;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3800
https://github.com/root-project/root/pull/3801:186,availability,error,error,186,Protect possibly predefined preprocessor symbol; On my systems (RHEL7 and Android Termux) PAGE_SIZE is defined to 4096 in /usr/include/sys/user.h . The enum then produces a compile-term error. Adding this change resolves this error for me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3801
https://github.com/root-project/root/pull/3801:226,availability,error,error,226,Protect possibly predefined preprocessor symbol; On my systems (RHEL7 and Android Termux) PAGE_SIZE is defined to 4096 in /usr/include/sys/user.h . The enum then produces a compile-term error. Adding this change resolves this error for me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3801
https://github.com/root-project/root/pull/3801:186,performance,error,error,186,Protect possibly predefined preprocessor symbol; On my systems (RHEL7 and Android Termux) PAGE_SIZE is defined to 4096 in /usr/include/sys/user.h . The enum then produces a compile-term error. Adding this change resolves this error for me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3801
https://github.com/root-project/root/pull/3801:226,performance,error,error,226,Protect possibly predefined preprocessor symbol; On my systems (RHEL7 and Android Termux) PAGE_SIZE is defined to 4096 in /usr/include/sys/user.h . The enum then produces a compile-term error. Adding this change resolves this error for me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3801
https://github.com/root-project/root/pull/3801:186,safety,error,error,186,Protect possibly predefined preprocessor symbol; On my systems (RHEL7 and Android Termux) PAGE_SIZE is defined to 4096 in /usr/include/sys/user.h . The enum then produces a compile-term error. Adding this change resolves this error for me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3801
https://github.com/root-project/root/pull/3801:226,safety,error,error,226,Protect possibly predefined preprocessor symbol; On my systems (RHEL7 and Android Termux) PAGE_SIZE is defined to 4096 in /usr/include/sys/user.h . The enum then produces a compile-term error. Adding this change resolves this error for me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3801
https://github.com/root-project/root/pull/3801:139,usability,user,user,139,Protect possibly predefined preprocessor symbol; On my systems (RHEL7 and Android Termux) PAGE_SIZE is defined to 4096 in /usr/include/sys/user.h . The enum then produces a compile-term error. Adding this change resolves this error for me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3801
https://github.com/root-project/root/pull/3801:186,usability,error,error,186,Protect possibly predefined preprocessor symbol; On my systems (RHEL7 and Android Termux) PAGE_SIZE is defined to 4096 in /usr/include/sys/user.h . The enum then produces a compile-term error. Adding this change resolves this error for me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3801
https://github.com/root-project/root/pull/3801:226,usability,error,error,226,Protect possibly predefined preprocessor symbol; On my systems (RHEL7 and Android Termux) PAGE_SIZE is defined to 4096 in /usr/include/sys/user.h . The enum then produces a compile-term error. Adding this change resolves this error for me.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3801
https://github.com/root-project/root/pull/3802:72,deployability,patch,patch,72,[tcling] In some cases the path to the dyLibName can be relative.; This patch fixes an assertion in the incremental builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3802
https://github.com/root-project/root/pull/3802:116,deployability,build,builds,116,[tcling] In some cases the path to the dyLibName can be relative.; This patch fixes an assertion in the incremental builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3802
https://github.com/root-project/root/pull/3802:72,safety,patch,patch,72,[tcling] In some cases the path to the dyLibName can be relative.; This patch fixes an assertion in the incremental builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3802
https://github.com/root-project/root/pull/3802:72,security,patch,patch,72,[tcling] In some cases the path to the dyLibName can be relative.; This patch fixes an assertion in the incremental builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3802
https://github.com/root-project/root/pull/3802:87,testability,assert,assertion,87,[tcling] In some cases the path to the dyLibName can be relative.; This patch fixes an assertion in the incremental builds.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3802
https://github.com/root-project/root/pull/3804:162,deployability,releas,release,162,"Code deprecation and removals for ROOT 6.18; Deprecate VMC, remove remnant of already removed options, and remove deprecated options not yet removed for the next release. The only remaining option is memstat, which I will do in a separate pull request.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3804
https://github.com/root-project/root/pull/3806:13,deployability,releas,release,13,[PyROOT] Add release notes for 6.18;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3806
https://github.com/root-project/root/pull/3807:18,deployability,configurat,configuration,18,ROOT-9661 Improve configuration using external clang; This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:107,deployability,version,versions,107,ROOT-9661 Improve configuration using external clang; This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:116,deployability,instal,installed,116,ROOT-9661 Improve configuration using external clang; This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:228,deployability,build,builds,228,ROOT-9661 Improve configuration using external clang; This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:18,integrability,configur,configuration,18,ROOT-9661 Improve configuration using external clang; This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:107,integrability,version,versions,107,ROOT-9661 Improve configuration using external clang; This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:18,modifiability,configur,configuration,18,ROOT-9661 Improve configuration using external clang; This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:107,modifiability,version,versions,107,ROOT-9661 Improve configuration using external clang; This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:260,safety,test,test,260,ROOT-9661 Improve configuration using external clang; This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:18,security,configur,configuration,18,ROOT-9661 Improve configuration using external clang; This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3807:260,testability,test,test,260,ROOT-9661 Improve configuration using external clang; This works better for me (i.e. I have multiple clang versions installed and it works as well). Please check that it works for you and let me know so I can merge. The Jenkins builds are not able to actually test this.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3807
https://github.com/root-project/root/pull/3808:49,security,modif,modify,49,"[cling] Do not copy the FrontendOpts, we want to modify the object.;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3808
https://github.com/root-project/root/pull/3809:95,deployability,updat,updated,95,"[Doc] improve TStatistic documentation; Documentation present in the TStatistic files has been updated to match Doxygen syntax. Data members with a little description are now visible in the docs, Class member functions documentation has been. pulled out of their definitions and changed a bit to better explain the algorithms involved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3809
https://github.com/root-project/root/pull/3809:95,safety,updat,updated,95,"[Doc] improve TStatistic documentation; Documentation present in the TStatistic files has been updated to match Doxygen syntax. Data members with a little description are now visible in the docs, Class member functions documentation has been. pulled out of their definitions and changed a bit to better explain the algorithms involved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3809
https://github.com/root-project/root/pull/3809:95,security,updat,updated,95,"[Doc] improve TStatistic documentation; Documentation present in the TStatistic files has been updated to match Doxygen syntax. Data members with a little description are now visible in the docs, Class member functions documentation has been. pulled out of their definitions and changed a bit to better explain the algorithms involved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3809
https://github.com/root-project/root/pull/3809:25,usability,document,documentation,25,"[Doc] improve TStatistic documentation; Documentation present in the TStatistic files has been updated to match Doxygen syntax. Data members with a little description are now visible in the docs, Class member functions documentation has been. pulled out of their definitions and changed a bit to better explain the algorithms involved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3809
https://github.com/root-project/root/pull/3809:40,usability,Document,Documentation,40,"[Doc] improve TStatistic documentation; Documentation present in the TStatistic files has been updated to match Doxygen syntax. Data members with a little description are now visible in the docs, Class member functions documentation has been. pulled out of their definitions and changed a bit to better explain the algorithms involved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3809
https://github.com/root-project/root/pull/3809:219,usability,document,documentation,219,"[Doc] improve TStatistic documentation; Documentation present in the TStatistic files has been updated to match Doxygen syntax. Data members with a little description are now visible in the docs, Class member functions documentation has been. pulled out of their definitions and changed a bit to better explain the algorithms involved.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3809
https://github.com/root-project/root/pull/3810:147,deployability,contain,containers,147,"Fix memory leaks in normal FitPanel; TF1 objects, created in the TFitEditor, were not destroyed properly. Also use more clear c++11 syntax for STL containers. Do not generate long names like ""PrevFit-7-PrevFit-5-PrevFit-1"" for fit functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3810
https://github.com/root-project/root/pull/3810:4,performance,memor,memory,4,"Fix memory leaks in normal FitPanel; TF1 objects, created in the TFitEditor, were not destroyed properly. Also use more clear c++11 syntax for STL containers. Do not generate long names like ""PrevFit-7-PrevFit-5-PrevFit-1"" for fit functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3810
https://github.com/root-project/root/pull/3810:4,usability,memor,memory,4,"Fix memory leaks in normal FitPanel; TF1 objects, created in the TFitEditor, were not destroyed properly. Also use more clear c++11 syntax for STL containers. Do not generate long names like ""PrevFit-7-PrevFit-5-PrevFit-1"" for fit functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3810
https://github.com/root-project/root/pull/3810:120,usability,clear,clear,120,"Fix memory leaks in normal FitPanel; TF1 objects, created in the TFitEditor, were not destroyed properly. Also use more clear c++11 syntax for STL containers. Do not generate long names like ""PrevFit-7-PrevFit-5-PrevFit-1"" for fit functions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3810
https://github.com/root-project/root/pull/3811:86,deployability,contain,contain,86,"[cling,core] Improve .x arg parsing (ROOT-10097):; Dropbox folders (among others) can contain parentheses. Without this patch, ROOT and cling misinterpret those directories as arguments. Instead, first find the end of the "".x"" line. If the previous token was a closing paren, we assume that the preceding. tokens (up to the non-nested opening paren) belong to the argument.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3811
https://github.com/root-project/root/pull/3811:120,deployability,patch,patch,120,"[cling,core] Improve .x arg parsing (ROOT-10097):; Dropbox folders (among others) can contain parentheses. Without this patch, ROOT and cling misinterpret those directories as arguments. Instead, first find the end of the "".x"" line. If the previous token was a closing paren, we assume that the preceding. tokens (up to the non-nested opening paren) belong to the argument.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3811
https://github.com/root-project/root/pull/3811:7,energy efficiency,core,core,7,"[cling,core] Improve .x arg parsing (ROOT-10097):; Dropbox folders (among others) can contain parentheses. Without this patch, ROOT and cling misinterpret those directories as arguments. Instead, first find the end of the "".x"" line. If the previous token was a closing paren, we assume that the preceding. tokens (up to the non-nested opening paren) belong to the argument.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3811
https://github.com/root-project/root/pull/3811:120,safety,patch,patch,120,"[cling,core] Improve .x arg parsing (ROOT-10097):; Dropbox folders (among others) can contain parentheses. Without this patch, ROOT and cling misinterpret those directories as arguments. Instead, first find the end of the "".x"" line. If the previous token was a closing paren, we assume that the preceding. tokens (up to the non-nested opening paren) belong to the argument.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3811
https://github.com/root-project/root/pull/3811:120,security,patch,patch,120,"[cling,core] Improve .x arg parsing (ROOT-10097):; Dropbox folders (among others) can contain parentheses. Without this patch, ROOT and cling misinterpret those directories as arguments. Instead, first find the end of the "".x"" line. If the previous token was a closing paren, we assume that the preceding. tokens (up to the non-nested opening paren) belong to the argument.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3811
https://github.com/root-project/root/pull/3811:249,security,token,token,249,"[cling,core] Improve .x arg parsing (ROOT-10097):; Dropbox folders (among others) can contain parentheses. Without this patch, ROOT and cling misinterpret those directories as arguments. Instead, first find the end of the "".x"" line. If the previous token was a closing paren, we assume that the preceding. tokens (up to the non-nested opening paren) belong to the argument.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3811
https://github.com/root-project/root/pull/3811:306,security,token,tokens,306,"[cling,core] Improve .x arg parsing (ROOT-10097):; Dropbox folders (among others) can contain parentheses. Without this patch, ROOT and cling misinterpret those directories as arguments. Instead, first find the end of the "".x"" line. If the previous token was a closing paren, we assume that the preceding. tokens (up to the non-nested opening paren) belong to the argument.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3811
https://github.com/root-project/root/pull/3812:79,reliability,doe,does,79,[forest] Convert to string stringview w/o using the to_string method; since it does not exist in the c++17 stl.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3812
https://github.com/root-project/root/pull/3813:23,integrability,interfac,interface,23,[tcling] Use the right interface to make a path absolute.; A second try to appease the incremental bots.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3813
https://github.com/root-project/root/pull/3813:23,interoperability,interfac,interface,23,[tcling] Use the right interface to make a path absolute.; A second try to appease the incremental bots.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3813
https://github.com/root-project/root/pull/3813:23,modifiability,interfac,interface,23,[tcling] Use the right interface to make a path absolute.; A second try to appease the incremental bots.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3813
https://github.com/root-project/root/pull/3814:0,safety,Prevent,Prevent,0,Prevent (attempt at) creation of TBuffer larger than 2Gb;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3814
https://github.com/root-project/root/pull/3814:0,security,Preven,Prevent,0,Prevent (attempt at) creation of TBuffer larger than 2Gb;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3814
https://github.com/root-project/root/pull/3815:260,deployability,updat,updated,260,"add min, max to TStatistic; The TStatistic class now includes computation of minimum and maximum values. of the vector passed to the constructor. These values have been added both to the `Print` and `Merge` functions. The testTStatistic.cxx test file has been updated accordingly to check that the class. correctly computes min and max values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:222,safety,test,testTStatistic,222,"add min, max to TStatistic; The TStatistic class now includes computation of minimum and maximum values. of the vector passed to the constructor. These values have been added both to the `Print` and `Merge` functions. The testTStatistic.cxx test file has been updated accordingly to check that the class. correctly computes min and max values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:241,safety,test,test,241,"add min, max to TStatistic; The TStatistic class now includes computation of minimum and maximum values. of the vector passed to the constructor. These values have been added both to the `Print` and `Merge` functions. The testTStatistic.cxx test file has been updated accordingly to check that the class. correctly computes min and max values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:260,safety,updat,updated,260,"add min, max to TStatistic; The TStatistic class now includes computation of minimum and maximum values. of the vector passed to the constructor. These values have been added both to the `Print` and `Merge` functions. The testTStatistic.cxx test file has been updated accordingly to check that the class. correctly computes min and max values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:260,security,updat,updated,260,"add min, max to TStatistic; The TStatistic class now includes computation of minimum and maximum values. of the vector passed to the constructor. These values have been added both to the `Print` and `Merge` functions. The testTStatistic.cxx test file has been updated accordingly to check that the class. correctly computes min and max values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:222,testability,test,testTStatistic,222,"add min, max to TStatistic; The TStatistic class now includes computation of minimum and maximum values. of the vector passed to the constructor. These values have been added both to the `Print` and `Merge` functions. The testTStatistic.cxx test file has been updated accordingly to check that the class. correctly computes min and max values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:241,testability,test,test,241,"add min, max to TStatistic; The TStatistic class now includes computation of minimum and maximum values. of the vector passed to the constructor. These values have been added both to the `Print` and `Merge` functions. The testTStatistic.cxx test file has been updated accordingly to check that the class. correctly computes min and max values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3815:77,usability,minim,minimum,77,"add min, max to TStatistic; The TStatistic class now includes computation of minimum and maximum values. of the vector passed to the constructor. These values have been added both to the `Print` and `Merge` functions. The testTStatistic.cxx test file has been updated accordingly to check that the class. correctly computes min and max values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3815
https://github.com/root-project/root/pull/3816:28,availability,error,errors,28,[Doc] Resolving grammatical errors and spellings in user-guides; There are some grammatical mistakes and cases of misspelling in the users-guide directory. I corrected the misspellings and corrected the grammar in some of the sentences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3816
https://github.com/root-project/root/pull/3816:28,performance,error,errors,28,[Doc] Resolving grammatical errors and spellings in user-guides; There are some grammatical mistakes and cases of misspelling in the users-guide directory. I corrected the misspellings and corrected the grammar in some of the sentences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3816
https://github.com/root-project/root/pull/3816:28,safety,error,errors,28,[Doc] Resolving grammatical errors and spellings in user-guides; There are some grammatical mistakes and cases of misspelling in the users-guide directory. I corrected the misspellings and corrected the grammar in some of the sentences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3816
https://github.com/root-project/root/pull/3816:28,usability,error,errors,28,[Doc] Resolving grammatical errors and spellings in user-guides; There are some grammatical mistakes and cases of misspelling in the users-guide directory. I corrected the misspellings and corrected the grammar in some of the sentences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3816
https://github.com/root-project/root/pull/3816:52,usability,user,user-guides,52,[Doc] Resolving grammatical errors and spellings in user-guides; There are some grammatical mistakes and cases of misspelling in the users-guide directory. I corrected the misspellings and corrected the grammar in some of the sentences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3816
https://github.com/root-project/root/pull/3816:133,usability,user,users-guide,133,[Doc] Resolving grammatical errors and spellings in user-guides; There are some grammatical mistakes and cases of misspelling in the users-guide directory. I corrected the misspellings and corrected the grammar in some of the sentences.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3816
https://github.com/root-project/root/pull/3817:0,performance,Cach,Cache,0,Cache LZ4_VERSION in case of system LZ4 (not builtin); Makes https://github.com/root-project/roottest/pull/305 work finally (in both cases - builtin and system lz4),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3817
https://github.com/root-project/root/pull/3819:100,deployability,instal,install,100,"[forest] move LinkDef.h into tree/forest/inc [ROOT-10123]; As a side-effect, this change solves the install problem with a missing. tree/forest/inc directory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3819
https://github.com/root-project/root/pull/3820:33,availability,failur,failure,33,[forest] fix occasional tutorial failure due to missing symbols;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3820
https://github.com/root-project/root/pull/3820:33,deployability,fail,failure,33,[forest] fix occasional tutorial failure due to missing symbols;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3820
https://github.com/root-project/root/pull/3820:33,performance,failur,failure,33,[forest] fix occasional tutorial failure due to missing symbols;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3820
https://github.com/root-project/root/pull/3820:33,reliability,fail,failure,33,[forest] fix occasional tutorial failure due to missing symbols;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3820
https://github.com/root-project/root/pull/3822:509,energy efficiency,Draw,Draw,509,"Web Fitpanel: organize data and function objects ; ui5 ComboBox allow grouping of items. . This is used now to show different data and TF1 groups in same combo box. For data it can be:. - objects from gDirectory. - local list of FitPanel itself. For functions these are:. - existing system functions;. - predefined list of 1d and 2d function like ""gaus"" or ""xygaus"". - list of previous fits for selected data. Provide support of other data types (excluding TTree for the moment). Provide preliminary code for Draw button. Constantly improving layout, removing unused code. Not the end of the story, but layout is clarified now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3822
https://github.com/root-project/root/pull/3822:418,usability,support,support,418,"Web Fitpanel: organize data and function objects ; ui5 ComboBox allow grouping of items. . This is used now to show different data and TF1 groups in same combo box. For data it can be:. - objects from gDirectory. - local list of FitPanel itself. For functions these are:. - existing system functions;. - predefined list of 1d and 2d function like ""gaus"" or ""xygaus"". - list of previous fits for selected data. Provide support of other data types (excluding TTree for the moment). Provide preliminary code for Draw button. Constantly improving layout, removing unused code. Not the end of the story, but layout is clarified now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3822
https://github.com/root-project/root/pull/3823:94,availability,sli,slim,94,[forest] Weight loss therapy for tutorials; the tutorials look great. This PR aims to further slim them down to make them even better where possible.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3823
https://github.com/root-project/root/pull/3823:104,availability,down,down,104,[forest] Weight loss therapy for tutorials; the tutorials look great. This PR aims to further slim them down to make them even better where possible.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3823
https://github.com/root-project/root/pull/3823:94,reliability,sli,slim,94,[forest] Weight loss therapy for tutorials; the tutorials look great. This PR aims to further slim them down to make them even better where possible.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3823
https://github.com/root-project/root/pull/3823:16,security,loss,loss,16,[forest] Weight loss therapy for tutorials; the tutorials look great. This PR aims to further slim them down to make them even better where possible.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3823
https://github.com/root-project/root/pull/3824:18,usability,Close,Close,18,[Doc][ROOT-10124] Close code example for ROOT::VecOps::Construct; Thanks @couet for spotting the cause of the problem!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3824
https://github.com/root-project/root/pull/3825:31,energy efficiency,draw,drawings,31,web fitpanel: provide advanced drawings of fit results; Require extension of ROOT::Fit::FitResult and TFitResult classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3825
https://github.com/root-project/root/pull/3825:64,modifiability,extens,extension,64,web fitpanel: provide advanced drawings of fit results; Require extension of ROOT::Fit::FitResult and TFitResult classes,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3825
https://github.com/root-project/root/pull/3826:29,usability,close,closed,29,Make sure the output file is closed before committing; This solves a potential incomplete dictionary generation issue on Windows (the file was copied before being properly closed and temporary files were left on the file system),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3826
https://github.com/root-project/root/pull/3826:172,usability,close,closed,172,Make sure the output file is closed before committing; This solves a potential incomplete dictionary generation issue on Windows (the file was copied before being properly closed and temporary files were left on the file system),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3826
https://github.com/root-project/root/pull/3827:49,deployability,version,version,49,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:62,deployability,version,versions,62,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:110,deployability,version,version,110,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:213,deployability,version,version,213,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:283,deployability,version,version,283,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:409,deployability,depend,dependencies,409,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:436,deployability,automat,automatically,436,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:49,integrability,version,version,49,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:62,integrability,version,versions,62,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:110,integrability,version,version,110,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:213,integrability,version,version,213,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:283,integrability,version,version,283,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:409,integrability,depend,dependencies,409,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:49,modifiability,version,version,49,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:62,modifiability,version,versions,62,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:110,modifiability,version,version,110,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:213,modifiability,version,version,213,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:283,modifiability,version,version,283,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:409,modifiability,depend,dependencies,409,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:42,safety,detect,detect,42,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:409,safety,depend,dependencies,409,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:42,security,detect,detect,42,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:409,testability,depend,dependencies,409,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:436,testability,automat,automatically,436,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3827:275,usability,minim,minimum,275,"FindVdt.cmake: create imported target and detect version; Old versions of Vdt (0.4.1 and below) do not export version information, but ROOT needs 0.4.0 at least, because of the vdt/tanh.h header, so we deduce the version based on the existence of that header and require the minimum version that ROOT needs. This file now also creates an imported. target that can be used within ROOT to link against VDT with dependencies taken care of automatically. Fixes [ROOT-9885](https://sft.its.cern.ch/jira/browse/ROOT-9885).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3827
https://github.com/root-project/root/pull/3828:100,availability,error,errors,100,"Warn when broken version of Davix is found; Davix 0.6.8 introduced regressions that lead to runtime errors with ROOT, although the code still compiles. The first fixed version is 0.7.1. Fixes: [ROOT-9780](https://sft.its.cern.ch/jira/browse/ROOT-9780). Related issue: [ROOT-9730](https://sft.its.cern.ch/jira/browse/ROOT-9730).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3828
https://github.com/root-project/root/pull/3828:17,deployability,version,version,17,"Warn when broken version of Davix is found; Davix 0.6.8 introduced regressions that lead to runtime errors with ROOT, although the code still compiles. The first fixed version is 0.7.1. Fixes: [ROOT-9780](https://sft.its.cern.ch/jira/browse/ROOT-9780). Related issue: [ROOT-9730](https://sft.its.cern.ch/jira/browse/ROOT-9730).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3828
https://github.com/root-project/root/pull/3828:168,deployability,version,version,168,"Warn when broken version of Davix is found; Davix 0.6.8 introduced regressions that lead to runtime errors with ROOT, although the code still compiles. The first fixed version is 0.7.1. Fixes: [ROOT-9780](https://sft.its.cern.ch/jira/browse/ROOT-9780). Related issue: [ROOT-9730](https://sft.its.cern.ch/jira/browse/ROOT-9730).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3828
https://github.com/root-project/root/pull/3828:17,integrability,version,version,17,"Warn when broken version of Davix is found; Davix 0.6.8 introduced regressions that lead to runtime errors with ROOT, although the code still compiles. The first fixed version is 0.7.1. Fixes: [ROOT-9780](https://sft.its.cern.ch/jira/browse/ROOT-9780). Related issue: [ROOT-9730](https://sft.its.cern.ch/jira/browse/ROOT-9730).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3828
https://github.com/root-project/root/pull/3828:168,integrability,version,version,168,"Warn when broken version of Davix is found; Davix 0.6.8 introduced regressions that lead to runtime errors with ROOT, although the code still compiles. The first fixed version is 0.7.1. Fixes: [ROOT-9780](https://sft.its.cern.ch/jira/browse/ROOT-9780). Related issue: [ROOT-9730](https://sft.its.cern.ch/jira/browse/ROOT-9730).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3828
https://github.com/root-project/root/pull/3828:17,modifiability,version,version,17,"Warn when broken version of Davix is found; Davix 0.6.8 introduced regressions that lead to runtime errors with ROOT, although the code still compiles. The first fixed version is 0.7.1. Fixes: [ROOT-9780](https://sft.its.cern.ch/jira/browse/ROOT-9780). Related issue: [ROOT-9730](https://sft.its.cern.ch/jira/browse/ROOT-9730).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3828
https://github.com/root-project/root/pull/3828:168,modifiability,version,version,168,"Warn when broken version of Davix is found; Davix 0.6.8 introduced regressions that lead to runtime errors with ROOT, although the code still compiles. The first fixed version is 0.7.1. Fixes: [ROOT-9780](https://sft.its.cern.ch/jira/browse/ROOT-9780). Related issue: [ROOT-9730](https://sft.its.cern.ch/jira/browse/ROOT-9730).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3828
https://github.com/root-project/root/pull/3828:100,performance,error,errors,100,"Warn when broken version of Davix is found; Davix 0.6.8 introduced regressions that lead to runtime errors with ROOT, although the code still compiles. The first fixed version is 0.7.1. Fixes: [ROOT-9780](https://sft.its.cern.ch/jira/browse/ROOT-9780). Related issue: [ROOT-9730](https://sft.its.cern.ch/jira/browse/ROOT-9730).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3828
https://github.com/root-project/root/pull/3828:100,safety,error,errors,100,"Warn when broken version of Davix is found; Davix 0.6.8 introduced regressions that lead to runtime errors with ROOT, although the code still compiles. The first fixed version is 0.7.1. Fixes: [ROOT-9780](https://sft.its.cern.ch/jira/browse/ROOT-9780). Related issue: [ROOT-9730](https://sft.its.cern.ch/jira/browse/ROOT-9730).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3828
https://github.com/root-project/root/pull/3828:67,testability,regress,regressions,67,"Warn when broken version of Davix is found; Davix 0.6.8 introduced regressions that lead to runtime errors with ROOT, although the code still compiles. The first fixed version is 0.7.1. Fixes: [ROOT-9780](https://sft.its.cern.ch/jira/browse/ROOT-9780). Related issue: [ROOT-9730](https://sft.its.cern.ch/jira/browse/ROOT-9730).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3828
https://github.com/root-project/root/pull/3828:100,usability,error,errors,100,"Warn when broken version of Davix is found; Davix 0.6.8 introduced regressions that lead to runtime errors with ROOT, although the code still compiles. The first fixed version is 0.7.1. Fixes: [ROOT-9780](https://sft.its.cern.ch/jira/browse/ROOT-9780). Related issue: [ROOT-9730](https://sft.its.cern.ch/jira/browse/ROOT-9730).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3828
https://github.com/root-project/root/pull/3829:152,availability,sli,slicing,152,"[forest] fix RFieldValue class design; Remove class hierarchy in RFieldValue. The templated, type-safe. inherited classes made the design vulnerable to slicing, because the. RField interface uses the base class. Instead, we use now templated. constructors and templated member functions in RFieldValue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:181,integrability,interfac,interface,181,"[forest] fix RFieldValue class design; Remove class hierarchy in RFieldValue. The templated, type-safe. inherited classes made the design vulnerable to slicing, because the. RField interface uses the base class. Instead, we use now templated. constructors and templated member functions in RFieldValue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:181,interoperability,interfac,interface,181,"[forest] fix RFieldValue class design; Remove class hierarchy in RFieldValue. The templated, type-safe. inherited classes made the design vulnerable to slicing, because the. RField interface uses the base class. Instead, we use now templated. constructors and templated member functions in RFieldValue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:104,modifiability,inherit,inherited,104,"[forest] fix RFieldValue class design; Remove class hierarchy in RFieldValue. The templated, type-safe. inherited classes made the design vulnerable to slicing, because the. RField interface uses the base class. Instead, we use now templated. constructors and templated member functions in RFieldValue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:181,modifiability,interfac,interface,181,"[forest] fix RFieldValue class design; Remove class hierarchy in RFieldValue. The templated, type-safe. inherited classes made the design vulnerable to slicing, because the. RField interface uses the base class. Instead, we use now templated. constructors and templated member functions in RFieldValue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:152,reliability,sli,slicing,152,"[forest] fix RFieldValue class design; Remove class hierarchy in RFieldValue. The templated, type-safe. inherited classes made the design vulnerable to slicing, because the. RField interface uses the base class. Instead, we use now templated. constructors and templated member functions in RFieldValue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3829:98,safety,safe,safe,98,"[forest] fix RFieldValue class design; Remove class hierarchy in RFieldValue. The templated, type-safe. inherited classes made the design vulnerable to slicing, because the. RField interface uses the base class. Instead, we use now templated. constructors and templated member functions in RFieldValue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3829
https://github.com/root-project/root/pull/3832:39,safety,test,tests,39,[Exp PyROOT] Changes to fix python-cpp tests; New functionality and fixes in experimental PyROOT and Cppyy to make `roottest-python-cpp-cpp` and `roottest-python-cpp-cpp11` pass. The changes in the tests themselves coming in another PR for roottest:. https://github.com/root-project/roottest/pull/326,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3832
https://github.com/root-project/root/pull/3832:198,safety,test,tests,198,[Exp PyROOT] Changes to fix python-cpp tests; New functionality and fixes in experimental PyROOT and Cppyy to make `roottest-python-cpp-cpp` and `roottest-python-cpp-cpp11` pass. The changes in the tests themselves coming in another PR for roottest:. https://github.com/root-project/roottest/pull/326,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3832
https://github.com/root-project/root/pull/3832:39,testability,test,tests,39,[Exp PyROOT] Changes to fix python-cpp tests; New functionality and fixes in experimental PyROOT and Cppyy to make `roottest-python-cpp-cpp` and `roottest-python-cpp-cpp11` pass. The changes in the tests themselves coming in another PR for roottest:. https://github.com/root-project/roottest/pull/326,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3832
https://github.com/root-project/root/pull/3832:198,testability,test,tests,198,[Exp PyROOT] Changes to fix python-cpp tests; New functionality and fixes in experimental PyROOT and Cppyy to make `roottest-python-cpp-cpp` and `roottest-python-cpp-cpp11` pass. The changes in the tests themselves coming in another PR for roottest:. https://github.com/root-project/roottest/pull/326,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3832
https://github.com/root-project/root/pull/3834:19,deployability,updat,updates,19,[RF] Documentation updates; - Make various '//' comments appear in doxygen. - Fix various typos. - Improve explanations of unclear docs. - Add getRange() to RooAbsRealLValue as a shortcut for getMin() followed by getMax(). Users were rightfully pointing out that there is no equivalent to setRange().,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3834
https://github.com/root-project/root/pull/3834:19,safety,updat,updates,19,[RF] Documentation updates; - Make various '//' comments appear in doxygen. - Fix various typos. - Improve explanations of unclear docs. - Add getRange() to RooAbsRealLValue as a shortcut for getMin() followed by getMax(). Users were rightfully pointing out that there is no equivalent to setRange().,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3834
https://github.com/root-project/root/pull/3834:19,security,updat,updates,19,[RF] Documentation updates; - Make various '//' comments appear in doxygen. - Fix various typos. - Improve explanations of unclear docs. - Add getRange() to RooAbsRealLValue as a shortcut for getMin() followed by getMax(). Users were rightfully pointing out that there is no equivalent to setRange().,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3834
https://github.com/root-project/root/pull/3834:5,usability,Document,Documentation,5,[RF] Documentation updates; - Make various '//' comments appear in doxygen. - Fix various typos. - Improve explanations of unclear docs. - Add getRange() to RooAbsRealLValue as a shortcut for getMin() followed by getMax(). Users were rightfully pointing out that there is no equivalent to setRange().,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3834
https://github.com/root-project/root/pull/3834:179,usability,shortcut,shortcut,179,[RF] Documentation updates; - Make various '//' comments appear in doxygen. - Fix various typos. - Improve explanations of unclear docs. - Add getRange() to RooAbsRealLValue as a shortcut for getMin() followed by getMax(). Users were rightfully pointing out that there is no equivalent to setRange().,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3834
https://github.com/root-project/root/pull/3834:223,usability,User,Users,223,[RF] Documentation updates; - Make various '//' comments appear in doxygen. - Fix various typos. - Improve explanations of unclear docs. - Add getRange() to RooAbsRealLValue as a shortcut for getMin() followed by getMax(). Users were rightfully pointing out that there is no equivalent to setRange().,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3834
https://github.com/root-project/root/pull/3835:99,interoperability,bind,bindings,99,"[Exp PyROOT] Implementation of __radd__, __rsub__, __rmul__ and __rtruediv__/__rdiv__ for TComplex bindings; The implementation of these two methods was requested in order to fix the bug here described:. https://sft.its.cern.ch/jira/browse/ROOT-9798. https://sft.its.cern.ch/jira/browse/ROOT-8580.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3835
https://github.com/root-project/root/pull/3835:99,modifiability,bind,bindings,99,"[Exp PyROOT] Implementation of __radd__, __rsub__, __rmul__ and __rtruediv__/__rdiv__ for TComplex bindings; The implementation of these two methods was requested in order to fix the bug here described:. https://sft.its.cern.ch/jira/browse/ROOT-9798. https://sft.its.cern.ch/jira/browse/ROOT-8580.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3835
https://github.com/root-project/root/pull/3836:33,usability,document,documentation,33,[TTree][NFC] Refurbish a bit the documentation of TTree;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3836
https://github.com/root-project/root/pull/3837:253,deployability,contain,containers,253,"json: let read JSON data without _typename specifiers ; In some practical use cases it make sense to skip typenames, while type. is already specified by streaming. In such case type information is not. necessary. Especially useful for case of plain STL containers. Also use const_cast<TClass *> instead of (TClass *)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3837
https://github.com/root-project/root/pull/3837:43,interoperability,specif,specifiers,43,"json: let read JSON data without _typename specifiers ; In some practical use cases it make sense to skip typenames, while type. is already specified by streaming. In such case type information is not. necessary. Especially useful for case of plain STL containers. Also use const_cast<TClass *> instead of (TClass *)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3837
https://github.com/root-project/root/pull/3837:140,interoperability,specif,specified,140,"json: let read JSON data without _typename specifiers ; In some practical use cases it make sense to skip typenames, while type. is already specified by streaming. In such case type information is not. necessary. Especially useful for case of plain STL containers. Also use const_cast<TClass *> instead of (TClass *)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3837
https://github.com/root-project/root/pull/3837:64,reliability,pra,practical,64,"json: let read JSON data without _typename specifiers ; In some practical use cases it make sense to skip typenames, while type. is already specified by streaming. In such case type information is not. necessary. Especially useful for case of plain STL containers. Also use const_cast<TClass *> instead of (TClass *)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3837
https://github.com/root-project/root/pull/3838:208,availability,error,error,208,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:48,deployability,version,version,48,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:62,deployability,build,building,62,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:112,deployability,version,version,112,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:284,deployability,modul,module,284,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:356,deployability,version,version,356,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:48,integrability,version,version,48,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:112,integrability,version,version,112,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:356,integrability,version,version,356,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:171,interoperability,compatib,compatibility,171,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:48,modifiability,version,version,48,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:112,modifiability,version,version,112,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:284,modifiability,modul,module,284,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:356,modifiability,version,version,356,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:208,performance,error,error,208,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:93,safety,detect,detect,93,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:208,safety,error,error,208,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:284,safety,modul,module,284,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:323,safety,detect,detecting,323,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:93,security,detect,detect,93,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:323,security,detect,detecting,323,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:40,usability,minim,minimal,40,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3838:208,usability,error,error,208,"Switch to FindLibLZMA.cmake and enforce minimal version; When building ROOT on slc6, it will detect and use xz (version 4.999.9) provided by OS, which is reported to have compatibility issues (`R__unzipLZMA: error 8 in lzma_code`). The proposed change fixes that by using CMake's own module (present since CMake 3.0.2) for detecting xz *and* checking it's version.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3838
https://github.com/root-project/root/pull/3840:9,usability,Support,Support,9,[pyroot] Support libstdc++ shared_ptr:; Its op-> is in a base class!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3840
https://github.com/root-project/root/pull/3843:44,deployability,modul,module,44,bindings/pyroot: remove globbing for Python module files;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:0,interoperability,bind,bindings,0,bindings/pyroot: remove globbing for Python module files;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:0,modifiability,bind,bindings,0,bindings/pyroot: remove globbing for Python module files;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:44,modifiability,modul,module,44,bindings/pyroot: remove globbing for Python module files;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3843:44,safety,modul,module,44,bindings/pyroot: remove globbing for Python module files;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3843
https://github.com/root-project/root/pull/3844:9,safety,prevent,preventing,9,Fix typo preventing splitting of std::map;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3844
https://github.com/root-project/root/pull/3844:9,security,preven,preventing,9,Fix typo preventing splitting of std::map;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3844
https://github.com/root-project/root/pull/3845:184,energy efficiency,measur,measurements,184,"[RVec] Revert SBO implementation for now; Reverting RVec's SBO implementation until we have a proper fix for the crashes seen in ROOT-10079. ROOT-10079 also reports the discussion and measurements that motivate the reverts. The reverts were not simple: it's a lot of changes and subsequent unrelated commits overwrote part of them (e.g. a change in implementation of `Combinations`, a renaming of many preprocessor flags from `TVec` to `RVec`). I hope I didn't screw it up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3845
https://github.com/root-project/root/pull/3845:279,integrability,sub,subsequent,279,"[RVec] Revert SBO implementation for now; Reverting RVec's SBO implementation until we have a proper fix for the crashes seen in ROOT-10079. ROOT-10079 also reports the discussion and measurements that motivate the reverts. The reverts were not simple: it's a lot of changes and subsequent unrelated commits overwrote part of them (e.g. a change in implementation of `Combinations`, a renaming of many preprocessor flags from `TVec` to `RVec`). I hope I didn't screw it up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3845
https://github.com/root-project/root/pull/3845:245,testability,simpl,simple,245,"[RVec] Revert SBO implementation for now; Reverting RVec's SBO implementation until we have a proper fix for the crashes seen in ROOT-10079. ROOT-10079 also reports the discussion and measurements that motivate the reverts. The reverts were not simple: it's a lot of changes and subsequent unrelated commits overwrote part of them (e.g. a change in implementation of `Combinations`, a renaming of many preprocessor flags from `TVec` to `RVec`). I hope I didn't screw it up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3845
https://github.com/root-project/root/pull/3845:245,usability,simpl,simple,245,"[RVec] Revert SBO implementation for now; Reverting RVec's SBO implementation until we have a proper fix for the crashes seen in ROOT-10079. ROOT-10079 also reports the discussion and measurements that motivate the reverts. The reverts were not simple: it's a lot of changes and subsequent unrelated commits overwrote part of them (e.g. a change in implementation of `Combinations`, a renaming of many preprocessor flags from `TVec` to `RVec`). I hope I didn't screw it up.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3845
https://github.com/root-project/root/pull/3846:9,performance,memor,memory,9,TGraph2D memory leak; Fix the memory leak reported in ROOT-9080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3846
https://github.com/root-project/root/pull/3846:30,performance,memor,memory,30,TGraph2D memory leak; Fix the memory leak reported in ROOT-9080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3846
https://github.com/root-project/root/pull/3846:9,usability,memor,memory,9,TGraph2D memory leak; Fix the memory leak reported in ROOT-9080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3846
https://github.com/root-project/root/pull/3846:30,usability,memor,memory,30,TGraph2D memory leak; Fix the memory leak reported in ROOT-9080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3846
https://github.com/root-project/root/pull/3847:8,performance,memor,memory,8,Fix the memory leak reported in ROOT-9080;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3847:8,usability,memor,memory,8,Fix the memory leak reported in ROOT-9080;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3847
https://github.com/root-project/root/pull/3849:76,energy efficiency,alloc,allocate,76,[graf2d-v7] Make attributes proper values [WIP]; Calling e.g. Border() will allocate the relevant attribute and return a reference.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3849
https://github.com/root-project/root/pull/3850:478,availability,avail,available,478,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:28,deployability,build,build,28,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:34,deployability,modul,modules,34,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:68,deployability,modul,modulemap,68,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:104,deployability,modul,modulemap,104,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:124,deployability,contain,contains,124,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:201,deployability,modul,modulemap,201,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:320,deployability,modul,modulemap,320,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:344,deployability,patch,patch,344,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:423,deployability,automat,automatic,423,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:490,deployability,Modul,Modules,490,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:598,deployability,modul,module,598,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:611,deployability,contain,containing,611,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:674,deployability,Depend,Depends,674,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:605,energy efficiency,Core,Core,605,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:674,integrability,Depend,Depends,674,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:34,modifiability,modul,modules,34,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:68,modifiability,modul,modulemap,68,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:104,modifiability,modul,modulemap,104,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:201,modifiability,modul,modulemap,201,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:320,modifiability,modul,modulemap,320,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:490,modifiability,Modul,Modules,490,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:598,modifiability,modul,module,598,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:674,modifiability,Depend,Depends,674,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:584,performance,time,time,584,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:478,reliability,availab,available,478,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:529,reliability,resilien,resilient,529,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:34,safety,modul,modules,34,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:68,safety,modul,modulemap,68,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:104,safety,modul,modulemap,104,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:201,safety,modul,modulemap,201,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:270,safety,avoid,avoid,270,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:320,safety,modul,modulemap,320,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:344,safety,patch,patch,344,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:478,safety,avail,available,478,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:490,safety,Modul,Modules,490,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:511,safety,isol,isolation,511,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:529,safety,resilien,resilient,529,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:598,safety,modul,module,598,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:674,safety,Depend,Depends,674,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:344,security,patch,patch,344,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:478,security,availab,available,478,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:511,security,iso,isolation,511,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:423,testability,automat,automatic,423,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:511,testability,isol,isolation,511,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:674,testability,Depend,Depends,674,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3850:414,usability,support,supports,414,[cxxmodules] Teach ACLiC to build modules.; ACLiC now synthesizes a modulemap with a suffix _ACLiC_dict.modulemap. The file contains the source file to be compiled and the corresponding library. . The modulemap is then passed to rootcling via -fmodule-map-file= flag to avoid naming clashes with possibly existing other modulemap files. . This patch teaches cling to work with the -fmodule-map-file= flag. . ACLiC supports automatic inclusion of Rtypes.h (making ClassDef macro available). Modules are built in isolation and are resilient to #include of Rtypes.h at rootcling startup time. We make module Core (containing Rtypes.h) visible via a newly implemented callback. Depends on #3798,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3850
https://github.com/root-project/root/pull/3851:163,deployability,integr,integrals,163,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:377,deployability,integr,integrals,377,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:262,energy efficiency,optim,optimised,262,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:163,integrability,integr,integrals,163,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:377,integrability,integr,integrals,377,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:163,interoperability,integr,integrals,163,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:377,interoperability,integr,integrals,377,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:163,modifiability,integr,integrals,163,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:377,modifiability,integr,integrals,377,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:163,reliability,integr,integrals,163,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:377,reliability,integr,integrals,377,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:409,safety,test,tests,409,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:163,security,integr,integrals,163,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:377,security,integr,integrals,377,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:163,testability,integr,integrals,163,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:377,testability,integr,integrals,377,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3851:409,testability,test,tests,409,"[RF] Add RooJohnson; The Johnson PDF is frequently used in LHCb, who mostly implement it using a TFormula. This has negative impact on speed and the precision for integrals, because these can only be done numerically. Here, it is added as compiled code, with an optimised generator function that gets around the wasteful accept/reject method, with much more precise analytical integrals, as well as precision tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3851
https://github.com/root-project/root/pull/3852:210,energy efficiency,Core,Core,210,"Export C++ standard via COMPILE_FEATURES target property; With this change, we now have `INTERFACE_COMPILE_FEATURES` defined for targets in `ROOTConfig-Targets.cmake`:. ```cmake. # Create imported target ROOT::Core. add_library(ROOT::Core SHARED IMPORTED). set_target_properties(ROOT::Core PROPERTIES. INTERFACE_COMPILE_FEATURES ""cxx_std_17"". ). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3852
https://github.com/root-project/root/pull/3852:234,energy efficiency,Core,Core,234,"Export C++ standard via COMPILE_FEATURES target property; With this change, we now have `INTERFACE_COMPILE_FEATURES` defined for targets in `ROOTConfig-Targets.cmake`:. ```cmake. # Create imported target ROOT::Core. add_library(ROOT::Core SHARED IMPORTED). set_target_properties(ROOT::Core PROPERTIES. INTERFACE_COMPILE_FEATURES ""cxx_std_17"". ). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3852
https://github.com/root-project/root/pull/3852:285,energy efficiency,Core,Core,285,"Export C++ standard via COMPILE_FEATURES target property; With this change, we now have `INTERFACE_COMPILE_FEATURES` defined for targets in `ROOTConfig-Targets.cmake`:. ```cmake. # Create imported target ROOT::Core. add_library(ROOT::Core SHARED IMPORTED). set_target_properties(ROOT::Core PROPERTIES. INTERFACE_COMPILE_FEATURES ""cxx_std_17"". ). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3852
https://github.com/root-project/root/pull/3852:11,interoperability,standard,standard,11,"Export C++ standard via COMPILE_FEATURES target property; With this change, we now have `INTERFACE_COMPILE_FEATURES` defined for targets in `ROOTConfig-Targets.cmake`:. ```cmake. # Create imported target ROOT::Core. add_library(ROOT::Core SHARED IMPORTED). set_target_properties(ROOT::Core PROPERTIES. INTERFACE_COMPILE_FEATURES ""cxx_std_17"". ). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3852
https://github.com/root-project/root/pull/3852:239,interoperability,SHARE,SHARED,239,"Export C++ standard via COMPILE_FEATURES target property; With this change, we now have `INTERFACE_COMPILE_FEATURES` defined for targets in `ROOTConfig-Targets.cmake`:. ```cmake. # Create imported target ROOT::Core. add_library(ROOT::Core SHARED IMPORTED). set_target_properties(ROOT::Core PROPERTIES. INTERFACE_COMPILE_FEATURES ""cxx_std_17"". ). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3852
https://github.com/root-project/root/pull/3853:169,availability,error,error,169,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:220,availability,error,error,220,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:141,deployability,depend,depending,141,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:4,energy efficiency,optim,optimal,4,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:124,energy efficiency,optim,optimal,124,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:253,energy efficiency,estimat,estimated,253,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:141,integrability,depend,depending,141,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:141,modifiability,depend,depending,141,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:186,modifiability,paramet,parameter,186,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:405,modifiability,paramet,parameters,405,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:169,performance,error,error,169,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:220,performance,error,error,220,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:141,safety,depend,depending,141,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:169,safety,error,error,169,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:220,safety,error,error,220,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:141,testability,depend,depending,141,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:169,usability,error,error,169,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3853:220,usability,error,error,220,"Fix optimal step size when computating gradient for confidence intervals in FitResult; This fixes ROOT-9839 by computing an optimal stepwise depending on the result fit error. . Now for parameter which have a very small error the step size is correctly estimated. . The difference can be seen by fitting a gaussian with very small sigma (~ 10^-5) and computing the. confidence intervals. . Also the fixed parameters are now correctly handled, although before, their contribution was not included due to their zero value in the covariance matrix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3853
https://github.com/root-project/root/pull/3854:119,deployability,build,buildid,119,"[Exp PyROOT] Disable strict aliasing warnings; The following warnings:. http://cdash.cern.ch/viewBuildError.php?type=1&buildid=660547. are triggered when calling `Py_INCREF(Py_True)` and `Py_INCREF(Py_False)`, either directly or via the Python C API macros `Py_RETURN_TRUE` and `Py_RETURN_FALSE`. The use of these macros is necessary and can't be worked around. This PR disables such warnings in PyROOT experimental (they were already disabled in the current PyROOT and in Cppyy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3854
https://github.com/root-project/root/pull/3854:246,deployability,API,API,246,"[Exp PyROOT] Disable strict aliasing warnings; The following warnings:. http://cdash.cern.ch/viewBuildError.php?type=1&buildid=660547. are triggered when calling `Py_INCREF(Py_True)` and `Py_INCREF(Py_False)`, either directly or via the Python C API macros `Py_RETURN_TRUE` and `Py_RETURN_FALSE`. The use of these macros is necessary and can't be worked around. This PR disables such warnings in PyROOT experimental (they were already disabled in the current PyROOT and in Cppyy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3854
https://github.com/root-project/root/pull/3854:451,energy efficiency,current,current,451,"[Exp PyROOT] Disable strict aliasing warnings; The following warnings:. http://cdash.cern.ch/viewBuildError.php?type=1&buildid=660547. are triggered when calling `Py_INCREF(Py_True)` and `Py_INCREF(Py_False)`, either directly or via the Python C API macros `Py_RETURN_TRUE` and `Py_RETURN_FALSE`. The use of these macros is necessary and can't be worked around. This PR disables such warnings in PyROOT experimental (they were already disabled in the current PyROOT and in Cppyy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3854
https://github.com/root-project/root/pull/3854:246,integrability,API,API,246,"[Exp PyROOT] Disable strict aliasing warnings; The following warnings:. http://cdash.cern.ch/viewBuildError.php?type=1&buildid=660547. are triggered when calling `Py_INCREF(Py_True)` and `Py_INCREF(Py_False)`, either directly or via the Python C API macros `Py_RETURN_TRUE` and `Py_RETURN_FALSE`. The use of these macros is necessary and can't be worked around. This PR disables such warnings in PyROOT experimental (they were already disabled in the current PyROOT and in Cppyy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3854
https://github.com/root-project/root/pull/3854:246,interoperability,API,API,246,"[Exp PyROOT] Disable strict aliasing warnings; The following warnings:. http://cdash.cern.ch/viewBuildError.php?type=1&buildid=660547. are triggered when calling `Py_INCREF(Py_True)` and `Py_INCREF(Py_False)`, either directly or via the Python C API macros `Py_RETURN_TRUE` and `Py_RETURN_FALSE`. The use of these macros is necessary and can't be worked around. This PR disables such warnings in PyROOT experimental (they were already disabled in the current PyROOT and in Cppyy).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3854
https://github.com/root-project/root/pull/3855:7,energy efficiency,draw,drawing,7,Fix v7 drawing tutorials for 6.18;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3855
https://github.com/root-project/root/pull/3856:81,availability,operat,operator,81,[TMVA][ROOT-10136] Fix gcc9 warnings (-Wdeprecated-copy); - Implement assignment operator explicitely for Volume. - Set copy contructor of OptionMap to default since implementation is. not needed. - Set explicitely the default for Event.h which happened before. implicitely.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3856
https://github.com/root-project/root/pull/3856:231,integrability,Event,Event,231,[TMVA][ROOT-10136] Fix gcc9 warnings (-Wdeprecated-copy); - Implement assignment operator explicitely for Volume. - Set copy contructor of OptionMap to default since implementation is. not needed. - Set explicitely the default for Event.h which happened before. implicitely.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3856
https://github.com/root-project/root/pull/3858:290,modifiability,paramet,parameters,290,"[metacling] TClingMethodInfo, skip over template instantiations; …ations:. TClingMethodInfo keeps track of what can be called. Whether someone else has created an instantiation of a template is of no relevance for that questions. OTOH templates that have default argumemnts of all template parameters *can* be invoked without templateargument,. so that *is* significant for ""callability"", and TClingMethodInfo will enumerate them. This might fix https://bitbucket.org/wlav/cppyy/issues/102/wrong-resolution-in-template-method-call",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3858
https://github.com/root-project/root/pull/3858:358,security,sign,significant,358,"[metacling] TClingMethodInfo, skip over template instantiations; …ations:. TClingMethodInfo keeps track of what can be called. Whether someone else has created an instantiation of a template is of no relevance for that questions. OTOH templates that have default argumemnts of all template parameters *can* be invoked without templateargument,. so that *is* significant for ""callability"", and TClingMethodInfo will enumerate them. This might fix https://bitbucket.org/wlav/cppyy/issues/102/wrong-resolution-in-template-method-call",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3858
https://github.com/root-project/root/pull/3859:96,deployability,automat,automatically,96,"[RF] Trigger collection of histograms in HistFactory.; HistFactory normally collects histograms automatically, but not if. `HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace` is used. This commit fixes this defect, and adds sanity checks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3859
https://github.com/root-project/root/pull/3859:230,safety,sanit,sanity,230,"[RF] Trigger collection of histograms in HistFactory.; HistFactory normally collects histograms automatically, but not if. `HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace` is used. This commit fixes this defect, and adds sanity checks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3859
https://github.com/root-project/root/pull/3859:230,security,sanit,sanity,230,"[RF] Trigger collection of histograms in HistFactory.; HistFactory normally collects histograms automatically, but not if. `HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace` is used. This commit fixes this defect, and adds sanity checks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3859
https://github.com/root-project/root/pull/3859:96,testability,automat,automatically,96,"[RF] Trigger collection of histograms in HistFactory.; HistFactory normally collects histograms automatically, but not if. `HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace` is used. This commit fixes this defect, and adds sanity checks.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3859
https://github.com/root-project/root/pull/3860:245,modifiability,variab,variables,245,"Fix gcc9 warnings in GUI; As suggested by Axel:. TGDimension.h: Remove the copy constructors (rely on the compiler generated ones), add default (non virtual) destructors, and remove useless ClassDefs. TGCanvas.cxx, TGListTree.cxx: Remove unused variables (fixes [-Wunused-but-set-variable] warnings)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3860
https://github.com/root-project/root/pull/3860:280,modifiability,variab,variable,280,"Fix gcc9 warnings in GUI; As suggested by Axel:. TGDimension.h: Remove the copy constructors (rely on the compiler generated ones), add default (non virtual) destructors, and remove useless ClassDefs. TGCanvas.cxx, TGListTree.cxx: Remove unused variables (fixes [-Wunused-but-set-variable] warnings)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3860
https://github.com/root-project/root/pull/3861:0,deployability,Updat,Update,0,Update MakeProject to use unique_ptr rather than auto_ptr;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3861
https://github.com/root-project/root/pull/3861:0,safety,Updat,Update,0,Update MakeProject to use unique_ptr rather than auto_ptr;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3861
https://github.com/root-project/root/pull/3861:0,security,Updat,Update,0,Update MakeProject to use unique_ptr rather than auto_ptr;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3861
https://github.com/root-project/root/pull/3862:13,usability,document,document,13,[NFC] Better document the usage of the Double32_t and Float16_t types; in the tutorial and in the TTree doc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3862
https://github.com/root-project/root/pull/3864:40,deployability,patch,patch,40,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:140,deployability,version,versioning,140,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:176,deployability,patch,patches,176,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:293,deployability,patch,patches,293,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:140,integrability,version,versioning,140,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:140,modifiability,version,versioning,140,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:40,safety,patch,patch,40,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:176,safety,patch,patches,176,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:293,safety,patch,patches,293,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:40,security,patch,patch,40,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:176,security,patch,patches,176,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:293,security,patch,patches,293,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:96,testability,simpl,simply,96,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3864:96,usability,simpl,simply,96,"[cmake] Set ROOT_VERSION to major.minor.patch (ROOT-10142):; This was the intent, the regex was simply broken and did not take the trailing versioning part into account. Now, -patches as minor "".99"", otherwise as expected. This can be improved in the future by also adding the commit count to patches, aka 6.16.06.42 for the 42th commit after 6.16.06.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3864
https://github.com/root-project/root/pull/3865:67,deployability,modul,modules,67,[tcling] Refactor code in separate routines and reduce include for modules.; This patch moves code which does similar things into standalone routines. This. way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3865:82,deployability,patch,patch,82,[tcling] Refactor code in separate routines and reduce include for modules.; This patch moves code which does similar things into standalone routines. This. way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3865:48,energy efficiency,reduc,reduce,48,[tcling] Refactor code in separate routines and reduce include for modules.; This patch moves code which does similar things into standalone routines. This. way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3865:35,integrability,rout,routines,35,[tcling] Refactor code in separate routines and reduce include for modules.; This patch moves code which does similar things into standalone routines. This. way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3865:141,integrability,rout,routines,141,[tcling] Refactor code in separate routines and reduce include for modules.; This patch moves code which does similar things into standalone routines. This. way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3865:9,modifiability,Refact,Refactor,9,[tcling] Refactor code in separate routines and reduce include for modules.; This patch moves code which does similar things into standalone routines. This. way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3865:67,modifiability,modul,modules,67,[tcling] Refactor code in separate routines and reduce include for modules.; This patch moves code which does similar things into standalone routines. This. way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3865:9,performance,Refactor,Refactor,9,[tcling] Refactor code in separate routines and reduce include for modules.; This patch moves code which does similar things into standalone routines. This. way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3865:105,reliability,doe,does,105,[tcling] Refactor code in separate routines and reduce include for modules.; This patch moves code which does similar things into standalone routines. This. way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3865:67,safety,modul,modules,67,[tcling] Refactor code in separate routines and reduce include for modules.; This patch moves code which does similar things into standalone routines. This. way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3865:82,safety,patch,patch,82,[tcling] Refactor code in separate routines and reduce include for modules.; This patch moves code which does similar things into standalone routines. This. way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3865:82,security,patch,patch,82,[tcling] Refactor code in separate routines and reduce include for modules.; This patch moves code which does similar things into standalone routines. This. way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3865:174,usability,clear,clear,174,[tcling] Refactor code in separate routines and reduce include for modules.; This patch moves code which does similar things into standalone routines. This. way we make more clear the intent of use.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3865
https://github.com/root-project/root/pull/3866:169,deployability,build,build,169,[cmake xrd] From Guilherme: disable -Werror which breaks GCC9:; See https://github.com/xrootd/xrootd/issues/993. In a subsequent commit (not part of v6.18) we will only build the Xrd client!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3866
https://github.com/root-project/root/pull/3866:118,integrability,sub,subsequent,118,[cmake xrd] From Guilherme: disable -Werror which breaks GCC9:; See https://github.com/xrootd/xrootd/issues/993. In a subsequent commit (not part of v6.18) we will only build the Xrd client!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3866
https://github.com/root-project/root/pull/3868:0,deployability,Updat,Update,0,Update builtin XRootD to version 4.9.1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3868
https://github.com/root-project/root/pull/3868:25,deployability,version,version,25,Update builtin XRootD to version 4.9.1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3868
https://github.com/root-project/root/pull/3868:25,integrability,version,version,25,Update builtin XRootD to version 4.9.1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3868
https://github.com/root-project/root/pull/3868:25,modifiability,version,version,25,Update builtin XRootD to version 4.9.1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3868
https://github.com/root-project/root/pull/3868:0,safety,Updat,Update,0,Update builtin XRootD to version 4.9.1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3868
https://github.com/root-project/root/pull/3868:0,security,Updat,Update,0,Update builtin XRootD to version 4.9.1;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3868
https://github.com/root-project/root/pull/3869:352,deployability,build,build,352,"[HistPainter][ROOT-10137] Silence warnings (-Wformat-truncation); Alternatively we could enlarge the buffer for `snprintf`. However, this would change the print-out since the truncation feature of `snprintf` is a feature. @lmoneta What do you think? Edit: The truncation warnings can be found here: https://sft.its.cern.ch/jira/secure/attachment/22139/build.log",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:358,deployability,log,log,358,"[HistPainter][ROOT-10137] Silence warnings (-Wformat-truncation); Alternatively we could enlarge the buffer for `snprintf`. However, this would change the print-out since the truncation feature of `snprintf` is a feature. @lmoneta What do you think? Edit: The truncation warnings can be found here: https://sft.its.cern.ch/jira/secure/attachment/22139/build.log",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:101,integrability,buffer,buffer,101,"[HistPainter][ROOT-10137] Silence warnings (-Wformat-truncation); Alternatively we could enlarge the buffer for `snprintf`. However, this would change the print-out since the truncation feature of `snprintf` is a feature. @lmoneta What do you think? Edit: The truncation warnings can be found here: https://sft.its.cern.ch/jira/secure/attachment/22139/build.log",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:358,safety,log,log,358,"[HistPainter][ROOT-10137] Silence warnings (-Wformat-truncation); Alternatively we could enlarge the buffer for `snprintf`. However, this would change the print-out since the truncation feature of `snprintf` is a feature. @lmoneta What do you think? Edit: The truncation warnings can be found here: https://sft.its.cern.ch/jira/secure/attachment/22139/build.log",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:328,security,secur,secure,328,"[HistPainter][ROOT-10137] Silence warnings (-Wformat-truncation); Alternatively we could enlarge the buffer for `snprintf`. However, this would change the print-out since the truncation feature of `snprintf` is a feature. @lmoneta What do you think? Edit: The truncation warnings can be found here: https://sft.its.cern.ch/jira/secure/attachment/22139/build.log",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:358,security,log,log,358,"[HistPainter][ROOT-10137] Silence warnings (-Wformat-truncation); Alternatively we could enlarge the buffer for `snprintf`. However, this would change the print-out since the truncation feature of `snprintf` is a feature. @lmoneta What do you think? Edit: The truncation warnings can be found here: https://sft.its.cern.ch/jira/secure/attachment/22139/build.log",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3869:358,testability,log,log,358,"[HistPainter][ROOT-10137] Silence warnings (-Wformat-truncation); Alternatively we could enlarge the buffer for `snprintf`. However, this would change the print-out since the truncation feature of `snprintf` is a feature. @lmoneta What do you think? Edit: The truncation warnings can be found here: https://sft.its.cern.ch/jira/secure/attachment/22139/build.log",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3869
https://github.com/root-project/root/pull/3870:0,deployability,Instal,Install,0,"Install the modules, pcms, and rootmap files in the bin directory on …; …Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3870
https://github.com/root-project/root/pull/3870:12,deployability,modul,modules,12,"Install the modules, pcms, and rootmap files in the bin directory on …; …Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3870
https://github.com/root-project/root/pull/3870:12,modifiability,modul,modules,12,"Install the modules, pcms, and rootmap files in the bin directory on …; …Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3870
https://github.com/root-project/root/pull/3870:12,safety,modul,modules,12,"Install the modules, pcms, and rootmap files in the bin directory on …; …Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3870
https://github.com/root-project/root/pull/3871:106,availability,operat,operators,106,"[RF] Fix gcc9 warnings.; - Fixing gcc9 warnings by either defaulting, implementing or deleting assignment operators. - Implementing the assignment operator of RooAbsData required removing members that were. iterators. They have been replaced by range-based for loops. - This entailed cleaning of RooDataHist code. ROOT-10135",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3871
https://github.com/root-project/root/pull/3871:147,availability,operat,operator,147,"[RF] Fix gcc9 warnings.; - Fixing gcc9 warnings by either defaulting, implementing or deleting assignment operators. - Implementing the assignment operator of RooAbsData required removing members that were. iterators. They have been replaced by range-based for loops. - This entailed cleaning of RooDataHist code. ROOT-10135",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3871
https://github.com/root-project/root/pull/3872:106,availability,operat,operators,106,"[RF] Fix gcc9 warnings.; - Fixing gcc9 warnings by either defaulting, implementing or deleting assignment operators. - Implementing the assignment operator of RooAbsData required removing members that were. iterators. They have been replaced by range-based for loops. - This entailed cleaning of RooDataHist code. ROOT-10135",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3872:147,availability,operat,operator,147,"[RF] Fix gcc9 warnings.; - Fixing gcc9 warnings by either defaulting, implementing or deleting assignment operators. - Implementing the assignment operator of RooAbsData required removing members that were. iterators. They have been replaced by range-based for loops. - This entailed cleaning of RooDataHist code. ROOT-10135",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3872
https://github.com/root-project/root/pull/3873:57,deployability,patch,patch,57,[tcling] Check if the triggerFunc is in a library.; This patch should fix an assert in the incrementals.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:57,safety,patch,patch,57,[tcling] Check if the triggerFunc is in a library.; This patch should fix an assert in the incrementals.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:57,security,patch,patch,57,[tcling] Check if the triggerFunc is in a library.; This patch should fix an assert in the incrementals.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3873:77,testability,assert,assert,77,[tcling] Check if the triggerFunc is in a library.; This patch should fix an assert in the incrementals.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3873
https://github.com/root-project/root/pull/3874:11,safety,Avoid,Avoid,11,[rpdutils] Avoid linux macro redefinition warning.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3874
https://github.com/root-project/root/pull/3875:9,availability,operat,operation,9,Added Up operation in TGeoIterator.; Backport requested by CMS in ROOT-10139,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3875
https://github.com/root-project/root/pull/3879:0,availability,Restor,Restore,0,Restore GraphViz; The GraphViz deprecation has been reverted due to @olifre's request.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3879
https://github.com/root-project/root/pull/3879:0,reliability,Restor,Restore,0,Restore GraphViz; The GraphViz deprecation has been reverted due to @olifre's request.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3879
https://github.com/root-project/root/pull/3882:23,availability,state,state,23,Small fix for geometry state recovery in VMC; The index of the geometry state belonging to a track is now reset. properly when the TMCManagerStack is notified on the restored geometry.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3882:29,availability,recov,recovery,29,Small fix for geometry state recovery in VMC; The index of the geometry state belonging to a track is now reset. properly when the TMCManagerStack is notified on the restored geometry.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3882:72,availability,state,state,72,Small fix for geometry state recovery in VMC; The index of the geometry state belonging to a track is now reset. properly when the TMCManagerStack is notified on the restored geometry.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3882:166,availability,restor,restored,166,Small fix for geometry state recovery in VMC; The index of the geometry state belonging to a track is now reset. properly when the TMCManagerStack is notified on the restored geometry.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3882:29,deployability,recov,recovery,29,Small fix for geometry state recovery in VMC; The index of the geometry state belonging to a track is now reset. properly when the TMCManagerStack is notified on the restored geometry.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3882:23,integrability,state,state,23,Small fix for geometry state recovery in VMC; The index of the geometry state belonging to a track is now reset. properly when the TMCManagerStack is notified on the restored geometry.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3882:72,integrability,state,state,72,Small fix for geometry state recovery in VMC; The index of the geometry state belonging to a track is now reset. properly when the TMCManagerStack is notified on the restored geometry.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3882:29,reliability,recov,recovery,29,Small fix for geometry state recovery in VMC; The index of the geometry state belonging to a track is now reset. properly when the TMCManagerStack is notified on the restored geometry.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3882:166,reliability,restor,restored,166,Small fix for geometry state recovery in VMC; The index of the geometry state belonging to a track is now reset. properly when the TMCManagerStack is notified on the restored geometry.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3882:29,safety,recov,recovery,29,Small fix for geometry state recovery in VMC; The index of the geometry state belonging to a track is now reset. properly when the TMCManagerStack is notified on the restored geometry.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3882:29,security,recov,recovery,29,Small fix for geometry state recovery in VMC; The index of the geometry state belonging to a track is now reset. properly when the TMCManagerStack is notified on the restored geometry.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3882
https://github.com/root-project/root/pull/3883:29,interoperability,Format,Format,29,Replace snprintf by TString::Format in THistPainter; Suppress gcc9 warnings in THistPainter. Simplify the code. Provides a better fix for very long stats parameters names.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3883
https://github.com/root-project/root/pull/3883:154,modifiability,paramet,parameters,154,Replace snprintf by TString::Format in THistPainter; Suppress gcc9 warnings in THistPainter. Simplify the code. Provides a better fix for very long stats parameters names.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3883
https://github.com/root-project/root/pull/3883:93,testability,Simpl,Simplify,93,Replace snprintf by TString::Format in THistPainter; Suppress gcc9 warnings in THistPainter. Simplify the code. Provides a better fix for very long stats parameters names.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3883
https://github.com/root-project/root/pull/3883:93,usability,Simpl,Simplify,93,Replace snprintf by TString::Format in THistPainter; Suppress gcc9 warnings in THistPainter. Simplify the code. Provides a better fix for very long stats parameters names.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3883
https://github.com/root-project/root/pull/3884:4,deployability,build,building,4,Fix building RNTuple in the absence of RDataFrame;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3884
https://github.com/root-project/root/pull/3885:0,deployability,Updat,Update,0,"Update JSROOT and ui5 code; RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. Provide minimal browser.cxx tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3885
https://github.com/root-project/root/pull/3885:164,deployability,version,version,164,"Update JSROOT and ui5 code; RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. Provide minimal browser.cxx tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3885
https://github.com/root-project/root/pull/3885:59,integrability,compon,component,59,"Update JSROOT and ui5 code; RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. Provide minimal browser.cxx tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3885
https://github.com/root-project/root/pull/3885:164,integrability,version,version,164,"Update JSROOT and ui5 code; RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. Provide minimal browser.cxx tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3885
https://github.com/root-project/root/pull/3885:59,interoperability,compon,component,59,"Update JSROOT and ui5 code; RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. Provide minimal browser.cxx tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3885
https://github.com/root-project/root/pull/3885:59,modifiability,compon,component,59,"Update JSROOT and ui5 code; RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. Provide minimal browser.cxx tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3885
https://github.com/root-project/root/pull/3885:164,modifiability,version,version,164,"Update JSROOT and ui5 code; RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. Provide minimal browser.cxx tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3885
https://github.com/root-project/root/pull/3885:187,reliability,doe,does,187,"Update JSROOT and ui5 code; RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. Provide minimal browser.cxx tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3885
https://github.com/root-project/root/pull/3885:0,safety,Updat,Update,0,"Update JSROOT and ui5 code; RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. Provide minimal browser.cxx tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3885
https://github.com/root-project/root/pull/3885:0,security,Updat,Update,0,"Update JSROOT and ui5 code; RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. Provide minimal browser.cxx tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3885
https://github.com/root-project/root/pull/3885:221,usability,minim,minimal,221,"Update JSROOT and ui5 code; RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. Provide minimal browser.cxx tutorial",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3885
https://github.com/root-project/root/pull/3886:0,deployability,Updat,Update,0,"Update JSROOT and ui5 code, v6.18; * RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. * Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. * Provide minimal browser.cxx tutorial. Cherry-pick of https://github.com/root-project/root/pull/3885",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3886
https://github.com/root-project/root/pull/3886:175,deployability,version,version,175,"Update JSROOT and ui5 code, v6.18; * RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. * Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. * Provide minimal browser.cxx tutorial. Cherry-pick of https://github.com/root-project/root/pull/3885",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3886
https://github.com/root-project/root/pull/3886:68,integrability,compon,component,68,"Update JSROOT and ui5 code, v6.18; * RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. * Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. * Provide minimal browser.cxx tutorial. Cherry-pick of https://github.com/root-project/root/pull/3885",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3886
https://github.com/root-project/root/pull/3886:175,integrability,version,version,175,"Update JSROOT and ui5 code, v6.18; * RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. * Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. * Provide minimal browser.cxx tutorial. Cherry-pick of https://github.com/root-project/root/pull/3885",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3886
https://github.com/root-project/root/pull/3886:68,interoperability,compon,component,68,"Update JSROOT and ui5 code, v6.18; * RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. * Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. * Provide minimal browser.cxx tutorial. Cherry-pick of https://github.com/root-project/root/pull/3885",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3886
https://github.com/root-project/root/pull/3886:68,modifiability,compon,component,68,"Update JSROOT and ui5 code, v6.18; * RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. * Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. * Provide minimal browser.cxx tutorial. Cherry-pick of https://github.com/root-project/root/pull/3885",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3886
https://github.com/root-project/root/pull/3886:175,modifiability,version,version,175,"Update JSROOT and ui5 code, v6.18; * RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. * Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. * Provide minimal browser.cxx tutorial. Cherry-pick of https://github.com/root-project/root/pull/3885",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3886
https://github.com/root-project/root/pull/3886:198,reliability,doe,does,198,"Update JSROOT and ui5 code, v6.18; * RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. * Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. * Provide minimal browser.cxx tutorial. Cherry-pick of https://github.com/root-project/root/pull/3885",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3886
https://github.com/root-project/root/pull/3886:0,safety,Updat,Update,0,"Update JSROOT and ui5 code, v6.18; * RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. * Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. * Provide minimal browser.cxx tutorial. Cherry-pick of https://github.com/root-project/root/pull/3885",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3886
https://github.com/root-project/root/pull/3886:0,security,Updat,Update,0,"Update JSROOT and ui5 code, v6.18; * RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. * Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. * Provide minimal browser.cxx tutorial. Cherry-pick of https://github.com/root-project/root/pull/3885",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3886
https://github.com/root-project/root/pull/3886:234,usability,minim,minimal,234,"Update JSROOT and ui5 code, v6.18; * RBrowser requires ""codeviewer"" component, which was not provided in openui5.tar.gz tarball. * Also when using openui5 from web, use fixed version 1.64.1, latest does not work for us yet. * Provide minimal browser.cxx tutorial. Cherry-pick of https://github.com/root-project/root/pull/3885",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3886
https://github.com/root-project/root/pull/3888:36,availability,state,statements,36,[cling] Do not allow single line if statements.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3888
https://github.com/root-project/root/pull/3888:36,integrability,state,statements,36,[cling] Do not allow single line if statements.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3888
https://github.com/root-project/root/pull/3889:57,deployability,patch,patch,57,[tcling] Check if the triggerFunc is in a library.; This patch should fix an assert in the incrementals.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3889
https://github.com/root-project/root/pull/3889:57,safety,patch,patch,57,[tcling] Check if the triggerFunc is in a library.; This patch should fix an assert in the incrementals.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3889
https://github.com/root-project/root/pull/3889:57,security,patch,patch,57,[tcling] Check if the triggerFunc is in a library.; This patch should fix an assert in the incrementals.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3889
https://github.com/root-project/root/pull/3889:77,testability,assert,assert,77,[tcling] Check if the triggerFunc is in a library.; This patch should fix an assert in the incrementals.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3889
https://github.com/root-project/root/pull/3891:140,modifiability,extens,extension,140,[io] Teach TMemFile to work with regions with no extra memory copy; This is useful for moving the rdict files into the cxxmodule file as an extension. The relevant PR is coming soon.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:55,performance,memor,memory,55,[io] Teach TMemFile to work with regions with no extra memory copy; This is useful for moving the rdict files into the cxxmodule file as an extension. The relevant PR is coming soon.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3891:55,usability,memor,memory,55,[io] Teach TMemFile to work with regions with no extra memory copy; This is useful for moving the rdict files into the cxxmodule file as an extension. The relevant PR is coming soon.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3891
https://github.com/root-project/root/pull/3892:0,deployability,Instal,Install,0,"Install the modules, pcms, and rootmap files in the bin directory on …; …Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3892
https://github.com/root-project/root/pull/3892:12,deployability,modul,modules,12,"Install the modules, pcms, and rootmap files in the bin directory on …; …Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3892
https://github.com/root-project/root/pull/3892:12,modifiability,modul,modules,12,"Install the modules, pcms, and rootmap files in the bin directory on …; …Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3892
https://github.com/root-project/root/pull/3892:12,safety,modul,modules,12,"Install the modules, pcms, and rootmap files in the bin directory on …; …Windows",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3892
https://github.com/root-project/root/pull/3893:150,availability,operat,operator,150,Fix memory leak when fitting histograms using linear fitter; This fixes a memory leak when fitting using functions built from expression with special operator ++. (a special case of Linear fitter). . The leak was present when fitting both histograms and all types of graphs. This PR fixes ROOT-10147,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3893
https://github.com/root-project/root/pull/3893:4,performance,memor,memory,4,Fix memory leak when fitting histograms using linear fitter; This fixes a memory leak when fitting using functions built from expression with special operator ++. (a special case of Linear fitter). . The leak was present when fitting both histograms and all types of graphs. This PR fixes ROOT-10147,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3893
https://github.com/root-project/root/pull/3893:74,performance,memor,memory,74,Fix memory leak when fitting histograms using linear fitter; This fixes a memory leak when fitting using functions built from expression with special operator ++. (a special case of Linear fitter). . The leak was present when fitting both histograms and all types of graphs. This PR fixes ROOT-10147,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3893
https://github.com/root-project/root/pull/3893:4,usability,memor,memory,4,Fix memory leak when fitting histograms using linear fitter; This fixes a memory leak when fitting using functions built from expression with special operator ++. (a special case of Linear fitter). . The leak was present when fitting both histograms and all types of graphs. This PR fixes ROOT-10147,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3893
https://github.com/root-project/root/pull/3893:74,usability,memor,memory,74,Fix memory leak when fitting histograms using linear fitter; This fixes a memory leak when fitting using functions built from expression with special operator ++. (a special case of Linear fitter). . The leak was present when fitting both histograms and all types of graphs. This PR fixes ROOT-10147,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3893
https://github.com/root-project/root/pull/3895:0,deployability,Updat,Update,0,Update builtin OpenSSL and TBB;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3895
https://github.com/root-project/root/pull/3895:0,safety,Updat,Update,0,Update builtin OpenSSL and TBB;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3895
https://github.com/root-project/root/pull/3895:0,security,Updat,Update,0,Update builtin OpenSSL and TBB;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3895
https://github.com/root-project/root/pull/3896:50,availability,state,state,50,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:306,availability,state,state,306,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:494,availability,failur,failure,494,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:251,deployability,fail,fail,251,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:339,deployability,patch,patch,339,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:437,deployability,patch,patch,437,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:494,deployability,fail,failure,494,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:538,deployability,patch,patch,538,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:628,deployability,fail,fails,628,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:214,energy efficiency,load,load,214,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:599,energy efficiency,Load,LoadPCM,599,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:50,integrability,state,state,50,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:306,integrability,state,state,306,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:18,modifiability,variab,variables,18,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:214,performance,load,load,214,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:494,performance,failur,failure,494,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:599,performance,Load,LoadPCM,599,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:251,reliability,fail,fail,251,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:472,reliability,doe,does,472,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:494,reliability,fail,failure,494,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:628,reliability,fail,fails,628,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:284,safety,avoid,avoiding,284,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:339,safety,patch,patch,339,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:421,safety,test,tested,421,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:437,safety,patch,patch,437,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:489,safety,test,test,489,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:538,safety,patch,patch,538,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:587,safety,avoid,avoided,587,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:623,safety,test,test,623,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:339,security,patch,patch,339,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:437,security,patch,patch,437,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:538,security,patch,patch,538,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:326,testability,assert,assert,326,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:371,testability,assert,assert,371,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:421,testability,test,tested,421,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:453,testability,assert,assert,453,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:489,testability,test,test,489,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:623,testability,test,test,623,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3896:38,usability,clear,clearly,38,"[tcling] Use more variables to denote clearly the state and intent.; We might be in a situation where we linked the library into an executable and. our trigger function is inside it. There is no point in trying to load rdict. and pcm files as it will fail. In that case we exit early avoiding the. invalid state pointed by an assert. This patch is another try to fix the assert in the incrementals. @Axel-Naumann, I have tested and this patch fixes the assert. However it does not fix the test failure. I checked with a local alternative patch which did not have the early exit but just avoided the LoadPCM section and the test fails in the same way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3896
https://github.com/root-project/root/pull/3898:78,deployability,patch,patches,78,[Math][ROOT-10131] Fix gcc9 warnings (-Wdeprecated-copy); PR against v6-18-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3898
https://github.com/root-project/root/pull/3898:78,safety,patch,patches,78,[Math][ROOT-10131] Fix gcc9 warnings (-Wdeprecated-copy); PR against v6-18-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3898
https://github.com/root-project/root/pull/3898:78,security,patch,patches,78,[Math][ROOT-10131] Fix gcc9 warnings (-Wdeprecated-copy); PR against v6-18-00-patches,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3898
https://github.com/root-project/root/pull/3899:96,deployability,automat,automatically,96,"[RF] Trigger collection of histograms in HistFactory.; HistFactory normally collects histograms automatically, but not if. `HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace` is used. This commit fixes this defect, and adds sanity checks. ROOT-10162. (cherry picked from commit 0f59f6b678ddbd95df0a1319eabbe4772b4b7541)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3899
https://github.com/root-project/root/pull/3899:230,safety,sanit,sanity,230,"[RF] Trigger collection of histograms in HistFactory.; HistFactory normally collects histograms automatically, but not if. `HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace` is used. This commit fixes this defect, and adds sanity checks. ROOT-10162. (cherry picked from commit 0f59f6b678ddbd95df0a1319eabbe4772b4b7541)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3899
https://github.com/root-project/root/pull/3899:230,security,sanit,sanity,230,"[RF] Trigger collection of histograms in HistFactory.; HistFactory normally collects histograms automatically, but not if. `HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace` is used. This commit fixes this defect, and adds sanity checks. ROOT-10162. (cherry picked from commit 0f59f6b678ddbd95df0a1319eabbe4772b4b7541)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3899
https://github.com/root-project/root/pull/3899:96,testability,automat,automatically,96,"[RF] Trigger collection of histograms in HistFactory.; HistFactory normally collects histograms automatically, but not if. `HistoToWorkspaceFactoryFast::MakeSingleChannelWorkspace` is used. This commit fixes this defect, and adds sanity checks. ROOT-10162. (cherry picked from commit 0f59f6b678ddbd95df0a1319eabbe4772b4b7541)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3899
https://github.com/root-project/root/pull/3901:342,deployability,patch,patches,342,"web geometry viewer: SplitApp with info page; * use m.SplitApp for main layout. * provide info page to draw separate geometry node and extra info. * experimental support of TGeoShape transport to client instead of binary data. * try to transport binary as std::vector<unsigned char> in JSON, ok for small data. * latest JSROOT as in v6-18-00-patches branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3901
https://github.com/root-project/root/pull/3901:103,energy efficiency,draw,draw,103,"web geometry viewer: SplitApp with info page; * use m.SplitApp for main layout. * provide info page to draw separate geometry node and extra info. * experimental support of TGeoShape transport to client instead of binary data. * try to transport binary as std::vector<unsigned char> in JSON, ok for small data. * latest JSROOT as in v6-18-00-patches branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3901
https://github.com/root-project/root/pull/3901:342,safety,patch,patches,342,"web geometry viewer: SplitApp with info page; * use m.SplitApp for main layout. * provide info page to draw separate geometry node and extra info. * experimental support of TGeoShape transport to client instead of binary data. * try to transport binary as std::vector<unsigned char> in JSON, ok for small data. * latest JSROOT as in v6-18-00-patches branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3901
https://github.com/root-project/root/pull/3901:342,security,patch,patches,342,"web geometry viewer: SplitApp with info page; * use m.SplitApp for main layout. * provide info page to draw separate geometry node and extra info. * experimental support of TGeoShape transport to client instead of binary data. * try to transport binary as std::vector<unsigned char> in JSON, ok for small data. * latest JSROOT as in v6-18-00-patches branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3901
https://github.com/root-project/root/pull/3901:162,usability,support,support,162,"web geometry viewer: SplitApp with info page; * use m.SplitApp for main layout. * provide info page to draw separate geometry node and extra info. * experimental support of TGeoShape transport to client instead of binary data. * try to transport binary as std::vector<unsigned char> in JSON, ok for small data. * latest JSROOT as in v6-18-00-patches branch.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3901
https://github.com/root-project/root/pull/3904:59,availability,error,error,59,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message. ; Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3904:249,availability,error,error,249,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message. ; Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3904:65,integrability,messag,message,65,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message. ; Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3904:255,integrability,messag,message,255,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message. ; Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3904:65,interoperability,messag,message,65,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message. ; Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3904:255,interoperability,messag,message,255,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message. ; Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3904:59,performance,error,error,59,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message. ; Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3904:249,performance,error,error,249,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message. ; Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3904:59,safety,error,error,59,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message. ; Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3904:249,safety,error,error,249,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message. ; Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3904:59,usability,error,error,59,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message. ; Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3904:249,usability,error,error,249,Re-Implement methods in TH2Poly from TH1 or TH2 to emit an error message. ; Methods from TH1 that are using GetNbinsX and GetNbinsY that do not make sense for a TH2Poly and will compute sometiung wrong. They are re-implemented now in TH2Poly and an error message is printed. . This fixes ROOT-7139,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3904
https://github.com/root-project/root/pull/3905:43,deployability,integr,integrals,43,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:126,deployability,integr,integrating,126,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:9,integrability,compon,component,9,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:43,integrability,integr,integrals,43,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:74,integrability,configur,configured,74,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:110,integrability,compon,components,110,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:126,integrability,integr,integrating,126,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:169,integrability,compon,components,169,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:249,integrability,compon,components,249,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:9,interoperability,compon,component,9,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:43,interoperability,integr,integrals,43,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:110,interoperability,compon,components,110,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:126,interoperability,integr,integrating,126,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:169,interoperability,compon,components,169,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:249,interoperability,compon,components,249,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:9,modifiability,compon,component,9,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:43,modifiability,integr,integrals,43,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:74,modifiability,configur,configured,74,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:110,modifiability,compon,components,110,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:126,modifiability,integr,integrating,126,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:169,modifiability,compon,components,169,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:249,modifiability,compon,components,249,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:43,reliability,integr,integrals,43,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:126,reliability,integr,integrating,126,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:43,security,integr,integrals,43,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:74,security,configur,configured,74,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:126,security,integr,integrating,126,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:43,testability,integr,integrals,43,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3905:126,testability,integr,integrating,126,[RF] Fix component selection in projection integrals; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3905
https://github.com/root-project/root/pull/3906:112,energy efficiency,Core,Core,112,"[CMake] Make MLP optional, by default ON; this does not try to also remove proof, which is deeply rooted in the Core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3906
https://github.com/root-project/root/pull/3906:47,reliability,doe,does,47,"[CMake] Make MLP optional, by default ON; this does not try to also remove proof, which is deeply rooted in the Core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3906
https://github.com/root-project/root/pull/3907:48,energy efficiency,model,model,48,[TMVA][Experimental] RTensor with new ownership model;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3907
https://github.com/root-project/root/pull/3907:48,security,model,model,48,[TMVA][Experimental] RTensor with new ownership model;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3907
https://github.com/root-project/root/pull/3908:135,deployability,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:22,integrability,compon,component,22,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:83,integrability,configur,configured,83,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:119,integrability,compon,components,119,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:135,integrability,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:178,integrability,compon,components,178,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:258,integrability,compon,components,258,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:22,interoperability,compon,component,22,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:119,interoperability,compon,components,119,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:135,interoperability,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:178,interoperability,compon,components,178,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:258,interoperability,compon,components,258,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:22,modifiability,compon,component,22,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:83,modifiability,configur,configured,83,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:119,modifiability,compon,components,119,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:135,modifiability,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:178,modifiability,compon,components,178,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:258,modifiability,compon,components,258,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:135,reliability,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:83,security,configur,configured,83,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:135,security,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3908:135,testability,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This is meant to fix ROOT-10098.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3908
https://github.com/root-project/root/pull/3909:39,interoperability,format,formatting,39,hist: fix warning in TH1::Fit method + formatting; Introduced by commit https://github.com/root-project/root/commit/610a87c two days ago,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3909
https://github.com/root-project/root/pull/3911:95,deployability,continu,continuation,95,"[metacling & PyROOT] TClingMethodInfo, skip over template instantiations (reloaded); This is a continuation of https://github.com/root-project/root/pull/3858/ with some fixes for the failing tests:. - projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_cintrun. - projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint. - projectroot.roottest.python.basic.roottest_python_basic_overload. - projectroot.roottest.python.cpp.roottest_python_cpp_advanced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3911
https://github.com/root-project/root/pull/3911:183,deployability,fail,failing,183,"[metacling & PyROOT] TClingMethodInfo, skip over template instantiations (reloaded); This is a continuation of https://github.com/root-project/root/pull/3858/ with some fixes for the failing tests:. - projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_cintrun. - projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint. - projectroot.roottest.python.basic.roottest_python_basic_overload. - projectroot.roottest.python.cpp.roottest_python_cpp_advanced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3911
https://github.com/root-project/root/pull/3911:183,reliability,fail,failing,183,"[metacling & PyROOT] TClingMethodInfo, skip over template instantiations (reloaded); This is a continuation of https://github.com/root-project/root/pull/3858/ with some fixes for the failing tests:. - projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_cintrun. - projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint. - projectroot.roottest.python.basic.roottest_python_basic_overload. - projectroot.roottest.python.cpp.roottest_python_cpp_advanced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3911
https://github.com/root-project/root/pull/3911:191,safety,test,tests,191,"[metacling & PyROOT] TClingMethodInfo, skip over template instantiations (reloaded); This is a continuation of https://github.com/root-project/root/pull/3858/ with some fixes for the failing tests:. - projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_cintrun. - projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint. - projectroot.roottest.python.basic.roottest_python_basic_overload. - projectroot.roottest.python.cpp.roottest_python_cpp_advanced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3911
https://github.com/root-project/root/pull/3911:191,testability,test,tests,191,"[metacling & PyROOT] TClingMethodInfo, skip over template instantiations (reloaded); This is a continuation of https://github.com/root-project/root/pull/3858/ with some fixes for the failing tests:. - projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_cintrun. - projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint. - projectroot.roottest.python.basic.roottest_python_basic_overload. - projectroot.roottest.python.cpp.roottest_python_cpp_advanced.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3911
https://github.com/root-project/root/pull/3912:28,availability,error,errors,28,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:133,availability,error,errors,133,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:191,availability,error,errors,191,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:244,availability,error,errors,244,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:172,energy efficiency,model,model,172,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:97,modifiability,paramet,parameters,97,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:28,performance,error,errors,28,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:133,performance,error,errors,133,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:191,performance,error,errors,191,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:244,performance,error,errors,244,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:28,safety,error,errors,28,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:133,safety,error,errors,133,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:191,safety,error,errors,191,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:244,safety,error,errors,244,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:172,security,model,model,172,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:28,usability,error,errors,28,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:133,usability,error,errors,133,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:191,usability,error,errors,191,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3912:244,usability,error,errors,244,"[RF] Set reasonable pre-fit errors for gammas in HistFactory.; When HistFactory constructs gamma parameters, they don't have initial errors. When trying to plot the prefit model, the missing errors will make problems. By assigning the relative errors caused by the constraint terms, pre-fit plots. will succeed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3912
https://github.com/root-project/root/pull/3913:255,deployability,automat,automatically,255,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:5,energy efficiency,Reduc,Reduce,5,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:63,integrability,messag,messages,63,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:114,integrability,messag,message,114,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:122,integrability,topic,topic,122,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:162,integrability,messag,message,162,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:211,integrability,messag,messages,211,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:238,integrability,messag,messages,238,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:63,interoperability,messag,messages,63,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:114,interoperability,messag,message,114,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:162,interoperability,messag,message,162,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:211,interoperability,messag,messages,211,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:238,interoperability,messag,messages,238,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:255,testability,automat,automatically,255,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3913:305,usability,Document,Documentation,305,"[RF] Reduce verbosity of HistFactory.; HistFactory is spamming messages to cout when hist2workspace runs. - A new message topic HistFactory was added to RooFit's message streams,. which allows to suppress these messages. - ObjectHandling messages are now automatically suppressed when HistFactory runs. - Documentation of ParamHistFunction improved a bit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3913
https://github.com/root-project/root/pull/3916:28,modifiability,pac,packed,28,"json: fix for reading array packed as JSON object { ""$arr"": ... }; Same fix will be provided for master with new feature PR",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3916
https://github.com/root-project/root/pull/3917:14,deployability,build,build,14,"Remove unused build options that have no visible effect; These options' values are not used anywhere, so they are effectively no-ops, except for `cling`, which must be enabled otherwise ROOT won't compile.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3917
https://github.com/root-project/root/pull/3917:134,safety,except,except,134,"Remove unused build options that have no visible effect; These options' values are not used anywhere, so they are effectively no-ops, except for `cling`, which must be enabled otherwise ROOT won't compile.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3917
https://github.com/root-project/root/pull/3917:114,usability,effectiv,effectively,114,"Remove unused build options that have no visible effect; These options' values are not used anywhere, so they are effectively no-ops, except for `cling`, which must be enabled otherwise ROOT won't compile.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3917
https://github.com/root-project/root/pull/3919:68,deployability,contain,contains,68,"No High Resolution for TImage in tutorials; When a tutorial TCanvas contains a TImage, normal resolution should be used otherwise the image produced is wrong.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3919
https://github.com/root-project/root/pull/3920:111,modifiability,inherit,inherited,111,"Implement TImage:ls(); Because the TImage Title has a special use (not used to store a title), the ls() method inherited from TObject crashed.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3920
https://github.com/root-project/root/pull/3922:580,availability,error,error,580,"RooFit plotting enhancements; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects. However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas). However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit. With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:128,energy efficiency,current,currently,128,"RooFit plotting enhancements; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects. However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas). However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit. With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:212,energy efficiency,draw,drawn,212,"RooFit plotting enhancements; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects. However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas). However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit. With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:285,energy efficiency,draw,drawn,285,"RooFit plotting enhancements; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects. However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas). However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit. With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:606,energy efficiency,draw,draw,606,"RooFit plotting enhancements; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects. However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas). However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit. With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:367,performance,time,times,367,"RooFit plotting enhancements; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects. However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas). However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit. With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:580,performance,error,error,580,"RooFit plotting enhancements; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects. However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas). However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit. With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:580,safety,error,error,580,"RooFit plotting enhancements; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects. However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas). However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit. With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:84,usability,visual,visualize,84,"RooFit plotting enhancements; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects. However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas). However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit. With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3922:580,usability,error,error,580,"RooFit plotting enhancements; The RooFit ""plotOn"" plotting engine is very useful to visualize RooFit objects. However, there is currently a strict separation between ""Data-like"" objects (which can only really be drawn with points) and ""Function-like"" objects (which can only really be drawn as lines and areas). However, in techniques like unfolding, ""data"" is often times corrected data, and hence might actually be a function-type object in RooFit. With this PR, functionality is added to RooAbsReal::plotOn that allows to plot functions ""data-like"", with data points including error bars when using the draw option ""P"", which was previously unusable.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3922
https://github.com/root-project/root/pull/3923:43,deployability,Updat,Update,43,Implementation of LSTM and GRU Layers; ### Update: Week 1 . - Implemented class structure for LSTM . - Implemented forward pass for LSTM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3923
https://github.com/root-project/root/pull/3923:31,modifiability,Layer,Layers,31,Implementation of LSTM and GRU Layers; ### Update: Week 1 . - Implemented class structure for LSTM . - Implemented forward pass for LSTM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3923
https://github.com/root-project/root/pull/3923:43,safety,Updat,Update,43,Implementation of LSTM and GRU Layers; ### Update: Week 1 . - Implemented class structure for LSTM . - Implemented forward pass for LSTM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3923
https://github.com/root-project/root/pull/3923:43,security,Updat,Update,43,Implementation of LSTM and GRU Layers; ### Update: Week 1 . - Implemented class structure for LSTM . - Implemented forward pass for LSTM.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3923
https://github.com/root-project/root/pull/3924:83,deployability,contain,contains,83,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:574,deployability,updat,updates,574,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:303,energy efficiency,cpu,cpu,303,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:374,energy efficiency,cpu,cpu,374,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:315,interoperability,architectur,architecture,315,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:386,interoperability,architectur,architecture,386,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:453,interoperability,architectur,architecture,453,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:42,modifiability,Layer,Layers,42,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:166,modifiability,layer,layers,166,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:293,modifiability,layer,layer,293,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:364,modifiability,layer,layer,364,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:303,performance,cpu,cpu,303,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:374,performance,cpu,cpu,374,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:338,safety,test,tests,338,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:409,safety,test,tests,409,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:574,safety,updat,updates,574,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:574,security,updat,updates,574,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:338,testability,test,tests,338,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3924:409,testability,test,tests,409,[GSoC][WIP]Implementation of LSTM and GRU Layers; [Work Product] This pull request contains the code pertaining to the GSoC 2019 project [Development of LSTM and GRU layers in TMVA](https://summerofcode.withgoogle.com/projects/#5680527699345408). It implements the following features:. - LSTM layer for cpu and ref architecture types and tests for the same. - GRU layer for cpu and ref architecture types and tests for the same. Implementation for CUDA architecture is still WIP. The last commit is **Added comments**(9c94d63). These features are yet to be merged. Detailed updates can be found on my [blog post](https://surya2191997.github.io/),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3924
https://github.com/root-project/root/pull/3926:23,deployability,version,version,23,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:70,deployability,instal,installed,70,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:117,deployability,version,version,117,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:161,deployability,version,version,161,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:206,deployability,version,version,206,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:274,deployability,version,version,274,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:23,integrability,version,version,23,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:117,integrability,version,version,117,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:161,integrability,version,version,161,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:206,integrability,version,version,206,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:274,integrability,version,version,274,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:23,modifiability,version,version,23,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:117,modifiability,version,version,117,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:161,modifiability,version,version,161,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:206,modifiability,version,version,206,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:274,modifiability,version,version,274,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:4,safety,detect,detection,4,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:169,safety,detect,detection,169,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:4,security,detect,detection,4,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3926:169,security,detect,detection,169,"Fix detection of clang version on macOS for builtin TBB; When CUDA is installed on macOS, `clang -v` prints also the version of CUDA that is found, which breaks version detection. As a workaround, `clang --version` prints the same information, but without printing the CUDA version. Fixes: [ROOT-9678](https://sft.its.cern.ch/jira/browse/ROOT-9678).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3926
https://github.com/root-project/root/pull/3927:44,availability,operat,operator,44,Use default copy constructor and assignment operator for Plane3D; Fixes GCC 9 warnings. See http://cdash.cern.ch/viewBuildError.php?type=1&buildid=667454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3927
https://github.com/root-project/root/pull/3927:139,deployability,build,buildid,139,Use default copy constructor and assignment operator for Plane3D; Fixes GCC 9 warnings. See http://cdash.cern.ch/viewBuildError.php?type=1&buildid=667454.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3927
https://github.com/root-project/root/pull/3928:322,availability,Restor,RestoreObject,322,json: implement base64 coding for std::vector ; For some applications large binary buffer need to be transferred . with JSON. Standard solution is base64 coding. It can be enabled by. JSON_base64 string in class comments or with kBase64 = 30 value in. compress parameter. Also provide convenience methods `StoreObject()`/`RestoreObject()`. to be able configure different TBufferJSON properties before streaming objects. Only for special use-cases. Also include fixe from #3916,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3928
https://github.com/root-project/root/pull/3928:83,integrability,buffer,buffer,83,json: implement base64 coding for std::vector ; For some applications large binary buffer need to be transferred . with JSON. Standard solution is base64 coding. It can be enabled by. JSON_base64 string in class comments or with kBase64 = 30 value in. compress parameter. Also provide convenience methods `StoreObject()`/`RestoreObject()`. to be able configure different TBufferJSON properties before streaming objects. Only for special use-cases. Also include fixe from #3916,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3928
https://github.com/root-project/root/pull/3928:351,integrability,configur,configure,351,json: implement base64 coding for std::vector ; For some applications large binary buffer need to be transferred . with JSON. Standard solution is base64 coding. It can be enabled by. JSON_base64 string in class comments or with kBase64 = 30 value in. compress parameter. Also provide convenience methods `StoreObject()`/`RestoreObject()`. to be able configure different TBufferJSON properties before streaming objects. Only for special use-cases. Also include fixe from #3916,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3928
https://github.com/root-project/root/pull/3928:126,interoperability,Standard,Standard,126,json: implement base64 coding for std::vector ; For some applications large binary buffer need to be transferred . with JSON. Standard solution is base64 coding. It can be enabled by. JSON_base64 string in class comments or with kBase64 = 30 value in. compress parameter. Also provide convenience methods `StoreObject()`/`RestoreObject()`. to be able configure different TBufferJSON properties before streaming objects. Only for special use-cases. Also include fixe from #3916,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3928
https://github.com/root-project/root/pull/3928:261,modifiability,paramet,parameter,261,json: implement base64 coding for std::vector ; For some applications large binary buffer need to be transferred . with JSON. Standard solution is base64 coding. It can be enabled by. JSON_base64 string in class comments or with kBase64 = 30 value in. compress parameter. Also provide convenience methods `StoreObject()`/`RestoreObject()`. to be able configure different TBufferJSON properties before streaming objects. Only for special use-cases. Also include fixe from #3916,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3928
https://github.com/root-project/root/pull/3928:351,modifiability,configur,configure,351,json: implement base64 coding for std::vector ; For some applications large binary buffer need to be transferred . with JSON. Standard solution is base64 coding. It can be enabled by. JSON_base64 string in class comments or with kBase64 = 30 value in. compress parameter. Also provide convenience methods `StoreObject()`/`RestoreObject()`. to be able configure different TBufferJSON properties before streaming objects. Only for special use-cases. Also include fixe from #3916,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3928
https://github.com/root-project/root/pull/3928:322,reliability,Restor,RestoreObject,322,json: implement base64 coding for std::vector ; For some applications large binary buffer need to be transferred . with JSON. Standard solution is base64 coding. It can be enabled by. JSON_base64 string in class comments or with kBase64 = 30 value in. compress parameter. Also provide convenience methods `StoreObject()`/`RestoreObject()`. to be able configure different TBufferJSON properties before streaming objects. Only for special use-cases. Also include fixe from #3916,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3928
https://github.com/root-project/root/pull/3928:351,security,configur,configure,351,json: implement base64 coding for std::vector ; For some applications large binary buffer need to be transferred . with JSON. Standard solution is base64 coding. It can be enabled by. JSON_base64 string in class comments or with kBase64 = 30 value in. compress parameter. Also provide convenience methods `StoreObject()`/`RestoreObject()`. to be able configure different TBufferJSON properties before streaming objects. Only for special use-cases. Also include fixe from #3916,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3928
https://github.com/root-project/root/pull/3934:32,usability,document,documentation,32,[Doc] More concise TClass class documentation;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3934
https://github.com/root-project/root/pull/3936:0,safety,Avoid,Avoid,0,Avoid complaint about external changes when calling TTreeReader::GetEntries(true).; . See https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484/2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3936
https://github.com/root-project/root/pull/3936:6,safety,compl,complaint,6,Avoid complaint about external changes when calling TTreeReader::GetEntries(true).; . See https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484/2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3936
https://github.com/root-project/root/pull/3936:6,security,compl,complaint,6,Avoid complaint about external changes when calling TTreeReader::GetEntries(true).; . See https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484/2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3936
https://github.com/root-project/root/pull/3937:0,safety,Avoid,Avoid,0,Avoid complaint about external changes when calling TTreeReader::GetEntries(true).; . See https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484/2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3937
https://github.com/root-project/root/pull/3937:6,safety,compl,complaint,6,Avoid complaint about external changes when calling TTreeReader::GetEntries(true).; . See https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484/2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3937
https://github.com/root-project/root/pull/3937:6,security,compl,complaint,6,Avoid complaint about external changes when calling TTreeReader::GetEntries(true).; . See https://root-forum.cern.ch/t/warning-in-ttreereader-with-tchain/34484/2.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3937
https://github.com/root-project/root/pull/3938:80,reliability,doe,does,80,"Eve7: bugfixes for offline case; When running eve7 application snapshot, server does not have functionality at all. Therefore special highlight or selection requests cannot be processed. Also add simple checks when selection is not possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3938
https://github.com/root-project/root/pull/3938:196,testability,simpl,simple,196,"Eve7: bugfixes for offline case; When running eve7 application snapshot, server does not have functionality at all. Therefore special highlight or selection requests cannot be processed. Also add simple checks when selection is not possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3938
https://github.com/root-project/root/pull/3938:196,usability,simpl,simple,196,"Eve7: bugfixes for offline case; When running eve7 application snapshot, server does not have functionality at all. Therefore special highlight or selection requests cannot be processed. Also add simple checks when selection is not possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3938
https://github.com/root-project/root/pull/3939:115,reliability,doe,does,115,"Eve7: bugfixes for offline case v6.18; Same as #3938, but for 6.18. When running eve7 application snapshot, server does not have functionality at all. Therefore special highlight or selection requests cannot be processed. Also add simple checks when selection is not possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3939
https://github.com/root-project/root/pull/3939:231,testability,simpl,simple,231,"Eve7: bugfixes for offline case v6.18; Same as #3938, but for 6.18. When running eve7 application snapshot, server does not have functionality at all. Therefore special highlight or selection requests cannot be processed. Also add simple checks when selection is not possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3939
https://github.com/root-project/root/pull/3939:231,usability,simpl,simple,231,"Eve7: bugfixes for offline case v6.18; Same as #3938, but for 6.18. When running eve7 application snapshot, server does not have functionality at all. Therefore special highlight or selection requests cannot be processed. Also add simple checks when selection is not possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3939
https://github.com/root-project/root/pull/3941:13,usability,document,documentation,13,[RF] Improve documentation for projecting Data.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3941
https://github.com/root-project/root/pull/3942:0,deployability,Updat,Update,0,Update FindCFITSIO.cmake; Add a fix for [ROOT-9755](https://sft.its.cern.ch/jira/browse/ROOT-9755) by linking explicitly against libcurl for newer versions of cfistio that require it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3942
https://github.com/root-project/root/pull/3942:147,deployability,version,versions,147,Update FindCFITSIO.cmake; Add a fix for [ROOT-9755](https://sft.its.cern.ch/jira/browse/ROOT-9755) by linking explicitly against libcurl for newer versions of cfistio that require it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3942
https://github.com/root-project/root/pull/3942:147,integrability,version,versions,147,Update FindCFITSIO.cmake; Add a fix for [ROOT-9755](https://sft.its.cern.ch/jira/browse/ROOT-9755) by linking explicitly against libcurl for newer versions of cfistio that require it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3942
https://github.com/root-project/root/pull/3942:147,modifiability,version,versions,147,Update FindCFITSIO.cmake; Add a fix for [ROOT-9755](https://sft.its.cern.ch/jira/browse/ROOT-9755) by linking explicitly against libcurl for newer versions of cfistio that require it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3942
https://github.com/root-project/root/pull/3942:0,safety,Updat,Update,0,Update FindCFITSIO.cmake; Add a fix for [ROOT-9755](https://sft.its.cern.ch/jira/browse/ROOT-9755) by linking explicitly against libcurl for newer versions of cfistio that require it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3942
https://github.com/root-project/root/pull/3942:0,security,Updat,Update,0,Update FindCFITSIO.cmake; Add a fix for [ROOT-9755](https://sft.its.cern.ch/jira/browse/ROOT-9755) by linking explicitly against libcurl for newer versions of cfistio that require it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3942
https://github.com/root-project/root/pull/3943:34,safety,test,tests,34,Disable ROOT history when running tests via ctest; Fixes [ROOT-7836](https://sft.its.cern.ch/jira/browse/ROOT-7836).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3943
https://github.com/root-project/root/pull/3943:34,testability,test,tests,34,Disable ROOT history when running tests via ctest; Fixes [ROOT-7836](https://sft.its.cern.ch/jira/browse/ROOT-7836).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3943
https://github.com/root-project/root/pull/3944:27,availability,redund,redundant,27,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3944
https://github.com/root-project/root/pull/3944:27,deployability,redundan,redundant,27,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3944
https://github.com/root-project/root/pull/3944:62,deployability,version,version,62,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3944
https://github.com/root-project/root/pull/3944:62,integrability,version,version,62,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3944
https://github.com/root-project/root/pull/3944:62,modifiability,version,version,62,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3944
https://github.com/root-project/root/pull/3944:27,reliability,redundan,redundant,27,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3944
https://github.com/root-project/root/pull/3944:27,safety,redund,redundant,27,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3944
https://github.com/root-project/root/pull/3945:27,availability,redund,redundant,27,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3945
https://github.com/root-project/root/pull/3945:27,deployability,redundan,redundant,27,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3945
https://github.com/root-project/root/pull/3945:62,deployability,version,version,62,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3945
https://github.com/root-project/root/pull/3945:62,integrability,version,version,62,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3945
https://github.com/root-project/root/pull/3945:62,modifiability,version,version,62,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3945
https://github.com/root-project/root/pull/3945:27,reliability,redundan,redundant,27,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3945
https://github.com/root-project/root/pull/3945:27,safety,redund,redundant,27,Address gcc9 warning about redundant move.; However older gcc version can not implicitly convert a unique_ptr for derived class to. a unique_ptr for the base class of the derived class.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3945
https://github.com/root-project/root/pull/3946:119,energy efficiency,current,current,119,"Reset the instance cache at the beginning of each entry.; Previously it detected the change of entry by comparing the 'current' instance to the last 'instance'. recorded. If all instance are used, this worked perfectly. If the instance are used sparsely (eg. with. selection in TTree::Draw) then from entry to the other, the 'first' instance used in an entry might be later/higher. than the last 'instance' used in the previous entry. This corrects the behavior introduced in 064e0a7d49b08e03667f9312421b6fb5b8d82285. This fixes ROOT-10170",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3946
https://github.com/root-project/root/pull/3946:285,energy efficiency,Draw,Draw,285,"Reset the instance cache at the beginning of each entry.; Previously it detected the change of entry by comparing the 'current' instance to the last 'instance'. recorded. If all instance are used, this worked perfectly. If the instance are used sparsely (eg. with. selection in TTree::Draw) then from entry to the other, the 'first' instance used in an entry might be later/higher. than the last 'instance' used in the previous entry. This corrects the behavior introduced in 064e0a7d49b08e03667f9312421b6fb5b8d82285. This fixes ROOT-10170",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3946
https://github.com/root-project/root/pull/3946:19,performance,cach,cache,19,"Reset the instance cache at the beginning of each entry.; Previously it detected the change of entry by comparing the 'current' instance to the last 'instance'. recorded. If all instance are used, this worked perfectly. If the instance are used sparsely (eg. with. selection in TTree::Draw) then from entry to the other, the 'first' instance used in an entry might be later/higher. than the last 'instance' used in the previous entry. This corrects the behavior introduced in 064e0a7d49b08e03667f9312421b6fb5b8d82285. This fixes ROOT-10170",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3946
https://github.com/root-project/root/pull/3946:72,safety,detect,detected,72,"Reset the instance cache at the beginning of each entry.; Previously it detected the change of entry by comparing the 'current' instance to the last 'instance'. recorded. If all instance are used, this worked perfectly. If the instance are used sparsely (eg. with. selection in TTree::Draw) then from entry to the other, the 'first' instance used in an entry might be later/higher. than the last 'instance' used in the previous entry. This corrects the behavior introduced in 064e0a7d49b08e03667f9312421b6fb5b8d82285. This fixes ROOT-10170",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3946
https://github.com/root-project/root/pull/3946:72,security,detect,detected,72,"Reset the instance cache at the beginning of each entry.; Previously it detected the change of entry by comparing the 'current' instance to the last 'instance'. recorded. If all instance are used, this worked perfectly. If the instance are used sparsely (eg. with. selection in TTree::Draw) then from entry to the other, the 'first' instance used in an entry might be later/higher. than the last 'instance' used in the previous entry. This corrects the behavior introduced in 064e0a7d49b08e03667f9312421b6fb5b8d82285. This fixes ROOT-10170",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3946
https://github.com/root-project/root/pull/3946:453,usability,behavi,behavior,453,"Reset the instance cache at the beginning of each entry.; Previously it detected the change of entry by comparing the 'current' instance to the last 'instance'. recorded. If all instance are used, this worked perfectly. If the instance are used sparsely (eg. with. selection in TTree::Draw) then from entry to the other, the 'first' instance used in an entry might be later/higher. than the last 'instance' used in the previous entry. This corrects the behavior introduced in 064e0a7d49b08e03667f9312421b6fb5b8d82285. This fixes ROOT-10170",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3946
https://github.com/root-project/root/pull/3947:46,performance,I/O,I/O,46,[GSoC] Add ZSTD compression algorithm to ROOT I/O;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3947
https://github.com/root-project/root/pull/3948:135,deployability,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:22,integrability,compon,component,22,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:83,integrability,configur,configured,83,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:119,integrability,compon,components,119,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:135,integrability,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:178,integrability,compon,components,178,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:258,integrability,compon,components,258,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:22,interoperability,compon,component,22,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:119,interoperability,compon,components,119,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:135,interoperability,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:178,interoperability,compon,components,178,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:258,interoperability,compon,components,258,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:22,modifiability,compon,component,22,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:83,modifiability,configur,configured,83,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:119,modifiability,compon,components,119,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:135,modifiability,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:178,modifiability,compon,components,178,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:258,modifiability,compon,components,258,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:135,reliability,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:83,security,configur,configured,83,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:135,security,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3948:135,testability,integr,integrating,135,[RF] Disable forceful component selection in RooRealIntegral.; RooRealIntegral was configured to forcefully select all components when integrating. This is not desired if single components should be projected out. The default has been. set to not select all components. This fixes ROOT-10098. (cherry picked from commit 68f2aea99f92e9e90e345658d154164c3c96fa82),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3948
https://github.com/root-project/root/pull/3950:178,deployability,updat,updated,178,"[RF] Disable RooJohnson unit test because of TFormula v5 bug.; Because of ROOT-10144, the unit test for RooJohnson crashes occasionally. Unless TFormula v5 is fixed or RooFit is updated to use TFormula v6 (ROOT-10164),. the test needs to stay disabled. This is ROOT-10173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3950
https://github.com/root-project/root/pull/3950:29,safety,test,test,29,"[RF] Disable RooJohnson unit test because of TFormula v5 bug.; Because of ROOT-10144, the unit test for RooJohnson crashes occasionally. Unless TFormula v5 is fixed or RooFit is updated to use TFormula v6 (ROOT-10164),. the test needs to stay disabled. This is ROOT-10173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3950
https://github.com/root-project/root/pull/3950:95,safety,test,test,95,"[RF] Disable RooJohnson unit test because of TFormula v5 bug.; Because of ROOT-10144, the unit test for RooJohnson crashes occasionally. Unless TFormula v5 is fixed or RooFit is updated to use TFormula v6 (ROOT-10164),. the test needs to stay disabled. This is ROOT-10173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3950
https://github.com/root-project/root/pull/3950:178,safety,updat,updated,178,"[RF] Disable RooJohnson unit test because of TFormula v5 bug.; Because of ROOT-10144, the unit test for RooJohnson crashes occasionally. Unless TFormula v5 is fixed or RooFit is updated to use TFormula v6 (ROOT-10164),. the test needs to stay disabled. This is ROOT-10173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3950
https://github.com/root-project/root/pull/3950:224,safety,test,test,224,"[RF] Disable RooJohnson unit test because of TFormula v5 bug.; Because of ROOT-10144, the unit test for RooJohnson crashes occasionally. Unless TFormula v5 is fixed or RooFit is updated to use TFormula v6 (ROOT-10164),. the test needs to stay disabled. This is ROOT-10173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3950
https://github.com/root-project/root/pull/3950:178,security,updat,updated,178,"[RF] Disable RooJohnson unit test because of TFormula v5 bug.; Because of ROOT-10144, the unit test for RooJohnson crashes occasionally. Unless TFormula v5 is fixed or RooFit is updated to use TFormula v6 (ROOT-10164),. the test needs to stay disabled. This is ROOT-10173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3950
https://github.com/root-project/root/pull/3950:24,testability,unit,unit,24,"[RF] Disable RooJohnson unit test because of TFormula v5 bug.; Because of ROOT-10144, the unit test for RooJohnson crashes occasionally. Unless TFormula v5 is fixed or RooFit is updated to use TFormula v6 (ROOT-10164),. the test needs to stay disabled. This is ROOT-10173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3950
https://github.com/root-project/root/pull/3950:29,testability,test,test,29,"[RF] Disable RooJohnson unit test because of TFormula v5 bug.; Because of ROOT-10144, the unit test for RooJohnson crashes occasionally. Unless TFormula v5 is fixed or RooFit is updated to use TFormula v6 (ROOT-10164),. the test needs to stay disabled. This is ROOT-10173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3950
https://github.com/root-project/root/pull/3950:90,testability,unit,unit,90,"[RF] Disable RooJohnson unit test because of TFormula v5 bug.; Because of ROOT-10144, the unit test for RooJohnson crashes occasionally. Unless TFormula v5 is fixed or RooFit is updated to use TFormula v6 (ROOT-10164),. the test needs to stay disabled. This is ROOT-10173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3950
https://github.com/root-project/root/pull/3950:95,testability,test,test,95,"[RF] Disable RooJohnson unit test because of TFormula v5 bug.; Because of ROOT-10144, the unit test for RooJohnson crashes occasionally. Unless TFormula v5 is fixed or RooFit is updated to use TFormula v6 (ROOT-10164),. the test needs to stay disabled. This is ROOT-10173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3950
https://github.com/root-project/root/pull/3950:224,testability,test,test,224,"[RF] Disable RooJohnson unit test because of TFormula v5 bug.; Because of ROOT-10144, the unit test for RooJohnson crashes occasionally. Unless TFormula v5 is fixed or RooFit is updated to use TFormula v6 (ROOT-10164),. the test needs to stay disabled. This is ROOT-10173.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3950
https://github.com/root-project/root/pull/3952:0,safety,Avoid,Avoid,0,Avoid warning about unused typedef/using;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3952
https://github.com/root-project/root/pull/3954:230,integrability,event,event,230,Added TVirtualMCApplication::EndOfEvent():; This function is needed for newly introduced sensitive detectors framework. to provide a hook for a central call to fill ROOT trees before resetting data. in sensitive detector's end of event. It would be nice if it could be still included in 6.18,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3954
https://github.com/root-project/root/pull/3954:99,safety,detect,detectors,99,Added TVirtualMCApplication::EndOfEvent():; This function is needed for newly introduced sensitive detectors framework. to provide a hook for a central call to fill ROOT trees before resetting data. in sensitive detector's end of event. It would be nice if it could be still included in 6.18,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3954
https://github.com/root-project/root/pull/3954:212,safety,detect,detector,212,Added TVirtualMCApplication::EndOfEvent():; This function is needed for newly introduced sensitive detectors framework. to provide a hook for a central call to fill ROOT trees before resetting data. in sensitive detector's end of event. It would be nice if it could be still included in 6.18,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3954
https://github.com/root-project/root/pull/3954:99,security,detect,detectors,99,Added TVirtualMCApplication::EndOfEvent():; This function is needed for newly introduced sensitive detectors framework. to provide a hook for a central call to fill ROOT trees before resetting data. in sensitive detector's end of event. It would be nice if it could be still included in 6.18,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3954
https://github.com/root-project/root/pull/3954:212,security,detect,detector,212,Added TVirtualMCApplication::EndOfEvent():; This function is needed for newly introduced sensitive detectors framework. to provide a hook for a central call to fill ROOT trees before resetting data. in sensitive detector's end of event. It would be nice if it could be still included in 6.18,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3954
https://github.com/root-project/root/pull/3954:133,testability,hook,hook,133,Added TVirtualMCApplication::EndOfEvent():; This function is needed for newly introduced sensitive detectors framework. to provide a hook for a central call to fill ROOT trees before resetting data. in sensitive detector's end of event. It would be nice if it could be still included in 6.18,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3954
https://github.com/root-project/root/pull/3955:199,safety,test,test,199,Add protection in ClipPolygon; In some cases when the polygons are just a few points some of the internal arrays indices got negative values. For instance this was the case with the example $ROOTSYS/test/delaunayTriangulation.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3955
https://github.com/root-project/root/pull/3955:199,testability,test,test,199,Add protection in ClipPolygon; In some cases when the polygons are just a few points some of the internal arrays indices got negative values. For instance this was the case with the example $ROOTSYS/test/delaunayTriangulation.cxx,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3955
https://github.com/root-project/root/pull/3957:56,availability,avail,available,56,"[CMake] Add dataframe option; Because RDataFrame is not available on 32bit, we have to disable the. experimental parts of TMVA which are dependent on it as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:137,deployability,depend,dependent,137,"[CMake] Add dataframe option; Because RDataFrame is not available on 32bit, we have to disable the. experimental parts of TMVA which are dependent on it as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:137,integrability,depend,dependent,137,"[CMake] Add dataframe option; Because RDataFrame is not available on 32bit, we have to disable the. experimental parts of TMVA which are dependent on it as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:137,modifiability,depend,dependent,137,"[CMake] Add dataframe option; Because RDataFrame is not available on 32bit, we have to disable the. experimental parts of TMVA which are dependent on it as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:56,reliability,availab,available,56,"[CMake] Add dataframe option; Because RDataFrame is not available on 32bit, we have to disable the. experimental parts of TMVA which are dependent on it as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:56,safety,avail,available,56,"[CMake] Add dataframe option; Because RDataFrame is not available on 32bit, we have to disable the. experimental parts of TMVA which are dependent on it as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:137,safety,depend,dependent,137,"[CMake] Add dataframe option; Because RDataFrame is not available on 32bit, we have to disable the. experimental parts of TMVA which are dependent on it as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:56,security,availab,available,56,"[CMake] Add dataframe option; Because RDataFrame is not available on 32bit, we have to disable the. experimental parts of TMVA which are dependent on it as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3957:137,testability,depend,dependent,137,"[CMake] Add dataframe option; Because RDataFrame is not available on 32bit, we have to disable the. experimental parts of TMVA which are dependent on it as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3957
https://github.com/root-project/root/pull/3960:19,energy efficiency,load,load,19,[v7tut] Explicitly load libROOTGpadv7: function-autoloading does not work.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3960
https://github.com/root-project/root/pull/3960:19,performance,load,load,19,[v7tut] Explicitly load libROOTGpadv7: function-autoloading does not work.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3960
https://github.com/root-project/root/pull/3960:60,reliability,doe,does,60,[v7tut] Explicitly load libROOTGpadv7: function-autoloading does not work.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3960
https://github.com/root-project/root/pull/3961:164,performance,time,time,164,"Get/SetTimestamp functions with TTimeStamp; bug fixed; Add Get/SetTimestamp functions with TTimeStamp class to work with microseconds. Bugs fixed:. 1. Writing date/time in local time (default) to PostgreSQL but returning in UTC. So, one gets a value being different from the written one in case of timestamp fields with time zone. 2. kBindStringSize was not enough for timestamp with microseconds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:178,performance,time,time,178,"Get/SetTimestamp functions with TTimeStamp; bug fixed; Add Get/SetTimestamp functions with TTimeStamp class to work with microseconds. Bugs fixed:. 1. Writing date/time in local time (default) to PostgreSQL but returning in UTC. So, one gets a value being different from the written one in case of timestamp fields with time zone. 2. kBindStringSize was not enough for timestamp with microseconds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:298,performance,time,timestamp,298,"Get/SetTimestamp functions with TTimeStamp; bug fixed; Add Get/SetTimestamp functions with TTimeStamp class to work with microseconds. Bugs fixed:. 1. Writing date/time in local time (default) to PostgreSQL but returning in UTC. So, one gets a value being different from the written one in case of timestamp fields with time zone. 2. kBindStringSize was not enough for timestamp with microseconds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:320,performance,time,time,320,"Get/SetTimestamp functions with TTimeStamp; bug fixed; Add Get/SetTimestamp functions with TTimeStamp class to work with microseconds. Bugs fixed:. 1. Writing date/time in local time (default) to PostgreSQL but returning in UTC. So, one gets a value being different from the written one in case of timestamp fields with time zone. 2. kBindStringSize was not enough for timestamp with microseconds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3961:369,performance,time,timestamp,369,"Get/SetTimestamp functions with TTimeStamp; bug fixed; Add Get/SetTimestamp functions with TTimeStamp class to work with microseconds. Bugs fixed:. 1. Writing date/time in local time (default) to PostgreSQL but returning in UTC. So, one gets a value being different from the written one in case of timestamp fields with time zone. 2. kBindStringSize was not enough for timestamp with microseconds",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3961
https://github.com/root-project/root/pull/3962:326,deployability,updat,updated,326,"Add Sum to TStatistic; The sum of all the values passed to fill the `TStatistic` object has been added as a class data member. Meanwhile, `Fill`,`Print`, and `Merge` functions have been changed to accomodate the new statistic. The sum is initialized to zero when calling the constructor of TStatistic. Docs and test have been updated. accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3962
https://github.com/root-project/root/pull/3962:311,safety,test,test,311,"Add Sum to TStatistic; The sum of all the values passed to fill the `TStatistic` object has been added as a class data member. Meanwhile, `Fill`,`Print`, and `Merge` functions have been changed to accomodate the new statistic. The sum is initialized to zero when calling the constructor of TStatistic. Docs and test have been updated. accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3962
https://github.com/root-project/root/pull/3962:326,safety,updat,updated,326,"Add Sum to TStatistic; The sum of all the values passed to fill the `TStatistic` object has been added as a class data member. Meanwhile, `Fill`,`Print`, and `Merge` functions have been changed to accomodate the new statistic. The sum is initialized to zero when calling the constructor of TStatistic. Docs and test have been updated. accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3962
https://github.com/root-project/root/pull/3962:326,security,updat,updated,326,"Add Sum to TStatistic; The sum of all the values passed to fill the `TStatistic` object has been added as a class data member. Meanwhile, `Fill`,`Print`, and `Merge` functions have been changed to accomodate the new statistic. The sum is initialized to zero when calling the constructor of TStatistic. Docs and test have been updated. accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3962
https://github.com/root-project/root/pull/3962:311,testability,test,test,311,"Add Sum to TStatistic; The sum of all the values passed to fill the `TStatistic` object has been added as a class data member. Meanwhile, `Fill`,`Print`, and `Merge` functions have been changed to accomodate the new statistic. The sum is initialized to zero when calling the constructor of TStatistic. Docs and test have been updated. accordingly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3962
https://github.com/root-project/root/pull/3963:139,availability,operat,operator,139,"[Exp PyROOT] ROOT.Namespace instead of ROOT.ROOT.Namespace; The attempt to fix the following test that was failing:. roottest-python-basic-operator. led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. . Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo. The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3963
https://github.com/root-project/root/pull/3963:107,deployability,fail,failing,107,"[Exp PyROOT] ROOT.Namespace instead of ROOT.ROOT.Namespace; The attempt to fix the following test that was failing:. roottest-python-basic-operator. led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. . Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo. The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3963
https://github.com/root-project/root/pull/3963:390,modifiability,maintain,maintainer,390,"[Exp PyROOT] ROOT.Namespace instead of ROOT.ROOT.Namespace; The attempt to fix the following test that was failing:. roottest-python-basic-operator. led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. . Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo. The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3963
https://github.com/root-project/root/pull/3963:107,reliability,fail,failing,107,"[Exp PyROOT] ROOT.Namespace instead of ROOT.ROOT.Namespace; The attempt to fix the following test that was failing:. roottest-python-basic-operator. led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. . Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo. The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3963
https://github.com/root-project/root/pull/3963:93,safety,test,test,93,"[Exp PyROOT] ROOT.Namespace instead of ROOT.ROOT.Namespace; The attempt to fix the following test that was failing:. roottest-python-basic-operator. led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. . Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo. The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3963
https://github.com/root-project/root/pull/3963:390,safety,maintain,maintainer,390,"[Exp PyROOT] ROOT.Namespace instead of ROOT.ROOT.Namespace; The attempt to fix the following test that was failing:. roottest-python-basic-operator. led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. . Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo. The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3963
https://github.com/root-project/root/pull/3963:418,safety,test,test,418,"[Exp PyROOT] ROOT.Namespace instead of ROOT.ROOT.Namespace; The attempt to fix the following test that was failing:. roottest-python-basic-operator. led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. . Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo. The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3963
https://github.com/root-project/root/pull/3963:93,testability,test,test,93,"[Exp PyROOT] ROOT.Namespace instead of ROOT.ROOT.Namespace; The attempt to fix the following test that was failing:. roottest-python-basic-operator. led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. . Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo. The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3963
https://github.com/root-project/root/pull/3963:254,testability,simpl,simply,254,"[Exp PyROOT] ROOT.Namespace instead of ROOT.ROOT.Namespace; The attempt to fix the following test that was failing:. roottest-python-basic-operator. led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. . Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo. The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3963
https://github.com/root-project/root/pull/3963:418,testability,test,test,418,"[Exp PyROOT] ROOT.Namespace instead of ROOT.ROOT.Namespace; The attempt to fix the following test that was failing:. roottest-python-basic-operator. led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. . Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo. The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3963
https://github.com/root-project/root/pull/3963:204,usability,user,user,204,"[Exp PyROOT] ROOT.Namespace instead of ROOT.ROOT.Namespace; The attempt to fix the following test that was failing:. roottest-python-basic-operator. led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. . Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo. The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3963
https://github.com/root-project/root/pull/3963:254,usability,simpl,simply,254,"[Exp PyROOT] ROOT.Namespace instead of ROOT.ROOT.Namespace; The attempt to fix the following test that was failing:. roottest-python-basic-operator. led to the necessity of adding the possibility for the user to call a namespace inside cppyy.gbl.ROOT by simply typing ROOT.Namespace instead of ROOT.ROOT.Namespace. . Two bugs in cppyy were also found during this attempt, both fixed by the maintainer of the repo. The test mentioned above now succeeds.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3963
https://github.com/root-project/root/pull/3965:32,deployability,modul,module,32,[cxxmodules] Move rdicts in the module file; When we have a module file we store the rdict in it and reference it through a 'virtual' TMemFile. Depends on #3891,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3965:60,deployability,modul,module,60,[cxxmodules] Move rdicts in the module file; When we have a module file we store the rdict in it and reference it through a 'virtual' TMemFile. Depends on #3891,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3965:144,deployability,Depend,Depends,144,[cxxmodules] Move rdicts in the module file; When we have a module file we store the rdict in it and reference it through a 'virtual' TMemFile. Depends on #3891,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3965:144,integrability,Depend,Depends,144,[cxxmodules] Move rdicts in the module file; When we have a module file we store the rdict in it and reference it through a 'virtual' TMemFile. Depends on #3891,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3965:32,modifiability,modul,module,32,[cxxmodules] Move rdicts in the module file; When we have a module file we store the rdict in it and reference it through a 'virtual' TMemFile. Depends on #3891,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3965:60,modifiability,modul,module,60,[cxxmodules] Move rdicts in the module file; When we have a module file we store the rdict in it and reference it through a 'virtual' TMemFile. Depends on #3891,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3965:144,modifiability,Depend,Depends,144,[cxxmodules] Move rdicts in the module file; When we have a module file we store the rdict in it and reference it through a 'virtual' TMemFile. Depends on #3891,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3965:32,safety,modul,module,32,[cxxmodules] Move rdicts in the module file; When we have a module file we store the rdict in it and reference it through a 'virtual' TMemFile. Depends on #3891,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3965:60,safety,modul,module,60,[cxxmodules] Move rdicts in the module file; When we have a module file we store the rdict in it and reference it through a 'virtual' TMemFile. Depends on #3891,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3965:144,safety,Depend,Depends,144,[cxxmodules] Move rdicts in the module file; When we have a module file we store the rdict in it and reference it through a 'virtual' TMemFile. Depends on #3891,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3965:144,testability,Depend,Depends,144,[cxxmodules] Move rdicts in the module file; When we have a module file we store the rdict in it and reference it through a 'virtual' TMemFile. Depends on #3891,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3965
https://github.com/root-project/root/pull/3966:303,availability,avail,available,303,Improvements in MethodDL to enhance model definition for dense layers; Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. . - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3966
https://github.com/root-project/root/pull/3966:36,energy efficiency,model,model,36,Improvements in MethodDL to enhance model definition for dense layers; Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. . - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3966
https://github.com/root-project/root/pull/3966:270,energy efficiency,CPU,CPU,270,Improvements in MethodDL to enhance model definition for dense layers; Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. . - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3966
https://github.com/root-project/root/pull/3966:278,energy efficiency,GPU,GPU,278,Improvements in MethodDL to enhance model definition for dense layers; Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. . - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3966
https://github.com/root-project/root/pull/3966:63,modifiability,layer,layers,63,Improvements in MethodDL to enhance model definition for dense layers; Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. . - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3966
https://github.com/root-project/root/pull/3966:122,modifiability,layer,layers,122,Improvements in MethodDL to enhance model definition for dense layers; Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. . - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3966
https://github.com/root-project/root/pull/3966:270,performance,CPU,CPU,270,Improvements in MethodDL to enhance model definition for dense layers; Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. . - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3966
https://github.com/root-project/root/pull/3966:278,performance,GPU,GPU,278,Improvements in MethodDL to enhance model definition for dense layers; Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. . - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3966
https://github.com/root-project/root/pull/3966:303,reliability,availab,available,303,Improvements in MethodDL to enhance model definition for dense layers; Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. . - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3966
https://github.com/root-project/root/pull/3966:303,safety,avail,available,303,Improvements in MethodDL to enhance model definition for dense layers; Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. . - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3966
https://github.com/root-project/root/pull/3966:36,security,model,model,36,Improvements in MethodDL to enhance model definition for dense layers; Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. . - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3966
https://github.com/root-project/root/pull/3966:303,security,availab,available,303,Improvements in MethodDL to enhance model definition for dense layers; Improve the parsing of the string for defining the layers in MethodDL. Now it is possible to read strings defined as in the previous MethodDNN . Change TMVAClassification to use MethodDL. . - enable CPU and GPU based DL if they are available in ROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3966
https://github.com/root-project/root/pull/3967:52,deployability,modul,module,52,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:71,deployability,patch,patch,71,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:89,deployability,modul,module,89,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:13,energy efficiency,Load,Load,13,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:43,energy efficiency,load,load,43,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:156,energy efficiency,load,load,156,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:52,modifiability,modul,module,52,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:89,modifiability,modul,module,89,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:13,performance,Load,Load,13,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:43,performance,load,load,43,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:119,performance,memor,memory,119,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:156,performance,load,load,156,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:52,safety,modul,module,52,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:71,safety,patch,patch,71,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:89,safety,modul,module,89,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:71,security,patch,patch,71,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3967:119,usability,memor,memory,119,[cxxmodules] Load the rdict files after we load the module file.; This patch enables the module file to mmap the rdict memory region before the. request to load it.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3967
https://github.com/root-project/root/pull/3968:195,interoperability,Platform,Platforms,195,"[TCling] MacOS cannot link against libAudioToolboxUtility:; ld: cannot link directly with dylib/framework, your binary is not an allowed client of /Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/libAudioToolboxUtility.tbd for architecture x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3968
https://github.com/root-project/root/pull/3968:212,interoperability,platform,platform,212,"[TCling] MacOS cannot link against libAudioToolboxUtility:; ld: cannot link directly with dylib/framework, your binary is not an allowed client of /Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/libAudioToolboxUtility.tbd for architecture x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3968
https://github.com/root-project/root/pull/3968:286,interoperability,architectur,architecture,286,"[TCling] MacOS cannot link against libAudioToolboxUtility:; ld: cannot link directly with dylib/framework, your binary is not an allowed client of /Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/libAudioToolboxUtility.tbd for architecture x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3968
https://github.com/root-project/root/pull/3968:176,performance,Content,Contents,176,"[TCling] MacOS cannot link against libAudioToolboxUtility:; ld: cannot link directly with dylib/framework, your binary is not an allowed client of /Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/libAudioToolboxUtility.tbd for architecture x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3968
https://github.com/root-project/root/pull/3970:1,deployability,releas,release,1,[release notes] Release notes for ZLIB-CF;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3970
https://github.com/root-project/root/pull/3970:16,deployability,Releas,Release,16,[release notes] Release notes for ZLIB-CF;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3970
https://github.com/root-project/root/pull/3971:14,deployability,build,build,14,"Do not ignore build artifacts in source directory; ROOT uses out of source builds only, so we do want to see when files are created within the source directory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:20,deployability,artifact,artifacts,20,"Do not ignore build artifacts in source directory; ROOT uses out of source builds only, so we do want to see when files are created within the source directory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3971:75,deployability,build,builds,75,"Do not ignore build artifacts in source directory; ROOT uses out of source builds only, so we do want to see when files are created within the source directory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3971
https://github.com/root-project/root/pull/3975:5,deployability,configurat,configuration,5,Make configuration fail when dependencies are not found and fail-on-missing=ON; Related issue: [ROOT-9385](https://sft.its.cern.ch/jira/browse/ROOT-9385).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:19,deployability,fail,fail,19,Make configuration fail when dependencies are not found and fail-on-missing=ON; Related issue: [ROOT-9385](https://sft.its.cern.ch/jira/browse/ROOT-9385).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:29,deployability,depend,dependencies,29,Make configuration fail when dependencies are not found and fail-on-missing=ON; Related issue: [ROOT-9385](https://sft.its.cern.ch/jira/browse/ROOT-9385).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:60,deployability,fail,fail-on-missing,60,Make configuration fail when dependencies are not found and fail-on-missing=ON; Related issue: [ROOT-9385](https://sft.its.cern.ch/jira/browse/ROOT-9385).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:5,integrability,configur,configuration,5,Make configuration fail when dependencies are not found and fail-on-missing=ON; Related issue: [ROOT-9385](https://sft.its.cern.ch/jira/browse/ROOT-9385).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:29,integrability,depend,dependencies,29,Make configuration fail when dependencies are not found and fail-on-missing=ON; Related issue: [ROOT-9385](https://sft.its.cern.ch/jira/browse/ROOT-9385).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:5,modifiability,configur,configuration,5,Make configuration fail when dependencies are not found and fail-on-missing=ON; Related issue: [ROOT-9385](https://sft.its.cern.ch/jira/browse/ROOT-9385).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:29,modifiability,depend,dependencies,29,Make configuration fail when dependencies are not found and fail-on-missing=ON; Related issue: [ROOT-9385](https://sft.its.cern.ch/jira/browse/ROOT-9385).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:19,reliability,fail,fail,19,Make configuration fail when dependencies are not found and fail-on-missing=ON; Related issue: [ROOT-9385](https://sft.its.cern.ch/jira/browse/ROOT-9385).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:60,reliability,fail,fail-on-missing,60,Make configuration fail when dependencies are not found and fail-on-missing=ON; Related issue: [ROOT-9385](https://sft.its.cern.ch/jira/browse/ROOT-9385).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:29,safety,depend,dependencies,29,Make configuration fail when dependencies are not found and fail-on-missing=ON; Related issue: [ROOT-9385](https://sft.its.cern.ch/jira/browse/ROOT-9385).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:5,security,configur,configuration,5,Make configuration fail when dependencies are not found and fail-on-missing=ON; Related issue: [ROOT-9385](https://sft.its.cern.ch/jira/browse/ROOT-9385).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3975:29,testability,depend,dependencies,29,Make configuration fail when dependencies are not found and fail-on-missing=ON; Related issue: [ROOT-9385](https://sft.its.cern.ch/jira/browse/ROOT-9385).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3975
https://github.com/root-project/root/pull/3976:231,availability,operat,operator,231,"[RF] Add conversion constructors to RooArgSet.; RooArgSets could not be constructed from STL collections and initialiser. lists. This fixes this shortcoming. The same holds for adding multiple. elements from a collection. Further, operator[] was overloaded to react both to index and name. access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3976
https://github.com/root-project/root/pull/3976:9,interoperability,convers,conversion,9,"[RF] Add conversion constructors to RooArgSet.; RooArgSets could not be constructed from STL collections and initialiser. lists. This fixes this shortcoming. The same holds for adding multiple. elements from a collection. Further, operator[] was overloaded to react both to index and name. access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3976
https://github.com/root-project/root/pull/3976:290,security,access,access,290,"[RF] Add conversion constructors to RooArgSet.; RooArgSets could not be constructed from STL collections and initialiser. lists. This fixes this shortcoming. The same holds for adding multiple. elements from a collection. Further, operator[] was overloaded to react both to index and name. access.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3976
https://github.com/root-project/root/pull/3977:76,deployability,patch,patch,76,[tmemfile] Disallow aggregate initialization for ExternalDataRange_t.; This patch makes it more difficult for people to avoid the 'automatic' memory. ownership done by TMemFile. It forces people to explicitly construct the. data structure describing memory blob and makes it easier to grep for.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3977
https://github.com/root-project/root/pull/3977:131,deployability,automat,automatic,131,[tmemfile] Disallow aggregate initialization for ExternalDataRange_t.; This patch makes it more difficult for people to avoid the 'automatic' memory. ownership done by TMemFile. It forces people to explicitly construct the. data structure describing memory blob and makes it easier to grep for.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3977
https://github.com/root-project/root/pull/3977:142,performance,memor,memory,142,[tmemfile] Disallow aggregate initialization for ExternalDataRange_t.; This patch makes it more difficult for people to avoid the 'automatic' memory. ownership done by TMemFile. It forces people to explicitly construct the. data structure describing memory blob and makes it easier to grep for.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3977
https://github.com/root-project/root/pull/3977:250,performance,memor,memory,250,[tmemfile] Disallow aggregate initialization for ExternalDataRange_t.; This patch makes it more difficult for people to avoid the 'automatic' memory. ownership done by TMemFile. It forces people to explicitly construct the. data structure describing memory blob and makes it easier to grep for.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3977
https://github.com/root-project/root/pull/3977:76,safety,patch,patch,76,[tmemfile] Disallow aggregate initialization for ExternalDataRange_t.; This patch makes it more difficult for people to avoid the 'automatic' memory. ownership done by TMemFile. It forces people to explicitly construct the. data structure describing memory blob and makes it easier to grep for.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3977
https://github.com/root-project/root/pull/3977:120,safety,avoid,avoid,120,[tmemfile] Disallow aggregate initialization for ExternalDataRange_t.; This patch makes it more difficult for people to avoid the 'automatic' memory. ownership done by TMemFile. It forces people to explicitly construct the. data structure describing memory blob and makes it easier to grep for.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3977
https://github.com/root-project/root/pull/3977:76,security,patch,patch,76,[tmemfile] Disallow aggregate initialization for ExternalDataRange_t.; This patch makes it more difficult for people to avoid the 'automatic' memory. ownership done by TMemFile. It forces people to explicitly construct the. data structure describing memory blob and makes it easier to grep for.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3977
https://github.com/root-project/root/pull/3977:131,testability,automat,automatic,131,[tmemfile] Disallow aggregate initialization for ExternalDataRange_t.; This patch makes it more difficult for people to avoid the 'automatic' memory. ownership done by TMemFile. It forces people to explicitly construct the. data structure describing memory blob and makes it easier to grep for.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3977
https://github.com/root-project/root/pull/3977:142,usability,memor,memory,142,[tmemfile] Disallow aggregate initialization for ExternalDataRange_t.; This patch makes it more difficult for people to avoid the 'automatic' memory. ownership done by TMemFile. It forces people to explicitly construct the. data structure describing memory blob and makes it easier to grep for.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3977
https://github.com/root-project/root/pull/3977:250,usability,memor,memory,250,[tmemfile] Disallow aggregate initialization for ExternalDataRange_t.; This patch makes it more difficult for people to avoid the 'automatic' memory. ownership done by TMemFile. It forces people to explicitly construct the. data structure describing memory blob and makes it easier to grep for.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3977
https://github.com/root-project/root/pull/3980:29,deployability,fail,failing,29,"[Exp PyROOT] Fixed two other failing tests (AsNumpyArrays-py and tStudent-py) with commit 832989c; The two tests mentioned in the title were fixed after the corrections implemented for pythonizations of templated classes and try/exception blocks in Cppyy, on top of which the possibility to use ROOT.Namespace instead of ROOT.ROOT.Namespace was added. Commits that fixed the tests:. 832989cd2cd3dea7a2f96aa53272ecdd34e45b8b. f45d07c7a0b2414159e81a957a4fe86afc63fa87. f45d07c7a0b2414159e81a957a4fe86afc63fa87",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3980
https://github.com/root-project/root/pull/3980:29,reliability,fail,failing,29,"[Exp PyROOT] Fixed two other failing tests (AsNumpyArrays-py and tStudent-py) with commit 832989c; The two tests mentioned in the title were fixed after the corrections implemented for pythonizations of templated classes and try/exception blocks in Cppyy, on top of which the possibility to use ROOT.Namespace instead of ROOT.ROOT.Namespace was added. Commits that fixed the tests:. 832989cd2cd3dea7a2f96aa53272ecdd34e45b8b. f45d07c7a0b2414159e81a957a4fe86afc63fa87. f45d07c7a0b2414159e81a957a4fe86afc63fa87",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3980
https://github.com/root-project/root/pull/3980:37,safety,test,tests,37,"[Exp PyROOT] Fixed two other failing tests (AsNumpyArrays-py and tStudent-py) with commit 832989c; The two tests mentioned in the title were fixed after the corrections implemented for pythonizations of templated classes and try/exception blocks in Cppyy, on top of which the possibility to use ROOT.Namespace instead of ROOT.ROOT.Namespace was added. Commits that fixed the tests:. 832989cd2cd3dea7a2f96aa53272ecdd34e45b8b. f45d07c7a0b2414159e81a957a4fe86afc63fa87. f45d07c7a0b2414159e81a957a4fe86afc63fa87",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3980
https://github.com/root-project/root/pull/3980:107,safety,test,tests,107,"[Exp PyROOT] Fixed two other failing tests (AsNumpyArrays-py and tStudent-py) with commit 832989c; The two tests mentioned in the title were fixed after the corrections implemented for pythonizations of templated classes and try/exception blocks in Cppyy, on top of which the possibility to use ROOT.Namespace instead of ROOT.ROOT.Namespace was added. Commits that fixed the tests:. 832989cd2cd3dea7a2f96aa53272ecdd34e45b8b. f45d07c7a0b2414159e81a957a4fe86afc63fa87. f45d07c7a0b2414159e81a957a4fe86afc63fa87",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3980
https://github.com/root-project/root/pull/3980:229,safety,except,exception,229,"[Exp PyROOT] Fixed two other failing tests (AsNumpyArrays-py and tStudent-py) with commit 832989c; The two tests mentioned in the title were fixed after the corrections implemented for pythonizations of templated classes and try/exception blocks in Cppyy, on top of which the possibility to use ROOT.Namespace instead of ROOT.ROOT.Namespace was added. Commits that fixed the tests:. 832989cd2cd3dea7a2f96aa53272ecdd34e45b8b. f45d07c7a0b2414159e81a957a4fe86afc63fa87. f45d07c7a0b2414159e81a957a4fe86afc63fa87",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3980
https://github.com/root-project/root/pull/3980:375,safety,test,tests,375,"[Exp PyROOT] Fixed two other failing tests (AsNumpyArrays-py and tStudent-py) with commit 832989c; The two tests mentioned in the title were fixed after the corrections implemented for pythonizations of templated classes and try/exception blocks in Cppyy, on top of which the possibility to use ROOT.Namespace instead of ROOT.ROOT.Namespace was added. Commits that fixed the tests:. 832989cd2cd3dea7a2f96aa53272ecdd34e45b8b. f45d07c7a0b2414159e81a957a4fe86afc63fa87. f45d07c7a0b2414159e81a957a4fe86afc63fa87",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3980
https://github.com/root-project/root/pull/3980:37,testability,test,tests,37,"[Exp PyROOT] Fixed two other failing tests (AsNumpyArrays-py and tStudent-py) with commit 832989c; The two tests mentioned in the title were fixed after the corrections implemented for pythonizations of templated classes and try/exception blocks in Cppyy, on top of which the possibility to use ROOT.Namespace instead of ROOT.ROOT.Namespace was added. Commits that fixed the tests:. 832989cd2cd3dea7a2f96aa53272ecdd34e45b8b. f45d07c7a0b2414159e81a957a4fe86afc63fa87. f45d07c7a0b2414159e81a957a4fe86afc63fa87",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3980
https://github.com/root-project/root/pull/3980:107,testability,test,tests,107,"[Exp PyROOT] Fixed two other failing tests (AsNumpyArrays-py and tStudent-py) with commit 832989c; The two tests mentioned in the title were fixed after the corrections implemented for pythonizations of templated classes and try/exception blocks in Cppyy, on top of which the possibility to use ROOT.Namespace instead of ROOT.ROOT.Namespace was added. Commits that fixed the tests:. 832989cd2cd3dea7a2f96aa53272ecdd34e45b8b. f45d07c7a0b2414159e81a957a4fe86afc63fa87. f45d07c7a0b2414159e81a957a4fe86afc63fa87",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3980
https://github.com/root-project/root/pull/3980:375,testability,test,tests,375,"[Exp PyROOT] Fixed two other failing tests (AsNumpyArrays-py and tStudent-py) with commit 832989c; The two tests mentioned in the title were fixed after the corrections implemented for pythonizations of templated classes and try/exception blocks in Cppyy, on top of which the possibility to use ROOT.Namespace instead of ROOT.ROOT.Namespace was added. Commits that fixed the tests:. 832989cd2cd3dea7a2f96aa53272ecdd34e45b8b. f45d07c7a0b2414159e81a957a4fe86afc63fa87. f45d07c7a0b2414159e81a957a4fe86afc63fa87",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3980
https://github.com/root-project/root/pull/3981:130,integrability,wrap,wrap,130,Fix Memory Leak in TF1 when using compiled functions; This PR fixes the delition of the internal function pointer that is used to wrap C/C++ functions in TF1. . Also the copying of the function is now fixed and the intgernal structure is corrected copy when copying TF1 objects. . Also re-define some internal functions as protected that by mistakes they were declared public. . This PR fixes ROOT-10191,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3981
https://github.com/root-project/root/pull/3981:369,integrability,pub,public,369,Fix Memory Leak in TF1 when using compiled functions; This PR fixes the delition of the internal function pointer that is used to wrap C/C++ functions in TF1. . Also the copying of the function is now fixed and the intgernal structure is corrected copy when copying TF1 objects. . Also re-define some internal functions as protected that by mistakes they were declared public. . This PR fixes ROOT-10191,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3981
https://github.com/root-project/root/pull/3981:4,performance,Memor,Memory,4,Fix Memory Leak in TF1 when using compiled functions; This PR fixes the delition of the internal function pointer that is used to wrap C/C++ functions in TF1. . Also the copying of the function is now fixed and the intgernal structure is corrected copy when copying TF1 objects. . Also re-define some internal functions as protected that by mistakes they were declared public. . This PR fixes ROOT-10191,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3981
https://github.com/root-project/root/pull/3981:4,usability,Memor,Memory,4,Fix Memory Leak in TF1 when using compiled functions; This PR fixes the delition of the internal function pointer that is used to wrap C/C++ functions in TF1. . Also the copying of the function is now fixed and the intgernal structure is corrected copy when copying TF1 objects. . Also re-define some internal functions as protected that by mistakes they were declared public. . This PR fixes ROOT-10191,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3981
https://github.com/root-project/root/pull/3982:189,availability,repair,repairs,189,"[WIP] cxxmodule, I/O and std::tuple; Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to. the actual std::tuple implementation to be attempted (and failing) to be used. for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:318,deployability,fail,failing,318,"[WIP] cxxmodule, I/O and std::tuple; Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to. the actual std::tuple implementation to be attempted (and failing) to be used. for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:405,deployability,build,build,405,"[WIP] cxxmodule, I/O and std::tuple; Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to. the actual std::tuple implementation to be attempted (and failing) to be used. for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:17,performance,I/O,I/O,17,"[WIP] cxxmodule, I/O and std::tuple; Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to. the actual std::tuple implementation to be attempted (and failing) to be used. for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:213,performance,I/O,I/O,213,"[WIP] cxxmodule, I/O and std::tuple; Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to. the actual std::tuple implementation to be attempted (and failing) to be used. for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:343,performance,I/O,I/O,343,"[WIP] cxxmodule, I/O and std::tuple; Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to. the actual std::tuple implementation to be attempted (and failing) to be used. for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:189,reliability,repair,repairs,189,"[WIP] cxxmodule, I/O and std::tuple; Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to. the actual std::tuple implementation to be attempted (and failing) to be used. for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:318,reliability,fail,failing,318,"[WIP] cxxmodule, I/O and std::tuple; Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to. the actual std::tuple implementation to be attempted (and failing) to be used. for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:417,safety,test,testReport,417,"[WIP] cxxmodule, I/O and std::tuple; Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to. the actual std::tuple implementation to be attempted (and failing) to be used. for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:417,testability,test,testReport,417,"[WIP] cxxmodule, I/O and std::tuple; Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to. the actual std::tuple implementation to be attempted (and failing) to be used. for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3982:201,usability,support,support,201,"[WIP] cxxmodule, I/O and std::tuple; Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only withou…t cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6. This repairs the support for I/O of std::tuple. The previous code leads to. the actual std::tuple implementation to be attempted (and failing) to be used. for I/O:. See https://epsft-jenkins.cern.ch/job/root-pullrequests-build/59119/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3982
https://github.com/root-project/root/pull/3983:4,deployability,configurat,configuration,4,Fix configuration when builtin_glew is enabled on demand;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3983
https://github.com/root-project/root/pull/3983:4,integrability,configur,configuration,4,Fix configuration when builtin_glew is enabled on demand;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3983
https://github.com/root-project/root/pull/3983:4,modifiability,configur,configuration,4,Fix configuration when builtin_glew is enabled on demand;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3983
https://github.com/root-project/root/pull/3983:4,security,configur,configuration,4,Fix configuration when builtin_glew is enabled on demand;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3983
https://github.com/root-project/root/pull/3984:153,performance,time,time,153,Remove 'explicitlink' option (breaks compilation if disabled); This option is ported from ROOT 5.x but disabling it makes compilation break since a long time. Fixes: [ROOT-9449](https://sft.its.cern.ch/jira/browse/ROOT-9449).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3984
https://github.com/root-project/root/pull/3985:9,performance,I/O,I/O,9,"[RF] Fix I/O of RooFit datasets; RooFit has the option to hold fitting data in memory as std::vectors or. to use Tree-backed storage. The latter only makes sense when streaming. from files is desired, and is therefore not the default. However, Tree-backed storage was using memory-resident trees, which. could not be written when larger than 1 Gb. Now, the tree-backed storage. is file-backed, and stays connected to the file when reading back. This fixes ROOT-10188. Further, fix ROOT-6260, datasets are losing their name when copied and missing compression for branches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3985
https://github.com/root-project/root/pull/3985:79,performance,memor,memory,79,"[RF] Fix I/O of RooFit datasets; RooFit has the option to hold fitting data in memory as std::vectors or. to use Tree-backed storage. The latter only makes sense when streaming. from files is desired, and is therefore not the default. However, Tree-backed storage was using memory-resident trees, which. could not be written when larger than 1 Gb. Now, the tree-backed storage. is file-backed, and stays connected to the file when reading back. This fixes ROOT-10188. Further, fix ROOT-6260, datasets are losing their name when copied and missing compression for branches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3985
https://github.com/root-project/root/pull/3985:274,performance,memor,memory-resident,274,"[RF] Fix I/O of RooFit datasets; RooFit has the option to hold fitting data in memory as std::vectors or. to use Tree-backed storage. The latter only makes sense when streaming. from files is desired, and is therefore not the default. However, Tree-backed storage was using memory-resident trees, which. could not be written when larger than 1 Gb. Now, the tree-backed storage. is file-backed, and stays connected to the file when reading back. This fixes ROOT-10188. Further, fix ROOT-6260, datasets are losing their name when copied and missing compression for branches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3985
https://github.com/root-project/root/pull/3985:79,usability,memor,memory,79,"[RF] Fix I/O of RooFit datasets; RooFit has the option to hold fitting data in memory as std::vectors or. to use Tree-backed storage. The latter only makes sense when streaming. from files is desired, and is therefore not the default. However, Tree-backed storage was using memory-resident trees, which. could not be written when larger than 1 Gb. Now, the tree-backed storage. is file-backed, and stays connected to the file when reading back. This fixes ROOT-10188. Further, fix ROOT-6260, datasets are losing their name when copied and missing compression for branches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3985
https://github.com/root-project/root/pull/3985:274,usability,memor,memory-resident,274,"[RF] Fix I/O of RooFit datasets; RooFit has the option to hold fitting data in memory as std::vectors or. to use Tree-backed storage. The latter only makes sense when streaming. from files is desired, and is therefore not the default. However, Tree-backed storage was using memory-resident trees, which. could not be written when larger than 1 Gb. Now, the tree-backed storage. is file-backed, and stays connected to the file when reading back. This fixes ROOT-10188. Further, fix ROOT-6260, datasets are losing their name when copied and missing compression for branches.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3985
https://github.com/root-project/root/pull/3986:4,deployability,depend,dependency,4,"Fix dependency propagation of Vdt when builtin_vdt=ON; When `builtin_vdt=ON`, vdt headers are in `${CMAKE_BINARY_DIR}/include` and `libvdt.so` is in `${CMAKE_BINARY_DIR}/lib`, so we don't need to add the extra include directory and can link using just the library name. Once ROOT is installed, the Vdt headers and library will be along with ROOT ones, so they can also be found without needing anything else. Fixes: [ROOT-10197](https://sft.its.cern.ch/jira/browse/ROOT-10197).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3986
https://github.com/root-project/root/pull/3986:283,deployability,instal,installed,283,"Fix dependency propagation of Vdt when builtin_vdt=ON; When `builtin_vdt=ON`, vdt headers are in `${CMAKE_BINARY_DIR}/include` and `libvdt.so` is in `${CMAKE_BINARY_DIR}/lib`, so we don't need to add the extra include directory and can link using just the library name. Once ROOT is installed, the Vdt headers and library will be along with ROOT ones, so they can also be found without needing anything else. Fixes: [ROOT-10197](https://sft.its.cern.ch/jira/browse/ROOT-10197).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3986
https://github.com/root-project/root/pull/3986:4,integrability,depend,dependency,4,"Fix dependency propagation of Vdt when builtin_vdt=ON; When `builtin_vdt=ON`, vdt headers are in `${CMAKE_BINARY_DIR}/include` and `libvdt.so` is in `${CMAKE_BINARY_DIR}/lib`, so we don't need to add the extra include directory and can link using just the library name. Once ROOT is installed, the Vdt headers and library will be along with ROOT ones, so they can also be found without needing anything else. Fixes: [ROOT-10197](https://sft.its.cern.ch/jira/browse/ROOT-10197).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3986
https://github.com/root-project/root/pull/3986:4,modifiability,depend,dependency,4,"Fix dependency propagation of Vdt when builtin_vdt=ON; When `builtin_vdt=ON`, vdt headers are in `${CMAKE_BINARY_DIR}/include` and `libvdt.so` is in `${CMAKE_BINARY_DIR}/lib`, so we don't need to add the extra include directory and can link using just the library name. Once ROOT is installed, the Vdt headers and library will be along with ROOT ones, so they can also be found without needing anything else. Fixes: [ROOT-10197](https://sft.its.cern.ch/jira/browse/ROOT-10197).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3986
https://github.com/root-project/root/pull/3986:4,safety,depend,dependency,4,"Fix dependency propagation of Vdt when builtin_vdt=ON; When `builtin_vdt=ON`, vdt headers are in `${CMAKE_BINARY_DIR}/include` and `libvdt.so` is in `${CMAKE_BINARY_DIR}/lib`, so we don't need to add the extra include directory and can link using just the library name. Once ROOT is installed, the Vdt headers and library will be along with ROOT ones, so they can also be found without needing anything else. Fixes: [ROOT-10197](https://sft.its.cern.ch/jira/browse/ROOT-10197).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3986
https://github.com/root-project/root/pull/3986:4,testability,depend,dependency,4,"Fix dependency propagation of Vdt when builtin_vdt=ON; When `builtin_vdt=ON`, vdt headers are in `${CMAKE_BINARY_DIR}/include` and `libvdt.so` is in `${CMAKE_BINARY_DIR}/lib`, so we don't need to add the extra include directory and can link using just the library name. Once ROOT is installed, the Vdt headers and library will be along with ROOT ones, so they can also be found without needing anything else. Fixes: [ROOT-10197](https://sft.its.cern.ch/jira/browse/ROOT-10197).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3986
https://github.com/root-project/root/pull/3987:19,performance,content,content,19,Allow TClonesArray content type change;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3987
https://github.com/root-project/root/pull/3989:13,interoperability,conflict,conflict,13,[ntuple] fix conflict between default move assignment and const members in RColumnElement; We might possibly introduce a small inefficiency by removing `const` from the two members but this class is anyway up for changes as the unpacking of column elements should be moved out and to the page mapping code.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3989
https://github.com/root-project/root/pull/3990:182,deployability,build,building,182,"Do not redefine the alternative tuple when it already exists.; This fixes a bug visible only in runtime_cxxmodules where the include guards. are ignored. This can happen when we are building a two modules which need. the same definition. In this case the usual include guards will only work if. we call a proper `#include ""something""` and this something should be defined. in a modulemap. There is no better solution for this at the moment. This is a rare case which. will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place. a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me! This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3990
https://github.com/root-project/root/pull/3990:197,deployability,modul,modules,197,"Do not redefine the alternative tuple when it already exists.; This fixes a bug visible only in runtime_cxxmodules where the include guards. are ignored. This can happen when we are building a two modules which need. the same definition. In this case the usual include guards will only work if. we call a proper `#include ""something""` and this something should be defined. in a modulemap. There is no better solution for this at the moment. This is a rare case which. will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place. a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me! This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3990
https://github.com/root-project/root/pull/3990:378,deployability,modul,modulemap,378,"Do not redefine the alternative tuple when it already exists.; This fixes a bug visible only in runtime_cxxmodules where the include guards. are ignored. This can happen when we are building a two modules which need. the same definition. In this case the usual include guards will only work if. we call a proper `#include ""something""` and this something should be defined. in a modulemap. There is no better solution for this at the moment. This is a rare case which. will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place. a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me! This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3990
https://github.com/root-project/root/pull/3990:738,deployability,modul,modules,738,"Do not redefine the alternative tuple when it already exists.; This fixes a bug visible only in runtime_cxxmodules where the include guards. are ignored. This can happen when we are building a two modules which need. the same definition. In this case the usual include guards will only work if. we call a proper `#include ""something""` and this something should be defined. in a modulemap. There is no better solution for this at the moment. This is a rare case which. will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place. a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me! This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3990
https://github.com/root-project/root/pull/3990:747,deployability,Patch,Patch,747,"Do not redefine the alternative tuple when it already exists.; This fixes a bug visible only in runtime_cxxmodules where the include guards. are ignored. This can happen when we are building a two modules which need. the same definition. In this case the usual include guards will only work if. we call a proper `#include ""something""` and this something should be defined. in a modulemap. There is no better solution for this at the moment. This is a rare case which. will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place. a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me! This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3990
https://github.com/root-project/root/pull/3990:197,modifiability,modul,modules,197,"Do not redefine the alternative tuple when it already exists.; This fixes a bug visible only in runtime_cxxmodules where the include guards. are ignored. This can happen when we are building a two modules which need. the same definition. In this case the usual include guards will only work if. we call a proper `#include ""something""` and this something should be defined. in a modulemap. There is no better solution for this at the moment. This is a rare case which. will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place. a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me! This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3990
https://github.com/root-project/root/pull/3990:378,modifiability,modul,modulemap,378,"Do not redefine the alternative tuple when it already exists.; This fixes a bug visible only in runtime_cxxmodules where the include guards. are ignored. This can happen when we are building a two modules which need. the same definition. In this case the usual include guards will only work if. we call a proper `#include ""something""` and this something should be defined. in a modulemap. There is no better solution for this at the moment. This is a rare case which. will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place. a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me! This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3990
https://github.com/root-project/root/pull/3990:738,modifiability,modul,modules,738,"Do not redefine the alternative tuple when it already exists.; This fixes a bug visible only in runtime_cxxmodules where the include guards. are ignored. This can happen when we are building a two modules which need. the same definition. In this case the usual include guards will only work if. we call a proper `#include ""something""` and this something should be defined. in a modulemap. There is no better solution for this at the moment. This is a rare case which. will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place. a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me! This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3990
https://github.com/root-project/root/pull/3990:197,safety,modul,modules,197,"Do not redefine the alternative tuple when it already exists.; This fixes a bug visible only in runtime_cxxmodules where the include guards. are ignored. This can happen when we are building a two modules which need. the same definition. In this case the usual include guards will only work if. we call a proper `#include ""something""` and this something should be defined. in a modulemap. There is no better solution for this at the moment. This is a rare case which. will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place. a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me! This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3990
https://github.com/root-project/root/pull/3990:378,safety,modul,modulemap,378,"Do not redefine the alternative tuple when it already exists.; This fixes a bug visible only in runtime_cxxmodules where the include guards. are ignored. This can happen when we are building a two modules which need. the same definition. In this case the usual include guards will only work if. we call a proper `#include ""something""` and this something should be defined. in a modulemap. There is no better solution for this at the moment. This is a rare case which. will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place. a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me! This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3990
https://github.com/root-project/root/pull/3990:738,safety,modul,modules,738,"Do not redefine the alternative tuple when it already exists.; This fixes a bug visible only in runtime_cxxmodules where the include guards. are ignored. This can happen when we are building a two modules which need. the same definition. In this case the usual include guards will only work if. we call a proper `#include ""something""` and this something should be defined. in a modulemap. There is no better solution for this at the moment. This is a rare case which. will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place. a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me! This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3990
https://github.com/root-project/root/pull/3990:747,safety,Patch,Patch,747,"Do not redefine the alternative tuple when it already exists.; This fixes a bug visible only in runtime_cxxmodules where the include guards. are ignored. This can happen when we are building a two modules which need. the same definition. In this case the usual include guards will only work if. we call a proper `#include ""something""` and this something should be defined. in a modulemap. There is no better solution for this at the moment. This is a rare case which. will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place. a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me! This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3990
https://github.com/root-project/root/pull/3990:747,security,Patch,Patch,747,"Do not redefine the alternative tuple when it already exists.; This fixes a bug visible only in runtime_cxxmodules where the include guards. are ignored. This can happen when we are building a two modules which need. the same definition. In this case the usual include guards will only work if. we call a proper `#include ""something""` and this something should be defined. in a modulemap. There is no better solution for this at the moment. This is a rare case which. will likely not affect external use-cases. Revert ""[cxxmodules] Fix R.M by displacing TEmulatedTuple only without cxxmodules"". This reverts commit a74297ac32fbe9f1aec0be246d0bef1c430b9bc6 and puts in place. a better fix. Now roottest-root-io-tuple-make should work with modules. Patch by Philippe Canal and me! This PR should supersede PR#3982.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3990
https://github.com/root-project/root/pull/3992:77,interoperability,specif,specify,77,SPlot: enable fitTo options in s-weight generation; Adds ability for user to specify additional `RooCmdArg`s to be used in the call to `fitTo` within `AddSWeight`. Especially useful if the fit was done in a range and `pdf->fixCoefRange` was called.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3992
https://github.com/root-project/root/pull/3992:69,usability,user,user,69,SPlot: enable fitTo options in s-weight generation; Adds ability for user to specify additional `RooCmdArg`s to be used in the call to `fitTo` within `AddSWeight`. Especially useful if the fit was done in a range and `pdf->fixCoefRange` was called.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3992
https://github.com/root-project/root/pull/3994:4,interoperability,format,formatting,4,Fix formatting;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3994
https://github.com/root-project/root/pull/3995:33,integrability,interfac,interface,33,[TMVA experimental] Add iterator interface to RTensor; Adds a STL iterator interface to RTensor iterating over the given view of the data. Still incomplete since not the full interface of the iterator is implemented.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3995
https://github.com/root-project/root/pull/3995:75,integrability,interfac,interface,75,[TMVA experimental] Add iterator interface to RTensor; Adds a STL iterator interface to RTensor iterating over the given view of the data. Still incomplete since not the full interface of the iterator is implemented.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3995
https://github.com/root-project/root/pull/3995:175,integrability,interfac,interface,175,[TMVA experimental] Add iterator interface to RTensor; Adds a STL iterator interface to RTensor iterating over the given view of the data. Still incomplete since not the full interface of the iterator is implemented.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3995
https://github.com/root-project/root/pull/3995:33,interoperability,interfac,interface,33,[TMVA experimental] Add iterator interface to RTensor; Adds a STL iterator interface to RTensor iterating over the given view of the data. Still incomplete since not the full interface of the iterator is implemented.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3995
https://github.com/root-project/root/pull/3995:75,interoperability,interfac,interface,75,[TMVA experimental] Add iterator interface to RTensor; Adds a STL iterator interface to RTensor iterating over the given view of the data. Still incomplete since not the full interface of the iterator is implemented.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3995
https://github.com/root-project/root/pull/3995:175,interoperability,interfac,interface,175,[TMVA experimental] Add iterator interface to RTensor; Adds a STL iterator interface to RTensor iterating over the given view of the data. Still incomplete since not the full interface of the iterator is implemented.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3995
https://github.com/root-project/root/pull/3995:33,modifiability,interfac,interface,33,[TMVA experimental] Add iterator interface to RTensor; Adds a STL iterator interface to RTensor iterating over the given view of the data. Still incomplete since not the full interface of the iterator is implemented.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3995
https://github.com/root-project/root/pull/3995:75,modifiability,interfac,interface,75,[TMVA experimental] Add iterator interface to RTensor; Adds a STL iterator interface to RTensor iterating over the given view of the data. Still incomplete since not the full interface of the iterator is implemented.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3995
https://github.com/root-project/root/pull/3995:175,modifiability,interfac,interface,175,[TMVA experimental] Add iterator interface to RTensor; Adds a STL iterator interface to RTensor iterating over the given view of the data. Still incomplete since not the full interface of the iterator is implemented.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3995
https://github.com/root-project/root/pull/3996:122,availability,error,error-when-expected,122,"[cmake] Use UNURAN (all caps) to make REQUIRED work:; See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected. This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3996
https://github.com/root-project/root/pull/3996:66,deployability,stack,stackoverflow,66,"[cmake] Use UNURAN (all caps) to make REQUIRED work:; See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected. This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3996
https://github.com/root-project/root/pull/3996:173,deployability,version,versions,173,"[cmake] Use UNURAN (all caps) to make REQUIRED work:; See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected. This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3996
https://github.com/root-project/root/pull/3996:173,integrability,version,versions,173,"[cmake] Use UNURAN (all caps) to make REQUIRED work:; See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected. This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3996
https://github.com/root-project/root/pull/3996:280,interoperability,compatib,compatibility,280,"[cmake] Use UNURAN (all caps) to make REQUIRED work:; See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected. This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3996
https://github.com/root-project/root/pull/3996:173,modifiability,version,versions,173,"[cmake] Use UNURAN (all caps) to make REQUIRED work:; See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected. This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3996
https://github.com/root-project/root/pull/3996:190,modifiability,variab,variables,190,"[cmake] Use UNURAN (all caps) to make REQUIRED work:; See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected. This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3996
https://github.com/root-project/root/pull/3996:217,modifiability,Pac,PackageName,217,"[cmake] Use UNURAN (all caps) to make REQUIRED work:; See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected. This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3996
https://github.com/root-project/root/pull/3996:240,modifiability,PAC,PACKAGENAME,240,"[cmake] Use UNURAN (all caps) to make REQUIRED work:; See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected. This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3996
https://github.com/root-project/root/pull/3996:122,performance,error,error-when-expected,122,"[cmake] Use UNURAN (all caps) to make REQUIRED work:; See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected. This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3996
https://github.com/root-project/root/pull/3996:122,safety,error,error-when-expected,122,"[cmake] Use UNURAN (all caps) to make REQUIRED work:; See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected. This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3996
https://github.com/root-project/root/pull/3996:122,usability,error,error-when-expected,122,"[cmake] Use UNURAN (all caps) to make REQUIRED work:; See https://stackoverflow.com/questions/31143820/cmake-not-throwing-error-when-expected. This was fixed in later CMake versions: Result variables of both names (`<PackageName>_FOUND`, `<PACKAGENAME>_FOUND`) are always set for compatibility",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3996
https://github.com/root-project/root/pull/3997:55,security,auth,author,55,Add copyright to CMake files; Waiting for the original author @peremato to come back for signing off.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3997
https://github.com/root-project/root/pull/3997:89,security,sign,signing,89,Add copyright to CMake files; Waiting for the original author @peremato to come back for signing off.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3997
https://github.com/root-project/root/pull/3998:4,integrability,Batch,Batch,4,Add Batch normalisation layer (from Liam Bartsch); This PR add support for batch normalisation for MethodDL (deep learning in TMVA). The code has been developed mainly by Liam Bartsch (trainee in June 2019),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3998
https://github.com/root-project/root/pull/3998:75,integrability,batch,batch,75,Add Batch normalisation layer (from Liam Bartsch); This PR add support for batch normalisation for MethodDL (deep learning in TMVA). The code has been developed mainly by Liam Bartsch (trainee in June 2019),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3998
https://github.com/root-project/root/pull/3998:24,modifiability,layer,layer,24,Add Batch normalisation layer (from Liam Bartsch); This PR add support for batch normalisation for MethodDL (deep learning in TMVA). The code has been developed mainly by Liam Bartsch (trainee in June 2019),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3998
https://github.com/root-project/root/pull/3998:4,performance,Batch,Batch,4,Add Batch normalisation layer (from Liam Bartsch); This PR add support for batch normalisation for MethodDL (deep learning in TMVA). The code has been developed mainly by Liam Bartsch (trainee in June 2019),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3998
https://github.com/root-project/root/pull/3998:75,performance,batch,batch,75,Add Batch normalisation layer (from Liam Bartsch); This PR add support for batch normalisation for MethodDL (deep learning in TMVA). The code has been developed mainly by Liam Bartsch (trainee in June 2019),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3998
https://github.com/root-project/root/pull/3998:63,usability,support,support,63,Add Batch normalisation layer (from Liam Bartsch); This PR add support for batch normalisation for MethodDL (deep learning in TMVA). The code has been developed mainly by Liam Bartsch (trainee in June 2019),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3998
https://github.com/root-project/root/pull/3998:114,usability,learn,learning,114,Add Batch normalisation layer (from Liam Bartsch); This PR add support for batch normalisation for MethodDL (deep learning in TMVA). The code has been developed mainly by Liam Bartsch (trainee in June 2019),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3998
https://github.com/root-project/root/pull/3999:282,deployability,log,logGamma,282,"[RF] Add Barlow-Beeston tutorial and clean up related classes.; - Add a tutorial for the Barlow-Beeston method, rf709_BarlowBeeston.C. - Remove legacy iterators from RooHistConstraint and RooParamHistFunc,. which are used to implement the Barlow-Beeston method. - Replace iterative logGamma in RooHistConstraint by std::lgamma. - Make sure that bins with zero entries don't get touched by MINUIT. This reduces the number of degenerate parameters without any effect, and. stabilises the covariance matrix. - Update documentation of the respective classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3999
https://github.com/root-project/root/pull/3999:507,deployability,Updat,Update,507,"[RF] Add Barlow-Beeston tutorial and clean up related classes.; - Add a tutorial for the Barlow-Beeston method, rf709_BarlowBeeston.C. - Remove legacy iterators from RooHistConstraint and RooParamHistFunc,. which are used to implement the Barlow-Beeston method. - Replace iterative logGamma in RooHistConstraint by std::lgamma. - Make sure that bins with zero entries don't get touched by MINUIT. This reduces the number of degenerate parameters without any effect, and. stabilises the covariance matrix. - Update documentation of the respective classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3999
https://github.com/root-project/root/pull/3999:402,energy efficiency,reduc,reduces,402,"[RF] Add Barlow-Beeston tutorial and clean up related classes.; - Add a tutorial for the Barlow-Beeston method, rf709_BarlowBeeston.C. - Remove legacy iterators from RooHistConstraint and RooParamHistFunc,. which are used to implement the Barlow-Beeston method. - Replace iterative logGamma in RooHistConstraint by std::lgamma. - Make sure that bins with zero entries don't get touched by MINUIT. This reduces the number of degenerate parameters without any effect, and. stabilises the covariance matrix. - Update documentation of the respective classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3999
https://github.com/root-project/root/pull/3999:435,modifiability,paramet,parameters,435,"[RF] Add Barlow-Beeston tutorial and clean up related classes.; - Add a tutorial for the Barlow-Beeston method, rf709_BarlowBeeston.C. - Remove legacy iterators from RooHistConstraint and RooParamHistFunc,. which are used to implement the Barlow-Beeston method. - Replace iterative logGamma in RooHistConstraint by std::lgamma. - Make sure that bins with zero entries don't get touched by MINUIT. This reduces the number of degenerate parameters without any effect, and. stabilises the covariance matrix. - Update documentation of the respective classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3999
https://github.com/root-project/root/pull/3999:471,reliability,stabil,stabilises,471,"[RF] Add Barlow-Beeston tutorial and clean up related classes.; - Add a tutorial for the Barlow-Beeston method, rf709_BarlowBeeston.C. - Remove legacy iterators from RooHistConstraint and RooParamHistFunc,. which are used to implement the Barlow-Beeston method. - Replace iterative logGamma in RooHistConstraint by std::lgamma. - Make sure that bins with zero entries don't get touched by MINUIT. This reduces the number of degenerate parameters without any effect, and. stabilises the covariance matrix. - Update documentation of the respective classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3999
https://github.com/root-project/root/pull/3999:282,safety,log,logGamma,282,"[RF] Add Barlow-Beeston tutorial and clean up related classes.; - Add a tutorial for the Barlow-Beeston method, rf709_BarlowBeeston.C. - Remove legacy iterators from RooHistConstraint and RooParamHistFunc,. which are used to implement the Barlow-Beeston method. - Replace iterative logGamma in RooHistConstraint by std::lgamma. - Make sure that bins with zero entries don't get touched by MINUIT. This reduces the number of degenerate parameters without any effect, and. stabilises the covariance matrix. - Update documentation of the respective classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3999
https://github.com/root-project/root/pull/3999:507,safety,Updat,Update,507,"[RF] Add Barlow-Beeston tutorial and clean up related classes.; - Add a tutorial for the Barlow-Beeston method, rf709_BarlowBeeston.C. - Remove legacy iterators from RooHistConstraint and RooParamHistFunc,. which are used to implement the Barlow-Beeston method. - Replace iterative logGamma in RooHistConstraint by std::lgamma. - Make sure that bins with zero entries don't get touched by MINUIT. This reduces the number of degenerate parameters without any effect, and. stabilises the covariance matrix. - Update documentation of the respective classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3999
https://github.com/root-project/root/pull/3999:282,security,log,logGamma,282,"[RF] Add Barlow-Beeston tutorial and clean up related classes.; - Add a tutorial for the Barlow-Beeston method, rf709_BarlowBeeston.C. - Remove legacy iterators from RooHistConstraint and RooParamHistFunc,. which are used to implement the Barlow-Beeston method. - Replace iterative logGamma in RooHistConstraint by std::lgamma. - Make sure that bins with zero entries don't get touched by MINUIT. This reduces the number of degenerate parameters without any effect, and. stabilises the covariance matrix. - Update documentation of the respective classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3999
https://github.com/root-project/root/pull/3999:507,security,Updat,Update,507,"[RF] Add Barlow-Beeston tutorial and clean up related classes.; - Add a tutorial for the Barlow-Beeston method, rf709_BarlowBeeston.C. - Remove legacy iterators from RooHistConstraint and RooParamHistFunc,. which are used to implement the Barlow-Beeston method. - Replace iterative logGamma in RooHistConstraint by std::lgamma. - Make sure that bins with zero entries don't get touched by MINUIT. This reduces the number of degenerate parameters without any effect, and. stabilises the covariance matrix. - Update documentation of the respective classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3999
https://github.com/root-project/root/pull/3999:282,testability,log,logGamma,282,"[RF] Add Barlow-Beeston tutorial and clean up related classes.; - Add a tutorial for the Barlow-Beeston method, rf709_BarlowBeeston.C. - Remove legacy iterators from RooHistConstraint and RooParamHistFunc,. which are used to implement the Barlow-Beeston method. - Replace iterative logGamma in RooHistConstraint by std::lgamma. - Make sure that bins with zero entries don't get touched by MINUIT. This reduces the number of degenerate parameters without any effect, and. stabilises the covariance matrix. - Update documentation of the respective classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3999
https://github.com/root-project/root/pull/3999:514,usability,document,documentation,514,"[RF] Add Barlow-Beeston tutorial and clean up related classes.; - Add a tutorial for the Barlow-Beeston method, rf709_BarlowBeeston.C. - Remove legacy iterators from RooHistConstraint and RooParamHistFunc,. which are used to implement the Barlow-Beeston method. - Replace iterative logGamma in RooHistConstraint by std::lgamma. - Make sure that bins with zero entries don't get touched by MINUIT. This reduces the number of degenerate parameters without any effect, and. stabilises the covariance matrix. - Update documentation of the respective classes.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/3999
https://github.com/root-project/root/pull/4000:14,deployability,integr,integral,14,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:44,deployability,integr,integrating,44,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:106,deployability,integr,integral,106,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:173,deployability,integr,integrals,173,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:14,integrability,integr,integral,14,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:44,integrability,integr,integrating,44,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:106,integrability,integr,integral,106,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:173,integrability,integr,integrals,173,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:14,interoperability,integr,integral,14,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:44,interoperability,integr,integrating,44,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:106,interoperability,integr,integral,106,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:173,interoperability,integr,integrals,173,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:14,modifiability,integr,integral,14,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:44,modifiability,integr,integrating,44,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:106,modifiability,integr,integral,106,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:173,modifiability,integr,integrals,173,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:14,reliability,integr,integral,14,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:44,reliability,integr,integrating,44,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:106,reliability,integr,integral,106,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:173,reliability,integr,integrals,173,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:5,safety,Sanit,Sanitise,5,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:5,security,Sanit,Sanitise,5,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:14,security,integr,integral,14,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:44,security,integr,integrating,44,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:106,security,integr,integral,106,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:173,security,integr,integrals,173,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:14,testability,integr,integral,14,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:44,testability,integr,integrating,44,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:106,testability,integr,integral,106,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4000:173,testability,integr,integrals,173,"[RF] Sanitise integral of RooCBShape.; When integrating a region next to a narrow Crystal Ball shape, the integral. can evaluate to zero. Since RooFit cannot deal with zero integrals,. the CBShape will now return the smallest possible double. See also https://root-forum.cern.ch/t/fit-a-double-crystal-ball-with-roofitranges/34599",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4000
https://github.com/root-project/root/pull/4005:44,deployability,modul,module,44,[cxxmodules] Do not generate a rootmap if a module exists.; Depends on #3850.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4005
https://github.com/root-project/root/pull/4005:60,deployability,Depend,Depends,60,[cxxmodules] Do not generate a rootmap if a module exists.; Depends on #3850.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4005
https://github.com/root-project/root/pull/4005:60,integrability,Depend,Depends,60,[cxxmodules] Do not generate a rootmap if a module exists.; Depends on #3850.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4005
https://github.com/root-project/root/pull/4005:44,modifiability,modul,module,44,[cxxmodules] Do not generate a rootmap if a module exists.; Depends on #3850.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4005
https://github.com/root-project/root/pull/4005:60,modifiability,Depend,Depends,60,[cxxmodules] Do not generate a rootmap if a module exists.; Depends on #3850.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4005
https://github.com/root-project/root/pull/4005:44,safety,modul,module,44,[cxxmodules] Do not generate a rootmap if a module exists.; Depends on #3850.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4005
https://github.com/root-project/root/pull/4005:60,safety,Depend,Depends,60,[cxxmodules] Do not generate a rootmap if a module exists.; Depends on #3850.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4005
https://github.com/root-project/root/pull/4005:60,testability,Depend,Depends,60,[cxxmodules] Do not generate a rootmap if a module exists.; Depends on #3850.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4005
https://github.com/root-project/root/pull/4006:705,availability,error,error,705,"Allow to select system of units (TGeo/Geant4) at run-time; Allow to select the system of units in TGeo at run-time and allow to switch to. Geant4 (mm,ns,MeV) from the TGeo default TGeo (mm,s,keV). Example:. ```. #include ""TGeant4SystemOfUnits.h"". .... TGeant4Unit::setUnitType(TGeant4Unit::kTGeant4Units). ```. Then the material properties shall be as described in TGeant4SystemOfUnits.h. The default is:. ```. #include ""TGeoSystemOfUnits.h"". .... TGeo4Unit::setUnitType(TGeoUnit::kTGeoUnits). ```. Please note: . 1) This code is not necessary. If users do nothing the behavior stays as it is now. 2) Units have to be set *before* the first TElement or TMaterial constructor is called,. Otherwise a fatal error is issued (TError::Fatal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4006:53,performance,time,time,53,"Allow to select system of units (TGeo/Geant4) at run-time; Allow to select the system of units in TGeo at run-time and allow to switch to. Geant4 (mm,ns,MeV) from the TGeo default TGeo (mm,s,keV). Example:. ```. #include ""TGeant4SystemOfUnits.h"". .... TGeant4Unit::setUnitType(TGeant4Unit::kTGeant4Units). ```. Then the material properties shall be as described in TGeant4SystemOfUnits.h. The default is:. ```. #include ""TGeoSystemOfUnits.h"". .... TGeo4Unit::setUnitType(TGeoUnit::kTGeoUnits). ```. Please note: . 1) This code is not necessary. If users do nothing the behavior stays as it is now. 2) Units have to be set *before* the first TElement or TMaterial constructor is called,. Otherwise a fatal error is issued (TError::Fatal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4006:110,performance,time,time,110,"Allow to select system of units (TGeo/Geant4) at run-time; Allow to select the system of units in TGeo at run-time and allow to switch to. Geant4 (mm,ns,MeV) from the TGeo default TGeo (mm,s,keV). Example:. ```. #include ""TGeant4SystemOfUnits.h"". .... TGeant4Unit::setUnitType(TGeant4Unit::kTGeant4Units). ```. Then the material properties shall be as described in TGeant4SystemOfUnits.h. The default is:. ```. #include ""TGeoSystemOfUnits.h"". .... TGeo4Unit::setUnitType(TGeoUnit::kTGeoUnits). ```. Please note: . 1) This code is not necessary. If users do nothing the behavior stays as it is now. 2) Units have to be set *before* the first TElement or TMaterial constructor is called,. Otherwise a fatal error is issued (TError::Fatal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4006:705,performance,error,error,705,"Allow to select system of units (TGeo/Geant4) at run-time; Allow to select the system of units in TGeo at run-time and allow to switch to. Geant4 (mm,ns,MeV) from the TGeo default TGeo (mm,s,keV). Example:. ```. #include ""TGeant4SystemOfUnits.h"". .... TGeant4Unit::setUnitType(TGeant4Unit::kTGeant4Units). ```. Then the material properties shall be as described in TGeant4SystemOfUnits.h. The default is:. ```. #include ""TGeoSystemOfUnits.h"". .... TGeo4Unit::setUnitType(TGeoUnit::kTGeoUnits). ```. Please note: . 1) This code is not necessary. If users do nothing the behavior stays as it is now. 2) Units have to be set *before* the first TElement or TMaterial constructor is called,. Otherwise a fatal error is issued (TError::Fatal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4006:705,safety,error,error,705,"Allow to select system of units (TGeo/Geant4) at run-time; Allow to select the system of units in TGeo at run-time and allow to switch to. Geant4 (mm,ns,MeV) from the TGeo default TGeo (mm,s,keV). Example:. ```. #include ""TGeant4SystemOfUnits.h"". .... TGeant4Unit::setUnitType(TGeant4Unit::kTGeant4Units). ```. Then the material properties shall be as described in TGeant4SystemOfUnits.h. The default is:. ```. #include ""TGeoSystemOfUnits.h"". .... TGeo4Unit::setUnitType(TGeoUnit::kTGeoUnits). ```. Please note: . 1) This code is not necessary. If users do nothing the behavior stays as it is now. 2) Units have to be set *before* the first TElement or TMaterial constructor is called,. Otherwise a fatal error is issued (TError::Fatal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4006:26,testability,unit,units,26,"Allow to select system of units (TGeo/Geant4) at run-time; Allow to select the system of units in TGeo at run-time and allow to switch to. Geant4 (mm,ns,MeV) from the TGeo default TGeo (mm,s,keV). Example:. ```. #include ""TGeant4SystemOfUnits.h"". .... TGeant4Unit::setUnitType(TGeant4Unit::kTGeant4Units). ```. Then the material properties shall be as described in TGeant4SystemOfUnits.h. The default is:. ```. #include ""TGeoSystemOfUnits.h"". .... TGeo4Unit::setUnitType(TGeoUnit::kTGeoUnits). ```. Please note: . 1) This code is not necessary. If users do nothing the behavior stays as it is now. 2) Units have to be set *before* the first TElement or TMaterial constructor is called,. Otherwise a fatal error is issued (TError::Fatal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4006:89,testability,unit,units,89,"Allow to select system of units (TGeo/Geant4) at run-time; Allow to select the system of units in TGeo at run-time and allow to switch to. Geant4 (mm,ns,MeV) from the TGeo default TGeo (mm,s,keV). Example:. ```. #include ""TGeant4SystemOfUnits.h"". .... TGeant4Unit::setUnitType(TGeant4Unit::kTGeant4Units). ```. Then the material properties shall be as described in TGeant4SystemOfUnits.h. The default is:. ```. #include ""TGeoSystemOfUnits.h"". .... TGeo4Unit::setUnitType(TGeoUnit::kTGeoUnits). ```. Please note: . 1) This code is not necessary. If users do nothing the behavior stays as it is now. 2) Units have to be set *before* the first TElement or TMaterial constructor is called,. Otherwise a fatal error is issued (TError::Fatal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4006:601,testability,Unit,Units,601,"Allow to select system of units (TGeo/Geant4) at run-time; Allow to select the system of units in TGeo at run-time and allow to switch to. Geant4 (mm,ns,MeV) from the TGeo default TGeo (mm,s,keV). Example:. ```. #include ""TGeant4SystemOfUnits.h"". .... TGeant4Unit::setUnitType(TGeant4Unit::kTGeant4Units). ```. Then the material properties shall be as described in TGeant4SystemOfUnits.h. The default is:. ```. #include ""TGeoSystemOfUnits.h"". .... TGeo4Unit::setUnitType(TGeoUnit::kTGeoUnits). ```. Please note: . 1) This code is not necessary. If users do nothing the behavior stays as it is now. 2) Units have to be set *before* the first TElement or TMaterial constructor is called,. Otherwise a fatal error is issued (TError::Fatal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4006:548,usability,user,users,548,"Allow to select system of units (TGeo/Geant4) at run-time; Allow to select the system of units in TGeo at run-time and allow to switch to. Geant4 (mm,ns,MeV) from the TGeo default TGeo (mm,s,keV). Example:. ```. #include ""TGeant4SystemOfUnits.h"". .... TGeant4Unit::setUnitType(TGeant4Unit::kTGeant4Units). ```. Then the material properties shall be as described in TGeant4SystemOfUnits.h. The default is:. ```. #include ""TGeoSystemOfUnits.h"". .... TGeo4Unit::setUnitType(TGeoUnit::kTGeoUnits). ```. Please note: . 1) This code is not necessary. If users do nothing the behavior stays as it is now. 2) Units have to be set *before* the first TElement or TMaterial constructor is called,. Otherwise a fatal error is issued (TError::Fatal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4006:569,usability,behavi,behavior,569,"Allow to select system of units (TGeo/Geant4) at run-time; Allow to select the system of units in TGeo at run-time and allow to switch to. Geant4 (mm,ns,MeV) from the TGeo default TGeo (mm,s,keV). Example:. ```. #include ""TGeant4SystemOfUnits.h"". .... TGeant4Unit::setUnitType(TGeant4Unit::kTGeant4Units). ```. Then the material properties shall be as described in TGeant4SystemOfUnits.h. The default is:. ```. #include ""TGeoSystemOfUnits.h"". .... TGeo4Unit::setUnitType(TGeoUnit::kTGeoUnits). ```. Please note: . 1) This code is not necessary. If users do nothing the behavior stays as it is now. 2) Units have to be set *before* the first TElement or TMaterial constructor is called,. Otherwise a fatal error is issued (TError::Fatal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4006:705,usability,error,error,705,"Allow to select system of units (TGeo/Geant4) at run-time; Allow to select the system of units in TGeo at run-time and allow to switch to. Geant4 (mm,ns,MeV) from the TGeo default TGeo (mm,s,keV). Example:. ```. #include ""TGeant4SystemOfUnits.h"". .... TGeant4Unit::setUnitType(TGeant4Unit::kTGeant4Units). ```. Then the material properties shall be as described in TGeant4SystemOfUnits.h. The default is:. ```. #include ""TGeoSystemOfUnits.h"". .... TGeo4Unit::setUnitType(TGeoUnit::kTGeoUnits). ```. Please note: . 1) This code is not necessary. If users do nothing the behavior stays as it is now. 2) Units have to be set *before* the first TElement or TMaterial constructor is called,. Otherwise a fatal error is issued (TError::Fatal).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4006
https://github.com/root-project/root/pull/4007:145,safety,safe,safely,145,fixing default constructor of RooThresholdCategory; RooThresholdCategory cannot be successfully streamed because not all members are initialized safely in the default constructor. This PR fixes that.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4007
https://github.com/root-project/root/pull/4008:77,deployability,infrastructur,infrastructure,77,"[WIP] Implement schema printing for NTuple; This pull request adds a visitor infrastructure for the RField class. A concrete implementation, the print visitor, is used to show information about the field names and types of an ntuple on the terminal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4008
https://github.com/root-project/root/pull/4008:16,integrability,schema,schema,16,"[WIP] Implement schema printing for NTuple; This pull request adds a visitor infrastructure for the RField class. A concrete implementation, the print visitor, is used to show information about the field names and types of an ntuple on the terminal.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4008
https://github.com/root-project/root/pull/4009:25,deployability,updat,updates,25,[RF][Docs] Documentation updates / fixes collected througout june.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4009
https://github.com/root-project/root/pull/4009:25,safety,updat,updates,25,[RF][Docs] Documentation updates / fixes collected througout june.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4009
https://github.com/root-project/root/pull/4009:25,security,updat,updates,25,[RF][Docs] Documentation updates / fixes collected througout june.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4009
https://github.com/root-project/root/pull/4009:11,usability,Document,Documentation,11,[RF][Docs] Documentation updates / fixes collected througout june.;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4009
https://github.com/root-project/root/pull/4010:24,deployability,build,build-related,24,"[cmake] Force search of build-related files without CMAKE_FIND_ROOT_PATH:; . Conda sets a prefix for cross-compilation. That prevents CMake from finding headers of. the current ROOT build, see https://sft.its.cern.ch/jira/browse/ROOT-10210 and. https://github.com/conda-forge/root-feedstock/issues/38 . Instead, turn off CMAKE_FIND_ROOT_PATH. for headers searched through relative directories, or absolute ones that start with the. build or source directory. (Do not assume that CURRENT build dir is a subdir of CMAKE_BUILD_DIR.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4010
https://github.com/root-project/root/pull/4010:182,deployability,build,build,182,"[cmake] Force search of build-related files without CMAKE_FIND_ROOT_PATH:; . Conda sets a prefix for cross-compilation. That prevents CMake from finding headers of. the current ROOT build, see https://sft.its.cern.ch/jira/browse/ROOT-10210 and. https://github.com/conda-forge/root-feedstock/issues/38 . Instead, turn off CMAKE_FIND_ROOT_PATH. for headers searched through relative directories, or absolute ones that start with the. build or source directory. (Do not assume that CURRENT build dir is a subdir of CMAKE_BUILD_DIR.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4010
https://github.com/root-project/root/pull/4010:432,deployability,build,build,432,"[cmake] Force search of build-related files without CMAKE_FIND_ROOT_PATH:; . Conda sets a prefix for cross-compilation. That prevents CMake from finding headers of. the current ROOT build, see https://sft.its.cern.ch/jira/browse/ROOT-10210 and. https://github.com/conda-forge/root-feedstock/issues/38 . Instead, turn off CMAKE_FIND_ROOT_PATH. for headers searched through relative directories, or absolute ones that start with the. build or source directory. (Do not assume that CURRENT build dir is a subdir of CMAKE_BUILD_DIR.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4010
https://github.com/root-project/root/pull/4010:487,deployability,build,build,487,"[cmake] Force search of build-related files without CMAKE_FIND_ROOT_PATH:; . Conda sets a prefix for cross-compilation. That prevents CMake from finding headers of. the current ROOT build, see https://sft.its.cern.ch/jira/browse/ROOT-10210 and. https://github.com/conda-forge/root-feedstock/issues/38 . Instead, turn off CMAKE_FIND_ROOT_PATH. for headers searched through relative directories, or absolute ones that start with the. build or source directory. (Do not assume that CURRENT build dir is a subdir of CMAKE_BUILD_DIR.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4010
https://github.com/root-project/root/pull/4010:169,energy efficiency,current,current,169,"[cmake] Force search of build-related files without CMAKE_FIND_ROOT_PATH:; . Conda sets a prefix for cross-compilation. That prevents CMake from finding headers of. the current ROOT build, see https://sft.its.cern.ch/jira/browse/ROOT-10210 and. https://github.com/conda-forge/root-feedstock/issues/38 . Instead, turn off CMAKE_FIND_ROOT_PATH. for headers searched through relative directories, or absolute ones that start with the. build or source directory. (Do not assume that CURRENT build dir is a subdir of CMAKE_BUILD_DIR.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4010
https://github.com/root-project/root/pull/4010:479,energy efficiency,CURRENT,CURRENT,479,"[cmake] Force search of build-related files without CMAKE_FIND_ROOT_PATH:; . Conda sets a prefix for cross-compilation. That prevents CMake from finding headers of. the current ROOT build, see https://sft.its.cern.ch/jira/browse/ROOT-10210 and. https://github.com/conda-forge/root-feedstock/issues/38 . Instead, turn off CMAKE_FIND_ROOT_PATH. for headers searched through relative directories, or absolute ones that start with the. build or source directory. (Do not assume that CURRENT build dir is a subdir of CMAKE_BUILD_DIR.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4010
https://github.com/root-project/root/pull/4010:502,integrability,sub,subdir,502,"[cmake] Force search of build-related files without CMAKE_FIND_ROOT_PATH:; . Conda sets a prefix for cross-compilation. That prevents CMake from finding headers of. the current ROOT build, see https://sft.its.cern.ch/jira/browse/ROOT-10210 and. https://github.com/conda-forge/root-feedstock/issues/38 . Instead, turn off CMAKE_FIND_ROOT_PATH. for headers searched through relative directories, or absolute ones that start with the. build or source directory. (Do not assume that CURRENT build dir is a subdir of CMAKE_BUILD_DIR.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4010
https://github.com/root-project/root/pull/4010:125,safety,prevent,prevents,125,"[cmake] Force search of build-related files without CMAKE_FIND_ROOT_PATH:; . Conda sets a prefix for cross-compilation. That prevents CMake from finding headers of. the current ROOT build, see https://sft.its.cern.ch/jira/browse/ROOT-10210 and. https://github.com/conda-forge/root-feedstock/issues/38 . Instead, turn off CMAKE_FIND_ROOT_PATH. for headers searched through relative directories, or absolute ones that start with the. build or source directory. (Do not assume that CURRENT build dir is a subdir of CMAKE_BUILD_DIR.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4010
https://github.com/root-project/root/pull/4010:125,security,preven,prevents,125,"[cmake] Force search of build-related files without CMAKE_FIND_ROOT_PATH:; . Conda sets a prefix for cross-compilation. That prevents CMake from finding headers of. the current ROOT build, see https://sft.its.cern.ch/jira/browse/ROOT-10210 and. https://github.com/conda-forge/root-feedstock/issues/38 . Instead, turn off CMAKE_FIND_ROOT_PATH. for headers searched through relative directories, or absolute ones that start with the. build or source directory. (Do not assume that CURRENT build dir is a subdir of CMAKE_BUILD_DIR.).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4010
https://github.com/root-project/root/pull/4011:286,deployability,modul,modules,286,Replace CXX_STANDARD with STANDARD_COMPILE_OPTION; When compiling for conda we enable C++17 support but the compiler only supports `--std=cxx1z`. . Uses the same [fix as is used for `root-config`](https://github.com/root-project/root/blob/88ed0c6ea16f962b89168417bfff23891429dd63/cmake/modules/RootConfiguration.cmake#L570).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4011
https://github.com/root-project/root/pull/4011:286,modifiability,modul,modules,286,Replace CXX_STANDARD with STANDARD_COMPILE_OPTION; When compiling for conda we enable C++17 support but the compiler only supports `--std=cxx1z`. . Uses the same [fix as is used for `root-config`](https://github.com/root-project/root/blob/88ed0c6ea16f962b89168417bfff23891429dd63/cmake/modules/RootConfiguration.cmake#L570).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4011
https://github.com/root-project/root/pull/4011:286,safety,modul,modules,286,Replace CXX_STANDARD with STANDARD_COMPILE_OPTION; When compiling for conda we enable C++17 support but the compiler only supports `--std=cxx1z`. . Uses the same [fix as is used for `root-config`](https://github.com/root-project/root/blob/88ed0c6ea16f962b89168417bfff23891429dd63/cmake/modules/RootConfiguration.cmake#L570).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4011
https://github.com/root-project/root/pull/4011:92,usability,support,support,92,Replace CXX_STANDARD with STANDARD_COMPILE_OPTION; When compiling for conda we enable C++17 support but the compiler only supports `--std=cxx1z`. . Uses the same [fix as is used for `root-config`](https://github.com/root-project/root/blob/88ed0c6ea16f962b89168417bfff23891429dd63/cmake/modules/RootConfiguration.cmake#L570).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4011
https://github.com/root-project/root/pull/4011:122,usability,support,supports,122,Replace CXX_STANDARD with STANDARD_COMPILE_OPTION; When compiling for conda we enable C++17 support but the compiler only supports `--std=cxx1z`. . Uses the same [fix as is used for `root-config`](https://github.com/root-project/root/blob/88ed0c6ea16f962b89168417bfff23891429dd63/cmake/modules/RootConfiguration.cmake#L570).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4011
https://github.com/root-project/root/pull/4013:0,deployability,Fail,Fail,0,Fail if CMAKE_SYSTEM_PROCESSOR is not recognised; Currently if `CMAKE_SYSTEM_PROCESSOR` is not set ROOT silently falls back to returning `-m32` in `root-config --cflags` among other things. This can easily happen when cross-compiling and caused an issue in the first build of 6.18.00 for Conda (see https://github.com/conda-forge/root-feedstock/issues/41). I think it would be safer to fail immediately if the architecture is not recognised rather than allowing this to be missed and this is the approach used [elsewhere](https://boringssl.googlesource.com/boringssl/+/2272/CMakeLists.txt).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4013
https://github.com/root-project/root/pull/4013:267,deployability,build,build,267,Fail if CMAKE_SYSTEM_PROCESSOR is not recognised; Currently if `CMAKE_SYSTEM_PROCESSOR` is not set ROOT silently falls back to returning `-m32` in `root-config --cflags` among other things. This can easily happen when cross-compiling and caused an issue in the first build of 6.18.00 for Conda (see https://github.com/conda-forge/root-feedstock/issues/41). I think it would be safer to fail immediately if the architecture is not recognised rather than allowing this to be missed and this is the approach used [elsewhere](https://boringssl.googlesource.com/boringssl/+/2272/CMakeLists.txt).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4013
https://github.com/root-project/root/pull/4013:386,deployability,fail,fail,386,Fail if CMAKE_SYSTEM_PROCESSOR is not recognised; Currently if `CMAKE_SYSTEM_PROCESSOR` is not set ROOT silently falls back to returning `-m32` in `root-config --cflags` among other things. This can easily happen when cross-compiling and caused an issue in the first build of 6.18.00 for Conda (see https://github.com/conda-forge/root-feedstock/issues/41). I think it would be safer to fail immediately if the architecture is not recognised rather than allowing this to be missed and this is the approach used [elsewhere](https://boringssl.googlesource.com/boringssl/+/2272/CMakeLists.txt).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4013
https://github.com/root-project/root/pull/4013:50,energy efficiency,Current,Currently,50,Fail if CMAKE_SYSTEM_PROCESSOR is not recognised; Currently if `CMAKE_SYSTEM_PROCESSOR` is not set ROOT silently falls back to returning `-m32` in `root-config --cflags` among other things. This can easily happen when cross-compiling and caused an issue in the first build of 6.18.00 for Conda (see https://github.com/conda-forge/root-feedstock/issues/41). I think it would be safer to fail immediately if the architecture is not recognised rather than allowing this to be missed and this is the approach used [elsewhere](https://boringssl.googlesource.com/boringssl/+/2272/CMakeLists.txt).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4013
https://github.com/root-project/root/pull/4013:410,interoperability,architectur,architecture,410,Fail if CMAKE_SYSTEM_PROCESSOR is not recognised; Currently if `CMAKE_SYSTEM_PROCESSOR` is not set ROOT silently falls back to returning `-m32` in `root-config --cflags` among other things. This can easily happen when cross-compiling and caused an issue in the first build of 6.18.00 for Conda (see https://github.com/conda-forge/root-feedstock/issues/41). I think it would be safer to fail immediately if the architecture is not recognised rather than allowing this to be missed and this is the approach used [elsewhere](https://boringssl.googlesource.com/boringssl/+/2272/CMakeLists.txt).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4013
https://github.com/root-project/root/pull/4013:0,reliability,Fail,Fail,0,Fail if CMAKE_SYSTEM_PROCESSOR is not recognised; Currently if `CMAKE_SYSTEM_PROCESSOR` is not set ROOT silently falls back to returning `-m32` in `root-config --cflags` among other things. This can easily happen when cross-compiling and caused an issue in the first build of 6.18.00 for Conda (see https://github.com/conda-forge/root-feedstock/issues/41). I think it would be safer to fail immediately if the architecture is not recognised rather than allowing this to be missed and this is the approach used [elsewhere](https://boringssl.googlesource.com/boringssl/+/2272/CMakeLists.txt).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4013
https://github.com/root-project/root/pull/4013:386,reliability,fail,fail,386,Fail if CMAKE_SYSTEM_PROCESSOR is not recognised; Currently if `CMAKE_SYSTEM_PROCESSOR` is not set ROOT silently falls back to returning `-m32` in `root-config --cflags` among other things. This can easily happen when cross-compiling and caused an issue in the first build of 6.18.00 for Conda (see https://github.com/conda-forge/root-feedstock/issues/41). I think it would be safer to fail immediately if the architecture is not recognised rather than allowing this to be missed and this is the approach used [elsewhere](https://boringssl.googlesource.com/boringssl/+/2272/CMakeLists.txt).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4013
https://github.com/root-project/root/pull/4013:377,safety,safe,safer,377,Fail if CMAKE_SYSTEM_PROCESSOR is not recognised; Currently if `CMAKE_SYSTEM_PROCESSOR` is not set ROOT silently falls back to returning `-m32` in `root-config --cflags` among other things. This can easily happen when cross-compiling and caused an issue in the first build of 6.18.00 for Conda (see https://github.com/conda-forge/root-feedstock/issues/41). I think it would be safer to fail immediately if the architecture is not recognised rather than allowing this to be missed and this is the approach used [elsewhere](https://boringssl.googlesource.com/boringssl/+/2272/CMakeLists.txt).,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4013
https://github.com/root-project/root/pull/4014:26,deployability,manag,management,26,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:105,deployability,manag,management,105,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:348,deployability,Releas,ReleasePage,348,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:26,energy efficiency,manag,management,26,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:105,energy efficiency,manag,management,105,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:314,energy efficiency,alloc,allocate,314,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:174,integrability,asynchron,asynchronous,174,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:187,integrability,interfac,interfaces,187,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:187,interoperability,interfac,interfaces,187,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:416,interoperability,share,shared,416,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:187,modifiability,interfac,interfaces,187,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:19,performance,memor,memory,19,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:98,performance,memor,memory,98,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:174,performance,asynch,asynchronous,174,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:470,performance,memor,memory,470,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:26,safety,manag,management,26,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:105,safety,manag,management,105,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:19,usability,memor,memory,19,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:98,usability,memor,memory,98,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:470,usability,memor,memory,470,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4014:557,usability,user,users,557,"[ntuple] Move page memory management to page storage classes; Change primary responsible for page memory management from page pool to page storage. This is a preparation for asynchronous interfaces. In the new scheme, RColumn uses `RPageStorage::ReservePage` (writing) or `RPageStorage::PopulatePage` (reading) to allocate pages and `RPageStorage::ReleasePage` for freeing them. The page storage, in turn, may use a shared page pool. In this case, ownership of a page's memory is transferred to the page pool, which will free a page if there are no further users. Addresses ROOT-10205",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4014
https://github.com/root-project/root/pull/4015:102,energy efficiency,power,power,102,"[RF] Add new `RooExpPoly` and `RooPower` PDFs; At the moment, it's not really possible to implement a power law or a exponential of a polynomial (as used, for example, in the ATLAS H->yy analysis) without using RooGenericPdf. This PR adds two new Pdf classes that implement an exponential polynomial and a power law.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4015:306,energy efficiency,power,power,306,"[RF] Add new `RooExpPoly` and `RooPower` PDFs; At the moment, it's not really possible to implement a power law or a exponential of a polynomial (as used, for example, in the ATLAS H->yy analysis) without using RooGenericPdf. This PR adds two new Pdf classes that implement an exponential polynomial and a power law.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4015
https://github.com/root-project/root/pull/4016:30,deployability,modul,module,30,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:82,deployability,modul,module,82,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:163,deployability,modul,module,163,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:273,deployability,modul,module,273,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:337,deployability,modul,modules,337,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:404,deployability,modul,modules,404,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:483,deployability,modul,modules,483,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:578,deployability,modul,modules,578,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:628,deployability,modul,modules,628,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:642,deployability,contain,contain,642,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1042,deployability,modul,modules,1042,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1051,deployability,modul,modulesoff,1051,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1084,deployability,modul,modules,1084,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1093,deployability,modul,moduleson,1093,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1138,deployability,modul,modules,1138,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1413,deployability,modul,modules,1413,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1505,deployability,modul,modules,1505,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1833,deployability,Depend,Depends,1833,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:250,energy efficiency,load,load,250,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:330,energy efficiency,load,loaded,330,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:346,energy efficiency,Current,Currently,346,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:416,energy efficiency,load,loaded,416,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:464,energy efficiency,current,currently,464,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:474,energy efficiency,load,load,474,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:569,energy efficiency,load,load,569,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:754,energy efficiency,measur,measurements,754,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1184,energy efficiency,Core,Core,1184,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1199,energy efficiency,CPU,CPU,1199,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1494,energy efficiency,load,loads,1494,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1555,integrability,sub,subsequent,1555,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1833,integrability,Depend,Depends,1833,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:30,modifiability,modul,module,30,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:82,modifiability,modul,module,82,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:163,modifiability,modul,module,163,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:273,modifiability,modul,module,273,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:337,modifiability,modul,modules,337,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:404,modifiability,modul,modules,404,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:483,modifiability,modul,modules,483,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:578,modifiability,modul,modules,578,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:628,modifiability,modul,modules,628,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1042,modifiability,modul,modules,1042,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1051,modifiability,modul,modulesoff,1051,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1084,modifiability,modul,modules,1084,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1093,modifiability,modul,moduleson,1093,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1138,modifiability,modul,modules,1138,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1413,modifiability,modul,modules,1413,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1505,modifiability,modul,modules,1505,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:1833,modifiability,Depend,Depends,1833,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:49,performance,improve perform,improve performance,49,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
https://github.com/root-project/root/pull/4016:122,performance,disk,disk,122,"[cxxmodules] Implement global module indexing to improve performance.; The global module index represents an efficient on-disk hash table which stores identifier->module mapping. Every time clang finds a unknown identifier we are informed and we can load the corresponding module on demand. This way we can provide minimal set of loaded modules. Currently, we see that for hsimple.C only the half of the modules are loaded. This can be further improved because we currently load all modules which have an identifier, that is when looking for (for example TPad) we will load all modules which have the identifier TPad, including modules which contain only a forward declaration of it. . Kudos Arpitha Raghunandan (@arpi-r)! We still need some performance measurements but the preliminary results are promising. Performance. ===. Methodology. ---. We have a forwarding root.exe which essentially calls /usr/bin/time -v root.exe $@. We have processed and stored this information in csv files. We have run in three modes:. 1) root master without modules (modulesoff). 2) root master with modules (moduleson). 3) root master with this PR with modules (gmi). Run on `Ubuntu 18.10 on Intel® Core™ i5-8250U CPU @ 1.60GHz × 8`. Results Interpretation. ---. A general comparison between 2) and 3) show that this PR makes ROOT about 3% faster and 25% more memory efficient. A general comparison between 1) and 3) shows that modules are still less efficient in a few cases which is expected because the PR loads more modules than it should. This will be addressed in subsequent PRs. A good trend is that some test already show that 3) is better than 1). The raw data could be found [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit#gid=1476035460). [work was done by Arpitha Raghunandan (@arpi-r)]. Depends on #4005.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/4016
