id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/6385:4532,deployability,modul,module,4532,RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4545,deployability,Fail,Failed,4545,d to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: erro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4560,deployability,modul,module,4560,e RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unq,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4572,deployability,Fail,Failed,4572,ed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4587,deployability,modul,module,4587,le Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4609,deployability,Fail,Failed,4609,d module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown typ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4624,deployability,modul,module,4624,ser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4642,deployability,Fail,Failed,4642,d module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<<,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4657,deployability,modul,module,4657,roc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interact,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4672,deployability,Fail,Failed,4672,load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4687,deployability,modul,module,4687,Stats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: err,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4709,deployability,Fail,Failed,4709,module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualifi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4724,deployability,modul,module,4724,der. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4739,deployability,Fail,Failed,4739,load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4754,deployability,modul,module,4754,of. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4771,deployability,Fail,Failed,4771,d module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #if,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4786,deployability,modul,module,4786,. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4801,deployability,Fail,Failed,4801,d module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling intera,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4816,deployability,modul,module,4816,ailed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line incl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4829,deployability,Fail,Failed,4829, module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4844,deployability,modul,module,4844,r. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expecte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4863,deployability,Fail,Failed,4863,odule FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4878,deployability,modul,module,4878,led to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4891,deployability,Fail,Failed,4891,odule GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation vi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4906,deployability,modul,module,4906,ailed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ======,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4919,deployability,Fail,Failed,4919, module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4934,deployability,modul,module,4934,Display. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ==================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4947,deployability,Fail,Failed,4947,ed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===============================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4962,deployability,modul,module,4962,le RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4981,deployability,Fail,Failed,4981,ed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4996,deployability,modul,module,4996,le Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the enti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5024,deployability,Fail,Failed,5024,e SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all thread,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5039,deployability,modul,module,5039, to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5056,deployability,Fail,Failed,5056,MLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ============================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5071,deployability,modul,module,5071, load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5086,deployability,Fail,Failed,5086,OT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ==========================================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5101,deployability,modul,module,5101,ed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5117,deployability,Fail,Failed,5117,e std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in wai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5132,deployability,modul,module,5132,o load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5152,deployability,Fail,Failed,5152,stDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5167,deployability,modul,module,5167,to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5184,deployability,Fail,Failed,5184,11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5199,deployability,modul,module,5199,o load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5218,deployability,Fail,Failed,5218,Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x0000,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5233,deployability,modul,module,5233,module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5246,deployability,Fail,Failed,5246,layer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5261,deployability,modul,module,5261,o load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5292,deployability,Fail,Failed,5292,o load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5307,deployability,modul,module,5307,ibc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5330,deployability,Fail,Failed,5330,ule ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_pla,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5345,deployability,modul,module,5345,tion_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehol,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5361,deployability,Fail,Failed,5361,o load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_plac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5376,deployability,modul,module,5376,athMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5398,deployability,Fail,Failed,5398,d module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5413,deployability,modul,module,5413,Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:6002,deployability,stack,stack,6002,ing_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #4 <signal handler called>. #5 0x00007fad77e65e25 in ROOT::TMetaUtils::TNormalizedCtxtImpl::keepTypedef(clin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:6250,deployability,Stack,StackTrace,6250," load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #4 <signal handler called>. #5 0x00007fad77e65e25 in ROOT::TMetaUtils::TNormalizedCtxtImpl::keepTypedef(cling::LookupHelper const&, char const*, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:10575,deployability,stack,stack,10575,"cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #13 0x00007fad7dc8f49b in TRint::TRint(char const*, int*, char**, void*, int, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libRint.so.6.23. #14 0x0000563c1fb240d2 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007fad77e65e25 in ROOT::TMetaUtils::TNormalizedCtxtImpl::keepTypedef(cling::LookupHelper const&, char const*, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCling.so. #6 0x00007fad77e6659e in ROOT::TMetaUtils::TNormalizedCtxtImpl::TNormalizedCtxtImpl(cling::LookupHelper const&) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCling.so. #7 0x00007fad77e66db3 in ROOT::TMeta",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1818,energy efficiency,load,load,1818, the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1846,energy efficiency,load,load,1846,built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1873,energy efficiency,load,load,1873,ge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load modu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1916,energy efficiency,load,load,1916,dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1957,energy efficiency,load,load,1957,new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1992,energy efficiency,load,load,1992,ported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2045,energy efficiency,load,load,2045,da-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2057,energy efficiency,Core,Core,2057,1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load modu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2073,energy efficiency,load,load,2073,_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2101,energy efficiency,load,load,2101,cehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2128,energy efficiency,load,load,2128,placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load modu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2160,energy efficiency,load,load,2160,acehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2188,energy efficiency,load,load,2188,placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2225,energy efficiency,load,load,2225,ld_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2255,energy efficiency,load,load,2255,ld_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2289,energy efficiency,load,load,2289,Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2316,energy efficiency,load,load,2316,alParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2351,energy efficiency,load,load,2351, Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2380,energy efficiency,load,load,2380,rd library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2410,energy efficiency,load,load,2410,exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2439,energy efficiency,load,load,2439,interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2471,energy efficiency,load,load,2471,atal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2505,energy efficiency,load,load,2505,rr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPyt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2538,energy efficiency,load,load,2538,268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2567,energy efficiency,load,load,2567,acehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2601,energy efficiency,load,load,2601,old_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2654,energy efficiency,load,load,2654,_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module Mu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2685,energy efficiency,load,load,2685,placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2712,energy efficiency,load,load,2712,ld_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2747,energy efficiency,load,load,2747,aceh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2781,energy efficiency,load,load,2781,and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2812,energy efficiency,load,load,2812, to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2838,energy efficiency,load,load,2838,ed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2866,energy efficiency,load,load,2866,d to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2901,energy efficiency,load,load,2901,s. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module Gui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2933,energy efficiency,load,load,2933,undation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTW,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2963,energy efficiency,load,load,2963,ule ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load modu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2991,energy efficiency,load,load,2991,oad module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3019,energy efficiency,load,load,3019,tage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3050,energy efficiency,load,load,3050,dule Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3093,energy efficiency,load,load,3093,ed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rty,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3121,energy efficiency,load,load,3121,d to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3152,energy efficiency,load,load,3152,ed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTH,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3186,energy efficiency,load,load,3186,load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3217,energy efficiency,load,load,3217,ed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3244,energy efficiency,load,load,3244,ailed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module Pro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3274,energy efficiency,load,load,3274,f. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3301,energy efficiency,load,load,3301,t. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3329,energy efficiency,load,load,3329,tPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3363,energy efficiency,load,load,3363,MVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3397,energy efficiency,load,load,3397, Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3424,energy efficiency,load,load,3424,P. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3461,energy efficiency,load,load,3461,iled to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3490,energy efficiency,load,load,3490,s. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3523,energy efficiency,load,load,3523,w. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3553,energy efficiency,load,load,3553,. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3581,energy efficiency,load,load,3581,NTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3609,energy efficiency,load,load,3609,e ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3642,energy efficiency,load,load,3642,Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3675,energy efficiency,load,load,3675,iled to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3707,energy efficiency,load,load,3707,to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3742,energy efficiency,load,load,3742,to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3771,energy efficiency,load,load,3771,iled to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3801,energy efficiency,load,load,3801,ailed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3828,energy efficiency,load,load,3828,iled to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3860,energy efficiency,load,load,3860, to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3888,energy efficiency,load,load,3888, Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3918,energy efficiency,load,load,3918,m. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3956,energy efficiency,load,load,3956,d to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3990,energy efficiency,load,load,3990,oad module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4017,energy efficiency,load,load,4017,load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Ex,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4046,energy efficiency,load,load,4046,o load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module Ma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4075,energy efficiency,load,load,4075,sics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4110,energy efficiency,load,load,4110,ailed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebG,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4137,energy efficiency,load,load,4137,i. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4173,energy efficiency,load,load,4173, Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4204,energy efficiency,load,load,4204, Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4231,energy efficiency,load,load,4231, Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4266,energy efficiency,load,load,4266,ed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4297,energy efficiency,load,load,4297,o load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4325,energy efficiency,load,load,4325,o load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4366,energy efficiency,load,load,4366,module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4398,energy efficiency,load,load,4398,d module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4426,energy efficiency,load,load,4426, module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4457,energy efficiency,load,load,4457,o load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknow,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4496,energy efficiency,load,load,4496,ule EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4527,energy efficiency,load,load,4527,odule RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line inc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4539,energy efficiency,Core,Core,4539,. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4555,energy efficiency,load,load,4555, module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4582,energy efficiency,load,load,4582,d module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4619,energy efficiency,load,load,4619,XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4652,energy efficiency,load,load,4652,MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4682,energy efficiency,load,load,4682,le RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4719,energy efficiency,load,load,4719,omBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4749,energy efficiency,load,load,4749,le Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4781,energy efficiency,load,load,4781,FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4811,energy efficiency,load,load,4811,Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive lin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4839,energy efficiency,load,load,4839,ecorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4873,energy efficiency,load,load,4873,W. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4901,energy efficiency,load,load,4901,Bld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4929,energy efficiency,load,load,4929,OOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ============================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4957,energy efficiency,load,load,4957,d module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ========================================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4991,energy efficiency,load,load,4991,d module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is th,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5034,energy efficiency,load,load,5034,Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. =====,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5066,energy efficiency,load,load,5066,led to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. =====================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5096,energy efficiency,load,load,5096,. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5127,energy efficiency,load,load,5127,iled to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5162,energy efficiency,load,load,5162,ailed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5194,energy efficiency,load,load,5194,iled to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5228,energy efficiency,load,load,5228, load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8eb,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5256,energy efficiency,load,load,5256,iled to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5302,energy efficiency,load,load,5302,dule libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5340,energy efficiency,load,load,5340,Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_pl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5371,energy efficiency,load,load,5371,dule MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_pla,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5408,energy efficiency,load,load,5408,Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1393,integrability,version,version,1393,old_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:10506,integrability,sub,submit,10506,"n::TApplication(char const*, int*, char**, void*, int) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #13 0x00007fad7dc8f49b in TRint::TRint(char const*, int*, char**, void*, int, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libRint.so.6.23. #14 0x0000563c1fb240d2 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007fad77e65e25 in ROOT::TMetaUtils::TNormalizedCtxtImpl::keepTypedef(cling::LookupHelper const&, char const*, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCling.so. #6 0x00007fad77e6659e in ROOT::TMetaUtils::TNormalizedCtxtImpl::TNormalizedCtxtImpl(cling::LookupHelper const&) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1376,interoperability,standard,standard,1376,_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3621,interoperability,XML,XMLParser,3621,on_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4058,interoperability,XML,XMLIO,4058, _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:186,modifiability,modul,module,186,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:512,modifiability,modul,module,512,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:800,modifiability,modul,modulemap,800,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:937,modifiability,modul,modulemap,937,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1004,modifiability,modul,module,1004,mand I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1393,modifiability,version,version,1393,old_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1485,modifiability,modul,module,1485,m' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTV,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1823,modifiability,modul,module,1823,mporting AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1851,modifiability,modul,module,1851,(/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1878,modifiability,modul,module,1878,da-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module His,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1921,modifiability,modul,module,1921,c/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1962,modifiability,modul,module,1962,^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to lo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1997,modifiability,modul,module,1997, by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load modu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2050,modifiability,modul,module,2050,/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2078,modifiability,modul,module,2078,lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2106,modifiability,modul,module,2106,_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2133,modifiability,modul,module,2133,old_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMV,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2165,modifiability,modul,module,2165,d_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Post,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2193,modifiability,modul,module,2193,old_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2230,modifiability,modul,module,2230,cehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2260,modifiability,modul,module,2260,cehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2294,modifiability,modul,module,2294,g in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2321,modifiability,modul,module,2321,er::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2356,modifiability,modul,module,2356,d to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2385,modifiability,modul,module,2385,rary version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2415,modifiability,modul,module,2415,not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2444,modifiability,modul,module,2444,ctive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2476,modifiability,modul,module,2476,rror: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2510,modifiability,modul,module,2510,baforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2543,modifiability,modul,module,2543,446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2572,modifiability,modul,module,2572,d_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2606,modifiability,modul,module,2606,acehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2659,modifiability,modul,module,2659,hold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiPro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2690,modifiability,modul,module,2690,old_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooSta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2717,modifiability,modul,module,2717,cehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2752,modifiability,modul,module,2752,ib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2786,modifiability,modul,module,2786,eds to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2817,modifiability,modul,module,2817,ad module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2843,modifiability,modul,module,2843,load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Record,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2871,modifiability,modul,module,2871,oad module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2906,modifiability,modul,module,2906,led to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2938,modifiability,modul,module,2938,on_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2968,modifiability,modul,module,2968,OT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module Roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2996,modifiability,modul,module,2996,dule ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load modu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3024,modifiability,modul,module,3024,NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3055,modifiability,modul,module,3055,ore. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3098,modifiability,modul,module,3098,load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3126,modifiability,modul,module,3126,oad module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3157,modifiability,modul,module,3157,load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3191,modifiability,modul,module,3191,odule ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3222,modifiability,modul,module,3222,load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3249,modifiability,modul,module,3249,to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlay,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3279,modifiability,modul,module,3279,led to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASIm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3306,modifiability,modul,module,3306,led to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3334,modifiability,modul,module,3334,er. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3368,modifiability,modul,module,3368,ailed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3402,modifiability,modul,module,3402,d to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3429,modifiability,modul,module,3429,led to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3466,modifiability,modul,module,3466,o load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3495,modifiability,modul,module,3495,led to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to lo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3528,modifiability,modul,module,3528,led to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3558,modifiability,modul,module,3558,ed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3586,modifiability,modul,module,3586,. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3614,modifiability,modul,module,3614,_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3647,modifiability,modul,module,3647, to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3680,modifiability,modul,module,3680,o load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3712,modifiability,modul,module,3712,d module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3747,modifiability,modul,module,3747,d module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3776,modifiability,modul,module,3776,o load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3806,modifiability,modul,module,3806,to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3833,modifiability,modul,module,3833,o load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3865,modifiability,modul,module,3865,ad module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3893,modifiability,modul,module,3893,d to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3923,modifiability,modul,module,3923,led to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3961,modifiability,modul,module,3961,oad module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3995,modifiability,modul,module,3995,dule Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4022,modifiability,modul,module,4022,odule GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4051,modifiability,modul,module,4051, module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4080,modifiability,modul,module,4080,Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4115,modifiability,modul,module,4115,to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4142,modifiability,modul,module,4142,led to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4178,modifiability,modul,module,4178,d to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHis,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4209,modifiability,modul,module,4209,d to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4236,modifiability,modul,module,4236,d to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4271,modifiability,modul,module,4271,load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4302,modifiability,modul,module,4302, module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4330,modifiability,modul,module,4330, module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4371,modifiability,modul,module,4371, ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4403,modifiability,modul,module,4403,le X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4431,modifiability,modul,module,4431,e Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4462,modifiability,modul,module,4462, module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4501,modifiability,modul,module,4501,Pythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4532,modifiability,modul,module,4532,RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4560,modifiability,modul,module,4560,e RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unq,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4587,modifiability,modul,module,4587,le Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4624,modifiability,modul,module,4624,ser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4657,modifiability,modul,module,4657,roc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interact,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4687,modifiability,modul,module,4687,Stats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: err,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4724,modifiability,modul,module,4724,der. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4754,modifiability,modul,module,4754,of. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4786,modifiability,modul,module,4786,. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4816,modifiability,modul,module,4816,ailed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line incl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4844,modifiability,modul,module,4844,r. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expecte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4878,modifiability,modul,module,4878,led to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4906,modifiability,modul,module,4906,ailed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ======,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4934,modifiability,modul,module,4934,Display. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ==================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4962,modifiability,modul,module,4962,le RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4996,modifiability,modul,module,4996,le Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the enti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5039,modifiability,modul,module,5039, to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5071,modifiability,modul,module,5071, load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5101,modifiability,modul,module,5101,ed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5132,modifiability,modul,module,5132,o load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5167,modifiability,modul,module,5167,to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5199,modifiability,modul,module,5199,o load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5233,modifiability,modul,module,5233,module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5261,modifiability,modul,module,5261,o load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5307,modifiability,modul,module,5307,ibc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5345,modifiability,modul,module,5345,tion_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehol,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5376,modifiability,modul,module,5376,athMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5413,modifiability,modul,module,5413,Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:179,performance,error,error,179,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1478,performance,error,error,1478,/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1818,performance,load,load,1818, the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1846,performance,load,load,1846,built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1873,performance,load,load,1873,ge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load modu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1916,performance,load,load,1916,dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1957,performance,load,load,1957,new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1992,performance,load,load,1992,ported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2045,performance,load,load,2045,da-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2073,performance,load,load,2073,_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2101,performance,load,load,2101,cehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2128,performance,load,load,2128,placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load modu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2160,performance,load,load,2160,acehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2188,performance,load,load,2188,placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2225,performance,load,load,2225,ld_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2255,performance,load,load,2255,ld_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2289,performance,load,load,2289,Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2316,performance,load,load,2316,alParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2351,performance,load,load,2351, Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2380,performance,load,load,2380,rd library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2410,performance,load,load,2410,exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2439,performance,load,load,2439,interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2471,performance,load,load,2471,atal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2505,performance,load,load,2505,rr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPyt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2538,performance,load,load,2538,268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2567,performance,load,load,2567,acehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2601,performance,load,load,2601,old_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2654,performance,load,load,2654,_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module Mu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2685,performance,load,load,2685,placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2712,performance,load,load,2712,ld_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2747,performance,load,load,2747,aceh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2781,performance,load,load,2781,and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2812,performance,load,load,2812, to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2838,performance,load,load,2838,ed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2866,performance,load,load,2866,d to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2901,performance,load,load,2901,s. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module Gui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2933,performance,load,load,2933,undation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTW,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2963,performance,load,load,2963,ule ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load modu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2991,performance,load,load,2991,oad module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3019,performance,load,load,3019,tage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3050,performance,load,load,3050,dule Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3093,performance,load,load,3093,ed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rty,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3121,performance,load,load,3121,d to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3152,performance,load,load,3152,ed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTH,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3186,performance,load,load,3186,load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3217,performance,load,load,3217,ed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3244,performance,load,load,3244,ailed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module Pro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3274,performance,load,load,3274,f. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3301,performance,load,load,3301,t. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3329,performance,load,load,3329,tPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3363,performance,load,load,3363,MVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3397,performance,load,load,3397, Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3424,performance,load,load,3424,P. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3461,performance,load,load,3461,iled to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3490,performance,load,load,3490,s. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3523,performance,load,load,3523,w. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3553,performance,load,load,3553,. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3581,performance,load,load,3581,NTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3609,performance,load,load,3609,e ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3642,performance,load,load,3642,Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3675,performance,load,load,3675,iled to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3707,performance,load,load,3707,to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3742,performance,load,load,3742,to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3771,performance,load,load,3771,iled to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3801,performance,load,load,3801,ailed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3828,performance,load,load,3828,iled to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3860,performance,load,load,3860, to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3888,performance,load,load,3888, Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3918,performance,load,load,3918,m. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3956,performance,load,load,3956,d to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3990,performance,load,load,3990,oad module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4017,performance,load,load,4017,load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Ex,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4046,performance,load,load,4046,o load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module Ma,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4075,performance,load,load,4075,sics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4110,performance,load,load,4110,ailed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebG,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4137,performance,load,load,4137,i. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4173,performance,load,load,4173, Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4204,performance,load,load,4204, Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4231,performance,load,load,4231, Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4266,performance,load,load,4266,ed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4297,performance,load,load,4297,o load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4325,performance,load,load,4325,o load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4366,performance,load,load,4366,module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4398,performance,load,load,4398,d module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4426,performance,load,load,4426, module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4457,performance,load,load,4457,o load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknow,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4496,performance,load,load,4496,ule EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4527,performance,load,load,4527,odule RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line inc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4555,performance,load,load,4555, module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expect,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4582,performance,load,load,4582,d module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4619,performance,load,load,4619,XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4652,performance,load,load,4652,MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4682,performance,load,load,4682,le RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4719,performance,load,load,4719,omBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4749,performance,load,load,4749,le Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4781,performance,load,load,4781,FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4811,performance,load,load,4811,Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive lin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4839,performance,load,load,4839,ecorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4873,performance,load,load,4873,W. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4901,performance,load,load,4901,Bld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4929,performance,load,load,4929,OOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ============================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4957,performance,load,load,4957,d module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ========================================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4991,performance,load,load,4991,d module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is th,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5034,performance,load,load,5034,Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. =====,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5066,performance,load,load,5066,led to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. =====================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5096,performance,load,load,5096,. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5127,performance,load,load,5127,iled to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5162,performance,load,load,5162,ailed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5194,performance,load,load,5194,iled to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5228,performance,load,load,5228, load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8eb,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5256,performance,load,load,5256,iled to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5302,performance,load,load,5302,dule libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5340,performance,load,load,5340,Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_pl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5371,performance,load,load,5371,dule MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_pla,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5408,performance,load,load,5408,Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5446,performance,error,error,5446,iled to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5544,performance,error,error,5544,iled to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5594,performance,error,error,5594,TDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSig,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5687,performance,error,error,5687,ule ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5737,performance,error,error,5737,ailed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5778,performance,ERROR,ERROR,5778,load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5833,performance,error,error,5833,to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeho,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1354,reliability,Fail,Failed,1354,old_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1808,reliability,Fail,Failed,1808,than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1836,reliability,Fail,Failed,1836,file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1863,reliability,Fail,Failed,1863,/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1906,reliability,Fail,Failed,1906,rk/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1947,reliability,Fail,Failed,1947,include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matri,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1982,reliability,Fail,Failed,1982, note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2035,reliability,Fail,Failed,2035,forge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2063,reliability,Fail,Failed,2063,594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Bui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2091,reliability,Fail,Failed,2091,ehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2118,reliability,Fail,Failed,2118,lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2150,reliability,Fail,Failed,2150,cehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2178,reliability,Fail,Failed,2178,lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2215,reliability,Fail,Failed,2215,d_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2245,reliability,Fail,Failed,2245,d_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2279,reliability,Fail,Failed,2279,td.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2306,reliability,Fail,Failed,2306,IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2341,reliability,Fail,Failed,2341,ility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module Roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2370,reliability,Fail,Failed,2370,++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2400,reliability,Fail,Failed,2400,at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2429,reliability,Fail,Failed,2429,<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2461,reliability,Fail,Failed,2461,er >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2495,reliability,Fail,Failed,2495,/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2528,reliability,Fail,Failed,2528,root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2557,reliability,Fail,Failed,2557,cehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2591,reliability,Fail,Failed,2591,ld_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2644,reliability,Fail,Failed,2644,placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2675,reliability,Fail,Failed,2675,lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2702,reliability,Fail,Failed,2702,d_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2737,reliability,Fail,Failed,2737,cehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2771,reliability,Fail,Failed,2771, of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2802,reliability,Fail,Failed,2802,t. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2828,reliability,Fail,Failed,2828,ibc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2856,reliability,Fail,Failed,2856,td. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2891,reliability,Fail,Failed,2891,intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2923,reliability,Fail,Failed,2923,e ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2953,reliability,Fail,Failed,2953, load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2981,reliability,Fail,Failed,2981,iled to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3009,reliability,Fail,Failed,3009,ndation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3040,reliability,Fail,Failed,3040,o load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3083,reliability,Fail,Failed,3083,int. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3111,reliability,Fail,Failed,3111,IO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3142,reliability,Fail,Failed,3142,ore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3176,reliability,Fail,Failed,3176,ailed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3207,reliability,Fail,Failed,3207,ble. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3234,reliability,Fail,Failed,3234,Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3264,reliability,Fail,Failed,3264,RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3291,reliability,Fail,Failed,3291,module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3319,reliability,Fail,Failed,3319,odule HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3353,reliability,Fail,Failed,3353,module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3387,reliability,Fail,Failed,3387,e RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3414,reliability,Fail,Failed,3414,dule RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3451,reliability,Fail,Failed,3451,Panel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3480,reliability,Fail,Failed,3480,ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3513,reliability,Fail,Failed,3513, ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3543,reliability,Fail,Failed,3543,ule Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3571,reliability,Fail,Failed,3571,dule ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3599,reliability,Fail,Failed,3599,oad module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTData,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3632,reliability,Fail,Failed,3632,_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenV,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3665,reliability,Fail,Failed,3665,netic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module Netx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3697,reliability,Fail,Failed,3697,. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3732,reliability,Fail,Failed,3732,. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3761,reliability,Fail,Failed,3761,iewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module Roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3791,reliability,Fail,Failed,3791,hysics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3818,reliability,Fail,Failed,3818,le EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3850,reliability,Fail,Failed,3850,e. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module AS,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3878,reliability,Fail,Failed,3878,tFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3908,reliability,Fail,Failed,3908,e Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3946,reliability,Fail,Failed,3946,ix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3980,reliability,Fail,Failed,3980,iled to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4007,reliability,Fail,Failed,4007,ailed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4036,reliability,Fail,Failed,4036, Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4065,reliability,Fail,Failed,4065,in_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to lo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4100,reliability,Fail,Failed,4100,e Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4127,reliability,Fail,Failed,4127,le TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4163,reliability,Fail,Failed,4163,stscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4194,reliability,Fail,Failed,4194, ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4221,reliability,Fail,Failed,4221,dule RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4256,reliability,Fail,Failed,4256,ili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4287,reliability,Fail,Failed,4287, Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4315,reliability,Fail,Failed,4315, Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4356,reliability,Fail,Failed,4356, to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4388,reliability,Fail,Failed,4388,ed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionV,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4416,reliability,Fail,Failed,4416,d to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4447,reliability,Fail,Failed,4447, Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: erro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4486,reliability,Fail,Failed,4486, load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef co,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4517,reliability,Fail,Failed,4517,to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4545,reliability,Fail,Failed,4545,d to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: erro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4572,reliability,Fail,Failed,4572,ed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4609,reliability,Fail,Failed,4609,d module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown typ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4642,reliability,Fail,Failed,4642,d module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<<,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4672,reliability,Fail,Failed,4672,load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4709,reliability,Fail,Failed,4709,module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualifi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4739,reliability,Fail,Failed,4739,load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4771,reliability,Fail,Failed,4771,d module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #if,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4801,reliability,Fail,Failed,4801,d module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling intera,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4829,reliability,Fail,Failed,4829, module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4863,reliability,Fail,Failed,4863,odule FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4891,reliability,Fail,Failed,4891,odule GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation vi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4919,reliability,Fail,Failed,4919, module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4947,reliability,Fail,Failed,4947,ed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===============================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4981,reliability,Fail,Failed,4981,ed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5024,reliability,Fail,Failed,5024,e SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all thread,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5056,reliability,Fail,Failed,5056,MLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ============================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5086,reliability,Fail,Failed,5086,OT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ==========================================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5117,reliability,Fail,Failed,5117,e std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in wai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5152,reliability,Fail,Failed,5152,stDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5184,reliability,Fail,Failed,5184,11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5218,reliability,Fail,Failed,5218,Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x0000,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5246,reliability,Fail,Failed,5246,layer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5292,reliability,Fail,Failed,5292,o load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5330,reliability,Fail,Failed,5330,ule ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_pla,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5361,reliability,Fail,Failed,5361,o load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_plac,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5398,reliability,Fail,Failed,5398,d module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:126,safety,log,log,126,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:179,safety,error,error,179,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:186,safety,modul,module,186,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:512,safety,modul,module,512,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:800,safety,modul,modulemap,800,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:937,safety,modul,modulemap,937,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1004,safety,modul,module,1004,mand I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1478,safety,error,error,1478,/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1485,safety,modul,module,1485,m' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTV,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1823,safety,modul,module,1823,mporting AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1851,safety,modul,module,1851,(/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1878,safety,modul,module,1878,da-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module His,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1921,safety,modul,module,1921,c/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1962,safety,modul,module,1962,^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to lo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1997,safety,modul,module,1997, by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load modu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2050,safety,modul,module,2050,/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2078,safety,modul,module,2078,lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2106,safety,modul,module,2106,_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2133,safety,modul,module,2133,old_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMV,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2165,safety,modul,module,2165,d_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Post,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2193,safety,modul,module,2193,old_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2230,safety,modul,module,2230,cehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2260,safety,modul,module,2260,cehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2294,safety,modul,module,2294,g in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2321,safety,modul,module,2321,er::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2356,safety,modul,module,2356,d to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2385,safety,modul,module,2385,rary version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2415,safety,modul,module,2415,not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2444,safety,modul,module,2444,ctive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2476,safety,modul,module,2476,rror: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2510,safety,modul,module,2510,baforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2543,safety,modul,module,2543,446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2572,safety,modul,module,2572,d_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2606,safety,modul,module,2606,acehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2659,safety,modul,module,2659,hold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiPro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2690,safety,modul,module,2690,old_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooSta,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2717,safety,modul,module,2717,cehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2752,safety,modul,module,2752,ib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module P,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2786,safety,modul,module,2786,eds to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2817,safety,modul,module,2817,ad module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2843,safety,modul,module,2843,load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Record,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2871,safety,modul,module,2871,oad module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2906,safety,modul,module,2906,led to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2938,safety,modul,module,2938,on_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2968,safety,modul,module,2968,OT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module Roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2996,safety,modul,module,2996,dule ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load modu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3024,safety,modul,module,3024,NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3055,safety,modul,module,3055,ore. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3098,safety,modul,module,3098,load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3126,safety,modul,module,3126,oad module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3157,safety,modul,module,3157,load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3191,safety,modul,module,3191,odule ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3222,safety,modul,module,3222,load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3249,safety,modul,module,3249,to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlay,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3279,safety,modul,module,3279,led to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASIm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3306,safety,modul,module,3306,led to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3334,safety,modul,module,3334,er. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3368,safety,modul,module,3368,ailed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3402,safety,modul,module,3402,d to load module RHTTP. Failed to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3429,safety,modul,module,3429,led to load module FitPanel. Failed to load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3466,safety,modul,module,3466,o load module ROOTVecOps. Failed to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3495,safety,modul,module,3495,led to load module ProofDraw. Failed to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to lo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3528,safety,modul,module,3528,led to load module Quadp. Failed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3558,safety,modul,module,3558,ed to load module ROOTNTuple. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3586,safety,modul,module,3586,. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3614,safety,modul,module,3614,_Foundation_Stage1_NoRTTI. Failed to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3647,safety,modul,module,3647, to load module Genetic. Failed to load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3680,safety,modul,module,3680,o load module Eve. Failed to load module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3712,safety,modul,module,3712,d module GeomPainter. Failed to load module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3747,safety,modul,module,3747,d module TreeViewer. Failed to load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3776,safety,modul,module,3776,o load module Physics. Failed to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3806,safety,modul,module,3806,to load module EG. Failed to load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3833,safety,modul,module,3833,o load module Tree. Failed to load module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3865,safety,modul,module,3865,ad module HistFactory. Failed to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3893,safety,modul,module,3893,d to load module Spectrum. Failed to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3923,safety,modul,module,3923,led to load module Matrix. Failed to load module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3961,safety,modul,module,3961,oad module Html. Failed to load module Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3995,safety,modul,module,3995,dule Hist. Failed to load module GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4022,safety,modul,module,4022,odule GuiHtml. Failed to load module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4051,safety,modul,module,4051, module _Builtin_intrinsics. Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4080,safety,modul,module,4080,Failed to load module Gpad. Failed to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4115,safety,modul,module,4115,to load module TMVAGui. Failed to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4142,safety,modul,module,4142,led to load module Postscript. Failed to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4178,safety,modul,module,4178,d to load module ROOTEve. Failed to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHis,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4209,safety,modul,module,4209,d to load module RGL. Failed to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4236,safety,modul,module,4236,d to load module Fumili. Failed to load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4271,safety,modul,module,4271,load module Net. Failed to load module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4302,safety,modul,module,4302, module Geom. Failed to load module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4330,safety,modul,module,4330, module RooFitMore. Failed to load module ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4371,safety,modul,module,4371, ROOTGpadv7. Failed to load module X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to loa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4403,safety,modul,module,4403,le X3d. Failed to load module Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4431,safety,modul,module,4431,e Cling_Runtime. Failed to load module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4462,safety,modul,module,4462, module SPlot. Failed to load module EGPythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4501,safety,modul,module,4501,Pythia8. Failed to load module RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4532,safety,modul,module,4532,RooFit. Failed to load module RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4560,safety,modul,module,4560,e RCsg. Failed to load module Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unq,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4587,safety,modul,module,4587,le Rint. Failed to load module XMLParser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4624,safety,modul,module,4624,ser. Failed to load module MultiProc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4657,safety,modul,module,4657,roc. Failed to load module RooStats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interact,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4687,safety,modul,module,4687,Stats. Failed to load module GeomBuilder. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: err,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4724,safety,modul,module,4724,der. Failed to load module Proof. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4754,safety,modul,module,4754,of. Failed to load module FITSIO. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4786,safety,modul,module,4786,. Failed to load module Ged. Failed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4816,safety,modul,module,4816,ailed to load module Recorder. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line incl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4844,safety,modul,module,4844,r. Failed to load module FFTW. Failed to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expecte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4878,safety,modul,module,4878,led to load module GuiBld. Failed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4906,safety,modul,module,4906,ailed to load module ROOTWebDisplay. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ======,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4934,safety,modul,module,4934,Display. Failed to load module RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ==================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4962,safety,modul,module,4962,le RooFitCore. Failed to load module Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4996,safety,modul,module,4996,le Gui. Failed to load module SQLIO. Failed to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the enti,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5039,safety,modul,module,5039, to load module XMLIO. Failed to load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5071,safety,modul,module,5071, load module ROOT_Rtypes. Failed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5101,safety,modul,module,5101,ed to load module std. Failed to load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5132,safety,modul,module,5132,o load module ROOTHistDraw. Failed to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5167,safety,modul,module,5167,to load module GX11TTF. Failed to load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5199,safety,modul,module,5199,o load module RIO. Failed to load module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5233,safety,modul,module,5233,module ProofPlayer. Failed to load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5261,safety,modul,module,5261,o load module ASImage. Failed to load module libc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() (,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5307,safety,modul,module,5307,ibc. Failed to load module ROOT_Foundation_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5345,safety,modul,module,5345,tion_C. Failed to load module MathMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehol,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5376,safety,modul,module,5376,athMore. Failed to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5413,safety,modul,module,5413,Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5446,safety,error,error,5446,iled to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5487,safety,compl,complex,5487,d to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5544,safety,error,error,5544,iled to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5594,safety,error,error,5594,TDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSig,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5687,safety,error,error,5687,ule ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5737,safety,error,error,5737,ailed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5778,safety,ERROR,ERROR,5778,load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5833,safety,error,error,5833,to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeho,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:126,security,log,log,126,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5383,security,Session,SessionViewer,5383,iled to load module Foam. Failed to load module RSQLite. Failed to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5487,security,compl,complex,5487,d to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:6901,security,sign,signal,6901,"==========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #4 <signal handler called>. #5 0x00007fad77e65e25 in ROOT::TMetaUtils::TNormalizedCtxtImpl::keepTypedef(cling::LookupHelper const&, char const*, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCling.so. #6 0x00007fad77e6659e in ROOT::TMetaUtils::TNormalizedCtxtImpl::TNormalizedCtxtImpl(cling::LookupHelper const&) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCling.so. #7 0x00007fad77e66db3 in ROOT::TMetaUtils::TNormalizedCtxt::TNormalizedCtxt(cling::LookupHelper const&) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:28,testability,simpl,simply,28,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:126,testability,log,log,126,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:6008,testability,trace,trace,6008,ntime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #4 <signal handler called>. #5 0x00007fad77e65e25 in ROOT::TMetaUtils::TNormalizedCtxtImpl::keepTypedef(cling::Loo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:10581,testability,trace,trace,10581,"mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #13 0x00007fad7dc8f49b in TRint::TRint(char const*, int*, char**, void*, int, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libRint.so.6.23. #14 0x0000563c1fb240d2 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007fad77e65e25 in ROOT::TMetaUtils::TNormalizedCtxtImpl::keepTypedef(cling::LookupHelper const&, char const*, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCling.so. #6 0x00007fad77e6659e in ROOT::TMetaUtils::TNormalizedCtxtImpl::TNormalizedCtxtImpl(cling::LookupHelper const&) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCling.so. #7 0x00007fad77e66db3 in ROOT::TMetaUtils:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4,usability,command,command,4,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:28,usability,simpl,simply,28,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:53,usability,interact,interactive,53,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:179,usability,error,error,179,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log. $ root -b -q -x -e 1+2. input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1441,usability,interact,interactive,1441,old_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1478,usability,error,error,1478,/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap). #include <new>. ^. input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'. Warning in cling::IncrementalParser::CheckABICompatibility():. Failed to extract C++ standard library version. 'at_quick_exit' not defined. <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt. Failed to load module libc. Failed to load module std. Failed to load module _Builtin_intrinsics. Failed to load module ROOT_Foundation_C. Failed to load module ROOT_Rtypes. Failed to load module ROOT_Foundation_Stage1_NoRTTI. Failed to load module Core. Failed to load module Rint. Failed to load module RIO. Failed to load module MathCore. Failed to load module Hist. Failed to load module ROOTBrowsable. Failed to load module Unfold. Failed to load module RHTTPSniff. Failed to load module Imt. Failed to load module HistPainter. Failed to load module PyMVA. Failed to load module RDAVIX. Failed to load module RHTTP. Failed to load module FitPanel. Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5446,usability,error,error,5446,iled to load module SpectrumPainter. Failed to load module Minuit2. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5509,usability,interact,interactive,5509,. Failed to load module Core. Failed to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5544,usability,error,error,5544,iled to load module MLP. Failed to load module ROOTDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5594,usability,error,error,5594,TDataFrame. Failed to load module GenVector. Failed to load module NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSig,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5652,usability,interact,interactive,5652,odule NetxNG. Failed to load module ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5687,usability,error,error,5687,ule ROOTBrowserv7. Failed to load module Minuit. Failed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5737,usability,error,error,5737,ailed to load module RootAuth. Failed to load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5778,usability,ERROR,ERROR,5778,load module Graf3d. Failed to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5798,usability,interact,interactive,5798,led to load module TMVA. Failed to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5833,usability,error,error,5833,to load module ASImageGui. Failed to load module Graf. Failed to load module GX11. Failed to load module Gdml. Failed to load module ProofBench. Failed to load module Cling_Runtime_Extra. Failed to load module MathCore. Failed to load module Gviz3d. Failed to load module WebGui6. Failed to load module ROOTTPython. Failed to load module ROOTHist. Failed to load module TreePlayer. Failed to load module Gviz. Failed to load module ROOTGraphicsPrimitives. Failed to load module ROOTFitPanelv7. Failed to load module Smatrix. Failed to load module SessionViewer. Failed to load module Thread. input_line_4:1:2: error: unknown type name 'ifdef'. #ifdef complex. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_5:1:2: error: unknown type name 'ifdef'. #ifdef PI. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. input_line_6:1:2: error: unknown type name 'ifdef'. #ifdef ERROR. ^. <<< cling interactive line includer >>>:1:1: error: expected unqualified-id. *** Break *** segmentation violation. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. #0 0x00007fad7d33546c in waitpid () from /lib64/libc.so.6. #1 0x00007fad7d2b2f62 in do_system () from /lib64/libc.so.6. #2 0x00007fad7d8ebf8f in TUnixSystem::StackTrace() () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #3 0x00007fad7d8e8857 in TUnixSystem::DispatchSignals(ESignals) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeho,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:10336,usability,hint,hint,10336,"ehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #12 0x00007fad7d797df6 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #13 0x00007fad7dc8f49b in TRint::TRint(char const*, int*, char**, void*, int, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libRint.so.6.23. #14 0x0000563c1fb240d2 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007fad77e65e25 in ROOT::TMetaUtils::TNormalizedCtxtImpl::keepTypedef(cling::LookupHelper const&, char const*, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCling.so. #6 0x00007fad77e6659e in ROOT::TMetaUtils::TNormalizedCtxtImpl::TNormalizedCtxtImpl(cling::LookupHelper const&) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:10380,usability,help,help,10380,"d_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #12 0x00007fad7d797df6 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #13 0x00007fad7dc8f49b in TRint::TRint(char const*, int*, char**, void*, int, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libRint.so.6.23. #14 0x0000563c1fb240d2 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007fad77e65e25 in ROOT::TMetaUtils::TNormalizedCtxtImpl::keepTypedef(cling::LookupHelper const&, char const*, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCling.so. #6 0x00007fad77e6659e in ROOT::TMetaUtils::TNormalizedCtxtImpl::TNormalizedCtxtImpl(cling::LookupHelper const&) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_plac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:10657,usability,help,help,10657,"d_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCore.so.6.23. #13 0x00007fad7dc8f49b in TRint::TRint(char const*, int*, char**, void*, int, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libRint.so.6.23. #14 0x0000563c1fb240d2 in main (). ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007fad77e65e25 in ROOT::TMetaUtils::TNormalizedCtxtImpl::keepTypedef(cling::LookupHelper const&, char const*, bool) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCling.so. #6 0x00007fad77e6659e in ROOT::TMetaUtils::TNormalizedCtxtImpl::TNormalizedCtxtImpl(cling::LookupHelper const&) () from /home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libCling.so. #7 0x00007fad77e66db3 in ROOT::TMetaUtils::TNormalizedCtxt::TNormalizedCtxt(cling::LookupHelper const&) () from /home",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/nortcxxmod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu16/nortcxxmod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:30,availability,failur,failures,30,"Fantastic - so apart from the failures we currently see elsewhere (and that are in the works) we only have the nortcxxmod failures:. ```. projectroot.test.test_stressfit_interpreted. projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload. projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming. projectroot.roottest.root.rint.roottest_root_rint_TabCom. ```. where `roottest_root_meta_naming_execCheckNaming` also shows up on [Fedora30](https://github.com/root-project/root/pull/6385#issuecomment-761086731). `roottest_root_rint_TabCom` fails differently here than everywhere else, so I'll look into that one, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:122,availability,failur,failures,122,"Fantastic - so apart from the failures we currently see elsewhere (and that are in the works) we only have the nortcxxmod failures:. ```. projectroot.test.test_stressfit_interpreted. projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload. projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming. projectroot.roottest.root.rint.roottest_root_rint_TabCom. ```. where `roottest_root_meta_naming_execCheckNaming` also shows up on [Fedora30](https://github.com/root-project/root/pull/6385#issuecomment-761086731). `roottest_root_rint_TabCom` fails differently here than everywhere else, so I'll look into that one, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:30,deployability,fail,failures,30,"Fantastic - so apart from the failures we currently see elsewhere (and that are in the works) we only have the nortcxxmod failures:. ```. projectroot.test.test_stressfit_interpreted. projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload. projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming. projectroot.roottest.root.rint.roottest_root_rint_TabCom. ```. where `roottest_root_meta_naming_execCheckNaming` also shows up on [Fedora30](https://github.com/root-project/root/pull/6385#issuecomment-761086731). `roottest_root_rint_TabCom` fails differently here than everywhere else, so I'll look into that one, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:122,deployability,fail,failures,122,"Fantastic - so apart from the failures we currently see elsewhere (and that are in the works) we only have the nortcxxmod failures:. ```. projectroot.test.test_stressfit_interpreted. projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload. projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming. projectroot.roottest.root.rint.roottest_root_rint_TabCom. ```. where `roottest_root_meta_naming_execCheckNaming` also shows up on [Fedora30](https://github.com/root-project/root/pull/6385#issuecomment-761086731). `roottest_root_rint_TabCom` fails differently here than everywhere else, so I'll look into that one, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:596,deployability,fail,fails,596,"Fantastic - so apart from the failures we currently see elsewhere (and that are in the works) we only have the nortcxxmod failures:. ```. projectroot.test.test_stressfit_interpreted. projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload. projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming. projectroot.roottest.root.rint.roottest_root_rint_TabCom. ```. where `roottest_root_meta_naming_execCheckNaming` also shows up on [Fedora30](https://github.com/root-project/root/pull/6385#issuecomment-761086731). `roottest_root_rint_TabCom` fails differently here than everywhere else, so I'll look into that one, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:42,energy efficiency,current,currently,42,"Fantastic - so apart from the failures we currently see elsewhere (and that are in the works) we only have the nortcxxmod failures:. ```. projectroot.test.test_stressfit_interpreted. projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload. projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming. projectroot.roottest.root.rint.roottest_root_rint_TabCom. ```. where `roottest_root_meta_naming_execCheckNaming` also shows up on [Fedora30](https://github.com/root-project/root/pull/6385#issuecomment-761086731). `roottest_root_rint_TabCom` fails differently here than everywhere else, so I'll look into that one, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:30,performance,failur,failures,30,"Fantastic - so apart from the failures we currently see elsewhere (and that are in the works) we only have the nortcxxmod failures:. ```. projectroot.test.test_stressfit_interpreted. projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload. projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming. projectroot.roottest.root.rint.roottest_root_rint_TabCom. ```. where `roottest_root_meta_naming_execCheckNaming` also shows up on [Fedora30](https://github.com/root-project/root/pull/6385#issuecomment-761086731). `roottest_root_rint_TabCom` fails differently here than everywhere else, so I'll look into that one, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:122,performance,failur,failures,122,"Fantastic - so apart from the failures we currently see elsewhere (and that are in the works) we only have the nortcxxmod failures:. ```. projectroot.test.test_stressfit_interpreted. projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload. projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming. projectroot.roottest.root.rint.roottest_root_rint_TabCom. ```. where `roottest_root_meta_naming_execCheckNaming` also shows up on [Fedora30](https://github.com/root-project/root/pull/6385#issuecomment-761086731). `roottest_root_rint_TabCom` fails differently here than everywhere else, so I'll look into that one, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:30,reliability,fail,failures,30,"Fantastic - so apart from the failures we currently see elsewhere (and that are in the works) we only have the nortcxxmod failures:. ```. projectroot.test.test_stressfit_interpreted. projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload. projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming. projectroot.roottest.root.rint.roottest_root_rint_TabCom. ```. where `roottest_root_meta_naming_execCheckNaming` also shows up on [Fedora30](https://github.com/root-project/root/pull/6385#issuecomment-761086731). `roottest_root_rint_TabCom` fails differently here than everywhere else, so I'll look into that one, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:122,reliability,fail,failures,122,"Fantastic - so apart from the failures we currently see elsewhere (and that are in the works) we only have the nortcxxmod failures:. ```. projectroot.test.test_stressfit_interpreted. projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload. projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming. projectroot.roottest.root.rint.roottest_root_rint_TabCom. ```. where `roottest_root_meta_naming_execCheckNaming` also shows up on [Fedora30](https://github.com/root-project/root/pull/6385#issuecomment-761086731). `roottest_root_rint_TabCom` fails differently here than everywhere else, so I'll look into that one, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:596,reliability,fail,fails,596,"Fantastic - so apart from the failures we currently see elsewhere (and that are in the works) we only have the nortcxxmod failures:. ```. projectroot.test.test_stressfit_interpreted. projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload. projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming. projectroot.roottest.root.rint.roottest_root_rint_TabCom. ```. where `roottest_root_meta_naming_execCheckNaming` also shows up on [Fedora30](https://github.com/root-project/root/pull/6385#issuecomment-761086731). `roottest_root_rint_TabCom` fails differently here than everywhere else, so I'll look into that one, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:150,safety,test,test,150,"Fantastic - so apart from the failures we currently see elsewhere (and that are in the works) we only have the nortcxxmod failures:. ```. projectroot.test.test_stressfit_interpreted. projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload. projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming. projectroot.roottest.root.rint.roottest_root_rint_TabCom. ```. where `roottest_root_meta_naming_execCheckNaming` also shows up on [Fedora30](https://github.com/root-project/root/pull/6385#issuecomment-761086731). `roottest_root_rint_TabCom` fails differently here than everywhere else, so I'll look into that one, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:150,testability,test,test,150,"Fantastic - so apart from the failures we currently see elsewhere (and that are in the works) we only have the nortcxxmod failures:. ```. projectroot.test.test_stressfit_interpreted. projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload. projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execCheckNaming. projectroot.roottest.root.rint.roottest_root_rint_TabCom. ```. where `roottest_root_meta_naming_execCheckNaming` also shows up on [Fedora30](https://github.com/root-project/root/pull/6385#issuecomment-761086731). `roottest_root_rint_TabCom` fails differently here than everywhere else, so I'll look into that one, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:11,deployability,build,build,11,@phsft-bot build just on ROOT-ubuntu2004/nortcxxmod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:205,deployability,build,builds,205,"Excellent news, ubu-20 reproduces this. Less excellent for me, locally on ubu20-derived Mint I don't reproduce it. Argh. I'll do more poking around, e.g. use a config line closer to what we have in the PR builds. Tomorrow!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:172,usability,close,closer,172,"Excellent news, ubu-20 reproduces this. Less excellent for me, locally on ubu20-derived Mint I don't reproduce it. Argh. I'll do more poking around, e.g. use a config line closer to what we have in the PR builds. Tomorrow!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:71,integrability,interfac,interface,71,"https://github.com/cms-sw/cmssw/blob/master/CUDADataFormats/CaloCommon/interface/Common.h. > . > . > Thanks! Last bit, hopefully: where is calo::common::AddSize defined? > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:71,interoperability,interfac,interface,71,"https://github.com/cms-sw/cmssw/blob/master/CUDADataFormats/CaloCommon/interface/Common.h. > . > . > Thanks! Last bit, hopefully: where is calo::common::AddSize defined? > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:71,modifiability,interfac,interface,71,"https://github.com/cms-sw/cmssw/blob/master/CUDADataFormats/CaloCommon/interface/Common.h. > . > . > Thanks! Last bit, hopefully: where is calo::common::AddSize defined? > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:52,safety,test,test,52,"@SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:77,safety,test,test,77,"@SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:52,testability,test,test,52,"@SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:77,testability,test,test,77,"@SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:326,availability,error,error,326,"> @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteracti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2278,availability,fault,fault,2278,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2213,deployability,Stack,Stack,2213,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2509,deployability,version,version,2509,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1193,energy efficiency,alloc,allocator,1193,"is last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1281,energy efficiency,alloc,allocator,1281,"ile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1545,energy efficiency,alloc,allocator,1545,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1703,energy efficiency,alloc,allocator,1703,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2278,energy efficiency,fault,fault,2278,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2285,energy efficiency,core,core,2285,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2509,integrability,version,version,2509,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2509,modifiability,version,version,2509,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:326,performance,error,error,326,"> @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteracti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2278,performance,fault,fault,2278,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:241,reliability,doe,does,241,"> @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteracti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2278,reliability,fault,fault,2278,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2404,reliability,doe,doesn,2404,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:54,safety,test,test,54,"> @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteracti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:79,safety,test,test,79,"> @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteracti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:189,safety,test,tested,189,"> @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteracti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:326,safety,error,error,326,"> @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteracti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2278,safety,fault,fault,2278,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2435,safety,test,test,2435,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2476,safety,test,test,2476,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:809,security,Sign,SignalHandler,809,"> @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteracti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:54,testability,test,test,54,"> @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteracti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:79,testability,test,test,79,"> @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteracti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:189,testability,test,tested,189,"> @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteracti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2435,testability,test,test,2435,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2476,testability,test,test,2476,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:326,usability,error,error,326,"> @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. ```. Singularity> ./cling -xcuda. warning: argument unused during compilation: '-c'. ****************** CLING ******************. * Type C++ code and press enter to run it *. * Type .q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteracti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1973,usability,User,UserInterface,1973,"q to exit *. *******************************************. [cling]$ __global__ void g(int * out){ *out=43;}. #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). #12 0x00000000009d28b7 main (./cling+0x9d28b7). #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). #14 0x0000000000a32349 _start (./cling+0xa32349). Stack dump:. 0.	Program arguments: ./cling -xcuda . Segmentation fault (core dumped). ```. But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:334,availability,error,error,334,"> > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > . > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2346,availability,fault,fault,2346,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2277,deployability,Stack,Stack,2277,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2764,deployability,version,version,2764,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2967,deployability,build,build,2967,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1239,energy efficiency,alloc,allocator,1239,"mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1327,energy efficiency,alloc,allocator,1327,"n error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1595,energy efficiency,alloc,allocator,1595,"***. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1755,energy efficiency,alloc,allocator,1755,"00000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2346,energy efficiency,fault,fault,2346,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2353,energy efficiency,core,core,2353,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2764,integrability,version,version,2764,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2840,integrability,configur,configure,2840,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2764,modifiability,version,version,2764,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2840,modifiability,configur,configure,2840,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:334,performance,error,error,334,"> > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > . > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2346,performance,fault,fault,2346,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:249,reliability,doe,does,249,"> > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > . > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2346,reliability,fault,fault,2346,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2659,reliability,doe,doesn,2659,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:56,safety,test,test,56,"> > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > . > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:81,safety,test,test,81,"> > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > . > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:197,safety,test,tested,197,"> > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > . > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:334,safety,error,error,334,"> > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > . > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2346,safety,fault,fault,2346,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2690,safety,test,test,2690,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2731,safety,test,test,2731,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2784,safety,test,test,2784,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:847,security,Sign,SignalHandler,847,"> > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > . > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2546,security,session,session,2546,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2840,security,configur,configure,2840,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:56,testability,test,test,56,"> > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > . > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:81,testability,test,test,81,"> > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > . > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:197,testability,test,tested,197,"> > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > . > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2690,testability,test,test,2690,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2731,testability,test,test,2731,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2784,testability,test,test,2784,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:334,usability,error,error,334,"> > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > . > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > . > ```. > Singularity> ./cling -xcuda. > warning: argument unused during compilation: '-c'. > . > ****************** CLING ******************. > * Type C++ code and press enter to run it *. > * Type .q to exit *. > *******************************************. > [cling]$ __global__ void g(int * out){ *out=43;}. > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2029,usability,User,UserInterface,2029,"]() const (./cling+0xb4b092). > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > #14 0x0000000000a32349 _start (./cling+0xa32349). > Stack dump:. > 0.	Program arguments: ./cling -xcuda . > Segmentation fault (core dumped). > ```. >. There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. . > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:346,availability,error,error,346,"> > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > . > > . > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > ```. > > Singularity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2408,availability,fault,fault,2408,"#7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3450,availability,state,statement,3450,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2335,deployability,Stack,Stack,2335,"std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getMod",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2835,deployability,version,version,2835,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3044,deployability,build,build,3044,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3279,deployability,Modul,Module,3279,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3287,deployability,modul,module,3287,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1279,energy efficiency,alloc,allocator,1279,"ment. If I try to compile a CUDA kernel, I get a segmentation error:. > > ```. > > Singularity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1367,energy efficiency,alloc,allocator,1367,"larity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1639,energy efficiency,alloc,allocator,1639,"global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1801,energy efficiency,alloc,allocator,1801,"::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2408,energy efficiency,fault,fault,2408,"#7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2415,energy efficiency,core,core,2415,"000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__globa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2835,integrability,version,version,2835,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2917,integrability,configur,configure,2917,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3450,integrability,state,statement,3450,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2835,modifiability,version,version,2835,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2917,modifiability,configur,configure,2917,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3279,modifiability,Modul,Module,3279,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3287,modifiability,modul,module,3287,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:346,performance,error,error,346,"> > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > . > > . > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > ```. > > Singularity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2408,performance,fault,fault,2408,"#7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3737,performance,time,time,3737,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:261,reliability,doe,does,261,"> > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > . > > . > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > ```. > > Singularity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2408,reliability,fault,fault,2408,"#7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2730,reliability,doe,doesn,2730,"ocess(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3093,reliability,doe,does,3093,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:58,safety,test,test,58,"> > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > . > > . > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > ```. > > Singularity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:83,safety,test,test,83,"> > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > . > > . > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > ```. > > Singularity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:209,safety,test,tested,209,"> > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > . > > . > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > ```. > > Singularity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:346,safety,error,error,346,"> > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > . > > . > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > ```. > > Singularity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2408,safety,fault,fault,2408,"#7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2761,safety,test,test,2761,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2802,safety,test,test,2802,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2861,safety,test,test,2861,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3279,safety,Modul,Module,3279,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3287,safety,modul,module,3287,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:879,security,Sign,SignalHandler,879,"> > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > . > > . > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > ```. > > Singularity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2613,security,session,session,2613,"ar_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2917,security,configur,configure,2917,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:58,testability,test,test,58,"> > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > . > > . > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > ```. > > Singularity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:83,testability,test,test,83,"> > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > . > > . > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > ```. > > Singularity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:209,testability,test,tested,209,"> > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > . > > . > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > ```. > > Singularity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2761,testability,test,test,2761,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2802,testability,test,test,2802,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2861,testability,test,test,2861,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3711,testability,simpl,simply,3711,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:346,usability,error,error,346,"> > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > . > > . > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > ```. > > Singularity> ./cling -xcuda. > > warning: argument unused during compilation: '-c'. > > . > > ****************** CLING ******************. > > * Type C++ code and press enter to run it *. > > * Type .q to exit *. > > *******************************************. > > [cling]$ __global__ void g(int * out){ *out=43;}. > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2079,usability,User,UserInterface,2079,"00b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3641,usability,help,help,3641,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3711,usability,simpl,simply,3711,"::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > Stack dump:. > > 0.	Program arguments: ./cling -xcuda . > > Segmentation fault (core dumped). > > ```. > . > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > . > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > . > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:354,availability,error,error,354,"> > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > . > > > . > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > ```. > > > Singularity> ./cling -xcuda. > > > warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2470,availability,fault,fault,2470,"e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3538,availability,state,statement,3538,"for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. ```C++. if(!m_Opts.Compile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2393,deployability,Stack,Stack,2393,"har>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2907,deployability,version,version,2907,"ool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3126,deployability,build,build,3126,"UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3367,deployability,Modul,Module,3367,"cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3375,deployability,modul,module,3375,"a32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4141,deployability,Modul,Module,4141,"uld make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. ```C++. if(!m_Opts.CompilerOpts.CUDADevice). ExeRes = m_Executor->runStaticInitializersOnce(T);. ```. I need to verify, if this is a good solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1319,energy efficiency,alloc,allocator,1319," kernel, I get a segmentation error:. > > > ```. > > > Singularity> ./cling -xcuda. > > > warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1407,energy efficiency,alloc,allocator,1407,"> warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1683,energy efficiency,alloc,allocator,1683,"t * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1847,energy efficiency,alloc,allocator,1847,"Handlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2470,energy efficiency,fault,fault,2470,"e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2477,energy efficiency,core,core,2477,"g::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2907,integrability,version,version,2907,"ool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2999,integrability,configur,configure,2999,"ingRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3538,integrability,state,statement,3538,"for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. ```C++. if(!m_Opts.Compile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2907,modifiability,version,version,2907,"ool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2999,modifiability,configur,configure,2999,"ingRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3367,modifiability,Modul,Module,3367,"cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3375,modifiability,modul,module,3375,"a32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4141,modifiability,Modul,Module,4141,"uld make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. ```C++. if(!m_Opts.CompilerOpts.CUDADevice). ExeRes = m_Executor->runStaticInitializersOnce(T);. ```. I need to verify, if this is a good solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:354,performance,error,error,354,"> > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > . > > > . > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > ```. > > > Singularity> ./cling -xcuda. > > > warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2470,performance,fault,fault,2470,"e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3825,performance,time,time,3825,"uld make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. ```C++. if(!m_Opts.CompilerOpts.CUDADevice). ExeRes = m_Executor->runStaticInitializersOnce(T);. ```. I need to verify, if this is a good solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:269,reliability,doe,does,269,"> > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > . > > > . > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > ```. > > > Singularity> ./cling -xcuda. > > > warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2470,reliability,fault,fault,2470,"e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2802,reliability,doe,doesn,2802,"string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3181,reliability,doe,does,3181,"1). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `gen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:60,safety,test,test,60,"> > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > . > > > . > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > ```. > > > Singularity> ./cling -xcuda. > > > warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:85,safety,test,test,85,"> > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > . > > > . > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > ```. > > > Singularity> ./cling -xcuda. > > > warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:217,safety,test,tested,217,"> > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > . > > > . > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > ```. > > > Singularity> ./cling -xcuda. > > > warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:354,safety,error,error,354,"> > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > . > > > . > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > ```. > > > Singularity> ./cling -xcuda. > > > warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2470,safety,fault,fault,2470,"e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2833,safety,test,test,2833,"char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2874,safety,test,test,2874,"ng::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2943,safety,test,test,2943," 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3367,safety,Modul,Module,3367,"cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3375,safety,modul,module,3375,"a32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4141,safety,Modul,Module,4141,"uld make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. ```C++. if(!m_Opts.CompilerOpts.CUDADevice). ExeRes = m_Executor->runStaticInitializersOnce(T);. ```. I need to verify, if this is a good solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:911,security,Sign,SignalHandler,911,"> > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > . > > > . > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > ```. > > > Singularity> ./cling -xcuda. > > > warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2687,security,session,session,2687,"r<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an ide",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2999,security,configur,configure,2999,"ingRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:60,testability,test,test,60,"> > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > . > > > . > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > ```. > > > Singularity> ./cling -xcuda. > > > warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:85,testability,test,test,85,"> > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > . > > > . > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > ```. > > > Singularity> ./cling -xcuda. > > > warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:217,testability,test,tested,217,"> > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > . > > > . > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > ```. > > > Singularity> ./cling -xcuda. > > > warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2833,testability,test,test,2833,"char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2874,testability,test,test,2874,"ng::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2943,testability,test,test,2943," 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3799,testability,simpl,simply,3799,"uld make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. ```C++. if(!m_Opts.CompilerOpts.CUDADevice). ExeRes = m_Executor->runStaticInitializersOnce(T);. ```. I need to verify, if this is a good solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4629,testability,verif,verify,4629,"uld make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. ```C++. if(!m_Opts.CompilerOpts.CUDADevice). ExeRes = m_Executor->runStaticInitializersOnce(T);. ```. I need to verify, if this is a good solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:354,usability,error,error,354,"> > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > . > > > . > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > ```. > > > Singularity> ./cling -xcuda. > > > warning: argument unused during compilation: '-c'. > > > . > > > ****************** CLING ******************. > > > * Type C++ code and press enter to run it *. > > > * Type .q to exit *. > > > *******************************************. > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2129,usability,User,UserInterface,2129,"m::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > Stack dump:. > > > 0.	Program arguments: ./cling -xcuda . > > > Segmentation fault (core dumped). > > > ```. > > . > > . > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3729,usability,help,help,3729,"uld make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. ```C++. if(!m_Opts.CompilerOpts.CUDADevice). ExeRes = m_Executor->runStaticInitializersOnce(T);. ```. I need to verify, if this is a good solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3799,usability,simpl,simply,3799,"uld make a joint debug session. > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > . > > . > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > . > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. ```C++. if(!m_Opts.CompilerOpts.CUDADevice). ExeRes = m_Executor->runStaticInitializersOnce(T);. ```. I need to verify, if this is a good solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:362,availability,error,error,362,"> > > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > > . > > > > . > > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > > ```. > > > > Singularity> ./cling -xcuda. > > > > warning: argument unused during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2532,availability,fault,fault,2532,"CUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3626,availability,state,statement,3626,"rong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2451,deployability,Stack,Stack,2451,"or<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2979,deployability,version,version,2979," > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3204,deployability,build,build,3204,"ely(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3455,deployability,Modul,Module,3455,"ump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the devic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3463,deployability,modul,module,3463,"> > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4235,deployability,Modul,Module,4235,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4855,deployability,Modul,Module,4855,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4951,deployability,patch,patch,4951,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5014,deployability,Modul,Module,5014,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5205,deployability,Modul,Module,5205,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1359,energy efficiency,alloc,allocator,1359,"ror:. > > > > ```. > > > > Singularity> ./cling -xcuda. > > > > warning: argument unused during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1447,energy efficiency,alloc,allocator,1447," during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1727,energy efficiency,alloc,allocator,1727,"}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1893,energy efficiency,alloc,allocator,1893,"ing+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2532,energy efficiency,fault,fault,2532,"CUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2539,energy efficiency,core,core,2539,"viceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5143,energy efficiency,model,model,5143,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2979,integrability,version,version,2979," > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3077,integrability,configur,configure,3077,"mpilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3626,integrability,state,statement,3626,"rong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2979,modifiability,version,version,2979," > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3077,modifiability,configur,configure,3077,"mpilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3455,modifiability,Modul,Module,3455,"ump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the devic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3463,modifiability,modul,module,3463,"> > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4235,modifiability,Modul,Module,4235,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4855,modifiability,Modul,Module,4855,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5014,modifiability,Modul,Module,5014,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5205,modifiability,Modul,Module,5205,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:362,performance,error,error,362,"> > > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > > . > > > > . > > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > > ```. > > > > Singularity> ./cling -xcuda. > > > > warning: argument unused during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2532,performance,fault,fault,2532,"CUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3913,performance,time,time,3913,"sed on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5098,performance,perform,performance,5098,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:277,reliability,doe,does,277,"> > > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > > . > > > > . > > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > > ```. > > > > Singularity> ./cling -xcuda. > > > > warning: argument unused during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2532,reliability,fault,fault,2532,"CUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2874,reliability,doe,doesn,2874,"its<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3269,reliability,doe,does,3269,"n (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Becaus",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:62,safety,test,test,62,"> > > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > > . > > > > . > > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > > ```. > > > > Singularity> ./cling -xcuda. > > > > warning: argument unused during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:87,safety,test,test,87,"> > > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > > . > > > > . > > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > > ```. > > > > Singularity> ./cling -xcuda. > > > > warning: argument unused during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:225,safety,test,tested,225,"> > > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > > . > > > > . > > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > > ```. > > > > Singularity> ./cling -xcuda. > > > > warning: argument unused during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:362,safety,error,error,362,"> > > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > > . > > > > . > > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > > ```. > > > > Singularity> ./cling -xcuda. > > > > warning: argument unused during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2532,safety,fault,fault,2532,"CUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2905,safety,test,test,2905,"> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2946,safety,test,test,2946,"tion**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3021,safety,test,test,3021,"aProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3455,safety,Modul,Module,3455,"ump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the devic",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3463,safety,modul,module,3463,"> > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4235,safety,Modul,Module,4235,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4855,safety,Modul,Module,4855,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4951,safety,patch,patch,4951,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5014,safety,Modul,Module,5014,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5125,safety,review,review,5125,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5205,safety,Modul,Module,5205,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:943,security,Sign,SignalHandler,943,"> > > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > > . > > > > . > > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > > ```. > > > > Singularity> ./cling -xcuda. > > > > warning: argument unused during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2757,security,session,session,2757,"+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3077,security,configur,configure,3077,"mpilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4951,security,patch,patch,4951,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5143,security,model,model,5143,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:62,testability,test,test,62,"> > > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > > . > > > > . > > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > > ```. > > > > Singularity> ./cling -xcuda. > > > > warning: argument unused during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:87,testability,test,test,87,"> > > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > > . > > > > . > > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > > ```. > > > > Singularity> ./cling -xcuda. > > > > warning: argument unused during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:225,testability,test,tested,225,"> > > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > > . > > > > . > > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > > ```. > > > > Singularity> ./cling -xcuda. > > > > warning: argument unused during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2905,testability,test,test,2905,"> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2946,testability,test,test,2946,"tion**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3021,testability,test,test,3021,"aProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the de",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3887,testability,simpl,simply,3887,"ich is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done J",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:4741,testability,verif,verify,4741,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5125,testability,review,review,5125,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:362,usability,error,error,362,"> > > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration. > > > > . > > > > . > > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:. > > > > ```. > > > > Singularity> ./cling -xcuda. > > > > warning: argument unused during compilation: '-c'. > > > > . > > > > ****************** CLING ******************. > > > > * Type C++ code and press enter to run it *. > > > > * Type .q to exit *. > > > > *******************************************. > > > > [cling]$ __global__ void g(int * out){ *out=43;}. > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a). > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc). > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39). > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0). > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092). > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2179,usability,User,UserInterface,2179,"riple(llvm::Twine const&) (./cling+0xb456e9). > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9). > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e). > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67). > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867). > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17). > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161). > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7). > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840). > > > > #14 0x0000000000a32349 _start (./cling+0xa32349). > > > > Stack dump:. > > > > 0.	Program arguments: ./cling -xcuda . > > > > Segmentation fault (core dumped). > > > > ```. > > > . > > > . > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session. > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3817,usability,help,help,3817,"also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:3887,usability,simpl,simply,3887,"ich is what my test is based on. So, my next step is to test the CUDA mode with the root version. > > > . > > > . > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done J",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:5098,usability,perform,performance,5098,"ling binary ready to use. > > . > > . > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. > . > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. > . > ```c++. > if(!m_Opts.CompilerOpts.CUDADevice). > ExeRes = m_Executor->runStaticInitializersOnce(T);. > ```. > . > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:80,deployability,Modul,Module,80,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:182,deployability,patch,patch,182,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:245,deployability,Modul,Module,245,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:436,deployability,Modul,Module,436,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:640,deployability,integr,integrated,640,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:667,deployability,version,version,667,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:374,energy efficiency,model,model,374,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:483,energy efficiency,model,model,483,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:640,integrability,integr,integrated,640,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:667,integrability,version,version,667,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:640,interoperability,integr,integrated,640,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:80,modifiability,Modul,Module,80,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:245,modifiability,Modul,Module,245,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:436,modifiability,Modul,Module,436,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:640,modifiability,integr,integrated,640,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:657,modifiability,inherit,inherited,657,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:667,modifiability,version,version,667,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:329,performance,perform,performance,329,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:640,reliability,integr,integrated,640,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:80,safety,Modul,Module,80,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:182,safety,patch,patch,182,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:245,safety,Modul,Module,245,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:356,safety,review,review,356,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:436,safety,Modul,Module,436,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:182,security,patch,patch,182,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:374,security,model,model,374,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:483,security,model,model,483,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:640,security,integr,integrated,640,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:356,testability,review,review,356,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:640,testability,integr,integrated,640,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:329,usability,perform,performance,329,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:849,usability,clear,clear,849,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. > . > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:92,deployability,fail,fail,92,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:115,deployability,patch,patch,115,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:121,deployability,modul,module,121,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:168,deployability,artifact,artifacts,168,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:178,deployability,build,build-any-ib,178,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:305,deployability,log,log,305,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:121,modifiability,modul,module,121,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:32,reliability,doe,does,32,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:92,reliability,fail,fail,92,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:115,safety,patch,patch,115,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:121,safety,modul,module,121,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:305,safety,log,log,305,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:115,security,patch,patch,115,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:305,security,log,log,305,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:305,testability,log,log,305,"@vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:243,deployability,fail,fail,243,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:266,deployability,patch,patch,266,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:272,deployability,modul,module,272,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:319,deployability,artifact,artifacts,319,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:329,deployability,build,build-any-ib,329,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:456,deployability,log,log,456,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:272,modifiability,modul,module,272,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:183,reliability,doe,does,183,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:243,reliability,fail,fail,243,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:44,safety,test,tests,44,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:266,safety,patch,patch,266,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:272,safety,modul,module,272,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:456,safety,log,log,456,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:266,security,patch,patch,266,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:456,security,log,log,456,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:44,testability,test,tests,44,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:456,testability,log,log,456,"Thanks for the heads up - I’ve started some tests . > On Feb 22, 2021, at 4:33 PM, Malik Shahzad Muzaffar <notifications@github.com> wrote:. > . > . > @vgvassilev @davidlange6 , this does not merge any more which causes CXXMODULE CMSSW IBs to fail ( as we use it to patch module IBs) https://cmssdt.cern.ch/SDT/jenkins-artifacts/build-any-ib/CMSSW_11_3_CXXMODULE_X_2021-02-22-1100/slc7_amd64_gcc900/105574/lcg/root/6.23.01-7767a664fb8cb9cd43d25b3eb5127fea/log. > . > —. > You are receiving this because you were mentioned. > Reply to this email directly, view it on GitHub, or unsubscribe. > .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora31/noimt,windows10/cxx14,mac11.0/cxx17",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:11,deployability,build,build,11,"@phsft-bot build just on ROOT-fedora31/noimt, windows10/cxx14, mac11.0/cxx17",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:342,availability,error,error,342,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2159,availability,Error,Error,2159,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2531,availability,error,errors,2531,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:23,deployability,build,build,23,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:53,deployability,upgrad,upgrade,53,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:116,deployability,instal,install,116,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:182,deployability,instal,installation,182,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:256,deployability,instal,installation,256,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:563,deployability,Releas,Release,563,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:626,deployability,instal,install,626,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:704,deployability,instal,install,704,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:951,deployability,modul,modules,951,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1267,deployability,modul,modules,1267,"lder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9dem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1467,deployability,Build,Building,1467," -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1531,deployability,modul,modules,1531,"bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1787,deployability,version,version,1787,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1864,deployability,modul,modules,1864,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2009,deployability,modul,modules,2009,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2133,deployability,version,version,2133,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2218,deployability,configurat,configuration,2218,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2273,deployability,instal,install,2273,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2600,deployability,build,build,2600,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2629,deployability,log,log,2629,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1787,integrability,version,version,1787,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2133,integrability,version,version,2133,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2218,integrability,configur,configuration,2218,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2507,integrability,Configur,Configuring,2507,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:53,modifiability,upgrad,upgrade,53,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:951,modifiability,modul,modules,951,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1267,modifiability,modul,modules,1267,"lder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9dem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1531,modifiability,modul,modules,1531,"bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1787,modifiability,version,version,1787,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1864,modifiability,modul,modules,1864,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2009,modifiability,modul,modules,2009,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2133,modifiability,version,version,2133,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2210,modifiability,pac,package,2210,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2218,modifiability,configur,configuration,2218,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2351,modifiability,pac,package,2351,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2415,modifiability,pac,package,2415,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2507,modifiability,Configur,Configuring,2507,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:342,performance,error,error,342,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2159,performance,Error,Error,2159,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2531,performance,error,errors,2531,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:342,safety,error,error,342,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:835,safety,Detect,Detecting,835,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:869,safety,Detect,Detecting,869,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:951,safety,modul,modules,951,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1072,safety,Detect,Detecting,1072,"ng fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1105,safety,Detect,Detecting,1105,"hen I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1145,safety,Detect,Detecting,1145,"make` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"")",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1181,safety,Detect,Detecting,1181,"allation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1267,safety,modul,modules,1267,"lder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9dem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1390,safety,Detect,Detecting,1390,"EFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1425,safety,Detect,Detecting,1425,"PILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1531,safety,modul,modules,1531,"bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, erro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1864,safety,modul,modules,1864,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2009,safety,modul,modules,2009,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2159,safety,Error,Error,2159,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2531,safety,error,errors,2531,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2629,safety,log,log,2629,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:748,security,ident,identification,748,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:800,security,ident,identification,800,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:835,security,Detect,Detecting,835,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:869,security,Detect,Detecting,869,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1072,security,Detect,Detecting,1072,"ng fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1105,security,Detect,Detecting,1105,"hen I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/l",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1145,security,Detect,Detecting,1145,"make` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"")",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1181,security,Detect,Detecting,1181,"allation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1390,security,Detect,Detecting,1390,"EFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1425,security,Detect,Detecting,1425,"PILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2218,security,configur,configuration,2218,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2507,security,Configur,Configuring,2507,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2629,security,log,log,2629,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2629,testability,log,log,2629,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:342,usability,error,error,342,"@vgvassilev I tried to build xeus-cling with clang 9 upgrade (I used your cling fork) and I found a problem. When I install Cling, the `ClingTargets.cmake` file is not copied to the installation folder. When I manually copy the `ClingTargets.cmake` to the installation folder and run the `CMakeLists.txt` from xeus-cling, I get the following error:. ```. cmake ../xeus-cling/ -D CMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++ -DCMAKE_INSTALL_LIBDIR=${CONDA_PREFIX}/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=""-I/home/sehrig/workspace/cling9demo/install/include/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:1804,usability,minim,minimum,1804,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2159,usability,Error,Error,2159,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:2531,usability,error,errors,2531,"ude/cling/"" -DCMAKE_PREFIX_PATH=/home/sehrig/workspace/cling9demo/install/lib/cmake/cling/. -- The C compiler identification is Clang 11.0.0. -- The CXX compiler identification is Clang 11.0.0. -- Detecting C compiler ABI info. -- Detecting C compiler ABI info - done. -- Check for working C compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang - skipped. -- Detecting C compile features. -- Detecting C compile features - done. -- Detecting CXX compiler ABI info. -- Detecting CXX compiler ABI info - done. -- Check for working CXX compiler: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/clang++ - skipped. -- Detecting CXX compile features. -- Detecting CXX compile features - done. -- Building xeus-cling v0.12.0. -- Found LLVM_CONFIG as /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/llvm-11.0.0-ubn363okfkmwy6dpoozlbgidl4bks3wd/bin/llvm-config. -- Found nlohmann_json: /home/sehrig/application/miniconda3/envs/cling9demo/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.9.1"", minimum required is ""3.2.0"") . -- Found LibUUID: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/libuuid-1.0.3-lxispdpiiahk26ye53cg5qn7bk24tywj/lib/libuuid.so . -- Found OpenSSL: /opt/spack-modules/linux-ubuntu20.04-skylake_avx512/gcc-10.2.0/openssl-1.1.1g-doxvrf6l7lm7c55agwefmfbxe4kwwwbi/lib/libcrypto.so (found version ""1.1.1g"") . CMake Error at CMakeLists.txt:114 (find_package):. Found package configuration file:. /home/sehrig/workspace/cling9demo/install/lib/cmake/cling/ClingConfig.cmake. but it set Cling_FOUND to FALSE so package ""Cling"" is considered to be NOT. FOUND. Reason given by package:. The following imported targets are referenced, but are missing:. LLVMX86Utils. -- Configuring incomplete, errors occurred! See also ""/home/sehrig/workspace/cling9demo/jupyter/build/CMakeFiles/CMakeOutput.log"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6385:11,deployability,build,build,11,"@phsft-bot build just on ROOT-debian10-i386/cxx14, windows10/cxx14 with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6385
https://github.com/root-project/root/pull/6387:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6387
https://github.com/root-project/root/pull/6388:31,availability,failur,failure,31,"I don't understand the windows failure, it might or might not be the fault of these changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:69,availability,fault,fault,69,"I don't understand the windows failure, it might or might not be the fault of these changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:31,deployability,fail,failure,31,"I don't understand the windows failure, it might or might not be the fault of these changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:69,energy efficiency,fault,fault,69,"I don't understand the windows failure, it might or might not be the fault of these changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:31,performance,failur,failure,31,"I don't understand the windows failure, it might or might not be the fault of these changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:69,performance,fault,fault,69,"I don't understand the windows failure, it might or might not be the fault of these changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:31,reliability,fail,failure,31,"I don't understand the windows failure, it might or might not be the fault of these changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:69,reliability,fault,fault,69,"I don't understand the windows failure, it might or might not be the fault of these changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:69,safety,fault,fault,69,"I don't understand the windows failure, it might or might not be the fault of these changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:8,testability,understand,understand,8,"I don't understand the windows failure, it might or might not be the fault of these changes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:177,energy efficiency,green,green-light,177,"I remove that second commit that broke windows and opened a separate issue about the problem that commit was trying to solve, #6406 . This should be ready to merge if you agree/green-light it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:14,availability,Error,Error,14,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:143,availability,Error,Error,143,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:162,availability,Operat,Operation,162,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:176,availability,slo,slow,176,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:56,deployability,build,build,56,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:90,deployability,build,build,90,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:96,deployability,build,build,96,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:149,integrability,messag,message,149,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:129,interoperability,xml,xml,129,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:149,interoperability,messag,message,149,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:14,performance,Error,Error,14,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:143,performance,Error,Error,143,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:176,reliability,slo,slow,176,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:14,safety,Error,Error,14,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:102,safety,Test,Testing,102,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:124,safety,Test,Test,124,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:143,safety,Error,Error,143,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:102,testability,Test,Testing,102,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:124,testability,Test,Test,124,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:14,usability,Error,Error,14,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6388:143,usability,Error,Error,143,```. 12:22:29 Error when uploading file: /home/sftnight/build/workspace/root-pullrequests-build/build/Testing/20200922-1009/Test.xml. 12:22:29 Error message was: Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6388
https://github.com/root-project/root/pull/6389:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6389
https://github.com/root-project/root/issues/6393:96,deployability,fail,fails,96,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:114,deployability,fail,fails,114,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:678,deployability,patch,patch,678,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:744,deployability,patch,patches,744,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:771,deployability,patch,patch,771,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:924,deployability,patch,patch,924,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1046,deployability,patch,patch,1046,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:238,modifiability,paramet,parameters,238,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:956,modifiability,variab,variables,956,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:96,reliability,fail,fails,96,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:114,reliability,fail,fails,114,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:436,reliability,doe,does,436,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:460,safety,except,except,460,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:678,safety,patch,patch,678,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:744,safety,patch,patches,744,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:771,safety,patch,patch,771,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:924,safety,patch,patch,924,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1046,safety,patch,patch,1046,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:265,security,hack,hack,265,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:384,security,modif,modify,384,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:678,security,patch,patch,678,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:744,security,patch,patches,744,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:771,security,patch,patch,771,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:924,security,patch,patch,924,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1046,security,patch,patch,1046,"""Templated ctors cannot be called on Windows because demangling of the constructor template (!) fails"". No ... it fails b/c either ROOT/meta or the Cling lookupHelper is not capable of recognizing constructor names with provided template parameters. The demangling hack was just a quick & easy way around that, esp. the lookupHelper being a very brittle piece of code that is hard to modify. However, since the demangling by definition does not allow anything except an exact match (the lookupHelper being a tad more flexible, albeit not by enough), it's a very poor option. But cppyy handles templated constructors just fine on Windows, so there is probably some truth in this patch:. https://bitbucket.org/wlav/cppyy-backend/src/master/cling/patches/win64s2.diff. This patch removes the Clang internal marker for Windows mangled symbols. This marker is (mostly) gone in Clang master, too. There are other reasons for this patch, such as lookup of global variables, which is what started the initial discussion with Bertrand that grew into this patch. However, I re-emphasize that it is better to fix the actual problem than muck with the workaround.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:575,deployability,upgrad,upgrade,575,"IIUC we have two options:. 1) give the ctor a name that includes the template parameter list. This breaks an assumption used throughout ROOT on ""ctors' name == class name"". Maybe even cppyy? But it's code, we can change that. 2) provide cppyy with the templateness of functions. So we'll have to ""muck"" either way. My guesstimate is that option 2) is less intrusive, also for our users. I am aware of modern llvm having improved the mangling; I still think (as you) that demangling isn't the perfect solution here in clingwrapper, and we're bitten by this now, with the llvm upgrade still ongoing. Let me know your thoughts about (against?) option 2, or what other option I miss.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:78,modifiability,paramet,parameter,78,"IIUC we have two options:. 1) give the ctor a name that includes the template parameter list. This breaks an assumption used throughout ROOT on ""ctors' name == class name"". Maybe even cppyy? But it's code, we can change that. 2) provide cppyy with the templateness of functions. So we'll have to ""muck"" either way. My guesstimate is that option 2) is less intrusive, also for our users. I am aware of modern llvm having improved the mangling; I still think (as you) that demangling isn't the perfect solution here in clingwrapper, and we're bitten by this now, with the llvm upgrade still ongoing. Let me know your thoughts about (against?) option 2, or what other option I miss.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:575,modifiability,upgrad,upgrade,575,"IIUC we have two options:. 1) give the ctor a name that includes the template parameter list. This breaks an assumption used throughout ROOT on ""ctors' name == class name"". Maybe even cppyy? But it's code, we can change that. 2) provide cppyy with the templateness of functions. So we'll have to ""muck"" either way. My guesstimate is that option 2) is less intrusive, also for our users. I am aware of modern llvm having improved the mangling; I still think (as you) that demangling isn't the perfect solution here in clingwrapper, and we're bitten by this now, with the llvm upgrade still ongoing. Let me know your thoughts about (against?) option 2, or what other option I miss.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:356,security,intrus,intrusive,356,"IIUC we have two options:. 1) give the ctor a name that includes the template parameter list. This breaks an assumption used throughout ROOT on ""ctors' name == class name"". Maybe even cppyy? But it's code, we can change that. 2) provide cppyy with the templateness of functions. So we'll have to ""muck"" either way. My guesstimate is that option 2) is less intrusive, also for our users. I am aware of modern llvm having improved the mangling; I still think (as you) that demangling isn't the perfect solution here in clingwrapper, and we're bitten by this now, with the llvm upgrade still ongoing. Let me know your thoughts about (against?) option 2, or what other option I miss.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:380,usability,user,users,380,"IIUC we have two options:. 1) give the ctor a name that includes the template parameter list. This breaks an assumption used throughout ROOT on ""ctors' name == class name"". Maybe even cppyy? But it's code, we can change that. 2) provide cppyy with the templateness of functions. So we'll have to ""muck"" either way. My guesstimate is that option 2) is less intrusive, also for our users. I am aware of modern llvm having improved the mangling; I still think (as you) that demangling isn't the perfect solution here in clingwrapper, and we're bitten by this now, with the llvm upgrade still ongoing. Let me know your thoughts about (against?) option 2, or what other option I miss.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1054,deployability,fail,fail,1054,"ctor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of the lookup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1662,deployability,contain,container,1662,"ctor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of the lookup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1425,energy efficiency,COOL,COOL,1425,"ctor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of the lookup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1028,integrability,sub,submission,1028,"ctor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of the lookup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1117,performance,time,times,1117,"ctor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of the lookup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1167,performance,time,time,1167,"ctor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of the lookup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1891,performance,time,time,1891,"ctor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of the lookup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:427,reliability,doe,does,427,"The constructor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1054,reliability,fail,fail,1054,"ctor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of the lookup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:543,security,hack,hack,543,"The constructor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:614,security,hack,hack,614,"The constructor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1003,security,hack,hacks,1003,"nstructor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of the lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1201,security,hack,hacks,1201,"ctor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of the lookup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1952,security,hack,hack,1952,"ctor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of the lookup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:771,usability,prototyp,prototype,771,"The constructor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:967,usability,prototyp,prototype,967,"The constructor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1745,usability,user,user,1745,"ctor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of the lookup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1935,usability,prefer,preference,1935,"ctor comparison really shouldn't be necessary as ROOT/meta provides a flag. See this code in clingwrapper.cxx:. ```. bool Cppyy::IsConstructor(TCppMethod_t method). {. if (method) {. TFunction* f = m2f(method);. return f->ExtraProperty() & kIsConstructor;. }. return false;. }. ```. I presume it being in the overflow ""extra"" property means that it is relatively newer, so probably there's still code out there that does name comparisons, but that shouldn't be hard to fix. Provide the ""templateness of functions"" is just as much a hack. Every single line of code beyond `GetMethodWithPrototype()` is a hack and should not have to exist. The solution would be for the lookupHelper to return all the candidates rather than shoe-horning the matching through the prototype string. Right now, a lookup call initiated from CPyCppyy can lead to as many as a dozen lookups, each finding and discarding (!) the candidates over and over, as it tries to massage the prototype string (and the series of hacks that follows) into submission. And can still fail! This is a rather old problem and we've discussed it many times. And yet, here we are again, expending more time on the workarounds and other hacks instead of fixing it properly. Yeah sure, maybe libIncremental will fix it one day. Now this Windows bug gets some love, but off the top of my head, I now at least 4 more bugs hampered by this: matching with enums for COOL (fixed in cppyy, broken in PyROOT); default template arguments for RDataFrame (fixed in cppyy, broken in PyROOT); mixing `obj*`, `obj&`, and `obj&&` (broken in both); mixing `std::initializer_list<>` and `std:vector<>` or other STL container (broken in both). Some of these bugs predate cppyy. Another (non-Python) user of clingwrapper more recently came up to the same problem of wanting the lookup candidates in order to facilitate a match. . It's a horrible time sink and will remain so as long as the preference is to hack workarounds rather than fix the problem of the lookup.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:885,availability,Operat,Operators,885,"A while back you said. ``` OPAQUE_HANDLE h = interp->GetOverloads(""func_name"");. for (sig : sigs) {. f = interp->Match(h, sig);. if (f) break;. }. interp->Delete(h);. return f;. ```. That's super awkward to provide from compilers - some of the overloads. - need to be instantiated first. - are only visible through ADL. - are hidden friends. to name a couple of eeews that come to my mind. *[Edit 18:13]* Example code:. ```. #include <type_traits>. struct Eeew {. int func();. template <class T>. int func(T);. template <class T>. std::enable_if_t<std::is_integral_v<T>, int> func(int, T); . };. namespace N {. struct Eeew2 {. friend int func(Eeew2, int);. };. int adl(Eeew2);. }. void findThat() {. Eeew().func();. Eeew().func(12);. Eeew().func(12, 12);. N::Eeew2 eeew2;. func(eeew2, 12);. adl(eeew2);. }. ```. Yes contrived, but all of this is becoming reality with current stdlibs. Operators are yet another whole chapter: by the C++20 standard that now clarifies this, lookup for those only works through expressions. *[End edit 18:13]*. The only reasonable way to do lookup in C++ is *with* the arguments, i.e. starting from an expression. Is that feasible for cppyy, e.g. possible code-path-wise, acceptable performance-wise?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:868,energy efficiency,current,current,868,"A while back you said. ``` OPAQUE_HANDLE h = interp->GetOverloads(""func_name"");. for (sig : sigs) {. f = interp->Match(h, sig);. if (f) break;. }. interp->Delete(h);. return f;. ```. That's super awkward to provide from compilers - some of the overloads. - need to be instantiated first. - are only visible through ADL. - are hidden friends. to name a couple of eeews that come to my mind. *[Edit 18:13]* Example code:. ```. #include <type_traits>. struct Eeew {. int func();. template <class T>. int func(T);. template <class T>. std::enable_if_t<std::is_integral_v<T>, int> func(int, T); . };. namespace N {. struct Eeew2 {. friend int func(Eeew2, int);. };. int adl(Eeew2);. }. void findThat() {. Eeew().func();. Eeew().func(12);. Eeew().func(12, 12);. N::Eeew2 eeew2;. func(eeew2, 12);. adl(eeew2);. }. ```. Yes contrived, but all of this is becoming reality with current stdlibs. Operators are yet another whole chapter: by the C++20 standard that now clarifies this, lookup for those only works through expressions. *[End edit 18:13]*. The only reasonable way to do lookup in C++ is *with* the arguments, i.e. starting from an expression. Is that feasible for cppyy, e.g. possible code-path-wise, acceptable performance-wise?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:352,integrability,coupl,couple,352,"A while back you said. ``` OPAQUE_HANDLE h = interp->GetOverloads(""func_name"");. for (sig : sigs) {. f = interp->Match(h, sig);. if (f) break;. }. interp->Delete(h);. return f;. ```. That's super awkward to provide from compilers - some of the overloads. - need to be instantiated first. - are only visible through ADL. - are hidden friends. to name a couple of eeews that come to my mind. *[Edit 18:13]* Example code:. ```. #include <type_traits>. struct Eeew {. int func();. template <class T>. int func(T);. template <class T>. std::enable_if_t<std::is_integral_v<T>, int> func(int, T); . };. namespace N {. struct Eeew2 {. friend int func(Eeew2, int);. };. int adl(Eeew2);. }. void findThat() {. Eeew().func();. Eeew().func(12);. Eeew().func(12, 12);. N::Eeew2 eeew2;. func(eeew2, 12);. adl(eeew2);. }. ```. Yes contrived, but all of this is becoming reality with current stdlibs. Operators are yet another whole chapter: by the C++20 standard that now clarifies this, lookup for those only works through expressions. *[End edit 18:13]*. The only reasonable way to do lookup in C++ is *with* the arguments, i.e. starting from an expression. Is that feasible for cppyy, e.g. possible code-path-wise, acceptable performance-wise?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:939,interoperability,standard,standard,939,"A while back you said. ``` OPAQUE_HANDLE h = interp->GetOverloads(""func_name"");. for (sig : sigs) {. f = interp->Match(h, sig);. if (f) break;. }. interp->Delete(h);. return f;. ```. That's super awkward to provide from compilers - some of the overloads. - need to be instantiated first. - are only visible through ADL. - are hidden friends. to name a couple of eeews that come to my mind. *[Edit 18:13]* Example code:. ```. #include <type_traits>. struct Eeew {. int func();. template <class T>. int func(T);. template <class T>. std::enable_if_t<std::is_integral_v<T>, int> func(int, T); . };. namespace N {. struct Eeew2 {. friend int func(Eeew2, int);. };. int adl(Eeew2);. }. void findThat() {. Eeew().func();. Eeew().func(12);. Eeew().func(12, 12);. N::Eeew2 eeew2;. func(eeew2, 12);. adl(eeew2);. }. ```. Yes contrived, but all of this is becoming reality with current stdlibs. Operators are yet another whole chapter: by the C++20 standard that now clarifies this, lookup for those only works through expressions. *[End edit 18:13]*. The only reasonable way to do lookup in C++ is *with* the arguments, i.e. starting from an expression. Is that feasible for cppyy, e.g. possible code-path-wise, acceptable performance-wise?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:352,modifiability,coupl,couple,352,"A while back you said. ``` OPAQUE_HANDLE h = interp->GetOverloads(""func_name"");. for (sig : sigs) {. f = interp->Match(h, sig);. if (f) break;. }. interp->Delete(h);. return f;. ```. That's super awkward to provide from compilers - some of the overloads. - need to be instantiated first. - are only visible through ADL. - are hidden friends. to name a couple of eeews that come to my mind. *[Edit 18:13]* Example code:. ```. #include <type_traits>. struct Eeew {. int func();. template <class T>. int func(T);. template <class T>. std::enable_if_t<std::is_integral_v<T>, int> func(int, T); . };. namespace N {. struct Eeew2 {. friend int func(Eeew2, int);. };. int adl(Eeew2);. }. void findThat() {. Eeew().func();. Eeew().func(12);. Eeew().func(12, 12);. N::Eeew2 eeew2;. func(eeew2, 12);. adl(eeew2);. }. ```. Yes contrived, but all of this is becoming reality with current stdlibs. Operators are yet another whole chapter: by the C++20 standard that now clarifies this, lookup for those only works through expressions. *[End edit 18:13]*. The only reasonable way to do lookup in C++ is *with* the arguments, i.e. starting from an expression. Is that feasible for cppyy, e.g. possible code-path-wise, acceptable performance-wise?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1214,performance,perform,performance-wise,1214,"A while back you said. ``` OPAQUE_HANDLE h = interp->GetOverloads(""func_name"");. for (sig : sigs) {. f = interp->Match(h, sig);. if (f) break;. }. interp->Delete(h);. return f;. ```. That's super awkward to provide from compilers - some of the overloads. - need to be instantiated first. - are only visible through ADL. - are hidden friends. to name a couple of eeews that come to my mind. *[Edit 18:13]* Example code:. ```. #include <type_traits>. struct Eeew {. int func();. template <class T>. int func(T);. template <class T>. std::enable_if_t<std::is_integral_v<T>, int> func(int, T); . };. namespace N {. struct Eeew2 {. friend int func(Eeew2, int);. };. int adl(Eeew2);. }. void findThat() {. Eeew().func();. Eeew().func(12);. Eeew().func(12, 12);. N::Eeew2 eeew2;. func(eeew2, 12);. adl(eeew2);. }. ```. Yes contrived, but all of this is becoming reality with current stdlibs. Operators are yet another whole chapter: by the C++20 standard that now clarifies this, lookup for those only works through expressions. *[End edit 18:13]*. The only reasonable way to do lookup in C++ is *with* the arguments, i.e. starting from an expression. Is that feasible for cppyy, e.g. possible code-path-wise, acceptable performance-wise?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:352,testability,coupl,couple,352,"A while back you said. ``` OPAQUE_HANDLE h = interp->GetOverloads(""func_name"");. for (sig : sigs) {. f = interp->Match(h, sig);. if (f) break;. }. interp->Delete(h);. return f;. ```. That's super awkward to provide from compilers - some of the overloads. - need to be instantiated first. - are only visible through ADL. - are hidden friends. to name a couple of eeews that come to my mind. *[Edit 18:13]* Example code:. ```. #include <type_traits>. struct Eeew {. int func();. template <class T>. int func(T);. template <class T>. std::enable_if_t<std::is_integral_v<T>, int> func(int, T); . };. namespace N {. struct Eeew2 {. friend int func(Eeew2, int);. };. int adl(Eeew2);. }. void findThat() {. Eeew().func();. Eeew().func(12);. Eeew().func(12, 12);. N::Eeew2 eeew2;. func(eeew2, 12);. adl(eeew2);. }. ```. Yes contrived, but all of this is becoming reality with current stdlibs. Operators are yet another whole chapter: by the C++20 standard that now clarifies this, lookup for those only works through expressions. *[End edit 18:13]*. The only reasonable way to do lookup in C++ is *with* the arguments, i.e. starting from an expression. Is that feasible for cppyy, e.g. possible code-path-wise, acceptable performance-wise?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1214,usability,perform,performance-wise,1214,"A while back you said. ``` OPAQUE_HANDLE h = interp->GetOverloads(""func_name"");. for (sig : sigs) {. f = interp->Match(h, sig);. if (f) break;. }. interp->Delete(h);. return f;. ```. That's super awkward to provide from compilers - some of the overloads. - need to be instantiated first. - are only visible through ADL. - are hidden friends. to name a couple of eeews that come to my mind. *[Edit 18:13]* Example code:. ```. #include <type_traits>. struct Eeew {. int func();. template <class T>. int func(T);. template <class T>. std::enable_if_t<std::is_integral_v<T>, int> func(int, T); . };. namespace N {. struct Eeew2 {. friend int func(Eeew2, int);. };. int adl(Eeew2);. }. void findThat() {. Eeew().func();. Eeew().func(12);. Eeew().func(12, 12);. N::Eeew2 eeew2;. func(eeew2, 12);. adl(eeew2);. }. ```. Yes contrived, but all of this is becoming reality with current stdlibs. Operators are yet another whole chapter: by the C++20 standard that now clarifies this, lookup for those only works through expressions. *[End edit 18:13]*. The only reasonable way to do lookup in C++ is *with* the arguments, i.e. starting from an expression. Is that feasible for cppyy, e.g. possible code-path-wise, acceptable performance-wise?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:96,availability,state,state,96,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1350,availability,consist,consistent,1350,"ay. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, there also needs to be a cleanupHelper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:602,deployability,fail,fails,602,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1182,deployability,depend,dependent,1182,", but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1193,deployability,fail,fails,1193,"not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, there also ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2097,energy efficiency,current,current,2097,"ay. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, there also needs to be a cleanupHelper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:96,integrability,state,state,96,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:523,integrability,event,eventually,523,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1182,integrability,depend,dependent,1182,", but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:689,modifiability,paramet,parameters,689,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:928,modifiability,concern,concerned,928,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1182,modifiability,depend,dependent,1182,", but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1299,modifiability,paramet,parameters,1299,"ay. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, there also needs to be a cleanupHelper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:0,performance,Perform,Performance-wise,0,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:256,reliability,doe,does,256,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:602,reliability,fail,fails,602,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1193,reliability,fail,fails,1193,"not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, there also ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1532,reliability,doe,does,1532,"ay. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, there also needs to be a cleanupHelper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1723,reliability,doe,does,1723,"ay. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, there also needs to be a cleanupHelper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1182,safety,depend,dependent,1182,", but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:350,security,sign,signature,350,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:928,testability,concern,concerned,928,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1090,testability,simpl,simply,1090,"he state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1182,testability,depend,dependent,1182,", but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:0,usability,Perform,Performance-wise,0,"Performance-wise and functionality-wise would still work if for the duration of the trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1081,usability,user,users,1081,"trials, the state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1090,usability,simpl,simply,1090,"he state needed to do the matching is kept alive. That was mostly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1151,usability,prototyp,prototype,1151,"ly the idea with the code above, but is not how I would solve it today. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1350,usability,consist,consistent,1350,"ay. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, there also needs to be a cleanupHelper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1546,usability,support,support,1546,"ay. So, to your points:. No, it does not need to be instantiated first. For example, if I know that a _potential_ match has a signature of `T*`, then I'm not going to ask it to match `T&`, so even before instantiation, the lookup has useful information. Right now, CPyCppyy loops over each, so will eventually match if all types are by-pointer or all are by reference, but that fails combinations. Another good case is knowing which arguments are based on template parameters and which are not, so that the non-template ones need not be varied. No, on the Python side it is fair game to provide the template arguments, and thus non-ADL happens, too. E.g. all int types are equivalent as far as Python is concerned, and although CPyCppyy will increase the template int argument if it has an argument value larger than will fit, it is not uncommon for Python users to simply fill in `int64_t` or whatever. In fact, as-is, if the prototype lookup, ie. argument dependent, fails, CPyCppyy will assume that we're dealing with the common case where all argument types are template parameters. (It's a human thing to make that order consistent, which is why it works quite often, but it is not a language requirement/guarantee.) It then asks for the full name in a non-ADL manner. ROOT/meta (lookupHelper, I think) does not even support friends, so no worries there. Whether you think it is ""eeew"" or not is irrelevant. That's highly a technical term. What is relevant is that just before the lookupHelper does a `BestViableFunction()` it has a `OverloadCandidateSet` and I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows). Unfortunately, I can't just return the set, as it's deep in the bowels of lookupHelper, whose bowels are very deep if you ever looked, and AFAICT, there is a current transaction that needs to be returned with it and maybe more. Plus if returned, there also needs to be a cleanupHelper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1138,availability,sla,slap,1138,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:617,deployability,version,version,617,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:82,energy efficiency,current,current,82,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:849,energy efficiency,model,model,849,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:937,energy efficiency,model,model,937,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:617,integrability,version,version,617,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:860,interoperability,convers,conversion,860,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:926,interoperability,convers,conversion,926,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:617,modifiability,version,version,617,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:992,performance,perform,performance,992,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1138,reliability,sla,slap,1138,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:849,security,model,model,849,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:937,security,model,model,937,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:263,testability,understand,understand,263,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:992,usability,perform,performance,992,"OK so what you're after is:. - ignore hidden friends, ignore ADL. This breaks any current stdlib usage; you have been warned :-). - collect all occurrences of a name, be it function template or function. Correct? Can be done, but you might not like the result. I understand that it's *better* than what we have now; but I think it's not good enough. Why can you not:. * pass Python integers as `int`, then `long`, then... (i.e. keep re-trying)? * pass strings as `const char*`s. * pass collections as `begin(). end()`. *... i.e. have a mapping into C++ expressions, instead of wanting to do (a C++ feature-restricted version of) overload resolution inside cppyy? Can you expand on ""I can do a much better job finding my own match than can do Sema, b/c the rules to apply aren't exactly the C++ ones (the only ones that Sema knows)"". Why can you not model type conversion options into C++ argument types, instead of doing that conversion model yourself from C++ function argument types? Is it performance? `LookupHelper` exists, but I insist it's inadequate for expressions. I will try to resist from being colloquial from here on, please slap me should it ever happen again ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:596,availability,slo,slow,596,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:922,availability,operat,operator,922,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:953,availability,operat,operator,953,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1828,availability,avail,available,1828,"gle translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:675,deployability,modul,modules,675,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1540,deployability,contain,container,1540,"call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The on",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1584,deployability,contain,container,1584,"be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1624,deployability,contain,container,1624,"hey run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1744,deployability,contain,container,1744,"d that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive ser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:499,energy efficiency,current,currently,499,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:660,energy efficiency,load,loading,660,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2188,energy efficiency,current,current,2188,"ong long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet anoth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:837,integrability,translat,translation,837,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2490,integrability,interfac,interfaces,2490,"ython side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet another workaround, but it actually crashed `lookupHelper` (segfault and die; and it's not the only one; I have a few more for Vassil, e.g. lookup in an unnamed namespace also crashes deep, deep inside Cling/Clang). So, I consider that another strong argument against ""trying"": anything beyond the usual basi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2823,integrability,event,eventually,2823,"te expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet another workaround, but it actually crashed `lookupHelper` (segfault and die; and it's not the only one; I have a few more for Vassil, e.g. lookup in an unnamed namespace also crashes deep, deep inside Cling/Clang). So, I consider that another strong argument against ""trying"": anything beyond the usual basic stuff simply segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:138,interoperability,prox,proxy,138,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:837,interoperability,translat,translation,837,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2097,interoperability,convers,conversion,2097,"unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2490,interoperability,interfac,interfaces,2490,"ython side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet another workaround, but it actually crashed `lookupHelper` (segfault and die; and it's not the only one; I have a few more for Vassil, e.g. lookup in an unnamed namespace also crashes deep, deep inside Cling/Clang). So, I consider that another strong argument against ""trying"": anything beyond the usual basi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:675,modifiability,modul,modules,675,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2490,modifiability,interfac,interfaces,2490,"ython side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet another workaround, but it actually crashed `lookupHelper` (segfault and die; and it's not the only one; I have a few more for Vassil, e.g. lookup in an unnamed namespace also crashes deep, deep inside Cling/Clang). So, I consider that another strong argument against ""trying"": anything beyond the usual basi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:660,performance,load,loading,660,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:596,reliability,slo,slow,596,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1828,reliability,availab,available,1828,"gle translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:675,safety,modul,modules,675,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1828,safety,avail,available,1828,"gle translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2470,safety,avoid,avoided,2470,"uple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet another workaround, but it actually crashed `lookupHelper` (segfault and die; and it's not the only one; I have a few more for Vassil, e.g. lookup in an unnamed namespace also crashes deep, deep inside Cling/Clang). So, I consider that another strong argument against ""trying"": anything ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1828,security,availab,available,1828,"gle translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2358,security,hack,hacking,2358," what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet another workaround, but it actually crashed `lookupHelper` (segfault and die; and it's not the only one; I have a few more for Vassil, e.g. lookup in an unnamed namespace also",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:849,testability,unit,unit,849,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3503,testability,simpl,simply,3503,"te expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet another workaround, but it actually crashed `lookupHelper` (segfault and die; and it's not the only one; I have a few more for Vassil, e.g. lookup in an unnamed namespace also crashes deep, deep inside Cling/Clang). So, I consider that another strong argument against ""trying"": anything beyond the usual basic stuff simply segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:607,usability,usab,usable,607,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1926,usability,hint,hints,1926,"r<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `dou",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2061,usability,clear,clear,2061,"re often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`? Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the dat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2512,usability,support,support,2512,"mplate expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet another workaround, but it actually crashed `lookupHelper` (segfault and die; and it's not the only one; I have a few more for Vassil, e.g. lookup in an unnamed namespace also crashes deep, deep inside Cling/Clang). So, I consider that another strong argument against ""trying"": anything beyond the usual basic stuff simply segfau",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3503,usability,simpl,simply,3503,"te expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet another workaround, but it actually crashed `lookupHelper` (segfault and die; and it's not the only one; I have a few more for Vassil, e.g. lookup in an unnamed namespace also crashes deep, deep inside Cling/Clang). So, I consider that another strong argument against ""trying"": anything beyond the usual basic stuff simply segfaults.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:586,availability,operat,operators,586,"OK, so your approach would be to get the ""obvious"" set (I cannot think of a better term) of overloads, and for now just ignore hidden friends? (ADL can be worked around on the caller side, *if* people know where to find the suitable name.). Hidden friends are very much appreciated in the standards committee, as they reduce the size of overload sets. You will then have to work around that on the cppyy side - I could imaging that to be possible, with some help from cling. Once you have identified a hidden friend overload you cannot spell it in a fully qualified way. Especially for operators we will have to switch to expression-based operator invocation (`a @ b`) rather than function-style invocation `operator@(a,b)`. As I said, that's what C++20 and later impose anyway. I will see that we implement the generic lookup you're after. I would still appreciate feedback on `op@` - I'd hate implementing something we cannot use in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:639,availability,operat,operator,639,"OK, so your approach would be to get the ""obvious"" set (I cannot think of a better term) of overloads, and for now just ignore hidden friends? (ADL can be worked around on the caller side, *if* people know where to find the suitable name.). Hidden friends are very much appreciated in the standards committee, as they reduce the size of overload sets. You will then have to work around that on the cppyy side - I could imaging that to be possible, with some help from cling. Once you have identified a hidden friend overload you cannot spell it in a fully qualified way. Especially for operators we will have to switch to expression-based operator invocation (`a @ b`) rather than function-style invocation `operator@(a,b)`. As I said, that's what C++20 and later impose anyway. I will see that we implement the generic lookup you're after. I would still appreciate feedback on `op@` - I'd hate implementing something we cannot use in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:708,availability,operat,operator,708,"OK, so your approach would be to get the ""obvious"" set (I cannot think of a better term) of overloads, and for now just ignore hidden friends? (ADL can be worked around on the caller side, *if* people know where to find the suitable name.). Hidden friends are very much appreciated in the standards committee, as they reduce the size of overload sets. You will then have to work around that on the cppyy side - I could imaging that to be possible, with some help from cling. Once you have identified a hidden friend overload you cannot spell it in a fully qualified way. Especially for operators we will have to switch to expression-based operator invocation (`a @ b`) rather than function-style invocation `operator@(a,b)`. As I said, that's what C++20 and later impose anyway. I will see that we implement the generic lookup you're after. I would still appreciate feedback on `op@` - I'd hate implementing something we cannot use in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:318,energy efficiency,reduc,reduce,318,"OK, so your approach would be to get the ""obvious"" set (I cannot think of a better term) of overloads, and for now just ignore hidden friends? (ADL can be worked around on the caller side, *if* people know where to find the suitable name.). Hidden friends are very much appreciated in the standards committee, as they reduce the size of overload sets. You will then have to work around that on the cppyy side - I could imaging that to be possible, with some help from cling. Once you have identified a hidden friend overload you cannot spell it in a fully qualified way. Especially for operators we will have to switch to expression-based operator invocation (`a @ b`) rather than function-style invocation `operator@(a,b)`. As I said, that's what C++20 and later impose anyway. I will see that we implement the generic lookup you're after. I would still appreciate feedback on `op@` - I'd hate implementing something we cannot use in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:289,interoperability,standard,standards,289,"OK, so your approach would be to get the ""obvious"" set (I cannot think of a better term) of overloads, and for now just ignore hidden friends? (ADL can be worked around on the caller side, *if* people know where to find the suitable name.). Hidden friends are very much appreciated in the standards committee, as they reduce the size of overload sets. You will then have to work around that on the cppyy side - I could imaging that to be possible, with some help from cling. Once you have identified a hidden friend overload you cannot spell it in a fully qualified way. Especially for operators we will have to switch to expression-based operator invocation (`a @ b`) rather than function-style invocation `operator@(a,b)`. As I said, that's what C++20 and later impose anyway. I will see that we implement the generic lookup you're after. I would still appreciate feedback on `op@` - I'd hate implementing something we cannot use in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:489,security,ident,identified,489,"OK, so your approach would be to get the ""obvious"" set (I cannot think of a better term) of overloads, and for now just ignore hidden friends? (ADL can be worked around on the caller side, *if* people know where to find the suitable name.). Hidden friends are very much appreciated in the standards committee, as they reduce the size of overload sets. You will then have to work around that on the cppyy side - I could imaging that to be possible, with some help from cling. Once you have identified a hidden friend overload you cannot spell it in a fully qualified way. Especially for operators we will have to switch to expression-based operator invocation (`a @ b`) rather than function-style invocation `operator@(a,b)`. As I said, that's what C++20 and later impose anyway. I will see that we implement the generic lookup you're after. I would still appreciate feedback on `op@` - I'd hate implementing something we cannot use in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:458,usability,help,help,458,"OK, so your approach would be to get the ""obvious"" set (I cannot think of a better term) of overloads, and for now just ignore hidden friends? (ADL can be worked around on the caller side, *if* people know where to find the suitable name.). Hidden friends are very much appreciated in the standards committee, as they reduce the size of overload sets. You will then have to work around that on the cppyy side - I could imaging that to be possible, with some help from cling. Once you have identified a hidden friend overload you cannot spell it in a fully qualified way. Especially for operators we will have to switch to expression-based operator invocation (`a @ b`) rather than function-style invocation `operator@(a,b)`. As I said, that's what C++20 and later impose anyway. I will see that we implement the generic lookup you're after. I would still appreciate feedback on `op@` - I'd hate implementing something we cannot use in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:866,usability,feedback,feedback,866,"OK, so your approach would be to get the ""obvious"" set (I cannot think of a better term) of overloads, and for now just ignore hidden friends? (ADL can be worked around on the caller side, *if* people know where to find the suitable name.). Hidden friends are very much appreciated in the standards committee, as they reduce the size of overload sets. You will then have to work around that on the cppyy side - I could imaging that to be possible, with some help from cling. Once you have identified a hidden friend overload you cannot spell it in a fully qualified way. Especially for operators we will have to switch to expression-based operator invocation (`a @ b`) rather than function-style invocation `operator@(a,b)`. As I said, that's what C++20 and later impose anyway. I will see that we implement the generic lookup you're after. I would still appreciate feedback on `op@` - I'd hate implementing something we cannot use in the end.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:699,availability,operat,operators,699,"Beyond that, I still think you do not understand at all how this would work. You seem to think that it is either letting `BestViableFunction()` do all the work _or_ doing all the work myself. But there are many scenario's where inspecting the set can provide better arguments to `BestViableFunction()`, such as already mentioned: knowing which parameters to keep fixed, which qualifiers to use, which STL containers to target. That alone would be a win before going on the fully reimplement that call. Yes, friends are still an issue, but they're not supported today either yet. Yes, people need to know a name, that is true today, and always will be: nature of dynamic languages like Python. Those operators are a total non-issue, as I'm doing expression-based invocation already in my version of TClingCallFunc (precisely b/c templates and function-style do not mix), so yes, if you still have the same old code there in ROOT then it's totally a problem for PyROOT, but it's already fine for cppyy. (I've also switched in the last release to something similar for `operator<<`, b/c a) friends didn't work and b) some lookupHelper functions crashed when trying to find it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1067,availability,operat,operator,1067,"Beyond that, I still think you do not understand at all how this would work. You seem to think that it is either letting `BestViableFunction()` do all the work _or_ doing all the work myself. But there are many scenario's where inspecting the set can provide better arguments to `BestViableFunction()`, such as already mentioned: knowing which parameters to keep fixed, which qualifiers to use, which STL containers to target. That alone would be a win before going on the fully reimplement that call. Yes, friends are still an issue, but they're not supported today either yet. Yes, people need to know a name, that is true today, and always will be: nature of dynamic languages like Python. Those operators are a total non-issue, as I'm doing expression-based invocation already in my version of TClingCallFunc (precisely b/c templates and function-style do not mix), so yes, if you still have the same old code there in ROOT then it's totally a problem for PyROOT, but it's already fine for cppyy. (I've also switched in the last release to something similar for `operator<<`, b/c a) friends didn't work and b) some lookupHelper functions crashed when trying to find it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:405,deployability,contain,containers,405,"Beyond that, I still think you do not understand at all how this would work. You seem to think that it is either letting `BestViableFunction()` do all the work _or_ doing all the work myself. But there are many scenario's where inspecting the set can provide better arguments to `BestViableFunction()`, such as already mentioned: knowing which parameters to keep fixed, which qualifiers to use, which STL containers to target. That alone would be a win before going on the fully reimplement that call. Yes, friends are still an issue, but they're not supported today either yet. Yes, people need to know a name, that is true today, and always will be: nature of dynamic languages like Python. Those operators are a total non-issue, as I'm doing expression-based invocation already in my version of TClingCallFunc (precisely b/c templates and function-style do not mix), so yes, if you still have the same old code there in ROOT then it's totally a problem for PyROOT, but it's already fine for cppyy. (I've also switched in the last release to something similar for `operator<<`, b/c a) friends didn't work and b) some lookupHelper functions crashed when trying to find it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:787,deployability,version,version,787,"Beyond that, I still think you do not understand at all how this would work. You seem to think that it is either letting `BestViableFunction()` do all the work _or_ doing all the work myself. But there are many scenario's where inspecting the set can provide better arguments to `BestViableFunction()`, such as already mentioned: knowing which parameters to keep fixed, which qualifiers to use, which STL containers to target. That alone would be a win before going on the fully reimplement that call. Yes, friends are still an issue, but they're not supported today either yet. Yes, people need to know a name, that is true today, and always will be: nature of dynamic languages like Python. Those operators are a total non-issue, as I'm doing expression-based invocation already in my version of TClingCallFunc (precisely b/c templates and function-style do not mix), so yes, if you still have the same old code there in ROOT then it's totally a problem for PyROOT, but it's already fine for cppyy. (I've also switched in the last release to something similar for `operator<<`, b/c a) friends didn't work and b) some lookupHelper functions crashed when trying to find it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1033,deployability,releas,release,1033,"Beyond that, I still think you do not understand at all how this would work. You seem to think that it is either letting `BestViableFunction()` do all the work _or_ doing all the work myself. But there are many scenario's where inspecting the set can provide better arguments to `BestViableFunction()`, such as already mentioned: knowing which parameters to keep fixed, which qualifiers to use, which STL containers to target. That alone would be a win before going on the fully reimplement that call. Yes, friends are still an issue, but they're not supported today either yet. Yes, people need to know a name, that is true today, and always will be: nature of dynamic languages like Python. Those operators are a total non-issue, as I'm doing expression-based invocation already in my version of TClingCallFunc (precisely b/c templates and function-style do not mix), so yes, if you still have the same old code there in ROOT then it's totally a problem for PyROOT, but it's already fine for cppyy. (I've also switched in the last release to something similar for `operator<<`, b/c a) friends didn't work and b) some lookupHelper functions crashed when trying to find it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:787,integrability,version,version,787,"Beyond that, I still think you do not understand at all how this would work. You seem to think that it is either letting `BestViableFunction()` do all the work _or_ doing all the work myself. But there are many scenario's where inspecting the set can provide better arguments to `BestViableFunction()`, such as already mentioned: knowing which parameters to keep fixed, which qualifiers to use, which STL containers to target. That alone would be a win before going on the fully reimplement that call. Yes, friends are still an issue, but they're not supported today either yet. Yes, people need to know a name, that is true today, and always will be: nature of dynamic languages like Python. Those operators are a total non-issue, as I'm doing expression-based invocation already in my version of TClingCallFunc (precisely b/c templates and function-style do not mix), so yes, if you still have the same old code there in ROOT then it's totally a problem for PyROOT, but it's already fine for cppyy. (I've also switched in the last release to something similar for `operator<<`, b/c a) friends didn't work and b) some lookupHelper functions crashed when trying to find it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:211,modifiability,scenario,scenario,211,"Beyond that, I still think you do not understand at all how this would work. You seem to think that it is either letting `BestViableFunction()` do all the work _or_ doing all the work myself. But there are many scenario's where inspecting the set can provide better arguments to `BestViableFunction()`, such as already mentioned: knowing which parameters to keep fixed, which qualifiers to use, which STL containers to target. That alone would be a win before going on the fully reimplement that call. Yes, friends are still an issue, but they're not supported today either yet. Yes, people need to know a name, that is true today, and always will be: nature of dynamic languages like Python. Those operators are a total non-issue, as I'm doing expression-based invocation already in my version of TClingCallFunc (precisely b/c templates and function-style do not mix), so yes, if you still have the same old code there in ROOT then it's totally a problem for PyROOT, but it's already fine for cppyy. (I've also switched in the last release to something similar for `operator<<`, b/c a) friends didn't work and b) some lookupHelper functions crashed when trying to find it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:344,modifiability,paramet,parameters,344,"Beyond that, I still think you do not understand at all how this would work. You seem to think that it is either letting `BestViableFunction()` do all the work _or_ doing all the work myself. But there are many scenario's where inspecting the set can provide better arguments to `BestViableFunction()`, such as already mentioned: knowing which parameters to keep fixed, which qualifiers to use, which STL containers to target. That alone would be a win before going on the fully reimplement that call. Yes, friends are still an issue, but they're not supported today either yet. Yes, people need to know a name, that is true today, and always will be: nature of dynamic languages like Python. Those operators are a total non-issue, as I'm doing expression-based invocation already in my version of TClingCallFunc (precisely b/c templates and function-style do not mix), so yes, if you still have the same old code there in ROOT then it's totally a problem for PyROOT, but it's already fine for cppyy. (I've also switched in the last release to something similar for `operator<<`, b/c a) friends didn't work and b) some lookupHelper functions crashed when trying to find it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:787,modifiability,version,version,787,"Beyond that, I still think you do not understand at all how this would work. You seem to think that it is either letting `BestViableFunction()` do all the work _or_ doing all the work myself. But there are many scenario's where inspecting the set can provide better arguments to `BestViableFunction()`, such as already mentioned: knowing which parameters to keep fixed, which qualifiers to use, which STL containers to target. That alone would be a win before going on the fully reimplement that call. Yes, friends are still an issue, but they're not supported today either yet. Yes, people need to know a name, that is true today, and always will be: nature of dynamic languages like Python. Those operators are a total non-issue, as I'm doing expression-based invocation already in my version of TClingCallFunc (precisely b/c templates and function-style do not mix), so yes, if you still have the same old code there in ROOT then it's totally a problem for PyROOT, but it's already fine for cppyy. (I've also switched in the last release to something similar for `operator<<`, b/c a) friends didn't work and b) some lookupHelper functions crashed when trying to find it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:38,testability,understand,understand,38,"Beyond that, I still think you do not understand at all how this would work. You seem to think that it is either letting `BestViableFunction()` do all the work _or_ doing all the work myself. But there are many scenario's where inspecting the set can provide better arguments to `BestViableFunction()`, such as already mentioned: knowing which parameters to keep fixed, which qualifiers to use, which STL containers to target. That alone would be a win before going on the fully reimplement that call. Yes, friends are still an issue, but they're not supported today either yet. Yes, people need to know a name, that is true today, and always will be: nature of dynamic languages like Python. Those operators are a total non-issue, as I'm doing expression-based invocation already in my version of TClingCallFunc (precisely b/c templates and function-style do not mix), so yes, if you still have the same old code there in ROOT then it's totally a problem for PyROOT, but it's already fine for cppyy. (I've also switched in the last release to something similar for `operator<<`, b/c a) friends didn't work and b) some lookupHelper functions crashed when trying to find it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:551,usability,support,supported,551,"Beyond that, I still think you do not understand at all how this would work. You seem to think that it is either letting `BestViableFunction()` do all the work _or_ doing all the work myself. But there are many scenario's where inspecting the set can provide better arguments to `BestViableFunction()`, such as already mentioned: knowing which parameters to keep fixed, which qualifiers to use, which STL containers to target. That alone would be a win before going on the fully reimplement that call. Yes, friends are still an issue, but they're not supported today either yet. Yes, people need to know a name, that is true today, and always will be: nature of dynamic languages like Python. Those operators are a total non-issue, as I'm doing expression-based invocation already in my version of TClingCallFunc (precisely b/c templates and function-style do not mix), so yes, if you still have the same old code there in ROOT then it's totally a problem for PyROOT, but it's already fine for cppyy. (I've also switched in the last release to something similar for `operator<<`, b/c a) friends didn't work and b) some lookupHelper functions crashed when trying to find it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:552,integrability,interfac,interface,552,"> But there are many scenario's where inspecting the set can provide better arguments to BestViableFunction(). Yes, that's what you explained. > I'm doing expression-based invocation already. OK excellent, then I don't see an issue. Note that you *cannot* spell the scope of hidden friends, i.e. you cannot invoke them by anything but expressions. It wasn't clear from what you said whether you were aware of that. And the fact that it's not a concern now is of no concern to me, as we should plan for C++20 and up, not the past. We'll come up with an interface proposal and run that by you (problem as usual isn't so much brain but time). Until then: I hope you agree that #6389 is an incremental improvement, happy to hear your comments there as it also touches cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:552,interoperability,interfac,interface,552,"> But there are many scenario's where inspecting the set can provide better arguments to BestViableFunction(). Yes, that's what you explained. > I'm doing expression-based invocation already. OK excellent, then I don't see an issue. Note that you *cannot* spell the scope of hidden friends, i.e. you cannot invoke them by anything but expressions. It wasn't clear from what you said whether you were aware of that. And the fact that it's not a concern now is of no concern to me, as we should plan for C++20 and up, not the past. We'll come up with an interface proposal and run that by you (problem as usual isn't so much brain but time). Until then: I hope you agree that #6389 is an incremental improvement, happy to hear your comments there as it also touches cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:21,modifiability,scenario,scenario,21,"> But there are many scenario's where inspecting the set can provide better arguments to BestViableFunction(). Yes, that's what you explained. > I'm doing expression-based invocation already. OK excellent, then I don't see an issue. Note that you *cannot* spell the scope of hidden friends, i.e. you cannot invoke them by anything but expressions. It wasn't clear from what you said whether you were aware of that. And the fact that it's not a concern now is of no concern to me, as we should plan for C++20 and up, not the past. We'll come up with an interface proposal and run that by you (problem as usual isn't so much brain but time). Until then: I hope you agree that #6389 is an incremental improvement, happy to hear your comments there as it also touches cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:444,modifiability,concern,concern,444,"> But there are many scenario's where inspecting the set can provide better arguments to BestViableFunction(). Yes, that's what you explained. > I'm doing expression-based invocation already. OK excellent, then I don't see an issue. Note that you *cannot* spell the scope of hidden friends, i.e. you cannot invoke them by anything but expressions. It wasn't clear from what you said whether you were aware of that. And the fact that it's not a concern now is of no concern to me, as we should plan for C++20 and up, not the past. We'll come up with an interface proposal and run that by you (problem as usual isn't so much brain but time). Until then: I hope you agree that #6389 is an incremental improvement, happy to hear your comments there as it also touches cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:465,modifiability,concern,concern,465,"> But there are many scenario's where inspecting the set can provide better arguments to BestViableFunction(). Yes, that's what you explained. > I'm doing expression-based invocation already. OK excellent, then I don't see an issue. Note that you *cannot* spell the scope of hidden friends, i.e. you cannot invoke them by anything but expressions. It wasn't clear from what you said whether you were aware of that. And the fact that it's not a concern now is of no concern to me, as we should plan for C++20 and up, not the past. We'll come up with an interface proposal and run that by you (problem as usual isn't so much brain but time). Until then: I hope you agree that #6389 is an incremental improvement, happy to hear your comments there as it also touches cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:552,modifiability,interfac,interface,552,"> But there are many scenario's where inspecting the set can provide better arguments to BestViableFunction(). Yes, that's what you explained. > I'm doing expression-based invocation already. OK excellent, then I don't see an issue. Note that you *cannot* spell the scope of hidden friends, i.e. you cannot invoke them by anything but expressions. It wasn't clear from what you said whether you were aware of that. And the fact that it's not a concern now is of no concern to me, as we should plan for C++20 and up, not the past. We'll come up with an interface proposal and run that by you (problem as usual isn't so much brain but time). Until then: I hope you agree that #6389 is an incremental improvement, happy to hear your comments there as it also touches cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:633,performance,time,time,633,"> But there are many scenario's where inspecting the set can provide better arguments to BestViableFunction(). Yes, that's what you explained. > I'm doing expression-based invocation already. OK excellent, then I don't see an issue. Note that you *cannot* spell the scope of hidden friends, i.e. you cannot invoke them by anything but expressions. It wasn't clear from what you said whether you were aware of that. And the fact that it's not a concern now is of no concern to me, as we should plan for C++20 and up, not the past. We'll come up with an interface proposal and run that by you (problem as usual isn't so much brain but time). Until then: I hope you agree that #6389 is an incremental improvement, happy to hear your comments there as it also touches cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:444,testability,concern,concern,444,"> But there are many scenario's where inspecting the set can provide better arguments to BestViableFunction(). Yes, that's what you explained. > I'm doing expression-based invocation already. OK excellent, then I don't see an issue. Note that you *cannot* spell the scope of hidden friends, i.e. you cannot invoke them by anything but expressions. It wasn't clear from what you said whether you were aware of that. And the fact that it's not a concern now is of no concern to me, as we should plan for C++20 and up, not the past. We'll come up with an interface proposal and run that by you (problem as usual isn't so much brain but time). Until then: I hope you agree that #6389 is an incremental improvement, happy to hear your comments there as it also touches cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:465,testability,concern,concern,465,"> But there are many scenario's where inspecting the set can provide better arguments to BestViableFunction(). Yes, that's what you explained. > I'm doing expression-based invocation already. OK excellent, then I don't see an issue. Note that you *cannot* spell the scope of hidden friends, i.e. you cannot invoke them by anything but expressions. It wasn't clear from what you said whether you were aware of that. And the fact that it's not a concern now is of no concern to me, as we should plan for C++20 and up, not the past. We'll come up with an interface proposal and run that by you (problem as usual isn't so much brain but time). Until then: I hope you agree that #6389 is an incremental improvement, happy to hear your comments there as it also touches cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:493,testability,plan,plan,493,"> But there are many scenario's where inspecting the set can provide better arguments to BestViableFunction(). Yes, that's what you explained. > I'm doing expression-based invocation already. OK excellent, then I don't see an issue. Note that you *cannot* spell the scope of hidden friends, i.e. you cannot invoke them by anything but expressions. It wasn't clear from what you said whether you were aware of that. And the fact that it's not a concern now is of no concern to me, as we should plan for C++20 and up, not the past. We'll come up with an interface proposal and run that by you (problem as usual isn't so much brain but time). Until then: I hope you agree that #6389 is an incremental improvement, happy to hear your comments there as it also touches cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:358,usability,clear,clear,358,"> But there are many scenario's where inspecting the set can provide better arguments to BestViableFunction(). Yes, that's what you explained. > I'm doing expression-based invocation already. OK excellent, then I don't see an issue. Note that you *cannot* spell the scope of hidden friends, i.e. you cannot invoke them by anything but expressions. It wasn't clear from what you said whether you were aware of that. And the fact that it's not a concern now is of no concern to me, as we should plan for C++20 and up, not the past. We'll come up with an interface proposal and run that by you (problem as usual isn't so much brain but time). Until then: I hope you agree that #6389 is an incremental improvement, happy to hear your comments there as it also touches cppyy.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:952,deployability,upgrad,upgrading,952,"> It wasn't clear from what you said whether you were aware of that. There are zounds of things that I'm not aware of, but as said, the kind of C++ that folks outside of HEP expect to ""just work"" with cppyy is rather more advanced that the basic C++98 that most folk in HEP still use. Heck, you guys are even still hung up on Python2.7! Anyway, the reason I changed the implementation is b/c it is already not working _today_. C++20 (which Clang5 doesn't support anyway) is just gravy. As for #6389, I'm too far diverged from since I forked ROOT/meta to apply it, so have no interest in it. I'm also not familiar with how the ""special functions"" boil upward. Note that, going back to the initiation of this thread: there was/is no issue with constructors for cppyy proper on Windows: both 32b and 64b, work fine. So, I see no benefit even in trying it out. I'm currently fixing that crash in lookupHelper with unnamed namespaces. Seems the solution is upgrading Cling _and_ a judiciously placed `Interpreter::PushTransactionRAII` (the crash is actually an abort b/c of an open transaction). Then still modules, have to see how Windows looks now; after that, this change to lookupHelper's handling of templates is high on my list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1102,deployability,modul,modules,1102,"> It wasn't clear from what you said whether you were aware of that. There are zounds of things that I'm not aware of, but as said, the kind of C++ that folks outside of HEP expect to ""just work"" with cppyy is rather more advanced that the basic C++98 that most folk in HEP still use. Heck, you guys are even still hung up on Python2.7! Anyway, the reason I changed the implementation is b/c it is already not working _today_. C++20 (which Clang5 doesn't support anyway) is just gravy. As for #6389, I'm too far diverged from since I forked ROOT/meta to apply it, so have no interest in it. I'm also not familiar with how the ""special functions"" boil upward. Note that, going back to the initiation of this thread: there was/is no issue with constructors for cppyy proper on Windows: both 32b and 64b, work fine. So, I see no benefit even in trying it out. I'm currently fixing that crash in lookupHelper with unnamed namespaces. Seems the solution is upgrading Cling _and_ a judiciously placed `Interpreter::PushTransactionRAII` (the crash is actually an abort b/c of an open transaction). Then still modules, have to see how Windows looks now; after that, this change to lookupHelper's handling of templates is high on my list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:861,energy efficiency,current,currently,861,"> It wasn't clear from what you said whether you were aware of that. There are zounds of things that I'm not aware of, but as said, the kind of C++ that folks outside of HEP expect to ""just work"" with cppyy is rather more advanced that the basic C++98 that most folk in HEP still use. Heck, you guys are even still hung up on Python2.7! Anyway, the reason I changed the implementation is b/c it is already not working _today_. C++20 (which Clang5 doesn't support anyway) is just gravy. As for #6389, I'm too far diverged from since I forked ROOT/meta to apply it, so have no interest in it. I'm also not familiar with how the ""special functions"" boil upward. Note that, going back to the initiation of this thread: there was/is no issue with constructors for cppyy proper on Windows: both 32b and 64b, work fine. So, I see no benefit even in trying it out. I'm currently fixing that crash in lookupHelper with unnamed namespaces. Seems the solution is upgrading Cling _and_ a judiciously placed `Interpreter::PushTransactionRAII` (the crash is actually an abort b/c of an open transaction). Then still modules, have to see how Windows looks now; after that, this change to lookupHelper's handling of templates is high on my list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:952,modifiability,upgrad,upgrading,952,"> It wasn't clear from what you said whether you were aware of that. There are zounds of things that I'm not aware of, but as said, the kind of C++ that folks outside of HEP expect to ""just work"" with cppyy is rather more advanced that the basic C++98 that most folk in HEP still use. Heck, you guys are even still hung up on Python2.7! Anyway, the reason I changed the implementation is b/c it is already not working _today_. C++20 (which Clang5 doesn't support anyway) is just gravy. As for #6389, I'm too far diverged from since I forked ROOT/meta to apply it, so have no interest in it. I'm also not familiar with how the ""special functions"" boil upward. Note that, going back to the initiation of this thread: there was/is no issue with constructors for cppyy proper on Windows: both 32b and 64b, work fine. So, I see no benefit even in trying it out. I'm currently fixing that crash in lookupHelper with unnamed namespaces. Seems the solution is upgrading Cling _and_ a judiciously placed `Interpreter::PushTransactionRAII` (the crash is actually an abort b/c of an open transaction). Then still modules, have to see how Windows looks now; after that, this change to lookupHelper's handling of templates is high on my list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1102,modifiability,modul,modules,1102,"> It wasn't clear from what you said whether you were aware of that. There are zounds of things that I'm not aware of, but as said, the kind of C++ that folks outside of HEP expect to ""just work"" with cppyy is rather more advanced that the basic C++98 that most folk in HEP still use. Heck, you guys are even still hung up on Python2.7! Anyway, the reason I changed the implementation is b/c it is already not working _today_. C++20 (which Clang5 doesn't support anyway) is just gravy. As for #6389, I'm too far diverged from since I forked ROOT/meta to apply it, so have no interest in it. I'm also not familiar with how the ""special functions"" boil upward. Note that, going back to the initiation of this thread: there was/is no issue with constructors for cppyy proper on Windows: both 32b and 64b, work fine. So, I see no benefit even in trying it out. I'm currently fixing that crash in lookupHelper with unnamed namespaces. Seems the solution is upgrading Cling _and_ a judiciously placed `Interpreter::PushTransactionRAII` (the crash is actually an abort b/c of an open transaction). Then still modules, have to see how Windows looks now; after that, this change to lookupHelper's handling of templates is high on my list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:447,reliability,doe,doesn,447,"> It wasn't clear from what you said whether you were aware of that. There are zounds of things that I'm not aware of, but as said, the kind of C++ that folks outside of HEP expect to ""just work"" with cppyy is rather more advanced that the basic C++98 that most folk in HEP still use. Heck, you guys are even still hung up on Python2.7! Anyway, the reason I changed the implementation is b/c it is already not working _today_. C++20 (which Clang5 doesn't support anyway) is just gravy. As for #6389, I'm too far diverged from since I forked ROOT/meta to apply it, so have no interest in it. I'm also not familiar with how the ""special functions"" boil upward. Note that, going back to the initiation of this thread: there was/is no issue with constructors for cppyy proper on Windows: both 32b and 64b, work fine. So, I see no benefit even in trying it out. I'm currently fixing that crash in lookupHelper with unnamed namespaces. Seems the solution is upgrading Cling _and_ a judiciously placed `Interpreter::PushTransactionRAII` (the crash is actually an abort b/c of an open transaction). Then still modules, have to see how Windows looks now; after that, this change to lookupHelper's handling of templates is high on my list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1102,safety,modul,modules,1102,"> It wasn't clear from what you said whether you were aware of that. There are zounds of things that I'm not aware of, but as said, the kind of C++ that folks outside of HEP expect to ""just work"" with cppyy is rather more advanced that the basic C++98 that most folk in HEP still use. Heck, you guys are even still hung up on Python2.7! Anyway, the reason I changed the implementation is b/c it is already not working _today_. C++20 (which Clang5 doesn't support anyway) is just gravy. As for #6389, I'm too far diverged from since I forked ROOT/meta to apply it, so have no interest in it. I'm also not familiar with how the ""special functions"" boil upward. Note that, going back to the initiation of this thread: there was/is no issue with constructors for cppyy proper on Windows: both 32b and 64b, work fine. So, I see no benefit even in trying it out. I'm currently fixing that crash in lookupHelper with unnamed namespaces. Seems the solution is upgrading Cling _and_ a judiciously placed `Interpreter::PushTransactionRAII` (the crash is actually an abort b/c of an open transaction). Then still modules, have to see how Windows looks now; after that, this change to lookupHelper's handling of templates is high on my list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:12,usability,clear,clear,12,"> It wasn't clear from what you said whether you were aware of that. There are zounds of things that I'm not aware of, but as said, the kind of C++ that folks outside of HEP expect to ""just work"" with cppyy is rather more advanced that the basic C++98 that most folk in HEP still use. Heck, you guys are even still hung up on Python2.7! Anyway, the reason I changed the implementation is b/c it is already not working _today_. C++20 (which Clang5 doesn't support anyway) is just gravy. As for #6389, I'm too far diverged from since I forked ROOT/meta to apply it, so have no interest in it. I'm also not familiar with how the ""special functions"" boil upward. Note that, going back to the initiation of this thread: there was/is no issue with constructors for cppyy proper on Windows: both 32b and 64b, work fine. So, I see no benefit even in trying it out. I'm currently fixing that crash in lookupHelper with unnamed namespaces. Seems the solution is upgrading Cling _and_ a judiciously placed `Interpreter::PushTransactionRAII` (the crash is actually an abort b/c of an open transaction). Then still modules, have to see how Windows looks now; after that, this change to lookupHelper's handling of templates is high on my list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:455,usability,support,support,455,"> It wasn't clear from what you said whether you were aware of that. There are zounds of things that I'm not aware of, but as said, the kind of C++ that folks outside of HEP expect to ""just work"" with cppyy is rather more advanced that the basic C++98 that most folk in HEP still use. Heck, you guys are even still hung up on Python2.7! Anyway, the reason I changed the implementation is b/c it is already not working _today_. C++20 (which Clang5 doesn't support anyway) is just gravy. As for #6389, I'm too far diverged from since I forked ROOT/meta to apply it, so have no interest in it. I'm also not familiar with how the ""special functions"" boil upward. Note that, going back to the initiation of this thread: there was/is no issue with constructors for cppyy proper on Windows: both 32b and 64b, work fine. So, I see no benefit even in trying it out. I'm currently fixing that crash in lookupHelper with unnamed namespaces. Seems the solution is upgrading Cling _and_ a judiciously placed `Interpreter::PushTransactionRAII` (the crash is actually an abort b/c of an open transaction). Then still modules, have to see how Windows looks now; after that, this change to lookupHelper's handling of templates is high on my list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:162,availability,operat,operator,162,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:409,availability,operat,operator,409,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:549,availability,error,error,549,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:573,availability,operat,operator,573,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:636,availability,operat,operator,636,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:711,availability,error,error,711,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:735,availability,operat,operator,735,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:780,availability,operat,operator,780,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:946,availability,operat,operator,946,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:126,integrability,pub,public,126,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:373,integrability,pub,public,373,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:549,performance,error,error,549,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:711,performance,error,error,711,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:43,reliability,doe,does,43,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:284,safety,compl,completion,284,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:549,safety,error,error,549,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:711,safety,error,error,711,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:284,security,compl,completion,284,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:235,testability,assert,assert,235,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:477,testability,assert,assert,477,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:549,usability,error,error,549,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:711,usability,error,error,711,"Yeah, looks like ROOT/meta in master still does it wrong. Example:. ```. import cppyy. . cppyy.cppdef(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from cppyy.gbl import TOIClass. assert (TOIClass() < 1). ```. which runs fine to completion, v.s.:. ```. import ROOT. . ROOT.gInterpreter.Declare(""""""\. class TOIClass {. public:. template<typename T>. bool operator<(T t) { return true; }. };""""""). from ROOT import TOIClass. assert (TOIClass() < 1). ```. which gives me:. ```. input_line_39:6:43: error: no member named 'operator<<' in 'TOIClass'. new (ret) (bool) (((TOIClass*)obj)->operator<<int>(*(int*)args[0]));. ~~~~~~~~~~~~~~~~ ^. input_line_39:10:25: error: no member named 'operator<<' in 'TOIClass'. ((TOIClass*)obj)->operator<<int>(*(int*)args[0]);. ```. Sure, this is a trivial example, nothing to do with lookup per se, but it's one of many issues that are resolved by not calling operator functions explicitly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:179,availability,operat,operator,179,"> I'm too far diverged from since I forked ROOT/meta to apply it, so have no interest in it. The beauty of forks. OK, we (ROOT) will discuss what to do. > resolved by not calling operator functions explicitly. Indeed, as I said :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:46,deployability,releas,release,46,"Forking was necessary; not looking back. Last release I followed, 6.20, broke so much stuff, especially on Windows. It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:193,deployability,version,version,193,"Forking was necessary; not looking back. Last release I followed, 6.20, broke so much stuff, especially on Windows. It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:193,integrability,version,version,193,"Forking was necessary; not looking back. Last release I followed, 6.20, broke so much stuff, especially on Windows. It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:193,modifiability,version,version,193,"Forking was necessary; not looking back. Last release I followed, 6.20, broke so much stuff, especially on Windows. It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:139,availability,state,statement,139,"> It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux. I either don't understand that statement or it's FUD, see e.g. master's nightlies https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/2653/. ![Screenshot from 2020-10-05 15-38-53](https://user-images.githubusercontent.com/144675/95086565-ed820080-0720-11eb-8c3c-612725618361.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:205,availability,servic,services,205,"> It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux. I either don't understand that statement or it's FUD, see e.g. master's nightlies https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/2653/. ![Screenshot from 2020-10-05 15-38-53](https://user-images.githubusercontent.com/144675/95086565-ed820080-0720-11eb-8c3c-612725618361.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:79,deployability,version,version,79,"> It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux. I either don't understand that statement or it's FUD, see e.g. master's nightlies https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/2653/. ![Screenshot from 2020-10-05 15-38-53](https://user-images.githubusercontent.com/144675/95086565-ed820080-0720-11eb-8c3c-612725618361.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:205,deployability,servic,services,205,"> It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux. I either don't understand that statement or it's FUD, see e.g. master's nightlies https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/2653/. ![Screenshot from 2020-10-05 15-38-53](https://user-images.githubusercontent.com/144675/95086565-ed820080-0720-11eb-8c3c-612725618361.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:79,integrability,version,version,79,"> It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux. I either don't understand that statement or it's FUD, see e.g. master's nightlies https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/2653/. ![Screenshot from 2020-10-05 15-38-53](https://user-images.githubusercontent.com/144675/95086565-ed820080-0720-11eb-8c3c-612725618361.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:139,integrability,state,statement,139,"> It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux. I either don't understand that statement or it's FUD, see e.g. master's nightlies https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/2653/. ![Screenshot from 2020-10-05 15-38-53](https://user-images.githubusercontent.com/144675/95086565-ed820080-0720-11eb-8c3c-612725618361.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:205,integrability,servic,services,205,"> It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux. I either don't understand that statement or it's FUD, see e.g. master's nightlies https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/2653/. ![Screenshot from 2020-10-05 15-38-53](https://user-images.githubusercontent.com/144675/95086565-ed820080-0720-11eb-8c3c-612725618361.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:79,modifiability,version,version,79,"> It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux. I either don't understand that statement or it's FUD, see e.g. master's nightlies https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/2653/. ![Screenshot from 2020-10-05 15-38-53](https://user-images.githubusercontent.com/144675/95086565-ed820080-0720-11eb-8c3c-612725618361.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:205,modifiability,servic,services,205,"> It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux. I either don't understand that statement or it's FUD, see e.g. master's nightlies https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/2653/. ![Screenshot from 2020-10-05 15-38-53](https://user-images.githubusercontent.com/144675/95086565-ed820080-0720-11eb-8c3c-612725618361.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:123,testability,understand,understand,123,"> It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux. I either don't understand that statement or it's FUD, see e.g. master's nightlies https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/2653/. ![Screenshot from 2020-10-05 15-38-53](https://user-images.githubusercontent.com/144675/95086565-ed820080-0720-11eb-8c3c-612725618361.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:313,usability,user,user-images,313,"> It's not tenable to follow ROOT master if one cares about more than a single version of Scientific Linux. I either don't understand that statement or it's FUD, see e.g. master's nightlies https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/2653/. ![Screenshot from 2020-10-05 15-38-53](https://user-images.githubusercontent.com/144675/95086565-ed820080-0720-11eb-8c3c-612725618361.png).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:79,deployability,build,builds,79,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:107,deployability,modul,modules,107,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:169,deployability,build,builds,169,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:422,deployability,version,versions,422,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:595,deployability,build,build,595,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:733,deployability,build,building,733,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:184,energy efficiency,core,core,184,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:422,integrability,version,versions,422,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:476,interoperability,platform,platform,476,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:107,modifiability,modul,modules,107,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:422,modifiability,version,versions,422,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:107,safety,modul,modules,107,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:132,usability,minim,minimal,132,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:361,usability,user,user,361,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:382,usability,User,Users,382,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:883,usability,clear,clear,883,"FUD? The new way of finding python in 6.20 required python-dev, breaking conda builds. The introduction of modules, not disabled by minimal, broke mac-debug and Windows builds. In the core libraries, new code appeared that casted pointer types to long, causing more Win64 breakage. Not that ROOT runs on Win64 at all and requires the exact same compiler on the user's end on Win32. Users can also not trivially switch C++ versions unless they rebuild from source, this on any platform. Several of these issues were also reported on the ROOT forum. What you are showing is that *you* are able to build ROOT on some carefully prepared machines with your carefully selected set of compilers. In that list of nightlies, you are not even building binaries on one machine and running them on others. Again, this is why I forked: you obviously have different goals in mind when you dismiss clear problems as ""FUD."" I can't work in such an environment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:365,availability,slo,slowly,365,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:20,deployability,contain,contains,20,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:122,deployability,version,version,122,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:303,deployability,version,version,303,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:433,deployability,scale,scales,433,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:433,energy efficiency,scale,scales,433,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:122,integrability,version,version,122,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:303,integrability,version,version,303,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:311,interoperability,specif,specific,311,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:122,modifiability,version,version,122,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:303,modifiability,version,version,303,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:433,modifiability,scal,scales,433,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:433,performance,scale,scales,433,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:248,reliability,doe,does,248,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:365,reliability,slo,slowly,365,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:101,testability,understand,understand,101,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:423,usability,user,user,423,"Your latest comment contains technical criticism that I find indeed relevant, thanks! (I still don't understand ""a single version of Scientific Linux"".). FYI we're using the system's default compiler, not sure how that's ""carefully selected"". That does not address your point on ROOT being too compiler-version specific. As you probably know we're working on that (slowly...) - but we don't believe that generating PCMs on user side scales well. We might be proven wrong :-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3420,availability,error,errors,3420," know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4251,availability,state,state,4251,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:770,deployability,updat,update,770,"Shipping PCMs is just another problem. For example, on Windows, MSVC likes to change header guards, so unless you use the _exact_ same compiler as ROOT was built with, you'll get a crash because of redefinitions. There are a couple of similar issues on Linux, which you ""fix"" by shipping Linux system headers (wchar.h, stat.h, time.h). But woe onto the poor bugger that has such headers significantly different from Scientific Linux on their system (e.g. Python's manylinux docker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1473,deployability,version,version,1473,"ker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1684,deployability,version,version,1684,"arietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1977,deployability,fail,fail,1977,"ing can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2042,deployability,releas,releases,2042,"bled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2499,deployability,build,build,2499," the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2505,deployability,fail,failed,2505,"CMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2560,deployability,instal,install,2560,"view classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2617,deployability,build,build,2617,"local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2770,deployability,fail,fails,2770,"if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2795,deployability,fail,fail,2795," list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4047,deployability,fail,fails,4047,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1888,energy efficiency,green,green,1888,"luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for exam",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2035,energy efficiency,green,green,2035,"++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2059,energy efficiency,green,green,2059,"2. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potentia",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3544,energy efficiency,current,current,3544,"SE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:225,integrability,coupl,couple,225,"Shipping PCMs is just another problem. For example, on Windows, MSVC likes to change header guards, so unless you use the _exact_ same compiler as ROOT was built with, you'll get a crash because of redefinitions. There are a couple of similar issues on Linux, which you ""fix"" by shipping Linux system headers (wchar.h, stat.h, time.h). But woe onto the poor bugger that has such headers significantly different from Scientific Linux on their system (e.g. Python's manylinux docker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1473,integrability,version,version,1473,"ker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1684,integrability,version,version,1684,"arietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1828,integrability,coupl,couple,1828,"der Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4251,integrability,state,state,4251,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4552,integrability,discover,discover,4552,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:620,interoperability,compatib,compatible,620,"Shipping PCMs is just another problem. For example, on Windows, MSVC likes to change header guards, so unless you use the _exact_ same compiler as ROOT was built with, you'll get a crash because of redefinitions. There are a couple of similar issues on Linux, which you ""fix"" by shipping Linux system headers (wchar.h, stat.h, time.h). But woe onto the poor bugger that has such headers significantly different from Scientific Linux on their system (e.g. Python's manylinux docker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1967,interoperability,platform,platforms,1967,"ning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4513,interoperability,standard,standard,4513,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4552,interoperability,discover,discover,4552,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:225,modifiability,coupl,couple,225,"Shipping PCMs is just another problem. For example, on Windows, MSVC likes to change header guards, so unless you use the _exact_ same compiler as ROOT was built with, you'll get a crash because of redefinitions. There are a couple of similar issues on Linux, which you ""fix"" by shipping Linux system headers (wchar.h, stat.h, time.h). But woe onto the poor bugger that has such headers significantly different from Scientific Linux on their system (e.g. Python's manylinux docker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1473,modifiability,version,version,1473,"ker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1684,modifiability,version,version,1684,"arietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1828,modifiability,coupl,couple,1828,"der Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2211,modifiability,portab,portability,2211,"se exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, h",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2812,modifiability,portab,portable,2812,"of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2945,modifiability,portab,portability,2945," that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3065,modifiability,scal,scaling,3065,"MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3099,modifiability,portab,portability,3099,"ed off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_I",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3163,modifiability,portab,portability,3163,"x, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `q",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3200,modifiability,Portab,Portability,3200," any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no lea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3256,modifiability,portab,portable,3256,"/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4600,modifiability,portab,portable,4600,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:327,performance,time,time,327,"Shipping PCMs is just another problem. For example, on Windows, MSVC likes to change header guards, so unless you use the _exact_ same compiler as ROOT was built with, you'll get a crash because of redefinitions. There are a couple of similar issues on Linux, which you ""fix"" by shipping Linux system headers (wchar.h, stat.h, time.h). But woe onto the poor bugger that has such headers significantly different from Scientific Linux on their system (e.g. Python's manylinux docker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3420,performance,error,errors,3420," know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3621,performance,memor,memory,3621,"as missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4376,performance,I/O,I/O,4376,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4483,performance,memor,memory,4483,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:508,reliability,doe,does,508,"Shipping PCMs is just another problem. For example, on Windows, MSVC likes to change header guards, so unless you use the _exact_ same compiler as ROOT was built with, you'll get a crash because of redefinitions. There are a couple of similar issues on Linux, which you ""fix"" by shipping Linux system headers (wchar.h, stat.h, time.h). But woe onto the poor bugger that has such headers significantly different from Scientific Linux on their system (e.g. Python's manylinux docker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1977,reliability,fail,fail,1977,"ing can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-g",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2505,reliability,fail,failed,2505,"CMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2551,reliability,doe,does,2551,"ted"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2770,reliability,fail,fails,2770,"if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2787,reliability,doe,doesn,2787,"e whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2795,reliability,fail,fail,2795," list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4047,reliability,fail,fails,4047,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:770,safety,updat,update,770,"Shipping PCMs is just another problem. For example, on Windows, MSVC likes to change header guards, so unless you use the _exact_ same compiler as ROOT was built with, you'll get a crash because of redefinitions. There are a couple of similar issues on Linux, which you ""fix"" by shipping Linux system headers (wchar.h, stat.h, time.h). But woe onto the poor bugger that has such headers significantly different from Scientific Linux on their system (e.g. Python's manylinux docker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1083,safety,prevent,prevent,1083,"ader guards, so unless you use the _exact_ same compiler as ROOT was built with, you'll get a crash because of redefinitions. There are a couple of similar issues on Linux, which you ""fix"" by shipping Linux system headers (wchar.h, stat.h, time.h). But woe onto the poor bugger that has such headers significantly different from Scientific Linux on their system (e.g. Python's manylinux docker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Wi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3420,safety,error,errors,3420," know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4522,safety,test,test,4522,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4693,safety,test,tested,4693,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:387,security,sign,significantly,387,"Shipping PCMs is just another problem. For example, on Windows, MSVC likes to change header guards, so unless you use the _exact_ same compiler as ROOT was built with, you'll get a crash because of redefinitions. There are a couple of similar issues on Linux, which you ""fix"" by shipping Linux system headers (wchar.h, stat.h, time.h). But woe onto the poor bugger that has such headers significantly different from Scientific Linux on their system (e.g. Python's manylinux docker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:770,security,updat,update,770,"Shipping PCMs is just another problem. For example, on Windows, MSVC likes to change header guards, so unless you use the _exact_ same compiler as ROOT was built with, you'll get a crash because of redefinitions. There are a couple of similar issues on Linux, which you ""fix"" by shipping Linux system headers (wchar.h, stat.h, time.h). But woe onto the poor bugger that has such headers significantly different from Scientific Linux on their system (e.g. Python's manylinux docker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1083,security,preven,prevent,1083,"ader guards, so unless you use the _exact_ same compiler as ROOT was built with, you'll get a crash because of redefinitions. There are a couple of similar issues on Linux, which you ""fix"" by shipping Linux system headers (wchar.h, stat.h, time.h). But woe onto the poor bugger that has such headers significantly different from Scientific Linux on their system (e.g. Python's manylinux docker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Wi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1220,security,expos,exposing,1220," couple of similar issues on Linux, which you ""fix"" by shipping Linux system headers (wchar.h, stat.h, time.h). But woe onto the poor bugger that has such headers significantly different from Scientific Linux on their system (e.g. Python's manylinux docker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:225,testability,coupl,couple,225,"Shipping PCMs is just another problem. For example, on Windows, MSVC likes to change header guards, so unless you use the _exact_ same compiler as ROOT was built with, you'll get a crash because of redefinitions. There are a couple of similar issues on Linux, which you ""fix"" by shipping Linux system headers (wchar.h, stat.h, time.h). But woe onto the poor bugger that has such headers significantly different from Scientific Linux on their system (e.g. Python's manylinux docker image ...). An no, Windows does _not_ have a system compiler. *You* selected one that works for you. Windows applications are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1592,testability,simpl,simple,1592,"cations are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1828,testability,coupl,couple,1828,"der Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4522,testability,test,test,4522,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4693,testability,test,tested,4693,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4700,testability,simpl,simply,4700,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1592,usability,simpl,simple,1592,"cations are quite binary compatible (more so than e.g. Mac, and certainly easier than Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:1674,usability,support,supported,1674,"n Linux varietals), so that's a choice. Neither has Mac for that matter: folks are free to update Xcode or not. Of course, you're saved here b/c even older Clang on Mac is pretty up-to-date with C++, but no such luck on Windows. On the other hand, modern MSVC is fine, but then Clang5 underpinning Cling can not parse the C++ library headers of MSVC 19 with C++17 enabled. So catch-22. Shipped PCMs also prevent developers from using OpenMP with Cling, but at least that can still be done in libraries, which can be linked without otherwise exposing OpenMP. However, the baked-in choice for _not_ having AVX means not only that Cling can not use it, but also causes binary incompatability with libraries that were compiled with AVX enabled (e.g. many/most Eigen-based codes). Then there is the version of C++ being fixed by the PCMs (and worse, in RConfig.h and the ""backported"" stringview classes, so it's not a simple matter of wiping the local PCMs and rebuilding), meaning C++11 is the only supported version unless you do a full recompile (and see the forum for how much fun that is). And if you look at the whole list of nightlies of the past couple of weeks, and not only at the carefully selected all-green one out of a sea of red that you posted above, you'll see that non-Linux platforms fail disproportionally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:2991,usability,close,closer,2991,"nally often. (In fact one of the recent ""green"" releases is only green b/c MacOS 10.15 and Windows10 are switched off.) That tells me that most of your developers work on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the Lo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3154,usability,Clear,Clearly,3154,"ork on Linux, and rely on the nightlies to catch any portability issues. That's a very poor approach b/c your matrix is necessarily limited given the enormous number of possible combinations. (That's another way of saying it's carefully selected.). I don't actually know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3420,usability,error,errors,3420," know if all those Linux systems are SLC, but did note for example that the build failed on SuSE Tumbleweed with gcc9, b/c SuSE does not install TBB by default to go with that compiler, and the build was missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:3621,usability,memor,memory,3621,"as missing headers as a consequence. So I do strongly suspects a lot of conformity in distros there. As-is, this approach of trying it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4483,usability,memor,memory,4483,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4527,usability,tool,tools,4527,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4552,usability,discov,discover,4552,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/issues/6393:4700,usability,simpl,simply,4700,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```. $ root -l -b. root [0] template <class T, class U> class __gmp_expr;. root [1] typedef struct{ } __mpz_struct;. root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;. root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""). ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6393
https://github.com/root-project/root/pull/6396:54,availability,mask,mask,54,"Hi @couet ,. this will not fix the #6374 , but rather mask it. While the creation of pad with zero width will be forbidden, one still could resize the pad to zero width and have a crash. This fix will just make the reproduction of bug much more complicated. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:245,safety,compl,complicated,245,"Hi @couet ,. this will not fix the #6374 , but rather mask it. While the creation of pad with zero width will be forbidden, one still could resize the pad to zero width and have a crash. This fix will just make the reproduction of bug much more complicated. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:245,security,compl,complicated,245,"Hi @couet ,. this will not fix the #6374 , but rather mask it. While the creation of pad with zero width will be forbidden, one still could resize the pad to zero width and have a crash. This fix will just make the reproduction of bug much more complicated. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:328,safety,prevent,prevent,328,I disagree. It should be protected at this level and we should not allow the creation of a 0 sized pad. It should be stopped at this level. Now if it shows elsewhere it has to be protected also. I will try to find if there is other ways to resize to zero. At least it is not possible interactively (I just checked). Now this PR prevent to create a pad with width 0.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:328,security,preven,prevent,328,I disagree. It should be protected at this level and we should not allow the creation of a 0 sized pad. It should be stopped at this level. Now if it shows elsewhere it has to be protected also. I will try to find if there is other ways to resize to zero. At least it is not possible interactively (I just checked). Now this PR prevent to create a pad with width 0.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:117,usability,stop,stopped,117,I disagree. It should be protected at this level and we should not allow the creation of a 0 sized pad. It should be stopped at this level. Now if it shows elsewhere it has to be protected also. I will try to find if there is other ways to resize to zero. At least it is not possible interactively (I just checked). Now this PR prevent to create a pad with width 0.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:284,usability,interact,interactively,284,I disagree. It should be protected at this level and we should not allow the creation of a 0 sized pad. It should be stopped at this level. Now if it shows elsewhere it has to be protected also. I will try to find if there is other ways to resize to zero. At least it is not possible interactively (I just checked). Now this PR prevent to create a pad with width 0.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:59,safety,prevent,prevent,59,"Probably, we can protect `SetPad` method as well - just to prevent that somebody assign negative size from C++ code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:59,security,preven,prevent,59,"Probably, we can protect `SetPad` method as well - just to prevent that somebody assign negative size from C++ code",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:112,energy efficiency,draw,draw,112,"I my opinion that should be ok to create a pad with zero dimensions. One could do that, resize the pad and then draw. So such fixes should be done in codes for the resiye and/or draw. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:178,energy efficiency,draw,draw,178,"I my opinion that should be ok to create a pad with zero dimensions. One could do that, resize the pad and then draw. So such fixes should be done in codes for the resiye and/or draw. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:258,deployability,fail,fail,258,"That is another point of view (completely fine, as for me). But then the implicit dimensions should never be zero, but some minimal value. That is harder to implement. And if not implememted,. The codes that now have no explicit dimensions (implicit 0) will fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:258,reliability,fail,fail,258,"That is another point of view (completely fine, as for me). But then the implicit dimensions should never be zero, but some minimal value. That is harder to implement. And if not implememted,. The codes that now have no explicit dimensions (implicit 0) will fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:31,safety,compl,completely,31,"That is another point of view (completely fine, as for me). But then the implicit dimensions should never be zero, but some minimal value. That is harder to implement. And if not implememted,. The codes that now have no explicit dimensions (implicit 0) will fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:31,security,compl,completely,31,"That is another point of view (completely fine, as for me). But then the implicit dimensions should never be zero, but some minimal value. That is harder to implement. And if not implememted,. The codes that now have no explicit dimensions (implicit 0) will fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:124,usability,minim,minimal,124,"That is another point of view (completely fine, as for me). But then the implicit dimensions should never be zero, but some minimal value. That is harder to implement. And if not implememted,. The codes that now have no explicit dimensions (implicit 0) will fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:9,testability,understand,understand,9,"I do not understand what you mean by ""implicit dimensions"" ... you mean the dimensions when you do: . ```. auto p = new TPad();. ```. ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6396:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6396
https://github.com/root-project/root/pull/6401:99,safety,test,test,99,Very nice contribution ! Should we add maybe also a tutorial similar to the degenerate coefficient test ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6401
https://github.com/root-project/root/pull/6401:99,testability,test,test,99,Very nice contribution ! Should we add maybe also a tutorial similar to the degenerate coefficient test ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6401
https://github.com/root-project/root/pull/6401:76,safety,test,test,76,> Should we add maybe also a tutorial similar to the degenerate coefficient test ? I will convert the test into one.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6401
https://github.com/root-project/root/pull/6401:102,safety,test,test,102,> Should we add maybe also a tutorial similar to the degenerate coefficient test ? I will convert the test into one.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6401
https://github.com/root-project/root/pull/6401:76,testability,test,test,76,> Should we add maybe also a tutorial similar to the degenerate coefficient test ? I will convert the test into one.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6401
https://github.com/root-project/root/pull/6401:102,testability,test,test,102,> Should we add maybe also a tutorial similar to the degenerate coefficient test ? I will convert the test into one.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6401
https://github.com/root-project/root/pull/6401:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6401
https://github.com/root-project/root/pull/6401:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6401
https://github.com/root-project/root/pull/6401:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6401
https://github.com/root-project/root/pull/6404:0,availability,Failur,Failure,0,Failure of dataframe test is unlikely to be related to my changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:0,deployability,Fail,Failure,0,Failure of dataframe test is unlikely to be related to my changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:0,performance,Failur,Failure,0,Failure of dataframe test is unlikely to be related to my changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:0,reliability,Fail,Failure,0,Failure of dataframe test is unlikely to be related to my changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:21,safety,test,test,21,Failure of dataframe test is unlikely to be related to my changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:21,testability,test,test,21,Failure of dataframe test is unlikely to be related to my changes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:25,deployability,fail,fail,25,@eguiraud Does that test fail in other circumstances?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:10,reliability,Doe,Does,10,@eguiraud Does that test fail in other circumstances?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:25,reliability,fail,fail,25,@eguiraud Does that test fail in other circumstances?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:20,safety,test,test,20,@eguiraud Does that test fail in other circumstances?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:20,testability,test,test,20,@eguiraud Does that test fail in other circumstances?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:27,deployability,fail,fail,27,"> @eguiraud Does that test fail in other circumstances? I haven't seen it fail elsewhere, but it's a fairly new test and it's windows, so I wouldn't be surprised if we had a problem/bug. It does not seem to be related to the PR anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:74,deployability,fail,fail,74,"> @eguiraud Does that test fail in other circumstances? I haven't seen it fail elsewhere, but it's a fairly new test and it's windows, so I wouldn't be surprised if we had a problem/bug. It does not seem to be related to the PR anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:12,reliability,Doe,Does,12,"> @eguiraud Does that test fail in other circumstances? I haven't seen it fail elsewhere, but it's a fairly new test and it's windows, so I wouldn't be surprised if we had a problem/bug. It does not seem to be related to the PR anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:27,reliability,fail,fail,27,"> @eguiraud Does that test fail in other circumstances? I haven't seen it fail elsewhere, but it's a fairly new test and it's windows, so I wouldn't be surprised if we had a problem/bug. It does not seem to be related to the PR anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:74,reliability,fail,fail,74,"> @eguiraud Does that test fail in other circumstances? I haven't seen it fail elsewhere, but it's a fairly new test and it's windows, so I wouldn't be surprised if we had a problem/bug. It does not seem to be related to the PR anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:190,reliability,doe,does,190,"> @eguiraud Does that test fail in other circumstances? I haven't seen it fail elsewhere, but it's a fairly new test and it's windows, so I wouldn't be surprised if we had a problem/bug. It does not seem to be related to the PR anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:22,safety,test,test,22,"> @eguiraud Does that test fail in other circumstances? I haven't seen it fail elsewhere, but it's a fairly new test and it's windows, so I wouldn't be surprised if we had a problem/bug. It does not seem to be related to the PR anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:112,safety,test,test,112,"> @eguiraud Does that test fail in other circumstances? I haven't seen it fail elsewhere, but it's a fairly new test and it's windows, so I wouldn't be surprised if we had a problem/bug. It does not seem to be related to the PR anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:22,testability,test,test,22,"> @eguiraud Does that test fail in other circumstances? I haven't seen it fail elsewhere, but it's a fairly new test and it's windows, so I wouldn't be surprised if we had a problem/bug. It does not seem to be related to the PR anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6404:112,testability,test,test,112,"> @eguiraud Does that test fail in other circumstances? I haven't seen it fail elsewhere, but it's a fairly new test and it's windows, so I wouldn't be surprised if we had a problem/bug. It does not seem to be related to the PR anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6404
https://github.com/root-project/root/pull/6405:11,availability,error,error,11,"Nope, real error is. ```. 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):. 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The. 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed. 11:31:21 Call Stack (most recent call first):. 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE). ```. which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6405
https://github.com/root-project/root/pull/6405:41,availability,Error,Error,41,"Nope, real error is. ```. 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):. 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The. 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed. 11:31:21 Call Stack (most recent call first):. 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE). ```. which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6405
https://github.com/root-project/root/pull/6405:56,deployability,modul,modules,56,"Nope, real error is. ```. 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):. 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The. 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed. 11:31:21 Call Stack (most recent call first):. 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE). ```. which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6405
https://github.com/root-project/root/pull/6405:258,deployability,Stack,Stack,258,"Nope, real error is. ```. 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):. 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The. 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed. 11:31:21 Call Stack (most recent call first):. 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE). ```. which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6405
https://github.com/root-project/root/pull/6405:300,energy efficiency,core,core,300,"Nope, real error is. ```. 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):. 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The. 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed. 11:31:21 Call Stack (most recent call first):. 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE). ```. which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6405
https://github.com/root-project/root/pull/6405:56,modifiability,modul,modules,56,"Nope, real error is. ```. 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):. 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The. 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed. 11:31:21 Call Stack (most recent call first):. 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE). ```. which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6405
https://github.com/root-project/root/pull/6405:11,performance,error,error,11,"Nope, real error is. ```. 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):. 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The. 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed. 11:31:21 Call Stack (most recent call first):. 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE). ```. which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6405
https://github.com/root-project/root/pull/6405:41,performance,Error,Error,41,"Nope, real error is. ```. 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):. 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The. 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed. 11:31:21 Call Stack (most recent call first):. 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE). ```. which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6405
https://github.com/root-project/root/pull/6405:11,safety,error,error,11,"Nope, real error is. ```. 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):. 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The. 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed. 11:31:21 Call Stack (most recent call first):. 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE). ```. which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6405
https://github.com/root-project/root/pull/6405:41,safety,Error,Error,41,"Nope, real error is. ```. 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):. 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The. 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed. 11:31:21 Call Stack (most recent call first):. 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE). ```. which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6405
https://github.com/root-project/root/pull/6405:56,safety,modul,modules,56,"Nope, real error is. ```. 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):. 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The. 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed. 11:31:21 Call Stack (most recent call first):. 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE). ```. which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6405
https://github.com/root-project/root/pull/6405:11,usability,error,error,11,"Nope, real error is. ```. 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):. 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The. 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed. 11:31:21 Call Stack (most recent call first):. 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE). ```. which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6405
https://github.com/root-project/root/pull/6405:41,usability,Error,Error,41,"Nope, real error is. ```. 11:31:21 CMake Error at cmake/modules/RootMacros.cmake:1323 (get_target_property):. 11:31:21 INTERFACE_LIBRARY targets may only have whitelisted properties. The. 11:31:21 property ""INCLUDE_DIRECTORIES"" is not allowed. 11:31:21 Call Stack (most recent call first):. 11:31:21 core/rootcling_stage1/CMakeLists.txt:31 (ROOT_EXECUTABLE). ```. which is caused by the changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6405
https://github.com/root-project/root/issues/6406:176,deployability,depend,dependency,176,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:217,deployability,depend,depends,217,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:332,deployability,depend,depends,332,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:521,deployability,instal,install,521,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:688,deployability,instal,install,688,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:176,integrability,depend,dependency,176,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:217,integrability,depend,depends,217,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:332,integrability,depend,depends,332,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:511,integrability,coupl,couple,511,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:176,modifiability,depend,dependency,176,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:217,modifiability,depend,depends,217,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:332,modifiability,depend,depends,332,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:511,modifiability,coupl,couple,511,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:176,safety,depend,dependency,176,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:217,safety,depend,depends,217,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:332,safety,depend,depends,332,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:635,safety,compl,completing,635,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:635,security,compl,completing,635,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:176,testability,depend,dependency,176,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:217,testability,depend,depends,217,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:332,testability,depend,depends,332,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:511,testability,coupl,couple,511,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:529,usability,command,commands,529,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/issues/6406:697,usability,command,commands,697,"Looking into it a bit more, I think the right fix is indeed to move `CheckCompiler` above `RootBuildOptions`, and then fix the problem with Windows. That problem is a circular dependency:. 1. `RootBuildOptions.cmake` depends on `CheckCompiler.cmake`, because e.g. the default value of the `root7` option (set in `RootBuildOptions`) depends on the value of `CMAKE_CXX_STANDARD` (set in `CheckCompiler`). 2. however, `CheckCompiler.cmake` includes `SetUpWindows.cmake`, which uses `CMAKE_INSTALL_INCLUDEDIR` in a couple of install commands. `CMAKE_INSTALL_INCLUDEDIR` is set by `RootInstallDirs` which is included by `RootBuildOptions`, completing the circle. @amadio suggested moving the `install` commands Windows needs from `SetUpWindows` to `RootConfiguration`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6406
https://github.com/root-project/root/pull/6407:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6407
https://github.com/root-project/root/pull/6407:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6407
https://github.com/root-project/root/pull/6407:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6407
https://github.com/root-project/root/pull/6407:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6407
https://github.com/root-project/root/pull/6407:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6407
https://github.com/root-project/root/issues/6408:199,safety,test,test,199,"Adding `gROOT->GetListOfFiles()->Print();` calls supports my claims. Before creating the `RooDataSet` the output of the `Print()` is. ```. Collection name='Files', class='TList', size=1. TFile: name=test.root, title=output_file, option=CREATE. ```. after. ```. Collection name='Files', class='TList', size=0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6408
https://github.com/root-project/root/issues/6408:199,testability,test,test,199,"Adding `gROOT->GetListOfFiles()->Print();` calls supports my claims. Before creating the `RooDataSet` the output of the `Print()` is. ```. Collection name='Files', class='TList', size=1. TFile: name=test.root, title=output_file, option=CREATE. ```. after. ```. Collection name='Files', class='TList', size=0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6408
https://github.com/root-project/root/issues/6408:49,usability,support,supports,49,"Adding `gROOT->GetListOfFiles()->Print();` calls supports my claims. Before creating the `RooDataSet` the output of the `Print()` is. ```. Collection name='Files', class='TList', size=1. TFile: name=test.root, title=output_file, option=CREATE. ```. after. ```. Collection name='Files', class='TList', size=0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6408
https://github.com/root-project/root/issues/6411:73,deployability,version,version,73,Changing the onfile normalized name might not be forward compatible (old version of ROOT not being able to read new files).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6411
https://github.com/root-project/root/issues/6411:73,integrability,version,version,73,Changing the onfile normalized name might not be forward compatible (old version of ROOT not being able to read new files).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6411
https://github.com/root-project/root/issues/6411:57,interoperability,compatib,compatible,57,Changing the onfile normalized name might not be forward compatible (old version of ROOT not being able to read new files).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6411
https://github.com/root-project/root/issues/6411:73,modifiability,version,version,73,Changing the onfile normalized name might not be forward compatible (old version of ROOT not being able to read new files).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6411
https://github.com/root-project/root/issues/6411:12,usability,close,closed,12,Can this be closed as won't fix given the comment of @pcanal ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6411
https://github.com/root-project/root/issues/6412:0,availability,ping,ping,0,ping?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6412
https://github.com/root-project/root/issues/6412:151,energy efficiency,current,currently,151,"> I was also a bit surprised to see a std::bitset<N> to take (N+4)bytes on disk (instead of ""just"" Nbits +4bytes, or, even, just Nbits). Indeed, it is currently stored the same way as the other collection of bool ... using one 'char' per bool :(. > (I was expecting: [0 0 0 1 0 1 0 1 1 1 1 0 1 0 1 0] as the on-disk bytes). > or are bitset<N> values always little-endian encoded? You may have missed the fact that the std::bitset constructor from a string is in ""reverse"":. ```. root [0] std::bitset<16> b(""0001010111101010""). (std::bitset<16> &) @0x7f8e977e7010. root [1] for(int i = 0; i < 16; ++i) cout << std::hex << b[i] << '\n';. 0. 1. 0. 1. 0. 1. 1. 1. 1. 0. 1. 0. 1. 0. 0. 0. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6412
https://github.com/root-project/root/issues/6412:75,performance,disk,disk,75,"> I was also a bit surprised to see a std::bitset<N> to take (N+4)bytes on disk (instead of ""just"" Nbits +4bytes, or, even, just Nbits). Indeed, it is currently stored the same way as the other collection of bool ... using one 'char' per bool :(. > (I was expecting: [0 0 0 1 0 1 0 1 1 1 1 0 1 0 1 0] as the on-disk bytes). > or are bitset<N> values always little-endian encoded? You may have missed the fact that the std::bitset constructor from a string is in ""reverse"":. ```. root [0] std::bitset<16> b(""0001010111101010""). (std::bitset<16> &) @0x7f8e977e7010. root [1] for(int i = 0; i < 16; ++i) cout << std::hex << b[i] << '\n';. 0. 1. 0. 1. 0. 1. 1. 1. 1. 0. 1. 0. 1. 0. 0. 0. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6412
https://github.com/root-project/root/issues/6412:311,performance,disk,disk,311,"> I was also a bit surprised to see a std::bitset<N> to take (N+4)bytes on disk (instead of ""just"" Nbits +4bytes, or, even, just Nbits). Indeed, it is currently stored the same way as the other collection of bool ... using one 'char' per bool :(. > (I was expecting: [0 0 0 1 0 1 0 1 1 1 1 0 1 0 1 0] as the on-disk bytes). > or are bitset<N> values always little-endian encoded? You may have missed the fact that the std::bitset constructor from a string is in ""reverse"":. ```. root [0] std::bitset<16> b(""0001010111101010""). (std::bitset<16> &) @0x7f8e977e7010. root [1] for(int i = 0; i < 16; ++i) cout << std::hex << b[i] << '\n';. 0. 1. 0. 1. 0. 1. 1. 1. 1. 0. 1. 0. 1. 0. 0. 0. ```. Cheers,. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6412
https://github.com/root-project/root/issues/6412:70,deployability,stack,stackoverflow,70,> or are `bitset<N>` values always little-endian encoded? See https://stackoverflow.com/a/29483339/7471760,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6412
https://github.com/root-project/root/issues/6412:59,deployability,stack,stackoverflow,59,> is there an underlying reason I am missing here? https://stackoverflow.com/a/12459988/7471760,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6412
https://github.com/root-project/root/pull/6415:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6415
https://github.com/root-project/root/pull/6415:41,deployability,fail,fail,41,> Looks good to me ! Thanks! The CI jobs fail because I need to use `std::isnan` instead of `isnan`. I will fix that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6415
https://github.com/root-project/root/pull/6415:41,reliability,fail,fail,41,> Looks good to me ! Thanks! The CI jobs fail because I need to use `std::isnan` instead of `isnan`. I will fix that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6415
https://github.com/root-project/root/pull/6415:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6415
https://github.com/root-project/root/pull/6415:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6415
https://github.com/root-project/root/pull/6415:12,deployability,build,build,12,Retrying to build this PR. Seems the builds did not work before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6415
https://github.com/root-project/root/pull/6415:37,deployability,build,builds,37,Retrying to build this PR. Seems the builds did not work before.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6415
https://github.com/root-project/root/issues/6416:104,availability,state,statement,104,"If I understand correctly TBranch::GetBasketAndFirst() sometimes does not go through the GetFreshBasket statement, but through GetFreshCluster(). Line 1223-1226 of TBranch.cxx.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6416
https://github.com/root-project/root/issues/6416:104,integrability,state,statement,104,"If I understand correctly TBranch::GetBasketAndFirst() sometimes does not go through the GetFreshBasket statement, but through GetFreshCluster(). Line 1223-1226 of TBranch.cxx.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6416
https://github.com/root-project/root/issues/6416:65,reliability,doe,does,65,"If I understand correctly TBranch::GetBasketAndFirst() sometimes does not go through the GetFreshBasket statement, but through GetFreshCluster(). Line 1223-1226 of TBranch.cxx.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6416
https://github.com/root-project/root/issues/6416:5,testability,understand,understand,5,"If I understand correctly TBranch::GetBasketAndFirst() sometimes does not go through the GetFreshBasket statement, but through GetFreshCluster(). Line 1223-1226 of TBranch.cxx.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6416
https://github.com/root-project/root/issues/6416:106,availability,state,statement,106,"> If I understand correctly TBranch::GetBasketAndFirst() sometimes does not go through the GetFreshBasket statement, but through GetFreshCluster(). Line 1223-1226 of TBranch.cxx. Indeed and the rest of the code assumed it always went through GetFreshBasket.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6416
https://github.com/root-project/root/issues/6416:106,integrability,state,statement,106,"> If I understand correctly TBranch::GetBasketAndFirst() sometimes does not go through the GetFreshBasket statement, but through GetFreshCluster(). Line 1223-1226 of TBranch.cxx. Indeed and the rest of the code assumed it always went through GetFreshBasket.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6416
https://github.com/root-project/root/issues/6416:67,reliability,doe,does,67,"> If I understand correctly TBranch::GetBasketAndFirst() sometimes does not go through the GetFreshBasket statement, but through GetFreshCluster(). Line 1223-1226 of TBranch.cxx. Indeed and the rest of the code assumed it always went through GetFreshBasket.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6416
https://github.com/root-project/root/issues/6416:7,testability,understand,understand,7,"> If I understand correctly TBranch::GetBasketAndFirst() sometimes does not go through the GetFreshBasket statement, but through GetFreshCluster(). Line 1223-1226 of TBranch.cxx. Indeed and the rest of the code assumed it always went through GetFreshBasket.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6416
https://github.com/root-project/root/issues/6417:330,integrability,event,events,330,"This is a reproducer:. ```. #include ""TTree.h"". #include ""TBufferFile.h"". void bulkmem() {. TTree t(""t"",""t"");. int i = 3;. t.Branch(""fAlpha"",&i);. for(i = 0; i < 100000; ++i). t.Fill();. t.Print("""");. TBufferFile buf(TBuffer::EMode::kWrite, 32*1024);. auto &r = t.GetBranch(""fAlpha"")->GetBulkRead();. int iteration = 0;. Long64_t events = t.GetEntries();. while (events) {. auto s = r.GetBulkEntries(0, buf);. events -= s;. fprintf(stderr, ""#%d %lld events left %d\n"", iteration, events, (int)s);. ++iteration;. if (iteration > 2). break;. }. }. ```. where the 2nd iteration (and subsequent) have GetBulkEntries returning 0;. Inadvertently this shows that the TBasket are being dropped (and hence data is lost since it is not backed by a file) after the first use (i.e. the loop is not advancing). This is a fatal problem but might not have been the original problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6417
https://github.com/root-project/root/issues/6417:363,integrability,event,events,363,"This is a reproducer:. ```. #include ""TTree.h"". #include ""TBufferFile.h"". void bulkmem() {. TTree t(""t"",""t"");. int i = 3;. t.Branch(""fAlpha"",&i);. for(i = 0; i < 100000; ++i). t.Fill();. t.Print("""");. TBufferFile buf(TBuffer::EMode::kWrite, 32*1024);. auto &r = t.GetBranch(""fAlpha"")->GetBulkRead();. int iteration = 0;. Long64_t events = t.GetEntries();. while (events) {. auto s = r.GetBulkEntries(0, buf);. events -= s;. fprintf(stderr, ""#%d %lld events left %d\n"", iteration, events, (int)s);. ++iteration;. if (iteration > 2). break;. }. }. ```. where the 2nd iteration (and subsequent) have GetBulkEntries returning 0;. Inadvertently this shows that the TBasket are being dropped (and hence data is lost since it is not backed by a file) after the first use (i.e. the loop is not advancing). This is a fatal problem but might not have been the original problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6417
https://github.com/root-project/root/issues/6417:410,integrability,event,events,410,"This is a reproducer:. ```. #include ""TTree.h"". #include ""TBufferFile.h"". void bulkmem() {. TTree t(""t"",""t"");. int i = 3;. t.Branch(""fAlpha"",&i);. for(i = 0; i < 100000; ++i). t.Fill();. t.Print("""");. TBufferFile buf(TBuffer::EMode::kWrite, 32*1024);. auto &r = t.GetBranch(""fAlpha"")->GetBulkRead();. int iteration = 0;. Long64_t events = t.GetEntries();. while (events) {. auto s = r.GetBulkEntries(0, buf);. events -= s;. fprintf(stderr, ""#%d %lld events left %d\n"", iteration, events, (int)s);. ++iteration;. if (iteration > 2). break;. }. }. ```. where the 2nd iteration (and subsequent) have GetBulkEntries returning 0;. Inadvertently this shows that the TBasket are being dropped (and hence data is lost since it is not backed by a file) after the first use (i.e. the loop is not advancing). This is a fatal problem but might not have been the original problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6417
https://github.com/root-project/root/issues/6417:450,integrability,event,events,450,"This is a reproducer:. ```. #include ""TTree.h"". #include ""TBufferFile.h"". void bulkmem() {. TTree t(""t"",""t"");. int i = 3;. t.Branch(""fAlpha"",&i);. for(i = 0; i < 100000; ++i). t.Fill();. t.Print("""");. TBufferFile buf(TBuffer::EMode::kWrite, 32*1024);. auto &r = t.GetBranch(""fAlpha"")->GetBulkRead();. int iteration = 0;. Long64_t events = t.GetEntries();. while (events) {. auto s = r.GetBulkEntries(0, buf);. events -= s;. fprintf(stderr, ""#%d %lld events left %d\n"", iteration, events, (int)s);. ++iteration;. if (iteration > 2). break;. }. }. ```. where the 2nd iteration (and subsequent) have GetBulkEntries returning 0;. Inadvertently this shows that the TBasket are being dropped (and hence data is lost since it is not backed by a file) after the first use (i.e. the loop is not advancing). This is a fatal problem but might not have been the original problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6417
https://github.com/root-project/root/issues/6417:480,integrability,event,events,480,"This is a reproducer:. ```. #include ""TTree.h"". #include ""TBufferFile.h"". void bulkmem() {. TTree t(""t"",""t"");. int i = 3;. t.Branch(""fAlpha"",&i);. for(i = 0; i < 100000; ++i). t.Fill();. t.Print("""");. TBufferFile buf(TBuffer::EMode::kWrite, 32*1024);. auto &r = t.GetBranch(""fAlpha"")->GetBulkRead();. int iteration = 0;. Long64_t events = t.GetEntries();. while (events) {. auto s = r.GetBulkEntries(0, buf);. events -= s;. fprintf(stderr, ""#%d %lld events left %d\n"", iteration, events, (int)s);. ++iteration;. if (iteration > 2). break;. }. }. ```. where the 2nd iteration (and subsequent) have GetBulkEntries returning 0;. Inadvertently this shows that the TBasket are being dropped (and hence data is lost since it is not backed by a file) after the first use (i.e. the loop is not advancing). This is a fatal problem but might not have been the original problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6417
https://github.com/root-project/root/issues/6417:580,integrability,sub,subsequent,580,"This is a reproducer:. ```. #include ""TTree.h"". #include ""TBufferFile.h"". void bulkmem() {. TTree t(""t"",""t"");. int i = 3;. t.Branch(""fAlpha"",&i);. for(i = 0; i < 100000; ++i). t.Fill();. t.Print("""");. TBufferFile buf(TBuffer::EMode::kWrite, 32*1024);. auto &r = t.GetBranch(""fAlpha"")->GetBulkRead();. int iteration = 0;. Long64_t events = t.GetEntries();. while (events) {. auto s = r.GetBulkEntries(0, buf);. events -= s;. fprintf(stderr, ""#%d %lld events left %d\n"", iteration, events, (int)s);. ++iteration;. if (iteration > 2). break;. }. }. ```. where the 2nd iteration (and subsequent) have GetBulkEntries returning 0;. Inadvertently this shows that the TBasket are being dropped (and hence data is lost since it is not backed by a file) after the first use (i.e. the loop is not advancing). This is a fatal problem but might not have been the original problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6417
https://github.com/root-project/root/issues/6417:489,integrability,event,events,489,"With. ```. #include ""TTree.h"". #include ""TBufferFile.h"". void bulkmem() {. TTree t(""t"",""t"");. int i = 3;. t.Branch(""fAlpha"",&i);. for(i = 0; i < 100000; ++i). t.Fill();. t.Print("""");. TBufferFile buf(TBuffer::EMode::kWrite, 32*1024);. auto &r = t.GetBranch(""fAlpha"")->GetBulkRead();. int iteration = 0;. Long64_t nentries = t.GetEntries();. Long64_t event_idx = 0;. while (nentries) {. auto s = r.GetBulkEntries(event_idx, buf);. nentries -= s;. event_idx += s;. fprintf(stderr, ""#%d %lld events left %d\n"", iteration, nentries, (int)s);. ++iteration;. if (iteration > 2). break;. }. }. ```. I get. ```. Fatal: fExtraBasket == nullptr && ""fExtraBasket should have been set to nullptr by GetFreshBasket"" violated at line 1475 of `/Users/pcanal/root_working/code/rootcling/tree/tree/src/TBranch.cxx'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6417
https://github.com/root-project/root/issues/6417:730,usability,User,Users,730,"With. ```. #include ""TTree.h"". #include ""TBufferFile.h"". void bulkmem() {. TTree t(""t"",""t"");. int i = 3;. t.Branch(""fAlpha"",&i);. for(i = 0; i < 100000; ++i). t.Fill();. t.Print("""");. TBufferFile buf(TBuffer::EMode::kWrite, 32*1024);. auto &r = t.GetBranch(""fAlpha"")->GetBulkRead();. int iteration = 0;. Long64_t nentries = t.GetEntries();. Long64_t event_idx = 0;. while (nentries) {. auto s = r.GetBulkEntries(event_idx, buf);. nentries -= s;. event_idx += s;. fprintf(stderr, ""#%d %lld events left %d\n"", iteration, nentries, (int)s);. ++iteration;. if (iteration > 2). break;. }. }. ```. I get. ```. Fatal: fExtraBasket == nullptr && ""fExtraBasket should have been set to nullptr by GetFreshBasket"" violated at line 1475 of `/Users/pcanal/root_working/code/rootcling/tree/tree/src/TBranch.cxx'. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6417
https://github.com/root-project/root/pull/6418:11,deployability,build,build,11,@phsft-bot build just on ROOT-debian10-i386/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6418
https://github.com/root-project/root/issues/6421:78,energy efficiency,current,current,78,"Hello Hans, . Thank you for your proposal. I think is a good improvement, the current situation I agree is a bit messy and what you propose is a good step forward. . We should see if we do not enable too many messages in printlevel=1, which is often used. I think also level 3 is used often (for example when fitting histograms in ROOT with the verbose option). In that case we might want to use instead level 2 and keep level 3 only for debugging. . Some work will also be needed to clean-up some of the debug messages. Thanks for opening this issue, . Best regards. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6421
https://github.com/root-project/root/issues/6421:209,integrability,messag,messages,209,"Hello Hans, . Thank you for your proposal. I think is a good improvement, the current situation I agree is a bit messy and what you propose is a good step forward. . We should see if we do not enable too many messages in printlevel=1, which is often used. I think also level 3 is used often (for example when fitting histograms in ROOT with the verbose option). In that case we might want to use instead level 2 and keep level 3 only for debugging. . Some work will also be needed to clean-up some of the debug messages. Thanks for opening this issue, . Best regards. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6421
https://github.com/root-project/root/issues/6421:511,integrability,messag,messages,511,"Hello Hans, . Thank you for your proposal. I think is a good improvement, the current situation I agree is a bit messy and what you propose is a good step forward. . We should see if we do not enable too many messages in printlevel=1, which is often used. I think also level 3 is used often (for example when fitting histograms in ROOT with the verbose option). In that case we might want to use instead level 2 and keep level 3 only for debugging. . Some work will also be needed to clean-up some of the debug messages. Thanks for opening this issue, . Best regards. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6421
https://github.com/root-project/root/issues/6421:209,interoperability,messag,messages,209,"Hello Hans, . Thank you for your proposal. I think is a good improvement, the current situation I agree is a bit messy and what you propose is a good step forward. . We should see if we do not enable too many messages in printlevel=1, which is often used. I think also level 3 is used often (for example when fitting histograms in ROOT with the verbose option). In that case we might want to use instead level 2 and keep level 3 only for debugging. . Some work will also be needed to clean-up some of the debug messages. Thanks for opening this issue, . Best regards. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6421
https://github.com/root-project/root/issues/6421:511,interoperability,messag,messages,511,"Hello Hans, . Thank you for your proposal. I think is a good improvement, the current situation I agree is a bit messy and what you propose is a good step forward. . We should see if we do not enable too many messages in printlevel=1, which is often used. I think also level 3 is used often (for example when fitting histograms in ROOT with the verbose option). In that case we might want to use instead level 2 and keep level 3 only for debugging. . Some work will also be needed to clean-up some of the debug messages. Thanks for opening this issue, . Best regards. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6421
https://github.com/root-project/root/issues/6421:70,performance,time,time,70,"@lmoneta I would be happy to work on this, since I spend already some time thinking about how to do it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6421
https://github.com/root-project/root/pull/6423:4,energy efficiency,current,current,4,"The current table of contents for https://root.cern/doc/master/classROOT_1_1RDataFrame.html is:. * Cheat sheet. * Introduction. * Crash course. * Efficient analysis in Python. * More features. * Transformations – manipulating data. * Actions – getting results. * Parallel execution – how to use it and common pitfalls. * Class reference – most methods are implemented in the RInterface base class. I think ""Parallel execution"" should become ""Performance tips and parallel execution"" and RunGraphs should have a section in there. But I'm open to better ideas!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6423
https://github.com/root-project/root/pull/6423:195,integrability,Transform,Transformations,195,"The current table of contents for https://root.cern/doc/master/classROOT_1_1RDataFrame.html is:. * Cheat sheet. * Introduction. * Crash course. * Efficient analysis in Python. * More features. * Transformations – manipulating data. * Actions – getting results. * Parallel execution – how to use it and common pitfalls. * Class reference – most methods are implemented in the RInterface base class. I think ""Parallel execution"" should become ""Performance tips and parallel execution"" and RunGraphs should have a section in there. But I'm open to better ideas!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6423
https://github.com/root-project/root/pull/6423:195,interoperability,Transform,Transformations,195,"The current table of contents for https://root.cern/doc/master/classROOT_1_1RDataFrame.html is:. * Cheat sheet. * Introduction. * Crash course. * Efficient analysis in Python. * More features. * Transformations – manipulating data. * Actions – getting results. * Parallel execution – how to use it and common pitfalls. * Class reference – most methods are implemented in the RInterface base class. I think ""Parallel execution"" should become ""Performance tips and parallel execution"" and RunGraphs should have a section in there. But I'm open to better ideas!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6423
https://github.com/root-project/root/pull/6423:21,performance,content,contents,21,"The current table of contents for https://root.cern/doc/master/classROOT_1_1RDataFrame.html is:. * Cheat sheet. * Introduction. * Crash course. * Efficient analysis in Python. * More features. * Transformations – manipulating data. * Actions – getting results. * Parallel execution – how to use it and common pitfalls. * Class reference – most methods are implemented in the RInterface base class. I think ""Parallel execution"" should become ""Performance tips and parallel execution"" and RunGraphs should have a section in there. But I'm open to better ideas!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6423
https://github.com/root-project/root/pull/6423:263,performance,Parallel,Parallel,263,"The current table of contents for https://root.cern/doc/master/classROOT_1_1RDataFrame.html is:. * Cheat sheet. * Introduction. * Crash course. * Efficient analysis in Python. * More features. * Transformations – manipulating data. * Actions – getting results. * Parallel execution – how to use it and common pitfalls. * Class reference – most methods are implemented in the RInterface base class. I think ""Parallel execution"" should become ""Performance tips and parallel execution"" and RunGraphs should have a section in there. But I'm open to better ideas!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6423
https://github.com/root-project/root/pull/6423:407,performance,Parallel,Parallel,407,"The current table of contents for https://root.cern/doc/master/classROOT_1_1RDataFrame.html is:. * Cheat sheet. * Introduction. * Crash course. * Efficient analysis in Python. * More features. * Transformations – manipulating data. * Actions – getting results. * Parallel execution – how to use it and common pitfalls. * Class reference – most methods are implemented in the RInterface base class. I think ""Parallel execution"" should become ""Performance tips and parallel execution"" and RunGraphs should have a section in there. But I'm open to better ideas!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6423
https://github.com/root-project/root/pull/6423:442,performance,Perform,Performance,442,"The current table of contents for https://root.cern/doc/master/classROOT_1_1RDataFrame.html is:. * Cheat sheet. * Introduction. * Crash course. * Efficient analysis in Python. * More features. * Transformations – manipulating data. * Actions – getting results. * Parallel execution – how to use it and common pitfalls. * Class reference – most methods are implemented in the RInterface base class. I think ""Parallel execution"" should become ""Performance tips and parallel execution"" and RunGraphs should have a section in there. But I'm open to better ideas!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6423
https://github.com/root-project/root/pull/6423:463,performance,parallel,parallel,463,"The current table of contents for https://root.cern/doc/master/classROOT_1_1RDataFrame.html is:. * Cheat sheet. * Introduction. * Crash course. * Efficient analysis in Python. * More features. * Transformations – manipulating data. * Actions – getting results. * Parallel execution – how to use it and common pitfalls. * Class reference – most methods are implemented in the RInterface base class. I think ""Parallel execution"" should become ""Performance tips and parallel execution"" and RunGraphs should have a section in there. But I'm open to better ideas!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6423
https://github.com/root-project/root/pull/6423:146,usability,Efficien,Efficient,146,"The current table of contents for https://root.cern/doc/master/classROOT_1_1RDataFrame.html is:. * Cheat sheet. * Introduction. * Crash course. * Efficient analysis in Python. * More features. * Transformations – manipulating data. * Actions – getting results. * Parallel execution – how to use it and common pitfalls. * Class reference – most methods are implemented in the RInterface base class. I think ""Parallel execution"" should become ""Performance tips and parallel execution"" and RunGraphs should have a section in there. But I'm open to better ideas!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6423
https://github.com/root-project/root/pull/6423:442,usability,Perform,Performance,442,"The current table of contents for https://root.cern/doc/master/classROOT_1_1RDataFrame.html is:. * Cheat sheet. * Introduction. * Crash course. * Efficient analysis in Python. * More features. * Transformations – manipulating data. * Actions – getting results. * Parallel execution – how to use it and common pitfalls. * Class reference – most methods are implemented in the RInterface base class. I think ""Parallel execution"" should become ""Performance tips and parallel execution"" and RunGraphs should have a section in there. But I'm open to better ideas!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6423
https://github.com/root-project/root/pull/6423:454,usability,tip,tips,454,"The current table of contents for https://root.cern/doc/master/classROOT_1_1RDataFrame.html is:. * Cheat sheet. * Introduction. * Crash course. * Efficient analysis in Python. * More features. * Transformations – manipulating data. * Actions – getting results. * Parallel execution – how to use it and common pitfalls. * Class reference – most methods are implemented in the RInterface base class. I think ""Parallel execution"" should become ""Performance tips and parallel execution"" and RunGraphs should have a section in there. But I'm open to better ideas!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6423
https://github.com/root-project/root/issues/6427:30,deployability,Integr,Integral,30,"Hi, . It is strange that TH1::Integral(100,100) returns a different result than GetBinContent(100). I would need you to send me a root file containing the histogram . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:140,deployability,contain,containing,140,"Hi, . It is strange that TH1::Integral(100,100) returns a different result than GetBinContent(100). I would need you to send me a root file containing the histogram . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:30,integrability,Integr,Integral,30,"Hi, . It is strange that TH1::Integral(100,100) returns a different result than GetBinContent(100). I would need you to send me a root file containing the histogram . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:30,interoperability,Integr,Integral,30,"Hi, . It is strange that TH1::Integral(100,100) returns a different result than GetBinContent(100). I would need you to send me a root file containing the histogram . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:30,modifiability,Integr,Integral,30,"Hi, . It is strange that TH1::Integral(100,100) returns a different result than GetBinContent(100). I would need you to send me a root file containing the histogram . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:30,reliability,Integr,Integral,30,"Hi, . It is strange that TH1::Integral(100,100) returns a different result than GetBinContent(100). I would need you to send me a root file containing the histogram . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:30,security,Integr,Integral,30,"Hi, . It is strange that TH1::Integral(100,100) returns a different result than GetBinContent(100). I would need you to send me a root file containing the histogram . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:30,testability,Integr,Integral,30,"Hi, . It is strange that TH1::Integral(100,100) returns a different result than GetBinContent(100). I would need you to send me a root file containing the histogram . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:528,availability,sli,slightly,528,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:54,deployability,contain,containing,54,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:214,deployability,Integr,Integral,214,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:499,deployability,manag,manage,499,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:499,energy efficiency,manag,manage,499,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:214,integrability,Integr,Integral,214,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:214,interoperability,Integr,Integral,214,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:214,modifiability,Integr,Integral,214,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:214,reliability,Integr,Integral,214,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:528,reliability,sli,slightly,528,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:499,safety,manag,manage,499,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:214,security,Integr,Integral,214,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:285,security,modif,modified,285,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:214,testability,Integr,Integral,214,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:337,usability,behavi,behaviour,337,"Dear Lorenzo. I tried to produce an example ROOT file containing a problematic histogram, however when I checked the histogram that caused the crash in the Combine program by reading it directly from the file, the Integral() method worked without a problem. I then assumed Combine had modified the histogram in some way that caused this behaviour, so I attempted using pdb to save the histogram directly after the the crash, however this histogram also seems well-behaved. I will comment again if I manage to get the issue in a slightly more reproducible form, as I appreciate this isn't possible to debug from your side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:40,performance,time,time,40,"Hi Dominic,. I close this issue for the time being. Please feel free to re-open it when you have a reproducible. Cheers. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6427:15,usability,close,close,15,"Hi Dominic,. I close this issue for the time being. Please feel free to re-open it when you have a reproducible. Cheers. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6427
https://github.com/root-project/root/issues/6428:48,safety,test,tests,48,"Hi @couet ,. The previous fix for TPad works in tests. . Thanks! Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:48,testability,test,tests,48,"Hi @couet ,. The previous fix for TPad works in tests. . Thanks! Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:57,usability,user,users,57,"Well .... ""PlaceBox"" is not supposed to be called by end users. Any way I will look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:106,availability,operat,operations,106,">. it was never meant to be use that way. I know, I needed a dummy argument. The crash appears before any operations with this argument. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:16,availability,fault,fault,16,"Hi @couet ,. my fault! You've fixed a bug that I was not trying to report (zero pointer dereference). Thanks a lot! Will try to reproduce the FPE... If I will succeed (hopefully not), will open a new issue. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:16,energy efficiency,fault,fault,16,"Hi @couet ,. my fault! You've fixed a bug that I was not trying to report (zero pointer dereference). Thanks a lot! Will try to reproduce the FPE... If I will succeed (hopefully not), will open a new issue. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:16,performance,fault,fault,16,"Hi @couet ,. my fault! You've fixed a bug that I was not trying to report (zero pointer dereference). Thanks a lot! Will try to reproduce the FPE... If I will succeed (hopefully not), will open a new issue. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:16,reliability,fault,fault,16,"Hi @couet ,. my fault! You've fixed a bug that I was not trying to report (zero pointer dereference). Thanks a lot! Will try to reproduce the FPE... If I will succeed (hopefully not), will open a new issue. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:16,safety,fault,fault,16,"Hi @couet ,. my fault! You've fixed a bug that I was not trying to report (zero pointer dereference). Thanks a lot! Will try to reproduce the FPE... If I will succeed (hopefully not), will open a new issue. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:512,availability,mask,masks,512,"I'm sorry,. here is the code to reproduce FPE (not segmentation violation). ```. #include <TCanvas.h>. #include <TPad.h>. #include <TBox.h>. #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT. #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X. // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= ne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:904,availability,mask,masks,904,"I'm sorry,. here is the code to reproduce FPE (not segmentation violation). ```. #include <TCanvas.h>. #include <TPad.h>. #include <TBox.h>. #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT. #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X. // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= ne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1027,availability,mask,mask,1027,"to reproduce FPE (not segmentation violation). ```. #include <TCanvas.h>. #include <TPad.h>. #include <TBox.h>. #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT. #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X. // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",5",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1976,deployability,fail,fails,1976,"d_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:2383,deployability,stack,stack,2383," conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:2827,deployability,Stack,StackTrace,2827,". int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3730,deployability,stack,stack,3730,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1261,energy efficiency,current,current,1261,"eenableexcept on OS X. // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floatin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1593,energy efficiency,current,current,1593,"= fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:2739,energy efficiency,optim,optimized,2739,"etexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:2886,energy efficiency,core,core,2886,"IVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. =================================================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3051,energy efficiency,core,core,3051," Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3175,energy efficiency,optim,optimized,3175,"h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3351,energy efficiency,optim,optimized,3351," crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3373,energy efficiency,optim,optimized,3373,"tire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3960,energy efficiency,optim,optimized,3960,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:4136,energy efficiency,optim,optimized,4136,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:4158,energy efficiency,optim,optimized,4158,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:237,integrability,Pub,Public,237,"I'm sorry,. here is the code to reproduce FPE (not segmentation violation). ```. #include <TCanvas.h>. #include <TPad.h>. #include <TBox.h>. #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT. #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X. // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= ne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3662,integrability,sub,submit,3662,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:2739,performance,optimiz,optimized,2739,"etexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3175,performance,optimiz,optimized,3175,"h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at tes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3351,performance,optimiz,optimized,3351," crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3373,performance,optimiz,optimized,3373,"tire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/v",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3960,performance,optimiz,optimized,3960,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:4136,performance,optimiz,optimized,4136,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:4158,performance,optimiz,optimized,4158,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1207,reliability,pra,pragma,1207,") && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X. // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1539,reliability,pra,pragma,1539,"s;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1976,reliability,fail,fails,1976,"d_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:413,safety,except,excepts,413,"I'm sorry,. here is the code to reproduce FPE (not segmentation violation). ```. #include <TCanvas.h>. #include <TPad.h>. #include <TBox.h>. #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT. #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X. // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= ne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:474,safety,except,excepts,474,"I'm sorry,. here is the code to reproduce FPE (not segmentation violation). ```. #include <TCanvas.h>. #include <TPad.h>. #include <TBox.h>. #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT. #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X. // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= ne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:801,safety,except,excepts,801,"I'm sorry,. here is the code to reproduce FPE (not segmentation violation). ```. #include <TCanvas.h>. #include <TPad.h>. #include <TBox.h>. #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT. #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X. // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= ne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:862,safety,except,excepts,862,"I'm sorry,. here is the code to reproduce FPE (not segmentation violation). ```. #include <TCanvas.h>. #include <TPad.h>. #include <TBox.h>. #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT. #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X. // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= ne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1193,safety,except,excepts,1193,"ned(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X. // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1269,safety,except,exception,1269,"cept on OS X. // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1377,safety,except,exception,1377,"nt feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1433,safety,except,excepts,1433,"_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. =========================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1525,safety,except,excepts,1525,"nt old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1601,safety,except,exception,1601,"control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1709,safety,except,exception,1709,"return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b810",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1766,safety,except,excepts,1766,"t fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:2224,safety,test,test,2224,"CESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:2273,safety,except,exception,2273," flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3392,safety,test,test,3392," of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:4177,safety,test,test,4177,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3091,security,sign,signal,3091," o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:2224,testability,test,test,2224,"CESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:2389,testability,trace,trace,2389,"tions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3392,testability,test,test,3392," of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3736,testability,trace,trace,3736,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:4177,testability,test,test,4177,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:302,usability,person,personal,302,"I'm sorry,. here is the code to reproduce FPE (not segmentation violation). ```. #include <TCanvas.h>. #include <TPad.h>. #include <TBox.h>. #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT. #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X. // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= ne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1364,usability,clear,clear,1364,"ple.c. inline int feenableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask. fenv.__control &= ~new_excepts;. fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. Thi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:1696,usability,clear,clear,1696,"xcepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;. }. inline int fedisableexcept(unsigned int excepts). {. static fenv_t fenv;. unsigned int new_excepts = excepts & FE_ALL_EXCEPT;. // all previous masks. unsigned int old_excepts;. if (fegetenv(&fenv)) {. return -1;. }. old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask. fenv.__control |= new_excepts;. fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;. }. #else. inline int feenableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts). {. #pragma STDC FENV_ACCESS ON. fexcept_t flags;. /* Save current exception flags. */. fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */. return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */. }. #endif. #endif. int main(int argc, char **argv) {. feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);. TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails. // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works. C->cd();. Double_t w=20, h=20, xl=0, yb=20;. TBox* o=new TBox();. TPad* c= new TPad();. c->SetPad(0,0,1,1);. c->cd(1);. c->PlaceBox(o,w,h,xl,yb);. return 0;. }. ```. I see. ```. [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3493,usability,hint,hint,3493,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3537,usability,help,help,3537,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:3812,usability,help,help,3812,"==============================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc. entry=0x7ffeea3c7360, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum http://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at http://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=. 0x7ffeea3c9dc0: 0, yb=. 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108. #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87. ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```. source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6428:32,usability,close,closed,32,Yes open a new one. This one is closed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6428
https://github.com/root-project/root/issues/6430:198,deployability,build,build,198,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere. As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version? Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:461,deployability,releas,release,461,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere. As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version? Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:535,deployability,build,build,535,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere. As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version? Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:666,deployability,version,version,666,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere. As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version? Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:666,integrability,version,version,666,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere. As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version? Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:149,interoperability,platform,platforms,149,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere. As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version? Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:263,modifiability,pac,packages,263,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere. As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version? Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:316,modifiability,pac,packages,316,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere. As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version? Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:624,modifiability,concern,concerning,624,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere. As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version? Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:666,modifiability,version,version,666,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere. As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version? Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:62,performance,time,time,62,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere. As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version? Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:22,testability,understand,understand,22,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere. As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version? Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:624,testability,concern,concerning,624,"Hi @Axel-Naumann ,. I understand that this ""feature"" is quite time consuming to implement. But this is actually crucial for Mac. While for the other platforms one can have a reproduciable or common build with debug information (e.g. using on Linux the root-debug packages from EPEL) for Mac it is not possible. Some packages on Mac could come from homebrew, others from system, macports or from elsewhere. As a result, if someone sees a problem in the official release for Mac, it is not possible to debug it -- the attempts to have a build that ""same as the official, but with debug info"" are futile. Can something be done concerning this at least for a single Mac version? Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:113,usability,help,helps,113,I have enabled this for macOS 10.15 in the nightlies - they should arrive starting tomorrow. Let me know if that helps!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:34,deployability,build,builds,34,"Hi @Axel-Naumann ,. are the debug builds for 10.15 actually there? When I try to use the 	root_v6.22.99.macosx64-10.15-clang120.tar.gz the system reports no debug symbols. Do I miss something? Also, from a brief look at 10.15 build vs 10.14 build I see they have the same size, which would be strange if one would have some debug info and the other would not. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:226,deployability,build,build,226,"Hi @Axel-Naumann ,. are the debug builds for 10.15 actually there? When I try to use the 	root_v6.22.99.macosx64-10.15-clang120.tar.gz the system reports no debug symbols. Do I miss something? Also, from a brief look at 10.15 build vs 10.14 build I see they have the same size, which would be strange if one would have some debug info and the other would not. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:241,deployability,build,build,241,"Hi @Axel-Naumann ,. are the debug builds for 10.15 actually there? When I try to use the 	root_v6.22.99.macosx64-10.15-clang120.tar.gz the system reports no debug symbols. Do I miss something? Also, from a brief look at 10.15 build vs 10.14 build I see they have the same size, which would be strange if one would have some debug info and the other would not. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:31,availability,down,download,31,Finally! See https://root.cern/download/nightly/?C=M;O=D - for instance https://root.cern/download/nightly/root_v6.23.01.macos-10.15-x86_64-clang120.debug.tar.gz,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/issues/6430:90,availability,down,download,90,Finally! See https://root.cern/download/nightly/?C=M;O=D - for instance https://root.cern/download/nightly/root_v6.23.01.macos-10.15-x86_64-clang120.debug.tar.gz,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6430
https://github.com/root-project/root/pull/6431:127,deployability,contain,container,127,Is it less than or larger than? I guess it doesn't matter and just orders differently (?) -> https://en.cppreference.com/w/cpp/container/set,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6431
https://github.com/root-project/root/pull/6431:43,reliability,doe,doesn,43,Is it less than or larger than? I guess it doesn't matter and just orders differently (?) -> https://en.cppreference.com/w/cpp/container/set,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6431
https://github.com/root-project/root/issues/6432:55,deployability,depend,dependencies,55,"I'm aware of this. This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. I.e. thanks for the the report, problem acknowledged!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:55,integrability,depend,dependencies,55,"I'm aware of this. This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. I.e. thanks for the the report, problem acknowledged!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:55,modifiability,depend,dependencies,55,"I'm aware of this. This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. I.e. thanks for the the report, problem acknowledged!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:131,performance,time,time,131,"I'm aware of this. This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. I.e. thanks for the the report, problem acknowledged!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:55,safety,depend,dependencies,55,"I'm aware of this. This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. I.e. thanks for the the report, problem acknowledged!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:55,testability,depend,dependencies,55,"I'm aware of this. This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. I.e. thanks for the the report, problem acknowledged!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:78,usability,prototyp,prototype,78,"I'm aware of this. This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. I.e. thanks for the the report, problem acknowledged!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:229,availability,avail,available,229,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:606,availability,slo,slow,606,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:170,deployability,depend,depends,170,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:215,deployability,artifact,artifacts,215,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:278,deployability,build,build,278,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:484,deployability,build,building,484,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:523,deployability,build,building,523,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:745,deployability,scale,scale,745,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:745,energy efficiency,scale,scale,745,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:930,energy efficiency,profil,profiler,930,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:170,integrability,depend,depends,170,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:170,modifiability,depend,depends,170,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:745,modifiability,scal,scale,745,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:895,modifiability,refact,refactoring,895,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:44,performance,bottleneck,bottleneck,44,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:60,performance,time,time,60,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:745,performance,scale,scale,745,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:895,performance,refactor,refactoring,895,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:930,performance,profil,profiler,930,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:954,performance,bottleneck,bottlenecks,954,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:229,reliability,availab,available,229,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:291,reliability,doe,does,291,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:606,reliability,slo,slow,606,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:170,safety,depend,depends,170,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:229,safety,avail,available,229,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:229,security,availab,available,229,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:32,testability,simpl,simple,32,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:170,testability,depend,depends,170,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:32,usability,simpl,simple,32,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:618,usability,tool,tool,618,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:. * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`. * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:38,deployability,depend,dependencies,38,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:459,deployability,depend,dependency,459,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:38,integrability,depend,dependencies,38,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:459,integrability,depend,dependency,459,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:38,modifiability,depend,dependencies,38,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:459,modifiability,depend,dependency,459,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:114,performance,time,time,114,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:288,performance,time,time,288,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:38,safety,depend,dependencies,38,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:459,safety,depend,dependency,459,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:38,testability,depend,dependencies,38,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:459,testability,depend,dependency,459,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:61,usability,prototyp,prototype,61,"> This is mostly caused by dictionary dependencies. I have a prototype that fixes this; I need to invest some dev time to get this into PR quality. Moved on, giving up on this - [here's](https://github.com/root-project/root/files/14665721/dict-cmake-dep.tar.gz) what I ended up with last time I looked at it. I added some comments to explain what's happening. (It also fixes the ""changed a header included by a header that's passed to rootcling"" transitional dependency issue...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:92,deployability,depend,dependency,92,"I personally do not think that the runtime of rootcling is the problem here, but rather the dependency tree. Of course making anything faster is good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:92,integrability,depend,dependency,92,"I personally do not think that the runtime of rootcling is the problem here, but rather the dependency tree. Of course making anything faster is good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:92,modifiability,depend,dependency,92,"I personally do not think that the runtime of rootcling is the problem here, but rather the dependency tree. Of course making anything faster is good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:92,safety,depend,dependency,92,"I personally do not think that the runtime of rootcling is the problem here, but rather the dependency tree. Of course making anything faster is good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:92,testability,depend,dependency,92,"I personally do not think that the runtime of rootcling is the problem here, but rather the dependency tree. Of course making anything faster is good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6432:2,usability,person,personally,2,"I personally do not think that the runtime of rootcling is the problem here, but rather the dependency tree. Of course making anything faster is good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6432
https://github.com/root-project/root/issues/6433:139,deployability,version,versions,139,I see: it is working for some other: https://root.cern/doc/master/group__tutorial__fit.html. This problem shows with two different doxygen versions. 1. 1.8.14 for ROOT 6.22. 2. 1.9.0 for ROOT master,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6433
https://github.com/root-project/root/issues/6433:139,integrability,version,versions,139,I see: it is working for some other: https://root.cern/doc/master/group__tutorial__fit.html. This problem shows with two different doxygen versions. 1. 1.8.14 for ROOT 6.22. 2. 1.9.0 for ROOT master,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6433
https://github.com/root-project/root/issues/6433:139,modifiability,version,versions,139,I see: it is working for some other: https://root.cern/doc/master/group__tutorial__fit.html. This problem shows with two different doxygen versions. 1. 1.8.14 for ROOT 6.22. 2. 1.9.0 for ROOT master,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6433
https://github.com/root-project/root/issues/6433:11,testability,simpl,simple,11,The fix in simple: we should not use the keyword `\brief` it is not needed. If That's ok wit you I can make a PR to remove it .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6433
https://github.com/root-project/root/issues/6433:11,usability,simpl,simple,11,The fix in simple: we should not use the keyword `\brief` it is not needed. If That's ok wit you I can make a PR to remove it .,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6433
https://github.com/root-project/root/issues/6433:323,deployability,updat,updated,323,My current theory is that this works:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. /// Draw ellipses. ```. and this doesn't:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. ///. /// Draw ellipses. ```. Maybe that's why Enrico and me needed to add the `\brief`s before doxygen was updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6433
https://github.com/root-project/root/issues/6433:3,energy efficiency,current,current,3,My current theory is that this works:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. /// Draw ellipses. ```. and this doesn't:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. ///. /// Draw ellipses. ```. Maybe that's why Enrico and me needed to add the `\brief`s before doxygen was updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6433
https://github.com/root-project/root/issues/6433:110,energy efficiency,Draw,Draw,110,My current theory is that this works:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. /// Draw ellipses. ```. and this doesn't:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. ///. /// Draw ellipses. ```. Maybe that's why Enrico and me needed to add the `\brief`s before doxygen was updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6433
https://github.com/root-project/root/issues/6433:225,energy efficiency,Draw,Draw,225,My current theory is that this works:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. /// Draw ellipses. ```. and this doesn't:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. ///. /// Draw ellipses. ```. Maybe that's why Enrico and me needed to add the `\brief`s before doxygen was updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6433
https://github.com/root-project/root/issues/6433:139,reliability,doe,doesn,139,My current theory is that this works:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. /// Draw ellipses. ```. and this doesn't:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. ///. /// Draw ellipses. ```. Maybe that's why Enrico and me needed to add the `\brief`s before doxygen was updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6433
https://github.com/root-project/root/issues/6433:323,safety,updat,updated,323,My current theory is that this works:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. /// Draw ellipses. ```. and this doesn't:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. ///. /// Draw ellipses. ```. Maybe that's why Enrico and me needed to add the `\brief`s before doxygen was updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6433
https://github.com/root-project/root/issues/6433:323,security,updat,updated,323,My current theory is that this works:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. /// Draw ellipses. ```. and this doesn't:. ```. /// \file. /// \ingroup tutorial_graphics. /// \notebook -js. ///. /// Draw ellipses. ```. Maybe that's why Enrico and me needed to add the `\brief`s before doxygen was updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6433
https://github.com/root-project/root/issues/6433:111,deployability,build,build,111,Most the tutorials are working without \brief (see the graphics ones for instance) . I will check with a local build and create a PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6433
https://github.com/root-project/root/issues/6439:79,availability,error,error,79,"Another reproducer:. ```. ~ root -l. root [0] Long32_t ba;. ROOT_prompt_0:1:9: error: expected ';' after expression. Long32_t ba;. ^. ;. ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. Long32_t ba;. ^. root [1] Long64_t ba;. root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::Decl* clang::Sema::ActOnFinishFunctionBody(clang::Decl*, clang::Stmt*, bool): Assertion `!Cleanup.exprNeedsCleanups() && ""Unaccounted cleanups in function""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:157,availability,error,error,157,"Another reproducer:. ```. ~ root -l. root [0] Long32_t ba;. ROOT_prompt_0:1:9: error: expected ';' after expression. Long32_t ba;. ^. ;. ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. Long32_t ba;. ^. root [1] Long64_t ba;. root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::Decl* clang::Sema::ActOnFinishFunctionBody(clang::Decl*, clang::Stmt*, bool): Assertion `!Cleanup.exprNeedsCleanups() && ""Unaccounted cleanups in function""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:508,deployability,fail,failed,508,"Another reproducer:. ```. ~ root -l. root [0] Long32_t ba;. ROOT_prompt_0:1:9: error: expected ';' after expression. Long32_t ba;. ^. ;. ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. Long32_t ba;. ^. root [1] Long64_t ba;. root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::Decl* clang::Sema::ActOnFinishFunctionBody(clang::Decl*, clang::Stmt*, bool): Assertion `!Cleanup.exprNeedsCleanups() && ""Unaccounted cleanups in function""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:79,performance,error,error,79,"Another reproducer:. ```. ~ root -l. root [0] Long32_t ba;. ROOT_prompt_0:1:9: error: expected ';' after expression. Long32_t ba;. ^. ;. ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. Long32_t ba;. ^. root [1] Long64_t ba;. root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::Decl* clang::Sema::ActOnFinishFunctionBody(clang::Decl*, clang::Stmt*, bool): Assertion `!Cleanup.exprNeedsCleanups() && ""Unaccounted cleanups in function""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:157,performance,error,error,157,"Another reproducer:. ```. ~ root -l. root [0] Long32_t ba;. ROOT_prompt_0:1:9: error: expected ';' after expression. Long32_t ba;. ^. ;. ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. Long32_t ba;. ^. root [1] Long64_t ba;. root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::Decl* clang::Sema::ActOnFinishFunctionBody(clang::Decl*, clang::Stmt*, bool): Assertion `!Cleanup.exprNeedsCleanups() && ""Unaccounted cleanups in function""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:508,reliability,fail,failed,508,"Another reproducer:. ```. ~ root -l. root [0] Long32_t ba;. ROOT_prompt_0:1:9: error: expected ';' after expression. Long32_t ba;. ^. ;. ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. Long32_t ba;. ^. root [1] Long64_t ba;. root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::Decl* clang::Sema::ActOnFinishFunctionBody(clang::Decl*, clang::Stmt*, bool): Assertion `!Cleanup.exprNeedsCleanups() && ""Unaccounted cleanups in function""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:79,safety,error,error,79,"Another reproducer:. ```. ~ root -l. root [0] Long32_t ba;. ROOT_prompt_0:1:9: error: expected ';' after expression. Long32_t ba;. ^. ;. ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. Long32_t ba;. ^. root [1] Long64_t ba;. root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::Decl* clang::Sema::ActOnFinishFunctionBody(clang::Decl*, clang::Stmt*, bool): Assertion `!Cleanup.exprNeedsCleanups() && ""Unaccounted cleanups in function""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:157,safety,error,error,157,"Another reproducer:. ```. ~ root -l. root [0] Long32_t ba;. ROOT_prompt_0:1:9: error: expected ';' after expression. Long32_t ba;. ^. ;. ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. Long32_t ba;. ^. root [1] Long64_t ba;. root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::Decl* clang::Sema::ActOnFinishFunctionBody(clang::Decl*, clang::Stmt*, bool): Assertion `!Cleanup.exprNeedsCleanups() && ""Unaccounted cleanups in function""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:182,security,ident,identifier,182,"Another reproducer:. ```. ~ root -l. root [0] Long32_t ba;. ROOT_prompt_0:1:9: error: expected ';' after expression. Long32_t ba;. ^. ;. ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. Long32_t ba;. ^. root [1] Long64_t ba;. root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::Decl* clang::Sema::ActOnFinishFunctionBody(clang::Decl*, clang::Stmt*, bool): Assertion `!Cleanup.exprNeedsCleanups() && ""Unaccounted cleanups in function""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:429,testability,Assert,Assertion,429,"Another reproducer:. ```. ~ root -l. root [0] Long32_t ba;. ROOT_prompt_0:1:9: error: expected ';' after expression. Long32_t ba;. ^. ;. ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. Long32_t ba;. ^. root [1] Long64_t ba;. root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::Decl* clang::Sema::ActOnFinishFunctionBody(clang::Decl*, clang::Stmt*, bool): Assertion `!Cleanup.exprNeedsCleanups() && ""Unaccounted cleanups in function""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:79,usability,error,error,79,"Another reproducer:. ```. ~ root -l. root [0] Long32_t ba;. ROOT_prompt_0:1:9: error: expected ';' after expression. Long32_t ba;. ^. ;. ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. Long32_t ba;. ^. root [1] Long64_t ba;. root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::Decl* clang::Sema::ActOnFinishFunctionBody(clang::Decl*, clang::Stmt*, bool): Assertion `!Cleanup.exprNeedsCleanups() && ""Unaccounted cleanups in function""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:157,usability,error,error,157,"Another reproducer:. ```. ~ root -l. root [0] Long32_t ba;. ROOT_prompt_0:1:9: error: expected ';' after expression. Long32_t ba;. ^. ;. ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. Long32_t ba;. ^. root [1] Long64_t ba;. root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::Decl* clang::Sema::ActOnFinishFunctionBody(clang::Decl*, clang::Stmt*, bool): Assertion `!Cleanup.exprNeedsCleanups() && ""Unaccounted cleanups in function""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:303,usability,tool,tools,303,"Another reproducer:. ```. ~ root -l. root [0] Long32_t ba;. ROOT_prompt_0:1:9: error: expected ';' after expression. Long32_t ba;. ^. ;. ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. Long32_t ba;. ^. root [1] Long64_t ba;. root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::Decl* clang::Sema::ActOnFinishFunctionBody(clang::Decl*, clang::Stmt*, bool): Assertion `!Cleanup.exprNeedsCleanups() && ""Unaccounted cleanups in function""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:93,availability,error,error,93,"> Another reproducer:. > . > ```. > ~ root -l. > root [0] Long32_t ba;. > ROOT_prompt_0:1:9: error: expected ';' after expression. > Long32_t ba;. > ^. > ;. > ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. > Long32_t ba;. > ^. > root [1] Long64_t ba;. > root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::. > ```. As suspected, these were two different issues. The quoted issue was fixed in https://github.com/root-project/root/pull/9160. The original reported issue is to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:179,availability,error,error,179,"> Another reproducer:. > . > ```. > ~ root -l. > root [0] Long32_t ba;. > ROOT_prompt_0:1:9: error: expected ';' after expression. > Long32_t ba;. > ^. > ;. > ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. > Long32_t ba;. > ^. > root [1] Long64_t ba;. > root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::. > ```. As suspected, these were two different issues. The quoted issue was fixed in https://github.com/root-project/root/pull/9160. The original reported issue is to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:93,performance,error,error,93,"> Another reproducer:. > . > ```. > ~ root -l. > root [0] Long32_t ba;. > ROOT_prompt_0:1:9: error: expected ';' after expression. > Long32_t ba;. > ^. > ;. > ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. > Long32_t ba;. > ^. > root [1] Long64_t ba;. > root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::. > ```. As suspected, these were two different issues. The quoted issue was fixed in https://github.com/root-project/root/pull/9160. The original reported issue is to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:179,performance,error,error,179,"> Another reproducer:. > . > ```. > ~ root -l. > root [0] Long32_t ba;. > ROOT_prompt_0:1:9: error: expected ';' after expression. > Long32_t ba;. > ^. > ;. > ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. > Long32_t ba;. > ^. > root [1] Long64_t ba;. > root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::. > ```. As suspected, these were two different issues. The quoted issue was fixed in https://github.com/root-project/root/pull/9160. The original reported issue is to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:93,safety,error,error,93,"> Another reproducer:. > . > ```. > ~ root -l. > root [0] Long32_t ba;. > ROOT_prompt_0:1:9: error: expected ';' after expression. > Long32_t ba;. > ^. > ;. > ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. > Long32_t ba;. > ^. > root [1] Long64_t ba;. > root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::. > ```. As suspected, these were two different issues. The quoted issue was fixed in https://github.com/root-project/root/pull/9160. The original reported issue is to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:179,safety,error,error,179,"> Another reproducer:. > . > ```. > ~ root -l. > root [0] Long32_t ba;. > ROOT_prompt_0:1:9: error: expected ';' after expression. > Long32_t ba;. > ^. > ;. > ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. > Long32_t ba;. > ^. > root [1] Long64_t ba;. > root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::. > ```. As suspected, these were two different issues. The quoted issue was fixed in https://github.com/root-project/root/pull/9160. The original reported issue is to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:204,security,ident,identifier,204,"> Another reproducer:. > . > ```. > ~ root -l. > root [0] Long32_t ba;. > ROOT_prompt_0:1:9: error: expected ';' after expression. > Long32_t ba;. > ^. > ;. > ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. > Long32_t ba;. > ^. > root [1] Long64_t ba;. > root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::. > ```. As suspected, these were two different issues. The quoted issue was fixed in https://github.com/root-project/root/pull/9160. The original reported issue is to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:93,usability,error,error,93,"> Another reproducer:. > . > ```. > ~ root -l. > root [0] Long32_t ba;. > ROOT_prompt_0:1:9: error: expected ';' after expression. > Long32_t ba;. > ^. > ;. > ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. > Long32_t ba;. > ^. > root [1] Long64_t ba;. > root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::. > ```. As suspected, these were two different issues. The quoted issue was fixed in https://github.com/root-project/root/pull/9160. The original reported issue is to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:179,usability,error,error,179,"> Another reproducer:. > . > ```. > ~ root -l. > root [0] Long32_t ba;. > ROOT_prompt_0:1:9: error: expected ';' after expression. > Long32_t ba;. > ^. > ;. > ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. > Long32_t ba;. > ^. > root [1] Long64_t ba;. > root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::. > ```. As suspected, these were two different issues. The quoted issue was fixed in https://github.com/root-project/root/pull/9160. The original reported issue is to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:333,usability,tool,tools,333,"> Another reproducer:. > . > ```. > ~ root -l. > root [0] Long32_t ba;. > ROOT_prompt_0:1:9: error: expected ';' after expression. > Long32_t ba;. > ^. > ;. > ROOT_prompt_0:1:10: error: use of undeclared identifier 'ba'. > Long32_t ba;. > ^. > root [1] Long64_t ba;. > root.exe: ../../../../../../../../root_dbg/interpreter/llvm/src/tools/clang/lib/Sema/SemaDecl.cpp:12576: clang::. > ```. As suspected, these were two different issues. The quoted issue was fixed in https://github.com/root-project/root/pull/9160. The original reported issue is to be investigated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:136,availability,error,error,136,"This is still a problem in 6.26.04:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:758,deployability,fail,failed,758,"This is still a problem in 6.26.04:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:103,energy efficiency,Draw,DrawClone,103,"This is still a problem in 6.26.04:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:160,energy efficiency,Draw,DrawClone,160,"This is still a problem in 6.26.04:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:298,energy efficiency,Draw,DrawClone,298,"This is still a problem in 6.26.04:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:380,energy efficiency,Draw,DrawClone,380,"This is still a problem in 6.26.04:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:730,energy efficiency,load,loaded,730,"This is still a problem in 6.26.04:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:136,performance,error,error,136,"This is still a problem in 6.26.04:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:730,performance,load,loaded,730,"This is still a problem in 6.26.04:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:758,reliability,fail,failed,758,"This is still a problem in 6.26.04:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:136,safety,error,error,136,"This is still a problem in 6.26.04:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:633,testability,Assert,Assertion,633,"This is still a problem in 6.26.04:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:136,usability,error,error,136,"This is still a problem in 6.26.04:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root.exe: /home/conda/feedstock_root/build_artifacts/root_base_1654795774398/work/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp:1187: std::string cling::Dyld::searchLibrariesForSymbol(llvm::StringRef, bool): Assertion `!llvm::sys::DynamicLibrary::SearchForAddressOfSymbol(mangledName) && ""Library already loaded, please use dlsym!""' failed. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:15,availability,ping,ping,15,"Thanks for the ping, @eguiraud! :-). I had some work on a branch that fixes this and other related issues (grouped in #10049), but I still need to find the time to polish that code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:156,performance,time,time,156,"Thanks for the ping, @eguiraud! :-). I had some work on a branch that fixes this and other related issues (grouped in #10049), but I still need to find the time to polish that code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:52,availability,error,error,52,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:194,availability,error,error,194,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5611,availability,operat,operator,5611,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:6415,availability,operat,operator,6415,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:161,energy efficiency,Draw,DrawClone,161,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:218,energy efficiency,Draw,DrawClone,218,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:356,energy efficiency,Draw,DrawClone,356,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:438,energy efficiency,Draw,DrawClone,438,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:957,energy efficiency,load,load,957,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1686,energy efficiency,alloc,allocator,1686,"erface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1710,energy efficiency,alloc,allocator,1710,"e probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1782,energy efficiency,alloc,allocator,1782,"td::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1925,energy efficiency,alloc,allocator,1925,"TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1949,energy efficiency,alloc,allocator,1949,"to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2021,energy efficiency,alloc,allocator,2021,"nction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2159,energy efficiency,alloc,allocator,2159,"IcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2183,energy efficiency,alloc,allocator,2183,"EEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_ref",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2255,energy efficiency,alloc,allocator,2255,"r8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2398,energy efficiency,alloc,allocator,2398,"hared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2422,energy efficiency,alloc,allocator,2422,"<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2494,energy efficiency,alloc,allocator,2494,"DF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the correspo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2543,energy efficiency,load,load,2543,"T::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::exe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3038,energy efficiency,load,load,3038," > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared librar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3482,energy efficiency,load,load,3482,"ar>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4004,energy efficiency,load,load,4004,tedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_E,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4486,energy efficiency,load,load,4486,"he corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4856,energy efficiency,load,load,4856,"::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10share",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5382,energy efficiency,load,load,5382,"l::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5696,energy efficiency,load,load,5696,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:6158,energy efficiency,load,load,6158,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:6556,energy efficiency,load,load,6556,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:688,integrability,interfac,interface,688,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1333,integrability,interfac,interface,1333,"42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2759,integrability,interfac,interface,2759,"raits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3242,integrability,interfac,interface,3242,">, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You ar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3701,integrability,interfac,interface,3701,renceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4220,integrability,interfac,interface,4220,e linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RD,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4676,integrability,interfac,interface,4676,"hile linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). May",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5117,integrability,interfac,interface,5117,"HeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5537,integrability,interfac,interface,5537,"or::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Mayb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5906,integrability,interfac,interface,5906,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:6341,integrability,interfac,interface,6341,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:688,interoperability,interfac,interface,688,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:980,interoperability,share,shared,980,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1333,interoperability,interfac,interface,1333,"42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2566,interoperability,share,shared,2566,"dAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_Z",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2759,interoperability,interfac,interface,2759,"raits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3061,interoperability,share,shared,3061,":RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3242,interoperability,interfac,interface,3242,">, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You ar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3505,interoperability,share,shared,3505,> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3701,interoperability,interfac,interface,3701,renceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4027,interoperability,share,shared,4027,need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERN,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4220,interoperability,interfac,interface,4220,e linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RD,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4509,interoperability,share,shared,4509,"library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresol",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4676,interoperability,interfac,interface,4676,"hile linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). May",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4879,interoperability,share,shared,4879,"OOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolv",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5117,interoperability,interfac,interface,5117,"HeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5405,interoperability,share,shared,5405,"td::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5537,interoperability,interfac,interface,5537,"or::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Mayb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5719,interoperability,share,shared,5719,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5906,interoperability,interfac,interface,5906,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:6181,interoperability,share,shared,6181,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:6341,interoperability,interfac,interface,6341,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:6579,interoperability,share,shared,6579,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:688,modifiability,interfac,interface,688,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1333,modifiability,interfac,interface,1333,"42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2759,modifiability,interfac,interface,2759,"raits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3242,modifiability,interfac,interface,3242,">, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You ar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3701,modifiability,interfac,interface,3701,renceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4220,modifiability,interfac,interface,4220,e linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RD,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4676,modifiability,interfac,interface,4676,"hile linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). May",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5117,modifiability,interfac,interface,5117,"HeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RN",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5537,modifiability,interfac,interface,5537,"or::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Mayb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5906,modifiability,interfac,interface,5906,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:6341,modifiability,interfac,interface,6341,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:52,performance,error,error,52,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:194,performance,error,error,194,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:957,performance,load,load,957,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2543,performance,load,load,2543,"T::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::exe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3038,performance,load,load,3038," > const&>(ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared librar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3482,performance,load,load,3482,"ar>, std::allocator<char> > > > const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4004,performance,load,load,4004,tedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_E,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4486,performance,load,load,4486,"he corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:4856,performance,load,load,4856,"::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]! You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10share",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5382,performance,load,load,5382,"l::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:5696,performance,load,load,5696,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:6158,performance,load,load,6158,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:6556,performance,load,load,6556,"apI4TH1DEEPSt10shared_ptrIT_ERKS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<TH1D>* ROOT::Internal::RDF::MakeSharedOnHeap<TH1D>(std::shared_ptr<TH1D> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6Detail3RDF13MakeResultPtrI4TH1DEENS_3RDF10RResultPtrIT_EERKSt10shared_ptrIS6_ERNS1_12RLoopManagerES8_INS_8Internal3RDF11RActionBaseEE' unresolved while linking [cling interface function]! You are probably missing the definition of ROOT::RDF::RResultPtr<TH1D> ROOT::Detail::RDF::MakeResultPtr<TH1D>(std::shared_ptr<TH1D> const&, ROOT::Detail::RDF::RLoopManager&, std::shared_ptr<ROOT::Internal::RDF::RActionBase>). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF16MakeSharedOnHeapINS_6Detail3RDF9RNodeBaseEEEPSt10shared_ptrIT_ERKS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<ROOT::Detail::RDF::RNodeBase>* ROOT::Internal::RDF::MakeSharedOnHeap<ROOT::Detail::RDF::RNodeBase>(std::shared_ptr<ROOT::Detail::RDF::RNodeBase> const&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? root [2]. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:52,safety,error,error,52,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:194,safety,error,error,194,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:52,usability,error,error,52,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:194,usability,error,error,194,"This is still present in v6.28.04 (LLVM 13) but the error is much more verbose:. ```. /tmp root -l. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt11make_sharedIN4ROOT8Internal3RDF13RJittedActionEJRNS0_6Detail3RDF12RLoopManagerERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaISE_EERNS2_15RColumnRegisterESI_EESt10shared_ptrINSt9enable_ifIXntsr8is_arrayIT_EE5valueESN_E4typeEEDpOT0_' unresolved while linking [cling interface function]! You are probably missing the definition of std::shared_ptr<std::enable_if<!is_array<ROOT::Internal::RDF::RJittedAction>::value, ROOT::Internal::RDF::RJittedAction>::type> std::make_shared<ROOT::Internal::RDF::RJittedAction, ROOT::Detail::RDF::RLoopManager&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, ROOT::Internal::RDF::RColumnRegister&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:138,availability,error,error,138,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2285,availability,operat,operator,2285,"ed to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3200,availability,operat,operator,3200,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:17,energy efficiency,current,current,17,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:105,energy efficiency,Draw,DrawClone,105,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:162,energy efficiency,Draw,DrawClone,162,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:300,energy efficiency,Draw,DrawClone,300,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:382,energy efficiency,Draw,DrawClone,382,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:800,energy efficiency,load,load,800,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1295,energy efficiency,load,load,1295,""").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1644,energy efficiency,alloc,allocator,1644,"T::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5va",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1726,energy efficiency,alloc,allocator,1726,"Register&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1808,energy efficiency,alloc,allocator,1808,"esponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tup",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1890,energy efficiency,alloc,allocator,1890,"RSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1915,energy efficiency,alloc,allocator,1915,"tail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1987,energy efficiency,alloc,allocator,1987,"ed while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the correspondin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2028,energy efficiency,load,load,2028,"tion]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2426,energy efficiency,load,load,2426,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2971,energy efficiency,load,load,2971,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3285,energy efficiency,load,load,3285,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:560,integrability,interfac,interface,560,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1016,integrability,interfac,interface,1016,"ent master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1499,integrability,interfac,interface,1499,"eferenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2211,integrability,interfac,interface,2211,"fine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2702,integrability,interfac,interface,2702,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3126,integrability,interfac,interface,3126,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:560,interoperability,interfac,interface,560,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:823,interoperability,share,shared,823,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1016,interoperability,interfac,interface,1016,"ent master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1318,interoperability,share,shared,1318,"oot [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RAct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1499,interoperability,interfac,interface,1499,"eferenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2051,interoperability,share,shared,2051,"missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2211,interoperability,interfac,interface,2211,"fine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2449,interoperability,share,shared,2449,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2702,interoperability,interfac,interface,2702,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2994,interoperability,share,shared,2994,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3126,interoperability,interfac,interface,3126,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3308,interoperability,share,shared,3308,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:560,modifiability,interfac,interface,560,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1016,modifiability,interfac,interface,1016,"ent master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1499,modifiability,interfac,interface,1499,"eferenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2211,modifiability,interfac,interface,2211,"fine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2702,modifiability,interfac,interface,2702,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3126,modifiability,interfac,interface,3126,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:138,performance,error,error,138,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:800,performance,load,load,800,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1295,performance,load,load,1295,""").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2028,performance,load,load,2028,"tion]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2426,performance,load,load,2426,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2971,performance,load,load,2971,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:3285,performance,load,load,3285,"brary? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:138,safety,error,error,138,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:138,usability,error,error,138,"Still present in current master:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]! You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E' unresolved while linking [cling interface function]! You are probably missing the definition of void std::_Destroy<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<cha",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:18,availability,state,state,18,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:154,availability,error,error,154,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:477,availability,error,error,477,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:121,energy efficiency,Draw,DrawClone,121,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:178,energy efficiency,Draw,DrawClone,178,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:316,energy efficiency,Draw,DrawClone,316,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:398,energy efficiency,Draw,DrawClone,398,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:18,integrability,state,state,18,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:154,performance,error,error,154,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:477,performance,error,error,477,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:154,safety,error,error,154,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:477,safety,error,error,477,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:496,safety,valid,valid,496,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:154,usability,error,error,154,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:460,usability,help,helpful,460,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:477,usability,error,error,477,"I think the fixed state should behave like this:. ```shell. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). root [2]. ```. The first (wrong) line produces a helpful compiler error, the second (valid) line produces a plot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:103,security,auth,authoritatively,103,"The issue is still there with master and LLVM 16. I add in the loop @devajithvs , who might be able to authoritatively comment about the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:10,performance,memor,memory,10,"To add my memory here: I think this was originally fixed by Javier, but I ended up re-introducing it when I made the remaining tests pass to merge https://github.com/root-project/root/pull/13565 :disappointed:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:127,safety,test,tests,127,"To add my memory here: I think this was originally fixed by Javier, but I ended up re-introducing it when I made the remaining tests pass to merge https://github.com/root-project/root/pull/13565 :disappointed:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:127,testability,test,tests,127,"To add my memory here: I think this was originally fixed by Javier, but I ended up re-introducing it when I made the remaining tests pass to merge https://github.com/root-project/root/pull/13565 :disappointed:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:10,usability,memor,memory,10,"To add my memory here: I think this was originally fixed by Javier, but I ended up re-introducing it when I made the remaining tests pass to merge https://github.com/root-project/root/pull/13565 :disappointed:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:266,availability,error,error,266,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:609,availability,error,error,609,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1056,availability,operat,operator,1056," https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1398,availability,operat,operator,1398,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:576,energy efficiency,Draw,DrawClone,576,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:633,energy efficiency,Draw,DrawClone,633,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:771,energy efficiency,Draw,DrawClone,771,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:853,energy efficiency,Draw,DrawClone,853,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1141,energy efficiency,load,load,1141,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1539,energy efficiency,load,load,1539,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2084,energy efficiency,load,load,2084,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:982,integrability,interfac,interface,982,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1324,integrability,interfac,interface,1324,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1815,integrability,interfac,interface,1815,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:982,interoperability,interfac,interface,982,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1164,interoperability,share,shared,1164,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1324,interoperability,interfac,interface,1324,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1562,interoperability,share,shared,1562,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1815,interoperability,interfac,interface,1815,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2107,interoperability,share,shared,2107,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:982,modifiability,interfac,interface,982,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1324,modifiability,interfac,interface,1324,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1815,modifiability,interfac,interface,1815,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:266,performance,error,error,266,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:609,performance,error,error,609,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1141,performance,load,load,1141,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:1539,performance,load,load,1539,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:2084,performance,load,load,2084,"ks:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignable<TH1D*> >::value, void>::type std::swap<TH1D*>(TH1D*&, TH1D*&). Maybe you need to load the corresponding shared library? root [2] . ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:500,reliability,doe,doesn,500,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:266,safety,error,error,266,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:609,safety,error,error,609,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:266,usability,error,error,266,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6439:609,usability,error,error,609,"I was looking into this and this seems similar to the issue: https://github.com/root-project/root/issues/10049. It's strange that this works:. ```. root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};. root [1] foo.GetName(). ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'? foo.GetName(). ^. ->. root [2] foo->GetName(). (const char *) ""foo.root"". ```. while the example here doesn't:. ```. root [0] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ROOT_prompt_0:1:52: error: no member named 'DrawClone' in 'ROOT::RDF::RResultPtr<TH1D>'; did you mean to use '->' instead of '.'? ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"").DrawClone(). ^. ->. root [1] ROOT::RDataFrame(10).Define(""x"", ""42"").Histo1D(""x"")->DrawClone(). IncrementalExecutor::executeFunction: symbol '_ZSteqI4TH1DEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator==<TH1D>(std::shared_ptr<TH1D> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZStneIN4ROOT8Internal3RDF11RActionBaseEEbRKSt10shared_ptrIT_EDn' unresolved while linking [cling interface function]! You are probably missing the definition of bool std::operator!=<ROOT::Internal::RDF::RActionBase>(std::shared_ptr<ROOT::Internal::RDF::RActionBase> const&, decltype(nullptr)). Maybe you need to load the corresponding shared library? IncrementalExecutor::executeFunction: symbol '_ZSt4swapIP4TH1DENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SE_' unresolved while linking [cling interface function]! You are probably missing the definition of std::enable_if<__and_<std::__not_<std::__is_tuple_like<TH1D*> >, std::is_move_constructible<TH1D*>, std::is_move_assignab",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6439
https://github.com/root-project/root/issues/6441:113,availability,error,error,113,"> @bellenot is this still the case? Yup, but there is not much we can do about it I'm afraid. One cannot get the error return code from a batch script",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:138,integrability,batch,batch,138,"> @bellenot is this still the case? Yup, but there is not much we can do about it I'm afraid. One cannot get the error return code from a batch script",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:113,performance,error,error,113,"> @bellenot is this still the case? Yup, but there is not much we can do about it I'm afraid. One cannot get the error return code from a batch script",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:138,performance,batch,batch,138,"> @bellenot is this still the case? Yup, but there is not much we can do about it I'm afraid. One cannot get the error return code from a batch script",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:113,safety,error,error,113,"> @bellenot is this still the case? Yup, but there is not much we can do about it I'm afraid. One cannot get the error return code from a batch script",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:113,usability,error,error,113,"> @bellenot is this still the case? Yup, but there is not much we can do about it I'm afraid. One cannot get the error return code from a batch script",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:122,availability,error,error,122,Is there an possible work-around? (for example create a special file is case of success and check for that in lieu of the error code of the script),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:122,performance,error,error,122,Is there an possible work-around? (for example create a special file is case of success and check for that in lieu of the error code of the script),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:122,safety,error,error,122,Is there an possible work-around? (for example create a special file is case of success and check for that in lieu of the error code of the script),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:122,usability,error,error,122,Is there an possible work-around? (for example create a special file is case of success and check for that in lieu of the error code of the script),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:41,safety,valid,valid,41,"I think this was on Jenkins only, so not valid anymore with the new CI. To be confirmed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:78,usability,confirm,confirmed,78,"I think this was on Jenkins only, so not valid anymore with the new CI. To be confirmed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:52,deployability,build,build,52,"Can this be confirmed, e.g. with a PR that make the build fail (e.g. invalid c++ in a random file)? It would be nice to close this item (@bellenot ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:58,deployability,fail,fail,58,"Can this be confirmed, e.g. with a PR that make the build fail (e.g. invalid c++ in a random file)? It would be nice to close this item (@bellenot ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:58,reliability,fail,fail,58,"Can this be confirmed, e.g. with a PR that make the build fail (e.g. invalid c++ in a random file)? It would be nice to close this item (@bellenot ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:12,usability,confirm,confirmed,12,"Can this be confirmed, e.g. with a PR that make the build fail (e.g. invalid c++ in a random file)? It would be nice to close this item (@bellenot ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:120,usability,close,close,120,"Can this be confirmed, e.g. with a PR that make the build fail (e.g. invalid c++ in a random file)? It would be nice to close this item (@bellenot ).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:11,usability,confirm,confirmed,11,"So this is confirmed by PR #15327: This issue was for Jenkins and not relevant anymore with the new CI, therefore I close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/issues/6441:116,usability,close,close,116,"So this is confirmed by PR #15327: This issue was for Jenkins and not relevant anymore with the new CI, therefore I close this issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6441
https://github.com/root-project/root/pull/6444:21,deployability,updat,updated,21,Other templates also updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:21,safety,updat,updated,21,Other templates also updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:21,security,updat,updated,21,Other templates also updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:6,availability,failur,failure,6,macos failure:. ```. 10:08:09 error: could not read '.git/rebase-apply/head-name': No such file or directory. ```. windows failure is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:30,availability,error,error,30,macos failure:. ```. 10:08:09 error: could not read '.git/rebase-apply/head-name': No such file or directory. ```. windows failure is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:123,availability,failur,failure,123,macos failure:. ```. 10:08:09 error: could not read '.git/rebase-apply/head-name': No such file or directory. ```. windows failure is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:6,deployability,fail,failure,6,macos failure:. ```. 10:08:09 error: could not read '.git/rebase-apply/head-name': No such file or directory. ```. windows failure is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:123,deployability,fail,failure,123,macos failure:. ```. 10:08:09 error: could not read '.git/rebase-apply/head-name': No such file or directory. ```. windows failure is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:6,performance,failur,failure,6,macos failure:. ```. 10:08:09 error: could not read '.git/rebase-apply/head-name': No such file or directory. ```. windows failure is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:30,performance,error,error,30,macos failure:. ```. 10:08:09 error: could not read '.git/rebase-apply/head-name': No such file or directory. ```. windows failure is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:123,performance,failur,failure,123,macos failure:. ```. 10:08:09 error: could not read '.git/rebase-apply/head-name': No such file or directory. ```. windows failure is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:6,reliability,fail,failure,6,macos failure:. ```. 10:08:09 error: could not read '.git/rebase-apply/head-name': No such file or directory. ```. windows failure is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:123,reliability,fail,failure,123,macos failure:. ```. 10:08:09 error: could not read '.git/rebase-apply/head-name': No such file or directory. ```. windows failure is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:30,safety,error,error,30,macos failure:. ```. 10:08:09 error: could not read '.git/rebase-apply/head-name': No such file or directory. ```. windows failure is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:30,usability,error,error,30,macos failure:. ```. 10:08:09 error: could not read '.git/rebase-apply/head-name': No such file or directory. ```. windows failure is pre-existing.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6444:27,usability,cancel,cancelled,27,ROOT-debian10-i386/cxx14 : cancelled manually .. taking too long to acquire a worker node.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6444
https://github.com/root-project/root/pull/6445:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6445
https://github.com/root-project/root/pull/6445:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6445
https://github.com/root-project/root/pull/6445:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6445
https://github.com/root-project/root/pull/6445:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6445
https://github.com/root-project/root/pull/6445:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6445
https://github.com/root-project/root/pull/6445:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6445
https://github.com/root-project/root/pull/6445:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6445
https://github.com/root-project/root/pull/6445:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6445
https://github.com/root-project/root/pull/6445:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6445
https://github.com/root-project/root/pull/6445:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6445
https://github.com/root-project/root/pull/6445:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6445
https://github.com/root-project/root/issues/6446:23,usability,interact,interactive,23,"Can be reproduced with interactive root:. ```. root [0] TLine* l= new TLine(0,1,0,1);. root [1] l->Paint();. *** Break *** segmentation violation. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6446
https://github.com/root-project/root/issues/6446:18,reliability,doe,does,18,The fix suggested does not work. Need more investigations.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6446
https://github.com/root-project/root/issues/6446:360,deployability,fail,failed,360,"Hi @couet, . > The same will need to be done for TBox TPave etc .... . I'm doing it now. But being a bit concentrated on zevis I'm doing it first for the classes used in zevis. Please see: #6599 . Best regards,. Andrii. P.S. I've wrote a test suite for zevis that should reproduce some issues I see when running zevis. And in the nightbuild today I see only 2 failed tests vs. 5 couple days earlier. Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6446
https://github.com/root-project/root/issues/6446:379,integrability,coupl,couple,379,"Hi @couet, . > The same will need to be done for TBox TPave etc .... . I'm doing it now. But being a bit concentrated on zevis I'm doing it first for the classes used in zevis. Please see: #6599 . Best regards,. Andrii. P.S. I've wrote a test suite for zevis that should reproduce some issues I see when running zevis. And in the nightbuild today I see only 2 failed tests vs. 5 couple days earlier. Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6446
https://github.com/root-project/root/issues/6446:379,modifiability,coupl,couple,379,"Hi @couet, . > The same will need to be done for TBox TPave etc .... . I'm doing it now. But being a bit concentrated on zevis I'm doing it first for the classes used in zevis. Please see: #6599 . Best regards,. Andrii. P.S. I've wrote a test suite for zevis that should reproduce some issues I see when running zevis. And in the nightbuild today I see only 2 failed tests vs. 5 couple days earlier. Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6446
https://github.com/root-project/root/issues/6446:360,reliability,fail,failed,360,"Hi @couet, . > The same will need to be done for TBox TPave etc .... . I'm doing it now. But being a bit concentrated on zevis I'm doing it first for the classes used in zevis. Please see: #6599 . Best regards,. Andrii. P.S. I've wrote a test suite for zevis that should reproduce some issues I see when running zevis. And in the nightbuild today I see only 2 failed tests vs. 5 couple days earlier. Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6446
https://github.com/root-project/root/issues/6446:238,safety,test,test,238,"Hi @couet, . > The same will need to be done for TBox TPave etc .... . I'm doing it now. But being a bit concentrated on zevis I'm doing it first for the classes used in zevis. Please see: #6599 . Best regards,. Andrii. P.S. I've wrote a test suite for zevis that should reproduce some issues I see when running zevis. And in the nightbuild today I see only 2 failed tests vs. 5 couple days earlier. Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6446
https://github.com/root-project/root/issues/6446:367,safety,test,tests,367,"Hi @couet, . > The same will need to be done for TBox TPave etc .... . I'm doing it now. But being a bit concentrated on zevis I'm doing it first for the classes used in zevis. Please see: #6599 . Best regards,. Andrii. P.S. I've wrote a test suite for zevis that should reproduce some issues I see when running zevis. And in the nightbuild today I see only 2 failed tests vs. 5 couple days earlier. Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6446
https://github.com/root-project/root/issues/6446:238,testability,test,test,238,"Hi @couet, . > The same will need to be done for TBox TPave etc .... . I'm doing it now. But being a bit concentrated on zevis I'm doing it first for the classes used in zevis. Please see: #6599 . Best regards,. Andrii. P.S. I've wrote a test suite for zevis that should reproduce some issues I see when running zevis. And in the nightbuild today I see only 2 failed tests vs. 5 couple days earlier. Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6446
https://github.com/root-project/root/issues/6446:367,testability,test,tests,367,"Hi @couet, . > The same will need to be done for TBox TPave etc .... . I'm doing it now. But being a bit concentrated on zevis I'm doing it first for the classes used in zevis. Please see: #6599 . Best regards,. Andrii. P.S. I've wrote a test suite for zevis that should reproduce some issues I see when running zevis. And in the nightbuild today I see only 2 failed tests vs. 5 couple days earlier. Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6446
https://github.com/root-project/root/issues/6446:379,testability,coupl,couple,379,"Hi @couet, . > The same will need to be done for TBox TPave etc .... . I'm doing it now. But being a bit concentrated on zevis I'm doing it first for the classes used in zevis. Please see: #6599 . Best regards,. Andrii. P.S. I've wrote a test suite for zevis that should reproduce some issues I see when running zevis. And in the nightbuild today I see only 2 failed tests vs. 5 couple days earlier. Thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6446
https://github.com/root-project/root/issues/6447:23,usability,interact,interactive,23,Can be reproduced with interactive ROOT:. ```. root [0] . Processing pad4.C... *** Break *** segmentation violation. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6447
https://github.com/root-project/root/issues/6447:43,energy efficiency,Draw,Draw,43,"I think this is not a bug ?! missing TPad::Draw() function. ```. {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. TPad* c= new TPad();. c->Draw();. c->cd();. TText* t= new TText(0.5,0.5,""some text"");. t->Draw();. }. ```. To same for https://github.com/root-project/root/issues/6446.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6447
https://github.com/root-project/root/issues/6447:147,energy efficiency,Draw,Draw,147,"I think this is not a bug ?! missing TPad::Draw() function. ```. {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. TPad* c= new TPad();. c->Draw();. c->cd();. TText* t= new TText(0.5,0.5,""some text"");. t->Draw();. }. ```. To same for https://github.com/root-project/root/issues/6446.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6447
https://github.com/root-project/root/issues/6447:212,energy efficiency,Draw,Draw,212,"I think this is not a bug ?! missing TPad::Draw() function. ```. {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. TPad* c= new TPad();. c->Draw();. c->cd();. TText* t= new TText(0.5,0.5,""some text"");. t->Draw();. }. ```. To same for https://github.com/root-project/root/issues/6446.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6447
https://github.com/root-project/root/issues/6448:102,deployability,build,build,102,I'm happy to put the fix into place. My proposal would be removing the flag from the `RelWithDebInfo` build type!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6448
https://github.com/root-project/root/issues/6449:86,deployability,patch,patch,86,"Hi @couet ,. I know and tried to fix it in #6469. Would you be so kind to review that patch once you have time? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6449
https://github.com/root-project/root/issues/6449:106,performance,time,time,106,"Hi @couet ,. I know and tried to fix it in #6469. Would you be so kind to review that patch once you have time? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6449
https://github.com/root-project/root/issues/6449:74,safety,review,review,74,"Hi @couet ,. I know and tried to fix it in #6469. Would you be so kind to review that patch once you have time? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6449
https://github.com/root-project/root/issues/6449:86,safety,patch,patch,86,"Hi @couet ,. I know and tried to fix it in #6469. Would you be so kind to review that patch once you have time? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6449
https://github.com/root-project/root/issues/6449:86,security,patch,patch,86,"Hi @couet ,. I know and tried to fix it in #6469. Would you be so kind to review that patch once you have time? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6449
https://github.com/root-project/root/issues/6449:74,testability,review,review,74,"Hi @couet ,. I know and tried to fix it in #6469. Would you be so kind to review that patch once you have time? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6449
https://github.com/root-project/root/issues/6449:54,usability,prefer,prefer,54,That's a huge PR fixing many things I one go. I would prefer to have a PR for each issue you posted. For *this* one I think `fCGny` is not properly initialised somewhere. I will try to find out.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6449
https://github.com/root-project/root/issues/6449:352,safety,compl,completely,352,"Hi @couet ,. partially agree to you. However the PR mostly fixes potential null pointer dereferences so not that many things are mixed togather. The same thing in many places. > I would prefer to have a PR for each issue you posted. I'm not sure if I will be able to do it quick ... Would be that convenient for you to cherrypick everything that looks completely fine to you now? Then I will close the issues which will be fixed with such cherrypicking and will deal with the rest of #6469 asap. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6449
https://github.com/root-project/root/issues/6449:352,security,compl,completely,352,"Hi @couet ,. partially agree to you. However the PR mostly fixes potential null pointer dereferences so not that many things are mixed togather. The same thing in many places. > I would prefer to have a PR for each issue you posted. I'm not sure if I will be able to do it quick ... Would be that convenient for you to cherrypick everything that looks completely fine to you now? Then I will close the issues which will be fixed with such cherrypicking and will deal with the rest of #6469 asap. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6449
https://github.com/root-project/root/issues/6449:186,usability,prefer,prefer,186,"Hi @couet ,. partially agree to you. However the PR mostly fixes potential null pointer dereferences so not that many things are mixed togather. The same thing in many places. > I would prefer to have a PR for each issue you posted. I'm not sure if I will be able to do it quick ... Would be that convenient for you to cherrypick everything that looks completely fine to you now? Then I will close the issues which will be fixed with such cherrypicking and will deal with the rest of #6469 asap. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6449
https://github.com/root-project/root/issues/6449:392,usability,close,close,392,"Hi @couet ,. partially agree to you. However the PR mostly fixes potential null pointer dereferences so not that many things are mixed togather. The same thing in many places. > I would prefer to have a PR for each issue you posted. I'm not sure if I will be able to do it quick ... Would be that convenient for you to cherrypick everything that looks completely fine to you now? Then I will close the issues which will be fixed with such cherrypicking and will deal with the rest of #6469 asap. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6449
https://github.com/root-project/root/pull/6452:466,safety,review,reviewer,466,"It seems that these lines here below in which TBranch's destructor deletes a TFile are causing the issue. I have never seen this behavior before and I would not expect `~TBranch` to cause a call to `~TFile` -- rather the opposite. https://github.com/root-project/root/blob/ee4e822e3413938b740850db68ab2221fd19744d/tree/tree/src/TBranch.cxx#L477-L499. I don't know whether there is a better way to fix/work around this TBranch quirk, so I'll have to recuse myself as reviewer and ask for @pcanal 's input :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:498,safety,input,input,498,"It seems that these lines here below in which TBranch's destructor deletes a TFile are causing the issue. I have never seen this behavior before and I would not expect `~TBranch` to cause a call to `~TFile` -- rather the opposite. https://github.com/root-project/root/blob/ee4e822e3413938b740850db68ab2221fd19744d/tree/tree/src/TBranch.cxx#L477-L499. I don't know whether there is a better way to fix/work around this TBranch quirk, so I'll have to recuse myself as reviewer and ask for @pcanal 's input :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:466,testability,review,reviewer,466,"It seems that these lines here below in which TBranch's destructor deletes a TFile are causing the issue. I have never seen this behavior before and I would not expect `~TBranch` to cause a call to `~TFile` -- rather the opposite. https://github.com/root-project/root/blob/ee4e822e3413938b740850db68ab2221fd19744d/tree/tree/src/TBranch.cxx#L477-L499. I don't know whether there is a better way to fix/work around this TBranch quirk, so I'll have to recuse myself as reviewer and ask for @pcanal 's input :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:129,usability,behavi,behavior,129,"It seems that these lines here below in which TBranch's destructor deletes a TFile are causing the issue. I have never seen this behavior before and I would not expect `~TBranch` to cause a call to `~TFile` -- rather the opposite. https://github.com/root-project/root/blob/ee4e822e3413938b740850db68ab2221fd19744d/tree/tree/src/TBranch.cxx#L477-L499. I don't know whether there is a better way to fix/work around this TBranch quirk, so I'll have to recuse myself as reviewer and ask for @pcanal 's input :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:498,usability,input,input,498,"It seems that these lines here below in which TBranch's destructor deletes a TFile are causing the issue. I have never seen this behavior before and I would not expect `~TBranch` to cause a call to `~TFile` -- rather the opposite. https://github.com/root-project/root/blob/ee4e822e3413938b740850db68ab2221fd19744d/tree/tree/src/TBranch.cxx#L477-L499. I don't know whether there is a better way to fix/work around this TBranch quirk, so I'll have to recuse myself as reviewer and ask for @pcanal 's input :sweat_smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:422,energy efficiency,alloc,alloc,422,"@pcanal . > This code is for the (very rare this days) case where a TBranch is stored in a different file than its TTree. I.e. in your use case is. fDirectory != fTree->GetDirectory(). triggered? Yes! ```. (gdb) print fDirectory. $3 = (TDirectoryFile *) 0x10af350. (gdb) print fDirectory->GetName(). $5 = 0x10af369 ""test.root"". (gdb) print fTree->GetDirectory(). $4 = (TROOT *) 0x7ffff3fb46a8 <ROOT::Internal::GetROOT1()::alloc>. (gdb) print fTree->GetDirectory()->GetName(). $6 = 0x7ffff3fb46c1 <ROOT::Internal::GetROOT1()::alloc+25> ""root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:525,energy efficiency,alloc,alloc,525,"@pcanal . > This code is for the (very rare this days) case where a TBranch is stored in a different file than its TTree. I.e. in your use case is. fDirectory != fTree->GetDirectory(). triggered? Yes! ```. (gdb) print fDirectory. $3 = (TDirectoryFile *) 0x10af350. (gdb) print fDirectory->GetName(). $5 = 0x10af369 ""test.root"". (gdb) print fTree->GetDirectory(). $4 = (TROOT *) 0x7ffff3fb46a8 <ROOT::Internal::GetROOT1()::alloc>. (gdb) print fTree->GetDirectory()->GetName(). $6 = 0x7ffff3fb46c1 <ROOT::Internal::GetROOT1()::alloc+25> ""root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:316,safety,test,test,316,"@pcanal . > This code is for the (very rare this days) case where a TBranch is stored in a different file than its TTree. I.e. in your use case is. fDirectory != fTree->GetDirectory(). triggered? Yes! ```. (gdb) print fDirectory. $3 = (TDirectoryFile *) 0x10af350. (gdb) print fDirectory->GetName(). $5 = 0x10af369 ""test.root"". (gdb) print fTree->GetDirectory(). $4 = (TROOT *) 0x7ffff3fb46a8 <ROOT::Internal::GetROOT1()::alloc>. (gdb) print fTree->GetDirectory()->GetName(). $6 = 0x7ffff3fb46c1 <ROOT::Internal::GetROOT1()::alloc+25> ""root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:316,testability,test,test,316,"@pcanal . > This code is for the (very rare this days) case where a TBranch is stored in a different file than its TTree. I.e. in your use case is. fDirectory != fTree->GetDirectory(). triggered? Yes! ```. (gdb) print fDirectory. $3 = (TDirectoryFile *) 0x10af350. (gdb) print fDirectory->GetName(). $5 = 0x10af369 ""test.root"". (gdb) print fTree->GetDirectory(). $4 = (TROOT *) 0x7ffff3fb46a8 <ROOT::Internal::GetROOT1()::alloc>. (gdb) print fTree->GetDirectory()->GetName(). $6 = 0x7ffff3fb46c1 <ROOT::Internal::GetROOT1()::alloc+25> ""root"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:1299,availability,operat,operator,1299,"So @pcanal, do I merge the workaround/fix that sets the Tree's directory to `nullptr` before deleting it or will you change something in TBranch/TTree? FYI, the deletion happens via this stack trace:. ```. #0 TDirectoryFile::~TDirectoryFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TDirectoryFile.cxx:180. #1 0x00007ffff546944a in TFile::~TFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TFile.cxx:542. #2 0x00007ffff54694b9 in TFile::~TFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TFile.cxx:504. #3 0x00007ffff6d0c788 in TBranch::~TBranch (this=0x1069140) at /home/shageboe/root-src/tree/tree/src/TBranch.cxx:496. #4 0x00007ffff6d0ce39 in TBranch::~TBranch (this=0x1069140) at /home/shageboe/root-src/tree/tree/src/TBranch.cxx:443. #5 0x00007ffff3adabc7 in TCollection::GarbageCollect (obj=0x1069140) at /home/shageboe/root-src/core/cont/src/TCollection.cxx:736. #6 0x00007ffff3aee10f in TObjArray::Delete (this=0x1b19e18) at /home/shageboe/root-src/core/cont/src/TObjArray.cxx:376. #7 0x00007ffff6dac053 in TTree::~TTree (this=0x1b19cc0) at /home/shageboe/root-src/tree/tree/src/TTree.cxx:951. #8 0x00007ffff6daca59 in TTree::~TTree (this=0x1b19cc0) at /home/shageboe/root-src/tree/tree/src/TTree.cxx:909. #9 0x00007ffff789aaaf in std::default_delete<TTree>::operator() (this=0x7fffffffcdf0, __ptr=0x1b19cc0). <In RooFit as found in the diff of this PR>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:187,deployability,stack,stack,187,"So @pcanal, do I merge the workaround/fix that sets the Tree's directory to `nullptr` before deleting it or will you change something in TBranch/TTree? FYI, the deletion happens via this stack trace:. ```. #0 TDirectoryFile::~TDirectoryFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TDirectoryFile.cxx:180. #1 0x00007ffff546944a in TFile::~TFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TFile.cxx:542. #2 0x00007ffff54694b9 in TFile::~TFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TFile.cxx:504. #3 0x00007ffff6d0c788 in TBranch::~TBranch (this=0x1069140) at /home/shageboe/root-src/tree/tree/src/TBranch.cxx:496. #4 0x00007ffff6d0ce39 in TBranch::~TBranch (this=0x1069140) at /home/shageboe/root-src/tree/tree/src/TBranch.cxx:443. #5 0x00007ffff3adabc7 in TCollection::GarbageCollect (obj=0x1069140) at /home/shageboe/root-src/core/cont/src/TCollection.cxx:736. #6 0x00007ffff3aee10f in TObjArray::Delete (this=0x1b19e18) at /home/shageboe/root-src/core/cont/src/TObjArray.cxx:376. #7 0x00007ffff6dac053 in TTree::~TTree (this=0x1b19cc0) at /home/shageboe/root-src/tree/tree/src/TTree.cxx:951. #8 0x00007ffff6daca59 in TTree::~TTree (this=0x1b19cc0) at /home/shageboe/root-src/tree/tree/src/TTree.cxx:909. #9 0x00007ffff789aaaf in std::default_delete<TTree>::operator() (this=0x7fffffffcdf0, __ptr=0x1b19cc0). <In RooFit as found in the diff of this PR>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:867,energy efficiency,core,core,867,"So @pcanal, do I merge the workaround/fix that sets the Tree's directory to `nullptr` before deleting it or will you change something in TBranch/TTree? FYI, the deletion happens via this stack trace:. ```. #0 TDirectoryFile::~TDirectoryFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TDirectoryFile.cxx:180. #1 0x00007ffff546944a in TFile::~TFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TFile.cxx:542. #2 0x00007ffff54694b9 in TFile::~TFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TFile.cxx:504. #3 0x00007ffff6d0c788 in TBranch::~TBranch (this=0x1069140) at /home/shageboe/root-src/tree/tree/src/TBranch.cxx:496. #4 0x00007ffff6d0ce39 in TBranch::~TBranch (this=0x1069140) at /home/shageboe/root-src/tree/tree/src/TBranch.cxx:443. #5 0x00007ffff3adabc7 in TCollection::GarbageCollect (obj=0x1069140) at /home/shageboe/root-src/core/cont/src/TCollection.cxx:736. #6 0x00007ffff3aee10f in TObjArray::Delete (this=0x1b19e18) at /home/shageboe/root-src/core/cont/src/TObjArray.cxx:376. #7 0x00007ffff6dac053 in TTree::~TTree (this=0x1b19cc0) at /home/shageboe/root-src/tree/tree/src/TTree.cxx:951. #8 0x00007ffff6daca59 in TTree::~TTree (this=0x1b19cc0) at /home/shageboe/root-src/tree/tree/src/TTree.cxx:909. #9 0x00007ffff789aaaf in std::default_delete<TTree>::operator() (this=0x7fffffffcdf0, __ptr=0x1b19cc0). <In RooFit as found in the diff of this PR>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:989,energy efficiency,core,core,989,"So @pcanal, do I merge the workaround/fix that sets the Tree's directory to `nullptr` before deleting it or will you change something in TBranch/TTree? FYI, the deletion happens via this stack trace:. ```. #0 TDirectoryFile::~TDirectoryFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TDirectoryFile.cxx:180. #1 0x00007ffff546944a in TFile::~TFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TFile.cxx:542. #2 0x00007ffff54694b9 in TFile::~TFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TFile.cxx:504. #3 0x00007ffff6d0c788 in TBranch::~TBranch (this=0x1069140) at /home/shageboe/root-src/tree/tree/src/TBranch.cxx:496. #4 0x00007ffff6d0ce39 in TBranch::~TBranch (this=0x1069140) at /home/shageboe/root-src/tree/tree/src/TBranch.cxx:443. #5 0x00007ffff3adabc7 in TCollection::GarbageCollect (obj=0x1069140) at /home/shageboe/root-src/core/cont/src/TCollection.cxx:736. #6 0x00007ffff3aee10f in TObjArray::Delete (this=0x1b19e18) at /home/shageboe/root-src/core/cont/src/TObjArray.cxx:376. #7 0x00007ffff6dac053 in TTree::~TTree (this=0x1b19cc0) at /home/shageboe/root-src/tree/tree/src/TTree.cxx:951. #8 0x00007ffff6daca59 in TTree::~TTree (this=0x1b19cc0) at /home/shageboe/root-src/tree/tree/src/TTree.cxx:909. #9 0x00007ffff789aaaf in std::default_delete<TTree>::operator() (this=0x7fffffffcdf0, __ptr=0x1b19cc0). <In RooFit as found in the diff of this PR>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:193,testability,trace,trace,193,"So @pcanal, do I merge the workaround/fix that sets the Tree's directory to `nullptr` before deleting it or will you change something in TBranch/TTree? FYI, the deletion happens via this stack trace:. ```. #0 TDirectoryFile::~TDirectoryFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TDirectoryFile.cxx:180. #1 0x00007ffff546944a in TFile::~TFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TFile.cxx:542. #2 0x00007ffff54694b9 in TFile::~TFile (this=0x10af350) at /home/shageboe/root-src/io/io/src/TFile.cxx:504. #3 0x00007ffff6d0c788 in TBranch::~TBranch (this=0x1069140) at /home/shageboe/root-src/tree/tree/src/TBranch.cxx:496. #4 0x00007ffff6d0ce39 in TBranch::~TBranch (this=0x1069140) at /home/shageboe/root-src/tree/tree/src/TBranch.cxx:443. #5 0x00007ffff3adabc7 in TCollection::GarbageCollect (obj=0x1069140) at /home/shageboe/root-src/core/cont/src/TCollection.cxx:736. #6 0x00007ffff3aee10f in TObjArray::Delete (this=0x1b19e18) at /home/shageboe/root-src/core/cont/src/TObjArray.cxx:376. #7 0x00007ffff6dac053 in TTree::~TTree (this=0x1b19cc0) at /home/shageboe/root-src/tree/tree/src/TTree.cxx:951. #8 0x00007ffff6daca59 in TTree::~TTree (this=0x1b19cc0) at /home/shageboe/root-src/tree/tree/src/TTree.cxx:909. #9 0x00007ffff789aaaf in std::default_delete<TTree>::operator() (this=0x7fffffffcdf0, __ptr=0x1b19cc0). <In RooFit as found in the diff of this PR>. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:66,performance,memor,memory,66,"Since it is unlikely to be your intent to have a TTree that is in-memory (nullptr or associated with gROOT) but the TBranch associated with a file, I think we need to fix it on the I/O side. It is ""telling"" that the fix is to switch the TTree from being associated with gROOT to being associated with nullptr. So what's the reproducer :) ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:181,performance,I/O,I/O,181,"Since it is unlikely to be your intent to have a TTree that is in-memory (nullptr or associated with gROOT) but the TBranch associated with a file, I think we need to fix it on the I/O side. It is ""telling"" that the fix is to switch the TTree from being associated with gROOT to being associated with nullptr. So what's the reproducer :) ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/pull/6452:66,usability,memor,memory,66,"Since it is unlikely to be your intent to have a TTree that is in-memory (nullptr or associated with gROOT) but the TBranch associated with a file, I think we need to fix it on the I/O side. It is ""telling"" that the fix is to switch the TTree from being associated with gROOT to being associated with nullptr. So what's the reproducer :) ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6452
https://github.com/root-project/root/issues/6453:7,reliability,doe,does,7,./pad6 does not crash anymore,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6453
https://github.com/root-project/root/issues/6454:65,deployability,upgrad,upgrade,65,"How critical is this? I'd prefer to see whether the ongoing llvm upgrade to llvm9 fixes this. (And yes, I can reproduce something similar even with bare ROOT)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:65,modifiability,upgrad,upgrade,65,"How critical is this? I'd prefer to see whether the ongoing llvm upgrade to llvm9 fixes this. (And yes, I can reproduce something similar even with bare ROOT)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:26,usability,prefer,prefer,26,"How critical is this? I'd prefer to see whether the ongoing llvm upgrade to llvm9 fixes this. (And yes, I can reproduce something similar even with bare ROOT)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:29,deployability,releas,releases,29,"It makes the ATLAS ""analysis releases"" (partly) non-functional on macOS. :frowning: I came across this when running our unit test suite using Xcode 12.0. Since macOS is only used for analysis code development by some people in ATLAS, and nobody uses the analysis releases ""in production"" on that platform, this is not the most burning issue ever. It is however definitely something that would be nice to see fixed (eventually).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:263,deployability,releas,releases,263,"It makes the ATLAS ""analysis releases"" (partly) non-functional on macOS. :frowning: I came across this when running our unit test suite using Xcode 12.0. Since macOS is only used for analysis code development by some people in ATLAS, and nobody uses the analysis releases ""in production"" on that platform, this is not the most burning issue ever. It is however definitely something that would be nice to see fixed (eventually).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:415,integrability,event,eventually,415,"It makes the ATLAS ""analysis releases"" (partly) non-functional on macOS. :frowning: I came across this when running our unit test suite using Xcode 12.0. Since macOS is only used for analysis code development by some people in ATLAS, and nobody uses the analysis releases ""in production"" on that platform, this is not the most burning issue ever. It is however definitely something that would be nice to see fixed (eventually).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:296,interoperability,platform,platform,296,"It makes the ATLAS ""analysis releases"" (partly) non-functional on macOS. :frowning: I came across this when running our unit test suite using Xcode 12.0. Since macOS is only used for analysis code development by some people in ATLAS, and nobody uses the analysis releases ""in production"" on that platform, this is not the most burning issue ever. It is however definitely something that would be nice to see fixed (eventually).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:125,safety,test,test,125,"It makes the ATLAS ""analysis releases"" (partly) non-functional on macOS. :frowning: I came across this when running our unit test suite using Xcode 12.0. Since macOS is only used for analysis code development by some people in ATLAS, and nobody uses the analysis releases ""in production"" on that platform, this is not the most burning issue ever. It is however definitely something that would be nice to see fixed (eventually).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:120,testability,unit,unit,120,"It makes the ATLAS ""analysis releases"" (partly) non-functional on macOS. :frowning: I came across this when running our unit test suite using Xcode 12.0. Since macOS is only used for analysis code development by some people in ATLAS, and nobody uses the analysis releases ""in production"" on that platform, this is not the most burning issue ever. It is however definitely something that would be nice to see fixed (eventually).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:125,testability,test,test,125,"It makes the ATLAS ""analysis releases"" (partly) non-functional on macOS. :frowning: I came across this when running our unit test suite using Xcode 12.0. Since macOS is only used for analysis code development by some people in ATLAS, and nobody uses the analysis releases ""in production"" on that platform, this is not the most burning issue ever. It is however definitely something that would be nice to see fixed (eventually).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:17,energy efficiency,current,currently,17,"FYI: FairRoot is currently also affected by this issue. Apparently Boost.program_options uses `boost::shared_ptr` internally. We see it on macOS 11.2, CLT/Xcode 12.4, ROOT 6.22.06, Boost 1.7[2,5].",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:49,usability,help,helps,49,Llvm9 is in master. Can someone check whether it helps? (I am aware of a general runtime issue with AliROOT and thus likely FairROOT that's being worked on.),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:130,availability,error,error,130,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:1281,availability,error,error,1281,"$ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro '",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:2149,availability,error,error,2149,"rt_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:3239,availability,error,error,3239,"omic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4225,availability,error,error,4225,"pp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
